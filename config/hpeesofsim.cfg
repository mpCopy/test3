# @(#) $Source: /cvs/sr/src/gemini/source/hpeesofsim.cfg,v $ $Revision: 1.48 $ $Date: 2012/12/18 00:18:57 $

HPEESOFSIM_AEL=hpeesofsim

AEL_PATH=$HOME/hpeesof/circuit/ael:$HOME/hpeesof/expressions/ael:$HPEESOF_DIR/custom/circuit/ael:$HPEESOF_DIR/custom/expressions/ael:$HPEESOF_DIR/circuit/ael:$HPEESOF_DIR/expressions/ael:.

EXPR_ALIAS_FILE=aliases.txt
EXPR_ALIAS_FILE_SEARCHPATH=$HOME/hpeesof/expressions/config:$HPEESOF_DIR/custom/expressions/config:$HPEESOF_DIR/expressions/config:$HOME/hpeesof/dss/config:$HPEESOF_DIR/custom/dss/config:$HPEESOF_DIR/dss/config:.


#
# Verilog-A/AMS specific variables. 
#

# Status reporting while compiling and loading Verilog-A devices.
# Use VA_VERBOSE > 1 to increase status reporting.
# Use VA_VERBOSE = 0 to turn off all reporting during compilation
# and loading

VA_VERBOSE=1

# VA_AUTO_COMPILE=yes => automatically compile all out of date Verilog-A 
# modules in the Verilog-A auto compile path (VA_AUTO_COMPILE_PATH, below)

VA_AUTO_COMPILE=yes

# VA_AUTO_COMPILE_PATH(Verilog-A Auto-Compile Path): the sequence of 
# directories that are compiled automatically by the Verilog-A compiler 
# when the simulator boots. 
#
# The VA_AUTO_COMPILE_PATH consists of:
# $USER_VERILOGA_PATH:	A user defined environment variable
# %USER_VERILOGA_PATH:	A user defined configuration parameter (in this file)
# $__INCLUDE__       :	The concatenation of what has been specified via
#   				--sim_file_path --sim_data_path --sim_include_path 
#   				options on the hpeesofsim command line.
# 
# Directories named 'veriloga' are searched in the standard places:
#
#	veriloga in the current project
#	veriloga in the installed Design Kits [managed by the DK infrastructure]
# 	veriloga in the users $HOME/hpeesof directory 
#	veriloga in the ADS custom installation directory
#	veriloga in the ADS installation directory
#
#
# By default the VA_AUTO_COMPILE_PATH is
#	CURRENT_PROJECT/veriloga
#	DESIGN_KIT/veriloga
#	$HOME/hpeesof/veriloga
#	$HPEESOF_DIR/custom/veriloga
#	$HPEESOF_DIR/veriloga

# After ADS 2008 U2 Design Kits modify DESIGN_KIT_VERILOGA_PATH, adding the
# design kit veriloga directory to the Verilog-A compile and load path.
#
# For backward compatibility DESIGN_KIT_MODEL_PATH is still included.
#
DESIGN_KIT_VERILOGA_AUTO_COMPILE_PATH=%DESIGN_KIT_VERILOGA_PATH:%DESIGN_KIT_MODEL_PATH

# Append to this variable to prepend to the Verilog-A auto-compile
# path.
USER_VERILOGA_PATH=

TMC_MODEL_DIR=$HPEESOF_DIR/tmc

VA_AUTO_COMPILE_PATH=$USER_VERILOGA_PATH:%USER_VERILOGA_PATH:$__INCLUDE__:$__SIMULATOR_INITIAL_DIR/veriloga:%DESIGN_KIT_VERILOGA_AUTO_COMPILE_PATH:$HOME/hpeesof/veriloga:$HPEESOF_DIR/custom/veriloga:$HPEESOF_DIR/veriloga:%TMC_MODEL_DIR/utsoi210:%TMC_MODEL_DIR/utsoi211:%TMC_MODEL_DIR/utsoi220:%TMC_MODEL_DIR/utsoi230:%TMC_MODEL_DIR/hicL2V2p33:%TMC_MODEL_DIR/hicL2V2p34:%TMC_MODEL_DIR/hicumL2V2p4p0:%TMC_MODEL_DIR/bsim61:%TMC_MODEL_DIR/bsim611:%TMC_MODEL_DIR/bsimbulk1062:%TMC_MODEL_DIR/vbic12:%TMC_MODEL_DIR/mos2002t:%TMC_MODEL_DIR/bsimimg102:%TMC_MODEL_DIR/bsimimg1027:%TMC_MODEL_DIR/bsimimg1028:%TMC_MODEL_DIR/bsimimg10291:%TMC_MODEL_DIR/bsimimg10292:%TMC_MODEL_DIR/bsimcmg106:%TMC_MODEL_DIR/bsimcmg107:%TMC_MODEL_DIR/bsimcmg108:%TMC_MODEL_DIR/bsimcmg110:%TMC_MODEL_DIR/angelov_gan:%TMC_MODEL_DIR/mosvar13:%TMC_MODEL_DIR/hisimhv201:%TMC_MODEL_DIR/hisimhv231:%TMC_MODEL_DIR/hisim290:%TMC_MODEL_DIR/hisimsoi130:%TMC_MODEL_DIR/hisim291:%TMC_MODEL_DIR/r2:%TMC_MODEL_DIR/powermos_sic:%TMC_MODEL_DIR/diode_cmc:%TMC_MODEL_DIR/asmhemt101:%TMC_MODEL_DIR/igbt200:%TMC_MODEL_DIR/mvsg110

#
# End of Verilog-A/AMS specific variables
#

DESIGN_KIT_MODEL_PATH=

#
# DO NOT CHANGE EESOF_CORE_MODEL_PATH.  It is needed as-is for proper
# simulator operation.  If you need to adjust the paths, use one of the other
# variables.
#
EESOF_CORE_MODEL_PATH=.:../userCompiledModel/lib.$SIMARCH:..:../networks:$HOME/hpeesof/circuit/lib.$SIMARCH:$HPEESOF_DIR/custom/circuit/lib.$SIMARCH:$HPEESOF_DIR/circuit/lib.$SIMARCH

EESOF_MODEL_PATH=%DESIGN_KIT_MODEL_PATH:$ICCAP_MODEL_PATH:%ICCAP_MODEL_PATH

#
# USER_MASTER_MODEL_PATH combines user-set environment variable: 
#     $USER_MODEL_PATH
# and config file variable 
#     %USER_MODEL_PATH
#
USER_MASTER_MODEL_PATH=$USER_MODEL_PATH:%USER_MODEL_PATH


# MASTER Model path is the complete path used when loading both Verilog-A
# device models and User-Compiled Models.
 
MASTER_MODEL_PATH=%USER_MASTER_MODEL_PATH:$__INCLUDE__:%EESOF_CORE_MODEL_PATH:%EESOF_MODEL_PATH

DESIGN_KIT_SIM_FILE_PATH=
DE_SIM_FILE_PATH=
SIM_FILE_PATH=$USER_SIM_FILE_PATH:%USER_SIM_FILE_PATH:$DE_SIM_FILE_PATH:%DE_SIM_FILE_PATH:.:..:../data:../networks:%DESIGN_KIT_SIM_FILE_PATH:$HPEESOF_DIR/adsptolemy/wtb

DKIT_ADSLIBCONFIG_PATH=
ADSLIBCONFIG_PATH=$_HP_GEMINI_LIBPATH:%DKIT_ADSLIBCONFIG_PATH:$HOME/hpeesof/circuit/config:$HPEESOF_DIR/custom/circuit/config:$HPEESOF_DIR/circuit/config:.:..

#
# MODEL_TRANSLATION_FILE_PATH should **NEVER** be overridden.
#
# ***** WARNING: SETTING EITHER DESIGN_KIT_MODEL_TRANSLATION_FILE_PATH OR
#       DE_MODEL_TRANSLATION_FILE_PATH IS RISKY, AND NOT YET TESTED OR
#       SUPPORTED.
#
MODEL_TRANSLATION_FILE_PATH=$USER_MODEL_TRANSLATION_FILE_PATH:%USER_MODEL_TRANSLATION_FILE_PATH:%DESIGN_KIT_MODEL_TRANSLATION_FILE_PATH:%DE_MODEL_TRANSLATION_FILE_PATH:.:..:$HOME/hpeesof/custom/circuit/config:$HOME/hpeesof/circuit/config:$HPEESOF_DIR/circuit/config

SIM_COMMON_PYTHON_LIBS=$HPEESOF_DIR/tools/$SIMARCH/python/DLLs

SIM_PYTHONPATH=$USER_OVERRIDE_PYTHONPATH:%USER_OVERRIDE_PYTHONPATH:$KEYSIGHT_OVERRIDE_PYTHONPATH:%KEYSIGHT_OVERRIDE_PYTHONPATH:$AGILENT_OVERRIDE_PYTHONPATH:.:../networks:$HOME/hpeesof/circuit/$SIMARCH/python/:$HPEESOF_DIR/custom/circuit/$SIMARCH/python/:$HPEESOF_DIR/circuit/$SIMARCH/python/:$HPEESOF_DIR/circuit/$SIMARCH/python/simInterface:$HPEESOF_DIR/circuit/$SIMARCH/python/application:%SIM_COMMON_PYTHON_LIBS

#
# SIMULATOR_PATH_PREFIX get prefixed to $PATH by the simulator, and is used by
# anything invoked by the simulator.
#
SIMULATOR_PATH_PREFIX=$USER_LOCAL_PATH_PREFIX:%USER_LOCAL_PATH_PREFIX:$EESOF_PATH_PREFIX:%EESOF_PATH_PREFIX:$HPEESOF_DIR/bin:%SIM_COMMON_PYTHON_LIBS

ADS_SIM_MANAGER_MAX_RMDIR_DELAY=0

#
# NOTE: ADSSIMLIB_FILES is a list of possible files, and not paths.  This is
# done because the file names can change.  Unlike other variables, ALL entries
# that are found are loaded, in the order found.
#
ADSSIMLIB_FILES=$HPEESOF_DIR/circuit/config/adssimlib:$HPEESOF_DIR/custom/circuit/config/adssimlib:$HOME/hpeesof/circuit/config/adssimlib::$HOME/hpeesof/custom/circuit/config/adssimlib:$HOME/.adssimlib:.adssimlib:adssimlib:$ADSSIMLIB


#
# SIM_IGNORE_NON_NUMERIC_VERSION_VALUES is used for backwards compatibility,
# at the expense of model versioning issues.  Model version numbers (for those
# models that support this) can only be specified as a numeric value, and not
# as a variable value or an expression.  If enabled ("y" or "1"), the
# simulator will ignore model version values that are variables or
# expressions, which is what older versions of the simulator did; for this
# case, the latest model version will instead be used, and a warning will be
# displayed.  However, if disabled ("n" or "0"), the simulator will give an
# error message and abort, if model versions are specified via a variable or
# expression (only numeric values are allowed).
#
SIM_IGNORE_NON_NUMERIC_VERSION_VALUES=y

###############################################################################
#
# DS_VERSION controls the default dataset version written by the simulator.
# Currently, the only valid values are "2" and "3".  Version 2 is the type
# written by ADS 2009 and earlier.  Version 3 is the enhanced version written
# by ADS 2009 UR1 and later; this version will allow the data display to
# handle large numbers of variables more efficiently than version 2.  Set
# DS_VERSION to "2" to produce, by default, datasets compatible with ADS 2009
# and earlier.  Note, however, that turning on variable grouping (for handling
# large numbers of variables, see below) will force the use of ADS 2009 UR1
# datasets.
#
DS_VERSION=2

###############################################################################
#
# DS_BLOCKSIZE and DS_DATA_BLOCKS control how data storage is allocated in a
# dataset:
#
#     DS_BLOCKSIZE can be either "512" or "1024".  It is strongly recommended
#     that the value be left at "1024".  Other values are likely to result in
#     severe performance degradation.
#
#     When allocating space to hold simulation results, space is allocated in
#     chunks of "DS_DATA_BLOCKS * DS_BLOCKSIZE" (the units are "bytes").  For
#     simulations that generate little data, using larger values for
#     DS_DATA_BLOCKS will result in wasted space in the dataset, and so a
#     value of 1 or 2 can be beneficial.  However, for simulations that
#     generate large amounts of data, larger values of DS_DATA_BLOCKS can
#     result in increased data storage efficiency.  For these, values of 16 or
#     32 may be helpful, although no significant improvement is likely to be
#     seen above 64 (in other words: don't set this above 64).  The following
#     default is "8", which is a reasonable tradeoff between large and small
#     simulations.
#
# Note that the following values will result in larger datasets for small
# simulations, but can often produce better performance for larger
# simulations.
#
DS_BLOCKSIZE=1024
DS_DATA_BLOCKS=8

###############################################################################
#
# NOTE: the following applies only to 64-bit simulators; 32-bit simulators do
# not have the following features enabled.
#
#     **************************
#     ***** IMPORTANT NOTE *****
#     **************************
#
#          If variable grouping is allowed (whether or not it is actually
#          used), the dataset version ("DS_VERSION", see above) written by the
#          simulator will be forcibly upgraded, if necessary, to one that
#          supports variable grouping.  In other words, the resulting dataset
#          will not be compatible with ADS 2009 and earlier; the dataset will
#          only be compatible with ADS 2009 UR1 and later.  Variable grouping
#          also works best with at least 1000 data points, minimum.
#
#          If you want to create a dataset compatible with ADS 2009 and
#          earlier, you must disallow variable grouping by setting
#          DS_MIN_VARIABLES_FOR_GROUPING (see below) to zero.
#
#          Also note that variable grouping comes at a simulation cost: each
#          variable group currently requires around 10KB of bookkeeping
#          memory, and will slow down simulations.  If you have 10000 variable
#          groups, an additional ~100+MB of memory will be used for
#          bookkeeping purposes.  If you let DS_MAX_VARIABLE_GROUPS (see
#          below) be unlimited, amazing amounts of memory may be consumed.
#
# DS_MIN_VARIABLES_FOR_GROUPING, DS_FAST_DEFAULT_DIVISOR,
# DS_SLOW_DEFAULT_DIVISOR, and DS_MAX_VARIABLE_GROUPS control variable
# grouping.  Variable grouping makes the data display run faster and use less
# memory; however, the simulation will use more memory and run slower:
#
#     DS_MIN_VARIABLES_FOR_GROUPING is the minimum number of output variables
#     that must exist before variable grouping is enabled.  Note that, for
#     relatively small numbers of variables, variable grouping results in
#     inefficient dataset storage, and should not be used.  For numbers of
#     variables smaller than DS_MIN_VARIABLES_FOR_GROUPING, the older dataset
#     storage format will be used, which is faster in data display.  A value
#     of zero for DS_MIN_VARIABLES_FOR_GROUPING will disallow variable
#     grouping.
#
#     If variable grouping is enabled, DS_FAST_DEFAULT_DIVISOR and
#     DS_SLOW_DEFAULT_DIVISOR controls how the ADS simulation setup
#     parameters, "Faster DDS performance" and "Slower DDS performance", work.
#     If "Faster DDS performance" is selected, the DS_FAST_DEFAULT_DIVISOR
#     parameter is used; if "Slower DDS performance is selected, the
#     DS_SLOW_DEFAULT_DIVISOR parameter is used.  The chosen parameter is used
#     to group variables into groups of "number_of_variables/divisor"
#     variables, where "divisor" is the value of DS_FAST_DEFAULT_DIVISOR or
#     DS_SLOW_DEFAULT_DIVISOR.  The larger the divisor, the faster the DDS
#     will perform.
#
#     DS_MAX_VARIABLE_GROUPS is the maximum allowed number of variable groups.
#     If the computed number of variable groups is larger than this value, the
#     number of variables per group will be increased until the number of
#     variable groups is no larger than DS_MAX_VARIABLE_GROUPS.  If
#     DS_MAX_VARIABLE_GROUPS is zero, the maximum number of variable groups is
#     unlimited, but doing so is strongly not recommended, due to memory
#     requirements.
#
DS_MIN_VARIABLES_FOR_GROUPING=1000
DS_FAST_DEFAULT_DIVISOR=1000
DS_SLOW_DEFAULT_DIVISOR=100
DS_MAX_VARIABLE_GROUPS=10000
