diff -Naur orig/qtbase/src/platformsupport/fontdatabases/basic/basic.pri qtbase/src/platformsupport/fontdatabases/basic/basic.pri
--- orig/qtbase/src/platformsupport/fontdatabases/basic/basic.pri	2015-02-16 20:56:38.000000000 -0800
+++ qtbase/src/platformsupport/fontdatabases/basic/basic.pri	2015-05-11 13:18:55.000000000 -0700
@@ -10,78 +10,4 @@
 
 CONFIG += opentype
 
-contains(QT_CONFIG, freetype) {
-    QT_FREETYPE_DIR = $$QT_SOURCE_TREE/src/3rdparty/freetype
-    SOURCES += \
-               $$QT_FREETYPE_DIR/src/base/ftbase.c \
-               $$QT_FREETYPE_DIR/src/base/ftbbox.c \
-               $$QT_FREETYPE_DIR/src/base/ftdebug.c \
-               $$QT_FREETYPE_DIR/src/base/ftglyph.c \
-               $$QT_FREETYPE_DIR/src/base/ftlcdfil.c \
-               $$QT_FREETYPE_DIR/src/base/ftinit.c \
-               $$QT_FREETYPE_DIR/src/base/ftmm.c \
-               $$QT_FREETYPE_DIR/src/base/fttype1.c \
-               $$QT_FREETYPE_DIR/src/base/ftsynth.c \
-               $$QT_FREETYPE_DIR/src/base/ftbitmap.c \
-               $$QT_FREETYPE_DIR/src/bdf/bdf.c \
-               $$QT_FREETYPE_DIR/src/cache/ftcache.c \
-               $$QT_FREETYPE_DIR/src/cff/cff.c \
-               $$QT_FREETYPE_DIR/src/cid/type1cid.c \
-               $$QT_FREETYPE_DIR/src/gzip/ftgzip.c \
-               $$QT_FREETYPE_DIR/src/pcf/pcf.c \
-               $$QT_FREETYPE_DIR/src/pfr/pfr.c \
-               $$QT_FREETYPE_DIR/src/psaux/psaux.c \
-               $$QT_FREETYPE_DIR/src/pshinter/pshinter.c \
-               $$QT_FREETYPE_DIR/src/psnames/psmodule.c \
-               $$QT_FREETYPE_DIR/src/raster/raster.c \
-               $$QT_FREETYPE_DIR/src/sfnt/sfnt.c \
-               $$QT_FREETYPE_DIR/src/smooth/smooth.c \
-               $$QT_FREETYPE_DIR/src/truetype/truetype.c \
-               $$QT_FREETYPE_DIR/src/type1/type1.c \
-               $$QT_FREETYPE_DIR/src/type42/type42.c \
-               $$QT_FREETYPE_DIR/src/winfonts/winfnt.c \
-               $$QT_FREETYPE_DIR/src/lzw/ftlzw.c\
-               $$QT_FREETYPE_DIR/src/otvalid/otvalid.c\
-               $$QT_FREETYPE_DIR/src/otvalid/otvbase.c\
-               $$QT_FREETYPE_DIR/src/otvalid/otvgdef.c\
-               $$QT_FREETYPE_DIR/src/otvalid/otvjstf.c\
-               $$QT_FREETYPE_DIR/src/otvalid/otvcommn.c\
-               $$QT_FREETYPE_DIR/src/otvalid/otvgpos.c\
-               $$QT_FREETYPE_DIR/src/otvalid/otvgsub.c\
-               $$QT_FREETYPE_DIR/src/otvalid/otvmod.c\
-               $$QT_FREETYPE_DIR/src/autofit/afangles.c\
-               $$QT_FREETYPE_DIR/src/autofit/afglobal.c\
-               $$QT_FREETYPE_DIR/src/autofit/aflatin.c\
-               $$QT_FREETYPE_DIR/src/autofit/afmodule.c\
-               $$QT_FREETYPE_DIR/src/autofit/afdummy.c\
-               $$QT_FREETYPE_DIR/src/autofit/afhints.c\
-               $$QT_FREETYPE_DIR/src/autofit/afloader.c\
-               $$QT_FREETYPE_DIR/src/autofit/autofit.c
-
-   win32 {
-       SOURCES += \
-                  $$QT_FREETYPE_DIR/src/base/ftsystem.c
-   } else {
-       SOURCES += \
-                  $$QT_FREETYPE_DIR/builds/unix/ftsystem.c
-      INCLUDEPATH += \
-                  $$QT_FREETYPE_DIR/builds/unix
-   }
-
-   INCLUDEPATH += \
-       $$QT_FREETYPE_DIR/src \
-       $$QT_FREETYPE_DIR/include
-
-   TR_EXCLUDE += $$QT_FREETYPE_DIR/*
-
-   DEFINES += FT2_BUILD_LIBRARY
-   contains(QT_CONFIG, system-zlib) {
-        DEFINES += FT_CONFIG_OPTION_SYSTEM_ZLIB
-        include($$PWD/../../../3rdparty/zlib_dependency.pri)
-   }
-
-} else:contains(QT_CONFIG, system-freetype) {
-    # pull in the proper freetype2 include directory
-    include($$QT_SOURCE_TREE/config.tests/unix/freetype/freetype.pri)
-}
-
+include($$QT_SOURCE_TREE/src/3rdparty/freetype_dependency.pri)

diff -Naur orig/qtbase/src/platformsupport/fontdatabases/basic/qbasicfontdatabase.cpp qtbase/src/platformsupport/fontdatabases/basic/qbasicfontdatabase.cpp
--- orig/qtbase/src/platformsupport/fontdatabases/basic/qbasicfontdatabase.cpp	2015-02-16 20:56:38.000000000 -0800
+++ qtbase/src/platformsupport/fontdatabases/basic/qbasicfontdatabase.cpp	2015-05-11 13:18:55.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the plugins of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -52,37 +52,6 @@
 
 QT_BEGIN_NAMESPACE
 
-typedef struct {
-    quint16 majorVersion;
-    quint16 minorVersion;
-    quint16 numTables;
-    quint16 searchRange;
-    quint16 entrySelector;
-    quint16 rangeShift;
-} OFFSET_TABLE;
-
-typedef struct {
-    quint32 tag;
-    quint32 checkSum;
-    quint32 offset;
-    quint32 length;
-} TABLE_DIRECTORY;
-
-typedef struct {
-    quint16 fontSelector;
-    quint16 nrCount;
-    quint16 storageOffset;
-} NAME_TABLE_HEADER;
-
-typedef struct {
-    quint16 platformID;
-    quint16 encodingID;
-    quint16 languageID;
-    quint16 nameID;
-    quint16 stringLength;
-    quint16 stringOffset;
-} NAME_RECORD;
-
 void QBasicFontDatabase::populateFontDatabase()
 {
     QString fontpath = fontDir();
@@ -132,9 +101,19 @@
     fid.index = fontfile->indexValue;
 
     bool antialias = !(fontDef.styleStrategy & QFont::NoAntialias);
-    QFontEngineFT::GlyphFormat format = antialias? QFontEngineFT::Format_A8 : QFontEngineFT::Format_Mono;
-
     QFontEngineFT *engine = new QFontEngineFT(fontDef);
+    QFontEngineFT::GlyphFormat format = QFontEngineFT::Format_Mono;
+    if (antialias) {
+        QFontEngine::SubpixelAntialiasingType subpixelType = subpixelAntialiasingTypeHint();
+        if (subpixelType == QFontEngine::Subpixel_None || (fontDef.styleStrategy & QFont::NoSubpixelAntialias)) {
+            format = QFontEngineFT::Format_A8;
+            engine->subpixelType = QFontEngine::Subpixel_None;
+        } else {
+            format = QFontEngineFT::Format_A32;
+            engine->subpixelType = subpixelType;
+        }
+    }
+
     if (!engine->init(fid, antialias, format) || engine->invalid()) {
         delete engine;
         engine = 0;
@@ -281,41 +260,26 @@
             if (supportedWritingSystems)
                 *supportedWritingSystems = writingSystems;
 
-            if (os2->usWeightClass == 0)
-                ;
-            else if (os2->usWeightClass < 150)
-                weight = qt_thinFontWeight;
-            else if (os2->usWeightClass < 250)
-                weight = qt_extralightFontWeight;
-            else if (os2->usWeightClass < 350)
-                weight = QFont::Light;
-            else if (os2->usWeightClass < 450)
-                weight = QFont::Normal;
-            else if (os2->usWeightClass < 550)
-                    weight = qt_mediumFontWeight;
-            else if (os2->usWeightClass < 650)
-                weight = QFont::DemiBold;
-            else if (os2->usWeightClass < 750)
-                weight = QFont::Bold;
-            else if (os2->usWeightClass < 1000)
-                weight = QFont::Black;
-
-            if (os2->panose[2] >= 2) {
+            if (os2->usWeightClass) {
+                weight = QPlatformFontDatabase::weightFromInteger(os2->usWeightClass);
+            } else if (os2->panose[2]) {
                 int w = os2->panose[2];
                 if (w <= 1)
-                    weight = qt_thinFontWeight;
+                    weight = QFont::Thin;
                 else if (w <= 2)
-                    weight = qt_extralightFontWeight;
+                    weight = QFont::ExtraLight;
                 else if (w <= 3)
                     weight = QFont::Light;
                 else if (w <= 5)
                     weight = QFont::Normal;
                 else if (w <= 6)
-                    weight = qt_mediumFontWeight;
+                    weight = QFont::Medium;
                 else if (w <= 7)
                     weight = QFont::DemiBold;
                 else if (w <= 8)
                     weight = QFont::Bold;
+                else if (w <= 9)
+                    weight = QFont::ExtraBold;
                 else if (w <= 10)
                     weight = QFont::Black;
             }
@@ -338,92 +302,4 @@
     return families;
 }
 
-QString QBasicFontDatabase::fontNameFromTTFile(const QString &filename)
-{
-    QFile f(filename);
-    QString retVal;
-    qint64 bytesRead;
-    qint64 bytesToRead;
-
-    if (f.open(QIODevice::ReadOnly)) {
-        OFFSET_TABLE ttOffsetTable;
-        bytesToRead = sizeof(OFFSET_TABLE);
-        bytesRead = f.read((char*)&ttOffsetTable, bytesToRead);
-        if (bytesToRead != bytesRead)
-            return retVal;
-        ttOffsetTable.numTables = qFromBigEndian(ttOffsetTable.numTables);
-        ttOffsetTable.majorVersion = qFromBigEndian(ttOffsetTable.majorVersion);
-        ttOffsetTable.minorVersion = qFromBigEndian(ttOffsetTable.minorVersion);
-
-        if (ttOffsetTable.majorVersion != 1 || ttOffsetTable.minorVersion != 0)
-            return retVal;
-
-        TABLE_DIRECTORY tblDir;
-        bool found = false;
-
-        for (int i = 0; i < ttOffsetTable.numTables; i++) {
-            bytesToRead = sizeof(TABLE_DIRECTORY);
-            bytesRead = f.read((char*)&tblDir, bytesToRead);
-            if (bytesToRead != bytesRead)
-                return retVal;
-            if (qFromBigEndian(tblDir.tag) == MAKE_TAG('n', 'a', 'm', 'e')) {
-                found = true;
-                tblDir.length = qFromBigEndian(tblDir.length);
-                tblDir.offset = qFromBigEndian(tblDir.offset);
-                break;
-            }
-        }
-
-        if (found) {
-            f.seek(tblDir.offset);
-            NAME_TABLE_HEADER ttNTHeader;
-            bytesToRead = sizeof(NAME_TABLE_HEADER);
-            bytesRead = f.read((char*)&ttNTHeader, bytesToRead);
-            if (bytesToRead != bytesRead)
-                return retVal;
-            ttNTHeader.nrCount = qFromBigEndian(ttNTHeader.nrCount);
-            ttNTHeader.storageOffset = qFromBigEndian(ttNTHeader.storageOffset);
-            NAME_RECORD ttRecord;
-            found = false;
-
-            for (int i = 0; i < ttNTHeader.nrCount; i++) {
-                bytesToRead = sizeof(NAME_RECORD);
-                bytesRead = f.read((char*)&ttRecord, bytesToRead);
-                if (bytesToRead != bytesRead)
-                    return retVal;
-                ttRecord.nameID = qFromBigEndian(ttRecord.nameID);
-                if (ttRecord.nameID == 1) {
-                    ttRecord.stringLength = qFromBigEndian(ttRecord.stringLength);
-                    ttRecord.stringOffset = qFromBigEndian(ttRecord.stringOffset);
-                    int nPos = f.pos();
-                    f.seek(tblDir.offset + ttRecord.stringOffset + ttNTHeader.storageOffset);
-
-                    QByteArray nameByteArray = f.read(ttRecord.stringLength);
-                    if (!nameByteArray.isEmpty()) {
-                        if (ttRecord.encodingID == 256 || ttRecord.encodingID == 768) {
-                            //This is UTF-16 in big endian
-                            int stringLength = ttRecord.stringLength / 2;
-                            retVal.resize(stringLength);
-                            QChar *data = retVal.data();
-                            const ushort *srcData = (const ushort *)nameByteArray.data();
-                            for (int i = 0; i < stringLength; ++i)
-                                data[i] = qFromBigEndian(srcData[i]);
-                            return retVal;
-                        } else if (ttRecord.encodingID == 0) {
-                            //This is Latin1
-                            retVal = QString::fromLatin1(nameByteArray);
-                        } else {
-                            qWarning("Could not retrieve Font name from file: %s", qPrintable(QDir::toNativeSeparators(filename)));
-                        }
-                        break;
-                    }
-                    f.seek(nPos);
-                }
-            }
-        }
-        f.close();
-    }
-    return retVal;
-}
-
 QT_END_NAMESPACE
diff -Naur orig/qtbase/src/platformsupport/fontdatabases/basic/qbasicfontdatabase_p.h qtbase/src/platformsupport/fontdatabases/basic/qbasicfontdatabase_p.h
--- orig/qtbase/src/platformsupport/fontdatabases/basic/qbasicfontdatabase_p.h	2015-02-16 20:56:38.000000000 -0800
+++ qtbase/src/platformsupport/fontdatabases/basic/qbasicfontdatabase_p.h	2015-05-11 13:18:55.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the plugins of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -60,15 +60,14 @@
 class QBasicFontDatabase : public QPlatformFontDatabase
 {
 public:
-    void populateFontDatabase();
-    QFontEngine *fontEngine(const QFontDef &fontDef, void *handle);
-    QFontEngine *fontEngine(const QByteArray &fontData, qreal pixelSize, QFont::HintingPreference hintingPreference);
-    QStringList fallbacksForFamily(const QString &family, QFont::Style style, QFont::StyleHint styleHint, QChar::Script script) const;
-    QStringList addApplicationFont(const QByteArray &fontData, const QString &fileName);
-    void releaseHandle(void *handle);
+    void populateFontDatabase() Q_DECL_OVERRIDE;
+    QFontEngine *fontEngine(const QFontDef &fontDef, void *handle) Q_DECL_OVERRIDE;
+    QFontEngine *fontEngine(const QByteArray &fontData, qreal pixelSize, QFont::HintingPreference hintingPreference) Q_DECL_OVERRIDE;
+    QStringList fallbacksForFamily(const QString &family, QFont::Style style, QFont::StyleHint styleHint, QChar::Script script) const Q_DECL_OVERRIDE;
+    QStringList addApplicationFont(const QByteArray &fontData, const QString &fileName) Q_DECL_OVERRIDE;
+    void releaseHandle(void *handle) Q_DECL_OVERRIDE;
 
     static QStringList addTTFile(const QByteArray &fontData, const QByteArray &file, QSupportedWritingSystems *supportedWritingSystems = 0);
-    static QString fontNameFromTTFile(const QString &filename);
 };
 
 QT_END_NAMESPACE
diff -Naur orig/qtbase/src/platformsupport/fontdatabases/fontconfig/qfontconfigdatabase.cpp qtbase/src/platformsupport/fontdatabases/fontconfig/qfontconfigdatabase.cpp
--- orig/qtbase/src/platformsupport/fontdatabases/fontconfig/qfontconfigdatabase.cpp	2015-02-16 20:56:38.000000000 -0800
+++ qtbase/src/platformsupport/fontdatabases/fontconfig/qfontconfigdatabase.cpp	2015-05-11 14:11:37.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the plugins of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -54,6 +54,13 @@
 
 QT_BEGIN_NAMESPACE
 
+static const int maxWeight = 99;
+
+static inline int mapToQtWeightForRange(int fcweight, int fcLower, int fcUpper, int qtLower, int qtUpper)
+{
+    return qtLower + ((fcweight - fcLower) * (qtUpper - qtLower)) / (fcUpper - fcLower);
+}
+
 static inline bool requiresOpenType(int writingSystem)
 {
     return ((writingSystem >= QFontDatabase::Syriac && writingSystem <= QFontDatabase::Sinhala)
@@ -68,26 +75,28 @@
     // mapping.  This ensures that where there is a corresponding enum on both sides (for example
     // FC_WEIGHT_DEMIBOLD and QFont::DemiBold) we map one to the other but other values map
     // to intermediate Qt weights.
-    const int maxWeight = 99;
-    int qtweight;
-    if (fcweight < 0)
-        qtweight = 0;
-    else if (fcweight <= FC_WEIGHT_LIGHT)
-        qtweight = (fcweight * QFont::Light) / FC_WEIGHT_LIGHT;
-    else if (fcweight <= FC_WEIGHT_NORMAL)
-        qtweight = QFont::Light + ((fcweight - FC_WEIGHT_LIGHT) * (QFont::Normal - QFont::Light)) / (FC_WEIGHT_NORMAL - FC_WEIGHT_LIGHT);
-    else if (fcweight <= FC_WEIGHT_DEMIBOLD)
-        qtweight = QFont::Normal + ((fcweight - FC_WEIGHT_NORMAL) * (QFont::DemiBold - QFont::Normal)) / (FC_WEIGHT_DEMIBOLD - FC_WEIGHT_NORMAL);
-    else if (fcweight <= FC_WEIGHT_BOLD)
-        qtweight = QFont::DemiBold + ((fcweight - FC_WEIGHT_DEMIBOLD) * (QFont::Bold - QFont::DemiBold)) / (FC_WEIGHT_BOLD - FC_WEIGHT_DEMIBOLD);
-    else if (fcweight <= FC_WEIGHT_BLACK)
-        qtweight = QFont::Bold + ((fcweight - FC_WEIGHT_BOLD) * (QFont::Black - QFont::Bold)) / (FC_WEIGHT_BLACK - FC_WEIGHT_BOLD);
-    else if (fcweight <= FC_WEIGHT_ULTRABLACK)
-        qtweight = QFont::Black + ((fcweight - FC_WEIGHT_BLACK) * (maxWeight - QFont::Black)) / (FC_WEIGHT_ULTRABLACK - FC_WEIGHT_BLACK);
-    else
-        qtweight = maxWeight;
 
-    return qtweight;
+    if (fcweight <= FC_WEIGHT_THIN)
+        return QFont::Thin;
+    if (fcweight <= FC_WEIGHT_ULTRALIGHT)
+        return mapToQtWeightForRange(fcweight, FC_WEIGHT_THIN, FC_WEIGHT_ULTRALIGHT, QFont::Thin, QFont::ExtraLight);
+    if (fcweight <= FC_WEIGHT_LIGHT)
+        return mapToQtWeightForRange(fcweight, FC_WEIGHT_ULTRALIGHT, FC_WEIGHT_LIGHT, QFont::ExtraLight, QFont::Light);
+    if (fcweight <= FC_WEIGHT_NORMAL)
+        return mapToQtWeightForRange(fcweight, FC_WEIGHT_LIGHT, FC_WEIGHT_NORMAL, QFont::Light, QFont::Normal);
+    if (fcweight <= FC_WEIGHT_MEDIUM)
+        return mapToQtWeightForRange(fcweight, FC_WEIGHT_NORMAL, FC_WEIGHT_MEDIUM, QFont::Normal, QFont::Medium);
+    if (fcweight <= FC_WEIGHT_DEMIBOLD)
+        return mapToQtWeightForRange(fcweight, FC_WEIGHT_MEDIUM, FC_WEIGHT_DEMIBOLD, QFont::Medium, QFont::DemiBold);
+    if (fcweight <= FC_WEIGHT_BOLD)
+        return mapToQtWeightForRange(fcweight, FC_WEIGHT_DEMIBOLD, FC_WEIGHT_BOLD, QFont::DemiBold, QFont::Bold);
+    if (fcweight <= FC_WEIGHT_ULTRABOLD)
+        return mapToQtWeightForRange(fcweight, FC_WEIGHT_BOLD, FC_WEIGHT_ULTRABOLD, QFont::Bold, QFont::ExtraBold);
+    if (fcweight <= FC_WEIGHT_BLACK)
+        return mapToQtWeightForRange(fcweight, FC_WEIGHT_ULTRABOLD, FC_WEIGHT_BLACK, QFont::ExtraBold, QFont::Black);
+    if (fcweight <= FC_WEIGHT_ULTRABLACK)
+        return mapToQtWeightForRange(fcweight, FC_WEIGHT_BLACK, FC_WEIGHT_ULTRABLACK, QFont::Black, maxWeight);
+    return maxWeight;
 }
 
 static inline int stretchFromFcWidth(int fcwidth)
@@ -209,9 +218,32 @@
     "hmd", // Miao
     "sa", // Sharada
     "srb", // SoraSompeng
-    "doi"  // Takri
+    "doi", // Takri
+    "lez", // CaucasianAlbanian
+    "bsq", // BassaVah
+    "fr", // Duployan
+    "sq", // Elbasan
+    "sa", // Grantha
+    "hnj", // PahawhHmong
+    "sd", // Khojki
+    "lab", // LinearA
+    "hi", // Mahajani
+    "xmn", // Manichaean
+    "men", // MendeKikakui
+    "mr", // Modi
+    "mru", // Mro
+    "xna", // OldNorthArabian
+    "arc", // Nabataean
+    "arc", // Palmyrene
+    "ctd", // PauCinHau
+    "kv", // OldPermic
+    "pal", // PsalterPahlavi
+    "sa", // Siddham
+    "sd", // Khudawadi
+    "mai", // Tirhuta
+    "hoc"  // WarangCiti
 };
-Q_STATIC_ASSERT(sizeof(specialLanguages) / sizeof(const char *) == QChar::ScriptCount);
+//Q_STATIC_ASSERT(sizeof(specialLanguages) / sizeof(const char *) == QChar::ScriptCount);
 
 // this could become a list of all languages used for each writing
 // system, instead of using the single most common language.
@@ -270,7 +302,7 @@
     "deva",  // Devanagari
     "beng",  // Bengali
     "guru",  // Gurmukhi
-    "gurj",  // Gujarati
+    "gujr",  // Gujarati
     "orya",  // Oriya
     "taml",  // Tamil
     "telu",  // Telugu
@@ -526,6 +558,23 @@
         return QFontEngine::HintNone;
     }
 
+    int hint_style = 0;
+    if (FcPatternGetInteger (match, FC_HINT_STYLE, 0, &hint_style) == FcResultMatch) {
+        switch (hint_style) {
+        case FC_HINT_NONE:
+            return QFontEngine::HintNone;
+        case FC_HINT_SLIGHT:
+            return QFontEngine::HintLight;
+        case FC_HINT_MEDIUM:
+            return QFontEngine::HintMedium;
+        case FC_HINT_FULL:
+            return QFontEngine::HintFull;
+        default:
+            Q_UNREACHABLE();
+            break;
+        }
+    }
+
     if (useXftConf) {
         void *hintStyleResource =
                 QGuiApplication::platformNativeInterface()->nativeResourceForScreen("hintstyle",
@@ -535,27 +584,31 @@
             return QFontEngine::HintStyle(hintStyle - 1);
     }
 
-    int hint_style = 0;
-    if (FcPatternGetInteger (match, FC_HINT_STYLE, 0, &hint_style) == FcResultNoMatch)
-        hint_style = FC_HINT_FULL;
-    switch (hint_style) {
-    case FC_HINT_NONE:
-        return QFontEngine::HintNone;
-    case FC_HINT_SLIGHT:
-        return QFontEngine::HintLight;
-    case FC_HINT_MEDIUM:
-        return QFontEngine::HintMedium;
-    case FC_HINT_FULL:
-        return QFontEngine::HintFull;
-    default:
-        Q_UNREACHABLE();
-        break;
-    }
     return QFontEngine::HintFull;
 }
 
 QFontEngine::SubpixelAntialiasingType subpixelTypeFromMatch(FcPattern *match, bool useXftConf)
 {
+    int subpixel = FC_RGBA_UNKNOWN;
+    if (FcPatternGetInteger(match, FC_RGBA, 0, &subpixel) == FcResultMatch) {
+        switch (subpixel) {
+        case FC_RGBA_UNKNOWN:
+        case FC_RGBA_NONE:
+            return QFontEngine::Subpixel_None;
+        case FC_RGBA_RGB:
+            return QFontEngine::Subpixel_RGB;
+        case FC_RGBA_BGR:
+            return QFontEngine::Subpixel_BGR;
+        case FC_RGBA_VRGB:
+            return QFontEngine::Subpixel_VRGB;
+        case FC_RGBA_VBGR:
+            return QFontEngine::Subpixel_VBGR;
+        default:
+            Q_UNREACHABLE();
+            break;
+        }
+    }
+
     if (useXftConf) {
         void *subpixelTypeResource =
                 QGuiApplication::platformNativeInterface()->nativeResourceForScreen("subpixeltype",
@@ -565,25 +618,6 @@
             return QFontEngine::SubpixelAntialiasingType(subpixelType - 1);
     }
 
-    int subpixel = FC_RGBA_UNKNOWN;
-    FcPatternGetInteger(match, FC_RGBA, 0, &subpixel);
-
-    switch (subpixel) {
-    case FC_RGBA_UNKNOWN:
-    case FC_RGBA_NONE:
-        return QFontEngine::Subpixel_None;
-    case FC_RGBA_RGB:
-        return QFontEngine::Subpixel_RGB;
-    case FC_RGBA_BGR:
-        return QFontEngine::Subpixel_BGR;
-    case FC_RGBA_VRGB:
-        return QFontEngine::Subpixel_VRGB;
-    case FC_RGBA_VBGR:
-        return QFontEngine::Subpixel_VBGR;
-    default:
-        Q_UNREACHABLE();
-        break;
-    }
     return QFontEngine::Subpixel_None;
 }
 } // namespace
@@ -823,10 +857,8 @@
                 QGuiApplication::platformNativeInterface()->nativeResourceForScreen("antialiasingEnabled",
                                                                                     QGuiApplication::primaryScreen());
         int antialiasingEnabled = int(reinterpret_cast<qintptr>(antialiasResource));
-        if (antialiasingEnabled > 0) {
+        if (antialiasingEnabled > 0)
             antialias = antialiasingEnabled - 1;
-            forcedAntialiasSetting = true;
-        }
     }
 
     QFontEngine::GlyphFormat format;
diff -Naur orig/qtbase/src/platformsupport/fontdatabases/fontconfig/qfontconfigdatabase_p.h qtbase/src/platformsupport/fontdatabases/fontconfig/qfontconfigdatabase_p.h
--- orig/qtbase/src/platformsupport/fontdatabases/fontconfig/qfontconfigdatabase_p.h	2015-02-16 20:56:38.000000000 -0800
+++ qtbase/src/platformsupport/fontdatabases/fontconfig/qfontconfigdatabase_p.h	2015-05-11 13:18:55.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the plugins of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -55,14 +55,14 @@
 class QFontconfigDatabase : public QBasicFontDatabase
 {
 public:
-    void populateFontDatabase();
-    QFontEngineMulti *fontEngineMulti(QFontEngine *fontEngine, QChar::Script script);
-    QFontEngine *fontEngine(const QFontDef &fontDef, void *handle);
-    QFontEngine *fontEngine(const QByteArray &fontData, qreal pixelSize, QFont::HintingPreference hintingPreference);
-    QStringList fallbacksForFamily(const QString &family, QFont::Style style, QFont::StyleHint styleHint, QChar::Script script) const;
-    QStringList addApplicationFont(const QByteArray &fontData, const QString &fileName);
-    QString resolveFontFamilyAlias(const QString &family) const;
-    QFont defaultFont() const;
+    void populateFontDatabase() Q_DECL_OVERRIDE;
+    QFontEngineMulti *fontEngineMulti(QFontEngine *fontEngine, QChar::Script script) Q_DECL_OVERRIDE;
+    QFontEngine *fontEngine(const QFontDef &fontDef, void *handle) Q_DECL_OVERRIDE;
+    QFontEngine *fontEngine(const QByteArray &fontData, qreal pixelSize, QFont::HintingPreference hintingPreference) Q_DECL_OVERRIDE;
+    QStringList fallbacksForFamily(const QString &family, QFont::Style style, QFont::StyleHint styleHint, QChar::Script script) const Q_DECL_OVERRIDE;
+    QStringList addApplicationFont(const QByteArray &fontData, const QString &fileName) Q_DECL_OVERRIDE;
+    QString resolveFontFamilyAlias(const QString &family) const Q_DECL_OVERRIDE;
+    QFont defaultFont() const Q_DECL_OVERRIDE;
 
 private:
     void setupFontEngine(QFontEngineFT *engine, const QFontDef &fontDef) const;
diff -Naur orig/qtbase/src/platformsupport/fontdatabases/fontconfig/qfontenginemultifontconfig.cpp qtbase/src/platformsupport/fontdatabases/fontconfig/qfontenginemultifontconfig.cpp
--- orig/qtbase/src/platformsupport/fontdatabases/fontconfig/qfontenginemultifontconfig.cpp	2015-02-16 20:56:38.000000000 -0800
+++ qtbase/src/platformsupport/fontdatabases/fontconfig/qfontenginemultifontconfig.cpp	2015-05-11 13:18:55.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the plugins of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -38,7 +38,7 @@
 QT_BEGIN_NAMESPACE
 
 QFontEngineMultiFontConfig::QFontEngineMultiFontConfig(QFontEngine *fe, int script)
-    : QFontEngineMultiBasicImpl(fe, script)
+    : QFontEngineMulti(fe, script)
 {
 }
 
@@ -67,8 +67,8 @@
 FcPattern * QFontEngineMultiFontConfig::getMatchPatternForFallback(int fallBackIndex) const
 {
     Q_ASSERT(fallBackIndex < fallbackFamilyCount());
-    if (engines.size() - 1 > cachedMatchPatterns.size())
-        cachedMatchPatterns.resize(engines.size() - 1);
+    if (fallbackFamilyCount() > cachedMatchPatterns.size())
+        cachedMatchPatterns.resize(fallbackFamilyCount());
     FcPattern *ret = cachedMatchPatterns.at(fallBackIndex);
     if (ret)
         return ret;
diff -Naur orig/qtbase/src/platformsupport/fontdatabases/fontconfig/qfontenginemultifontconfig_p.h qtbase/src/platformsupport/fontdatabases/fontconfig/qfontenginemultifontconfig_p.h
--- orig/qtbase/src/platformsupport/fontdatabases/fontconfig/qfontenginemultifontconfig_p.h	2015-02-16 20:56:38.000000000 -0800
+++ qtbase/src/platformsupport/fontdatabases/fontconfig/qfontenginemultifontconfig_p.h	2015-05-11 13:18:55.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the plugins of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -50,14 +50,14 @@
 
 QT_BEGIN_NAMESPACE
 
-class QFontEngineMultiFontConfig : public QFontEngineMultiBasicImpl
+class QFontEngineMultiFontConfig : public QFontEngineMulti
 {
 public:
     explicit QFontEngineMultiFontConfig(QFontEngine *fe, int script);
 
     ~QFontEngineMultiFontConfig();
 
-    bool shouldLoadFontEngineForCharacter(int at, uint ucs4) const;
+    bool shouldLoadFontEngineForCharacter(int at, uint ucs4) const Q_DECL_OVERRIDE;
 private:
     FcPattern* getMatchPatternForFallback(int at) const;
 
diff -Naur orig/qtbase/src/platformsupport/fontdatabases/genericunix/qgenericunixfontdatabase_p.h qtbase/src/platformsupport/fontdatabases/genericunix/qgenericunixfontdatabase_p.h
--- orig/qtbase/src/platformsupport/fontdatabases/genericunix/qgenericunixfontdatabase_p.h	2015-02-16 20:56:38.000000000 -0800
+++ qtbase/src/platformsupport/fontdatabases/genericunix/qgenericunixfontdatabase_p.h	2015-05-11 13:18:55.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the plugins of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
diff -Naur orig/qtbase/src/platformsupport/fontdatabases/mac/qcoretextfontdatabase.mm qtbase/src/platformsupport/fontdatabases/mac/qcoretextfontdatabase.mm
--- orig/qtbase/src/platformsupport/fontdatabases/mac/qcoretextfontdatabase.mm	2015-02-16 20:56:38.000000000 -0800
+++ qtbase/src/platformsupport/fontdatabases/mac/qcoretextfontdatabase.mm	2015-05-11 13:18:55.000000000 -0700
@@ -1,40 +1,32 @@
 /****************************************************************************
 **
-** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the plugins of the Qt Toolkit.
 **
-** $QT_BEGIN_LICENSE:LGPL$
+** $QT_BEGIN_LICENSE:LGPL21$
 ** Commercial License Usage
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia.  For licensing terms and
-** conditions see http://qt.digia.com/licensing.  For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
-** General Public License version 2.1 as published by the Free Software
-** Foundation and appearing in the file LICENSE.LGPL included in the
-** packaging of this file.  Please review the following information to
-** ensure the GNU Lesser General Public License version 2.1 requirements
-** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** General Public License version 2.1 or version 3 as published by the Free
+** Software Foundation and appearing in the file LICENSE.LGPLv21 and
+** LICENSE.LGPLv3 included in the packaging of this file. Please review the
+** following information to ensure the GNU Lesser General Public License
+** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights.  These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU
-** General Public License version 3.0 as published by the Free Software
-** Foundation and appearing in the file LICENSE.GPL included in the
-** packaging of this file.  Please review the following information to
-** ensure the GNU General Public License version 3.0 requirements will be
-** met: http://www.gnu.org/copyleft/gpl.html.
-**
-**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
@@ -56,6 +48,18 @@
 
 QT_BEGIN_NAMESPACE
 
+namespace {
+class AutoReleasePool
+{
+public:
+    AutoReleasePool(): pool([[NSAutoreleasePool alloc] init]) {}
+    ~AutoReleasePool() { [pool release]; }
+
+private:
+    NSAutoreleasePool *pool;
+};
+}
+
 // this could become a list of all languages used for each writing
 // system, instead of using the single most common language.
 static const char *languageForWritingSystem[] = {
@@ -266,47 +270,37 @@
     fd->fixedPitch = false;
 
     if (QCFType<CTFontRef> tempFont = CTFontCreateWithFontDescriptor(font, 0.0, 0)) {
-        uint length = 0;
         uint tag = MAKE_TAG('O', 'S', '/', '2');
         CTFontRef tempFontRef = tempFont;
         void *userData = reinterpret_cast<void *>(&tempFontRef);
-        if (QCoreTextFontEngine::ct_getSfntTable(userData, tag, 0, &length)) {
-            QVarLengthArray<uchar> os2Table(length);
-            if (length >= 86 && QCoreTextFontEngine::ct_getSfntTable(userData, tag, os2Table.data(), &length)) {
-                quint32 unicodeRange[4] = {
-                        qFromBigEndian<quint32>(os2Table.data() + 42),
-                        qFromBigEndian<quint32>(os2Table.data() + 46),
-                        qFromBigEndian<quint32>(os2Table.data() + 50),
-                        qFromBigEndian<quint32>(os2Table.data() + 54)
-                    };
-                quint32 codePageRange[2] = { qFromBigEndian<quint32>(os2Table.data() + 78),
-                                             qFromBigEndian<quint32>(os2Table.data() + 82) };
-                fd->writingSystems = QPlatformFontDatabase::writingSystemsFromTrueTypeBits(unicodeRange, codePageRange);
-            }
+        uint length = 128;
+        QVarLengthArray<uchar, 128> os2Table(length);
+        if (QCoreTextFontEngine::ct_getSfntTable(userData, tag, os2Table.data(), &length) && length >= 86) {
+            if (length > uint(os2Table.length())) {
+                os2Table.resize(length);
+                if (!QCoreTextFontEngine::ct_getSfntTable(userData, tag, os2Table.data(), &length))
+                    Q_UNREACHABLE();
+                Q_ASSERT(length >= 86);
+            }
+            quint32 unicodeRange[4] = {
+                qFromBigEndian<quint32>(os2Table.data() + 42),
+                qFromBigEndian<quint32>(os2Table.data() + 46),
+                qFromBigEndian<quint32>(os2Table.data() + 50),
+                qFromBigEndian<quint32>(os2Table.data() + 54)
+            };
+            quint32 codePageRange[2] = {
+                qFromBigEndian<quint32>(os2Table.data() + 78),
+                qFromBigEndian<quint32>(os2Table.data() + 82)
+            };
+            fd->writingSystems = QPlatformFontDatabase::writingSystemsFromTrueTypeBits(unicodeRange, codePageRange);
         }
     }
 
     if (styles) {
         if (CFNumberRef weightValue = (CFNumberRef) CFDictionaryGetValue(styles, kCTFontWeightTrait)) {
-            double normalizedWeight;
-            if (CFNumberGetValue(weightValue, kCFNumberDoubleType, &normalizedWeight)) {
-                if (normalizedWeight >= 0.62)
-                    fd->weight = QFont::Black;
-                else if (normalizedWeight >= 0.4)
-                    fd->weight = QFont::Bold;
-                else if (normalizedWeight >= 0.3)
-                    fd->weight = QFont::DemiBold;
-                else if (normalizedWeight >= 0.2)
-                    fd->weight = qt_mediumFontWeight;
-                else if (normalizedWeight == 0.0)
-                    fd->weight = QFont::Normal;
-                else if (normalizedWeight <= -0.4)
-                    fd->weight = QFont::Light;
-                else if (normalizedWeight <= -0.6)
-                    fd->weight = qt_extralightFontWeight;
-                else if (normalizedWeight <= -0.8)
-                    fd->weight = qt_thinFontWeight;
-            }
+            float normalizedWeight;
+            if (CFNumberGetValue(weightValue, kCFNumberFloatType, &normalizedWeight))
+                fd->weight = QCoreTextFontEngine::qtWeightFromCFWeight(normalizedWeight);
         }
         if (CFNumberRef italic = (CFNumberRef) CFDictionaryGetValue(styles, kCTFontSlantTrait)) {
             double d;
@@ -354,11 +348,7 @@
 {
     FontDescription fd;
     getFontDescription(font, &fd);
-    populateFromFontDescription(font, fd);
-}
 
-void QCoreTextFontDatabase::populateFromFontDescription(CTFontDescriptorRef font, const FontDescription &fd)
-{
     CFRetain(font);
     QPlatformFontDatabase::registerFont(fd.familyName, fd.styleName, fd.foundryName, fd.weight, fd.style, fd.stretch,
             true /* antialiased */, true /* scalable */,
@@ -370,6 +360,8 @@
     CFRelease(CTFontDescriptorRef(handle));
 }
 
+extern CGAffineTransform qt_transform_from_fontdef(const QFontDef &fontDef);
+
 QFontEngine *QCoreTextFontDatabase::fontEngine(const QFontDef &f, void *usrPtr)
 {
     qreal scaledPointSize = f.pixelSize;
@@ -384,7 +376,8 @@
         scaledPointSize = f.pointSize;
 
     CTFontDescriptorRef descriptor = (CTFontDescriptorRef) usrPtr;
-    CTFontRef font = CTFontCreateWithFontDescriptor(descriptor, scaledPointSize, NULL);
+    CGAffineTransform matrix = qt_transform_from_fontdef(f);
+    CTFontRef font = CTFontCreateWithFontDescriptor(descriptor, scaledPointSize, &matrix);
     if (font) {
         QFontEngine *engine = new QCoreTextFontEngine(font, f);
         engine->fontDef = f;
@@ -460,6 +453,8 @@
     Q_UNUSED(style);
     Q_UNUSED(script);
 
+    AutoReleasePool pool;
+
     static QHash<QString, QStringList> fallbackLists;
 
     if (!family.isEmpty()) {
@@ -848,6 +843,11 @@
     return QFont(defaultFontName);
 }
 
+bool QCoreTextFontDatabase::fontsAlwaysScalable() const
+{
+    return true;
+}
+
 QList<int> QCoreTextFontDatabase::standardSizes() const
 {
     QList<int> ret;
diff -Naur orig/qtbase/src/platformsupport/fontdatabases/mac/qcoretextfontdatabase_p.h qtbase/src/platformsupport/fontdatabases/mac/qcoretextfontdatabase_p.h
--- orig/qtbase/src/platformsupport/fontdatabases/mac/qcoretextfontdatabase_p.h	2015-02-16 20:56:38.000000000 -0800
+++ qtbase/src/platformsupport/fontdatabases/mac/qcoretextfontdatabase_p.h	2015-05-11 13:18:55.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the plugins of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -70,8 +70,6 @@
 
 QT_BEGIN_NAMESPACE
 
-struct FontDescription;
-
 class QCoreTextFontDatabase : public QPlatformFontDatabase
 {
 public:
@@ -87,6 +85,7 @@
     void releaseHandle(void *handle);
     bool isPrivateFontFamily(const QString &family) const;
     QFont defaultFont() const;
+    bool fontsAlwaysScalable() const Q_DECL_OVERRIDE;
     QList<int> standardSizes() const;
 
     // For iOS and OS X platform themes
@@ -95,7 +94,6 @@
 
 private:
     void populateFromDescriptor(CTFontDescriptorRef font);
-    void populateFromFontDescription(CTFontDescriptorRef font, const FontDescription &fd);
 
     mutable QString defaultFontName;
 
diff -Naur orig/qtbase/src/platformsupport/fontdatabases/mac/qfontengine_coretext.mm qtbase/src/platformsupport/fontdatabases/mac/qfontengine_coretext.mm
--- orig/qtbase/src/platformsupport/fontdatabases/mac/qfontengine_coretext.mm	2015-02-16 20:56:38.000000000 -0800
+++ qtbase/src/platformsupport/fontdatabases/mac/qfontengine_coretext.mm	2015-05-11 13:18:55.000000000 -0700
@@ -1,54 +1,49 @@
 /****************************************************************************
 **
-** Copyright (C) 2013 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
-** $QT_BEGIN_LICENSE:LGPL$
+** $QT_BEGIN_LICENSE:LGPL21$
 ** Commercial License Usage
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia.  For licensing terms and
-** conditions see http://qt.digia.com/licensing.  For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
-** General Public License version 2.1 as published by the Free Software
-** Foundation and appearing in the file LICENSE.LGPL included in the
-** packaging of this file.  Please review the following information to
-** ensure the GNU Lesser General Public License version 2.1 requirements
-** will be met: http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
+** General Public License version 2.1 or version 3 as published by the Free
+** Software Foundation and appearing in the file LICENSE.LGPLv21 and
+** LICENSE.LGPLv3 included in the packaging of this file. Please review the
+** following information to ensure the GNU Lesser General Public License
+** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
+** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights.  These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
-** GNU General Public License Usage
-** Alternatively, this file may be used under the terms of the GNU
-** General Public License version 3.0 as published by the Free Software
-** Foundation and appearing in the file LICENSE.GPL included in the
-** packaging of this file.  Please review the following information to
-** ensure the GNU General Public License version 3.0 requirements will be
-** met: http://www.gnu.org/copyleft/gpl.html.
-**
-**
 ** $QT_END_LICENSE$
 **
 ****************************************************************************/
 
 #include "qfontengine_coretext_p.h"
 
+#include <qpa/qplatformfontdatabase.h>
 #include <QtCore/qendian.h>
 #include <QtCore/qsettings.h>
 
 #include <private/qimage_p.h>
 
+#include <cmath>
+
 QT_BEGIN_NAMESPACE
 
-static float SYNTHETIC_ITALIC_SKEW = tanf(14 * acosf(0) / 90);
+static float SYNTHETIC_ITALIC_SKEW = std::tan(14.f * std::acos(0.f) / 90.f);
 
 bool QCoreTextFontEngine::ct_getSfntTable(void *user_data, uint tag, uchar *buffer, uint *length)
 {
@@ -66,6 +61,29 @@
     return true;
 }
 
+QFont::Weight QCoreTextFontEngine::qtWeightFromCFWeight(float value)
+{
+    if (value >= 0.62)
+        return QFont::Black;
+    if (value >= 0.5)
+        return QFont::ExtraBold;
+    if (value >= 0.4)
+        return QFont::Bold;
+    if (value >= 0.3)
+        return QFont::DemiBold;
+    if (value >= 0.2)
+        return QFont::Medium;
+    if (value == 0.0)
+        return QFont::Normal;
+    if (value <= -0.4)
+        return QFont::Light;
+    if (value <= -0.6)
+        return QFont::ExtraLight;
+    if (value <= -0.8)
+        return QFont::Thin;
+    return QFont::Normal;
+}
+
 static void loadAdvancesForGlyphs(CTFontRef ctfont,
                                   QVarLengthArray<CGGlyph> &cgGlyphs,
                                   QGlyphLayout *glyphs, int len,
@@ -88,6 +106,16 @@
     }
 }
 
+static float getTraitValue(CFDictionaryRef allTraits, CFStringRef trait)
+{
+    if (CFDictionaryContainsKey(allTraits, trait)) {
+        CFNumberRef traitNum = (CFNumberRef) CFDictionaryGetValue(allTraits, trait);
+        float v = 0;
+        CFNumberGetValue(traitNum, kCFNumberFloatType, &v);
+        return v;
+    }
+    return 0;
+}
 
 int QCoreTextFontEngine::antialiasingThreshold = 0;
 QFontEngine::GlyphFormat QCoreTextFontEngine::defaultGlyphFormat = QFontEngine::Format_A32;
@@ -129,39 +157,15 @@
     CFRelease(ctfont);
 }
 
-static QFont::Weight weightFromInteger(int weight)
-{
-    if (weight < 400)
-        return QFont::Light;
-    else if (weight < 600)
-        return QFont::Normal;
-    else if (weight < 700)
-        return QFont::DemiBold;
-    else if (weight < 800)
-        return QFont::Bold;
-    else
-        return QFont::Black;
-}
-
-int getTraitValue(CFDictionaryRef allTraits, CFStringRef trait)
-{
-    if (CFDictionaryContainsKey(allTraits, trait)) {
-        CFNumberRef traitNum = (CFNumberRef) CFDictionaryGetValue(allTraits, trait);
-        float v = 0;
-        CFNumberGetValue(traitNum, kCFNumberFloatType, &v);
-        // the value we get from CFNumberRef is from -1.0 to 1.0
-        int value = v * 500 + 500;
-        return value;
-    }
-
-    return 0;
-}
-
 void QCoreTextFontEngine::init()
 {
     Q_ASSERT(ctfont != NULL);
     Q_ASSERT(cgFont != NULL);
 
+    face_id.index = 0;
+    QCFString name = CTFontCopyName(ctfont, kCTFontUniqueNameKey);
+    face_id.filename = QCFString::toQString(name).toUtf8();
+
     QCFString family = CTFontCopyFamilyName(ctfont);
     fontDef.family = family;
 
@@ -182,8 +186,8 @@
         fontDef.style = QFont::StyleItalic;
 
     CFDictionaryRef allTraits = CTFontCopyTraits(ctfont);
-    fontDef.weight = weightFromInteger(getTraitValue(allTraits, kCTFontWeightTrait));
-    int slant = getTraitValue(allTraits, kCTFontSlantTrait);
+    fontDef.weight = QCoreTextFontEngine::qtWeightFromCFWeight(getTraitValue(allTraits, kCTFontWeightTrait));
+    int slant = static_cast<int>(getTraitValue(allTraits, kCTFontSlantTrait) * 500 + 500);
     if (slant > 500 && !(traits & kCTFontItalicTrait))
         fontDef.style = QFont::StyleOblique;
     CFRelease(allTraits);
@@ -246,11 +250,9 @@
 
     int glyph_pos = 0;
     for (int i = 0; i < len; ++i) {
-        if (cgGlyphs[i]) {
-            glyphs->glyphs[glyph_pos] = cgGlyphs[i];
-            if (glyph_pos < i)
-                cgGlyphs[glyph_pos] = cgGlyphs[i];
-        }
+        glyphs->glyphs[glyph_pos] = cgGlyphs[i];
+        if (glyph_pos < i)
+            cgGlyphs[glyph_pos] = cgGlyphs[i];
         glyph_pos++;
 
         // If it's a non-BMP char, skip the lower part of surrogate pair and go
@@ -646,15 +648,11 @@
 
     QImage im = imageForGlyph(glyph, subPixelPosition, false, x);
 
-    QImage indexed(im.width(), im.height(), QImage::Format_Indexed8);
-    QVector<QRgb> colors(256);
-    for (int i=0; i<256; ++i)
-        colors[i] = qRgba(0, 0, 0, i);
-    indexed.setColorTable(colors);
+    QImage alphaMap(im.width(), im.height(), QImage::Format_Alpha8);
 
     for (int y=0; y<im.height(); ++y) {
         uint *src = (uint*) im.scanLine(y);
-        uchar *dst = indexed.scanLine(y);
+        uchar *dst = alphaMap.scanLine(y);
         for (int x=0; x<im.width(); ++x) {
             *dst = qGray(*src);
             ++dst;
@@ -662,7 +660,7 @@
         }
     }
 
-    return indexed;
+    return alphaMap;
 }
 
 QImage QCoreTextFontEngine::alphaRGBMapForGlyph(glyph_t glyph, QFixed subPixelPosition, const QTransform &x)
@@ -700,7 +698,7 @@
 
 QFontEngine::FaceId QCoreTextFontEngine::faceId() const
 {
-    return QFontEngine::FaceId();
+    return face_id;
 }
 
 bool QCoreTextFontEngine::canRender(const QChar *string, int len) const
@@ -714,9 +712,26 @@
     return ct_getSfntTable((void *)&ctfont, tag, buffer, length);
 }
 
-void QCoreTextFontEngine::getUnscaledGlyph(glyph_t, QPainterPath *, glyph_metrics_t *)
+void QCoreTextFontEngine::getUnscaledGlyph(glyph_t glyph, QPainterPath *path, glyph_metrics_t *metric)
 {
-    // ###
+    CGAffineTransform cgMatrix = CGAffineTransformIdentity;
+
+    qreal emSquare = CTFontGetUnitsPerEm(ctfont);
+    qreal scale = emSquare / CTFontGetSize(ctfont);
+    cgMatrix = CGAffineTransformScale(cgMatrix, scale, -scale);
+
+    QCFType<CGPathRef> cgpath = CTFontCreatePathForGlyph(ctfont, (CGGlyph) glyph, &cgMatrix);
+    ConvertPathInfo info(path, QPointF(0,0));
+    CGPathApply(cgpath, &info, convertCGPathToQPainterPath);
+
+    *metric = boundingBox(glyph);
+    // scale the metrics too
+    metric->width  = QFixed::fromReal(metric->width.toReal() * scale);
+    metric->height = QFixed::fromReal(metric->height.toReal() * scale);
+    metric->x      = QFixed::fromReal(metric->x.toReal() * scale);
+    metric->y      = QFixed::fromReal(metric->y.toReal() * scale);
+    metric->xoff   = QFixed::fromReal(metric->xoff.toReal() * scale);
+    metric->yoff   = QFixed::fromReal(metric->yoff.toReal() * scale);
 }
 
 QFixed QCoreTextFontEngine::emSquareSize() const
@@ -744,4 +759,43 @@
         return false;
 }
 
+QFontEngine::Properties QCoreTextFontEngine::properties() const
+{
+    Properties result;
+
+    QCFString psName, copyright;
+    psName = CTFontCopyPostScriptName(ctfont);
+    copyright = CTFontCopyName(ctfont, kCTFontCopyrightNameKey);
+    result.postscriptName = QCFString::toQString(psName).toUtf8();
+    result.copyright = QCFString::toQString(copyright).toUtf8();
+
+    qreal emSquare = CTFontGetUnitsPerEm(ctfont);
+    qreal scale = emSquare / CTFontGetSize(ctfont);
+
+    CGRect cgRect = CTFontGetBoundingBox(ctfont);
+    result.boundingBox = QRectF(cgRect.origin.x * scale,
+                                -CTFontGetAscent(ctfont) * scale,
+                                cgRect.size.width * scale,
+                                cgRect.size.height * scale);
+
+    result.emSquare = emSquareSize();
+    result.ascent = QFixed::fromReal(CTFontGetAscent(ctfont) * scale);
+    result.descent = QFixed::fromReal(CTFontGetDescent(ctfont) * scale);
+    result.leading = QFixed::fromReal(CTFontGetLeading(ctfont) * scale);
+    result.italicAngle = QFixed::fromReal(CTFontGetSlantAngle(ctfont));
+    result.capHeight = QFixed::fromReal(CTFontGetCapHeight(ctfont) * scale);
+    result.lineWidth = QFixed::fromReal(CTFontGetUnderlineThickness(ctfont) * scale);
+
+    if (fontDef.styleStrategy & QFont::ForceIntegerMetrics) {
+        result.ascent = result.ascent.round();
+        result.descent = result.descent.round();
+        result.leading = result.leading.round();
+        result.italicAngle = result.italicAngle.round();
+        result.capHeight = result.capHeight.round();
+        result.lineWidth = result.lineWidth.round();
+    }
+
+    return result;
+}
+
 QT_END_NAMESPACE
diff -Naur orig/qtbase/src/platformsupport/fontdatabases/mac/qfontengine_coretext_p.h qtbase/src/platformsupport/fontdatabases/mac/qfontengine_coretext_p.h
--- orig/qtbase/src/platformsupport/fontdatabases/mac/qfontengine_coretext_p.h	2015-02-16 20:56:38.000000000 -0800
+++ qtbase/src/platformsupport/fontdatabases/mac/qfontengine_coretext_p.h	2015-05-11 13:18:55.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -57,7 +57,6 @@
 
 QT_BEGIN_NAMESPACE
 
-class QRawFontPrivate;
 class QCoreTextFontEngine : public QFontEngine
 {
 public:
@@ -106,6 +105,8 @@
     virtual QFontEngine *cloneWithSize(qreal pixelSize) const;
     virtual int glyphMargin(QFontEngine::GlyphFormat format) { Q_UNUSED(format); return 0; }
 
+    virtual QFontEngine::Properties properties() const;
+
     static bool supportsColorGlyphs()
     {
 #if defined(Q_OS_IOS)
@@ -122,13 +123,11 @@
     }
 
     static bool ct_getSfntTable(void *user_data, uint tag, uchar *buffer, uint *length);
+    static QFont::Weight qtWeightFromCFWeight(float value);
 
     static int antialiasingThreshold;
     static QFontEngine::GlyphFormat defaultGlyphFormat;
-
 private:
-    friend class QRawFontPrivate;
-
     void init();
     QImage imageForGlyph(glyph_t glyph, QFixed subPixelPosition, bool colorful, const QTransform &m);
     CTFontRef ctfont;
@@ -136,6 +135,7 @@
     int synthesisFlags;
     CGAffineTransform transform;
     QFixed avgCharWidth;
+    QFontEngine::FaceId face_id;
 };
 
 CGAffineTransform qt_transform_from_fontdef(const QFontDef &fontDef);
diff -Nuar orig/qtbase/src/gui/text/qabstracttextdocumentlayout.cpp qtbase/src/gui/text/qabstracttextdocumentlayout.cpp
--- orig/qtbase/src/gui/text/qabstracttextdocumentlayout.cpp	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qabstracttextdocumentlayout.cpp	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
diff -Nuar orig/qtbase/src/gui/text/qabstracttextdocumentlayout.h qtbase/src/gui/text/qabstracttextdocumentlayout.h
--- orig/qtbase/src/gui/text/qabstracttextdocumentlayout.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qabstracttextdocumentlayout.h	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
diff -Nuar orig/qtbase/src/gui/text/qabstracttextdocumentlayout_p.h qtbase/src/gui/text/qabstracttextdocumentlayout_p.h
--- orig/qtbase/src/gui/text/qabstracttextdocumentlayout_p.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qabstracttextdocumentlayout_p.h	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
diff -Nuar orig/qtbase/src/gui/text/qcssparser.cpp qtbase/src/gui/text/qcssparser.cpp
--- orig/qtbase/src/gui/text/qcssparser.cpp	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qcssparser.cpp	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -41,7 +41,6 @@
 #include <qfontmetrics.h>
 #include <qbrush.h>
 #include <qimagereader.h>
-#include "private/qfunctions_p.h"
 
 #include <algorithm>
 
@@ -340,18 +339,18 @@
 };
 
 #if defined(Q_CC_MSVC) && _MSC_VER < 1600
-Q_STATIC_GLOBAL_OPERATOR bool operator<(const QCssKnownValue &prop1, const QCssKnownValue &prop2)
+static bool operator<(const QCssKnownValue &prop1, const QCssKnownValue &prop2)
 {
     return QString::compare(QString::fromLatin1(prop1.name), QLatin1String(prop2.name), Qt::CaseInsensitive) < 0;
 }
 #endif
 
-Q_STATIC_GLOBAL_OPERATOR bool operator<(const QString &name, const QCssKnownValue &prop)
+static bool operator<(const QString &name, const QCssKnownValue &prop)
 {
     return QString::compare(name, QLatin1String(prop.name), Qt::CaseInsensitive) < 0;
 }
 
-Q_STATIC_GLOBAL_OPERATOR bool operator<(const QCssKnownValue &prop, const QString &name)
+static bool operator<(const QCssKnownValue &prop, const QString &name)
 {
     return QString::compare(QLatin1String(prop.name), name, Qt::CaseInsensitive) < 0;
 }
@@ -365,6 +364,29 @@
     return prop->id;
 }
 
+static inline bool isInheritable(Property propertyId)
+{
+    switch (propertyId) {
+    case Font:
+    case FontFamily:
+    case FontSize:
+    case FontStyle:
+    case FontWeight:
+    case TextIndent:
+    case Whitespace:
+    case ListStyleType:
+    case ListStyle:
+    case TextAlignment:
+    case FontVariant:
+    case TextTransform:
+    case LineHeight:
+        return true;
+    default:
+        break;
+    }
+    return false;
+}
+
 ///////////////////////////////////////////////////////////////////////////////
 // Value Extractor
 ValueExtractor::ValueExtractor(const QVector<Declaration> &decls, const QPalette &pal)
@@ -2318,6 +2340,7 @@
 {
     decl->d->property = lexem();
     decl->d->propertyId = static_cast<Property>(findKnownValue(decl->d->property, properties, NumProperties));
+    decl->d->inheritable = isInheritable(decl->d->propertyId);
     skipSpace();
     return true;
 }
diff -Nuar orig/qtbase/src/gui/text/qcssparser_p.h qtbase/src/gui/text/qcssparser_p.h
--- orig/qtbase/src/gui/text/qcssparser_p.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qcssparser_p.h	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -426,12 +426,13 @@
 {
     struct DeclarationData : public QSharedData
     {
-        inline DeclarationData() : propertyId(UnknownProperty), important(false) {}
+        inline DeclarationData() : propertyId(UnknownProperty), important(false), inheritable(false) {}
         QString property;
         Property propertyId;
         QVector<Value> values;
         QVariant parsed;
-        bool important;
+        bool important:1;
+        bool inheritable:1;
     };
     QExplicitlySharedDataPointer<DeclarationData> d;
     inline Declaration() : d(new DeclarationData()) {}
diff -Nuar orig/qtbase/src/gui/text/qcssscanner.cpp qtbase/src/gui/text/qcssscanner.cpp
--- orig/qtbase/src/gui/text/qcssscanner.cpp	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qcssscanner.cpp	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
diff -Nuar orig/qtbase/src/gui/text/qdistancefield.cpp qtbase/src/gui/text/qdistancefield.cpp
--- orig/qtbase/src/gui/text/qdistancefield.cpp	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qdistancefield.cpp	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtDeclarative module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -34,6 +34,7 @@
 #include "qdistancefield_p.h"
 #include <qmath.h>
 #include <private/qdatabuffer_p.h>
+#include <private/qimage_p.h>
 #include <private/qpathsimplifier_p.h>
 
 QT_BEGIN_NAMESPACE
@@ -508,8 +509,8 @@
         bits[i] = exteriorColor;
 
     const qreal angleStep = qreal(15 * 3.141592653589793238 / 180);
-    const QPoint rotation(qRound(cos(angleStep) * 0x4000),
-                          qRound(sin(angleStep) * 0x4000)); // 2:14 signed
+    const QPoint rotation(qRound(qCos(angleStep) * 0x4000),
+                          qRound(qSin(angleStep) * 0x4000)); // 2:14 signed
 
     const quint32 *indices = pathIndices.data();
     QVarLengthArray<QPoint> normals;
@@ -543,7 +544,7 @@
             QPoint n(to.y() - from.y(), from.x() - to.x());
             if (n.x() == 0 && n.y() == 0)
                 continue;
-            int scale = qRound((offs << 16) / sqrt(qreal(n.x() * n.x() + n.y() * n.y()))); // 8:16
+            int scale = qRound((offs << 16) / qSqrt(qreal(n.x() * n.x() + n.y() * n.y()))); // 8:16
             n.rx() = n.x() * scale >> 8;
             n.ry() = n.y() * scale >> 8;
             normals.append(n);
@@ -832,6 +833,17 @@
     setGlyph(fontEngine, glyph, doubleResolution);
 }
 
+QDistanceField::QDistanceField(const QPainterPath &path, glyph_t glyph, bool doubleResolution)
+{
+    QPainterPath dfPath = path;
+    dfPath.translate(-dfPath.boundingRect().topLeft());
+    dfPath.setFillRule(Qt::WindingFill);
+
+    d = QDistanceFieldData::create(dfPath, doubleResolution);
+    d->glyph = glyph;
+}
+
+
 QDistanceField::QDistanceField(QDistanceFieldData *data)
     : d(data)
 {
@@ -987,12 +999,12 @@
     if (isNull())
         return QImage();
 
-    QImage image(d->width, d->height, format == QImage::Format_Indexed8 ?
+    QImage image(d->width, d->height, qt_depthForFormat(format) == 8 ?
                                       format : QImage::Format_ARGB32_Premultiplied);
     if (image.isNull())
         return image;
 
-    if (format == QImage::Format_Indexed8) {
+    if (image.depth() == 8) {
         for (int y = 0; y < d->height; ++y)
             memcpy(image.scanLine(y), scanLine(y), d->width);
     } else {
diff -Nuar orig/qtbase/src/gui/text/qdistancefield_p.h qtbase/src/gui/text/qdistancefield_p.h
--- orig/qtbase/src/gui/text/qdistancefield_p.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qdistancefield_p.h	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtDeclarative module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -97,6 +97,7 @@
     QDistanceField(int width, int height);
     QDistanceField(const QRawFont &font, glyph_t glyph, bool doubleResolution = false);
     QDistanceField(QFontEngine *fontEngine, glyph_t glyph, bool doubleResolution = false);
+    QDistanceField(const QPainterPath &path, glyph_t glyph, bool doubleResolution = false);
     QDistanceField(const QDistanceField &other);
 
     bool isNull() const;
diff -Nuar orig/qtbase/src/gui/text/qfont.cpp qtbase/src/gui/text/qfont.cpp
--- orig/qtbase/src/gui/text/qfont.cpp	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qfont.cpp	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -166,14 +166,14 @@
 
 QFontPrivate::QFontPrivate()
     : engineData(0), dpi(qt_defaultDpi()), screen(0),
-      rawMode(false), underline(false), overline(false), strikeOut(false), kerning(true),
+      underline(false), overline(false), strikeOut(false), kerning(true),
       capital(0), letterSpacingIsAbsolute(false), scFont(0)
 {
 }
 
 QFontPrivate::QFontPrivate(const QFontPrivate &other)
     : request(other.request), engineData(0), dpi(other.dpi), screen(other.screen),
-      rawMode(other.rawMode), underline(other.underline), overline(other.overline),
+      underline(other.underline), overline(other.overline),
       strikeOut(other.strikeOut), kerning(other.kerning),
       capital(other.capital), letterSpacingIsAbsolute(other.letterSpacingIsAbsolute),
       letterSpacing(other.letterSpacing), wordSpacing(other.wordSpacing),
@@ -406,9 +406,6 @@
     setPointSize() has a similar effect and provides device
     independence.
 
-    In X11 you can set a font using its system
-    specific name with setRawName().
-
     Loading fonts can be expensive, especially on X11. QFont contains
     extensive optimizations to make the copying of QFont objects fast,
     and to cache the results of the slow window system functions it
@@ -1033,10 +1030,14 @@
 
     This enum contains the predefined font weights:
 
+    \value Thin 0
+    \value ExtraLight 12
     \value Light 25
     \value Normal 50
+    \value Medium 57
     \value DemiBold 63
     \value Bold 75
+    \value ExtraBold 81
     \value Black 87
 */
 
@@ -1063,7 +1064,7 @@
     \fn bool QFont::bold() const
 
     Returns \c true if weight() is a value greater than
-   \l{Weight}{QFont::Normal}; otherwise returns \c false.
+   \l{Weight}{QFont::Medium}; otherwise returns \c false.
 
     \sa weight(), setBold(), QFontInfo::bold()
 */
@@ -1567,8 +1568,11 @@
     return static_cast<QFont::Capitalization> (d->capital);
 }
 
-
+#if QT_DEPRECATED_SINCE(5, 5)
 /*!
+    \fn void QFont::setRawMode(bool enable)
+    \deprecated
+
     If \a enable is true, turns raw mode on; otherwise turns raw mode
     off. This function only has an effect under X11.
 
@@ -1580,20 +1584,14 @@
     return the values set in the QFont for all parameters, including
     the family name).
 
-    \warning Do not use raw mode unless you really, really need it! In
-    most (if not all) cases, setRawName() is a much better choice.
+    \warning Enabling raw mode has no effect since Qt 5.0.
 
-    \sa rawMode(), setRawName()
+    \sa rawMode()
 */
-void QFont::setRawMode(bool enable)
+void QFont::setRawMode(bool)
 {
-    if ((bool) d->rawMode == enable) return;
-
-    // might change behavior, thus destroy engine data
-    detach();
-
-    d->rawMode = enable;
 }
+#endif
 
 /*!
     Returns \c true if a window system font exactly matching the settings
@@ -1605,9 +1603,7 @@
 {
     QFontEngine *engine = d->engineForScript(QChar::Script_Common);
     Q_ASSERT(engine != 0);
-    return (d->rawMode
-            ? engine->type() != QFontEngine::Box
-            : d->request.exactMatch(engine->fontDef));
+    return d->request.exactMatch(engine->fontDef);
 }
 
 /*!
@@ -1615,8 +1611,7 @@
     false.
 
     Two QFonts are considered equal if their font attributes are
-    equal. If rawMode() is enabled for both fonts, only the family
-    fields are compared.
+    equal.
 
     \sa operator!=(), isCopyOf()
 */
@@ -1679,8 +1674,7 @@
     returns \c false.
 
     Two QFonts are considered to be different if their font attributes
-    are different. If rawMode() is enabled for both fonts, only the
-    family fields are compared.
+    are different.
 
     \sa operator==()
 */
@@ -1709,16 +1703,20 @@
     return d == f.d;
 }
 
+#if QT_DEPRECATED_SINCE(5, 5)
 /*!
+    \deprecated
+
     Returns \c true if raw mode is used for font name matching; otherwise
     returns \c false.
 
-    \sa setRawMode(), rawName()
+    \sa setRawMode()
 */
 bool QFont::rawMode() const
 {
-    return d->rawMode;
+    return false;
 }
+#endif
 
 /*!
     Returns a new QFont that has attributes copied from \a other that
@@ -1726,10 +1724,8 @@
 */
 QFont QFont::resolve(const QFont &other) const
 {
-    if (*this == other
-        && (resolve_mask == other.resolve_mask || resolve_mask == 0)
-        && d->dpi == other.d->dpi) {
-        QFont o = other;
+    if (resolve_mask == 0 || (resolve_mask == other.resolve_mask && *this == other)) {
+        QFont o(other);
         o.resolve_mask = resolve_mask;
         return o;
     }
@@ -1877,7 +1873,7 @@
     return ret;
 }
 
-
+#ifndef QT_NO_DATASTREAM
 /*  \internal
     Internal function. Converts boolean font settings to an unsigned
     8-bit number. Used for serialization etc.
@@ -1898,8 +1894,6 @@
         bits |= 0x08;
     // if (f.hintSetByUser)
     // bits |= 0x10;
-    if (f->rawMode)
-        bits |= 0x20;
     if (version >= QDataStream::Qt_4_0) {
         if (f->kerning)
             bits |= 0x10;
@@ -1920,8 +1914,6 @@
     return bits;
 }
 
-#ifndef QT_NO_DATASTREAM
-
 /*  \internal
     Internal function. Sets boolean font settings from an unsigned
     8-bit number. Used for serialization etc.
@@ -1935,7 +1927,6 @@
     f->strikeOut             = (bits & 0x04) != 0;
     f->request.fixedPitch    = (bits & 0x08) != 0;
     // f->hintSetByUser      = (bits & 0x10) != 0;
-    f->rawMode               = (bits & 0x20) != 0;
     if (version >= QDataStream::Qt_4_0)
         f->kerning               = (bits & 0x10) != 0;
     if ((bits & 0x80) != 0)
@@ -1982,7 +1973,7 @@
     If Qt's internal font database cannot resolve the raw name, the
     font becomes a raw font with \a name as its family.
 
-    \sa rawName(), setRawMode(), setFamily()
+    \sa rawName(), setFamily()
 */
 void QFont::setRawName(const QString &)
 {
@@ -2019,7 +2010,7 @@
         QString::number((int) underline()) + comma +
         QString::number((int) strikeOut()) + comma +
         QString::number((int)fixedPitch()) + comma +
-        QString::number((int)   rawMode());
+        QString::number((int)   false);
 }
 
 /*!
@@ -2063,7 +2054,6 @@
         setUnderline(l[5].toInt());
         setStrikeOut(l[6].toInt());
         setFixedPitch(l[7].toInt());
-        setRawMode(l[8].toInt());
     } else if (count == 10) {
         if (l[2].toInt() > 0)
             setPixelSize(l[2].toInt());
@@ -2073,7 +2063,6 @@
         setUnderline(l[6].toInt());
         setStrikeOut(l[7].toInt());
         setFixedPitch(l[8].toInt());
-        setRawMode(l[9].toInt());
     }
     if (count >= 9 && !d->request.fixedPitch) // assume 'false' fixedPitch equals default
         d->request.ignorePitch = true;
@@ -2163,7 +2152,7 @@
     happens. Please \l{bughowto.html}{report it as a bug} if
     it does, preferably with a list of the fonts you have installed.
 
-    \sa lastResortFamily(), rawName()
+    \sa lastResortFamily()
 */
 QString QFont::lastResortFont() const
 {
@@ -2622,7 +2611,10 @@
     return (QFont::StyleHint) engine->fontDef.styleHint;
 }
 
+#if QT_DEPRECATED_SINCE(5, 5)
 /*!
+    \deprecated
+
     Returns \c true if the font is a raw mode font; otherwise returns
     false.
 
@@ -2634,8 +2626,9 @@
 */
 bool QFontInfo::rawMode() const
 {
-    return d->rawMode;
+    return false;
 }
+#endif
 
 /*!
     Returns \c true if the matched window system font is exactly the same
@@ -2647,9 +2640,7 @@
 {
     QFontEngine *engine = d->engineForScript(QChar::Script_Common);
     Q_ASSERT(engine != 0);
-    return (d->rawMode
-            ? engine->type() != QFontEngine::Box
-            : d->request.exactMatch(engine->fontDef));
+    return d->request.exactMatch(engine->fontDef);
 }
 
 
diff -Nuar orig/qtbase/src/gui/text/qfontdatabase.cpp qtbase/src/gui/text/qfontdatabase.cpp
--- orig/qtbase/src/gui/text/qfontdatabase.cpp	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qfontdatabase.cpp	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -50,7 +50,6 @@
 #include <QtCore/qmath.h>
 
 #include <stdlib.h>
-#include <limits.h>
 #include <algorithm>
 
 
@@ -84,72 +83,95 @@
 {
     QString s = weightString.toLower();
 
+    // Order here is important. We want to match the common cases first, but we
+    // must also take care to acknowledge the cost of our tests.
+    //
+    // As a result, we test in two orders; the order of commonness, and the
+    // order of "expense".
+    //
+    // A simple string test is the cheapest, so let's do that first.
     // Test in decreasing order of commonness
-    if (s == QLatin1String("normal")
-        || s.compare(QCoreApplication::translate("QFontDatabase", "Normal"), Qt::CaseInsensitive) == 0)
+    if (s == QLatin1String("normal") || s == QLatin1String("regular"))
         return QFont::Normal;
-    if (s == QLatin1String("medium"))
-        return qt_mediumFontWeight;
-    if (s == QLatin1String("bold")
-        || s.compare(QCoreApplication::translate("QFontDatabase", "Bold"), Qt::CaseInsensitive) == 0)
+    if (s == QLatin1String("bold"))
         return QFont::Bold;
-    if (s == QLatin1String("demibold") || s == QLatin1String("demi bold")
-        || s.compare(QCoreApplication::translate("QFontDatabase", "Demi Bold"), Qt::CaseInsensitive) == 0)
+    if (s == QLatin1String("semibold") || s == QLatin1String("semi bold")
+            || s == QLatin1String("demibold") || s == QLatin1String("demi bold"))
         return QFont::DemiBold;
-    if (s == QLatin1String("black")
-        || s.compare(QCoreApplication::translate("QFontDatabase", "Black"), Qt::CaseInsensitive) == 0)
+    if (s == QLatin1String("medium"))
+        return QFont::Medium;
+    if (s == QLatin1String("black"))
         return QFont::Black;
     if (s == QLatin1String("light"))
         return QFont::Light;
     if (s == QLatin1String("thin"))
-        return qt_thinFontWeight;
-    if (s == QLatin1String("extralight"))
-        return qt_extralightFontWeight;
-
-    if (s.contains(QLatin1String("bold"))
-        || s.contains(QCoreApplication::translate("QFontDatabase", "Bold"), Qt::CaseInsensitive)) {
-        if (s.contains(QLatin1String("demi"))
-            || s.compare(QCoreApplication::translate("QFontDatabase", "Demi"), Qt::CaseInsensitive) == 0)
-            return (int) QFont::DemiBold;
-        return (int) QFont::Bold;
+        return QFont::Thin;
+    const QStringRef s2 = s.midRef(2);
+    if (s.startsWith(QLatin1String("ex")) || s.startsWith(QLatin1String("ul"))) {
+            if (s2 == QLatin1String("tralight") || s == QLatin1String("tra light"))
+                return QFont::ExtraLight;
+            if (s2 == QLatin1String("trabold") || s2 == QLatin1String("tra bold"))
+                return QFont::ExtraBold;
     }
 
-    if (s.contains(QLatin1String("light"))
-        || s.compare(QCoreApplication::translate("QFontDatabase", "Light"), Qt::CaseInsensitive) == 0)
-        return (int) QFont::Light;
-
-    if (s.contains(QLatin1String("black"))
-        || s.compare(QCoreApplication::translate("QFontDatabase", "Black"), Qt::CaseInsensitive) == 0)
-        return (int) QFont::Black;
-
-    return (int) QFont::Normal;
-}
-
-// convert 0 ~ 1000 integer to QFont::Weight
-QFont::Weight weightFromInteger(int weight)
-{
-    if (weight < 400)
+    // Next up, let's see if contains() matches: slightly more expensive, but
+    // still fast enough.
+    if (s.contains(QLatin1String("bold"))) {
+        if (s.contains(QLatin1String("demi")))
+            return QFont::DemiBold;
+        return QFont::Bold;
+    }
+    if (s.contains(QLatin1String("light")))
         return QFont::Light;
-    else if (weight < 600)
+    if (s.contains(QLatin1String("black")))
+        return QFont::Black;
+
+    // Now, we perform string translations & comparisons with those.
+    // These are (very) slow compared to simple string ops, so we do these last.
+    // As using translated values for such things is not very common, this should
+    // not be too bad.
+    if (s.compare(QCoreApplication::translate("QFontDatabase", "Normal", "The Normal or Regular font weight"), Qt::CaseInsensitive) == 0)
         return QFont::Normal;
-    else if (weight < 700)
-        return QFont::DemiBold;
-    else if (weight < 800)
+    const QString translatedBold = QCoreApplication::translate("QFontDatabase", "Bold").toLower();
+    if (s == translatedBold)
         return QFont::Bold;
-    else
+    if (s.compare(QCoreApplication::translate("QFontDatabase", "Demi Bold"), Qt::CaseInsensitive) == 0)
+        return QFont::DemiBold;
+    if (s.compare(QCoreApplication::translate("QFontDatabase", "Medium", "The Medium font weight"), Qt::CaseInsensitive) == 0)
+        return QFont::Medium;
+    if (s.compare(QCoreApplication::translate("QFontDatabase", "Black"), Qt::CaseInsensitive) == 0)
         return QFont::Black;
+    const QString translatedLight = QCoreApplication::translate("QFontDatabase", "Light").toLower();
+    if (s == translatedLight)
+        return QFont::Light;
+    if (s.compare(QCoreApplication::translate("QFontDatabase", "Thin"), Qt::CaseInsensitive) == 0)
+        return QFont::Thin;
+    if (s.compare(QCoreApplication::translate("QFontDatabase", "Extra Light"), Qt::CaseInsensitive) == 0)
+        return QFont::ExtraLight;
+    if (s.compare(QCoreApplication::translate("QFontDatabase", "Extra Bold"), Qt::CaseInsensitive) == 0)
+        return QFont::ExtraBold;
+
+    // And now the contains() checks for the translated strings.
+    //: The word for "Extra" as in "Extra Bold, Extra Thin" used as a pattern for string searches
+    const QString translatedExtra = QCoreApplication::translate("QFontDatabase", "Extra").toLower();
+    if (s.contains(translatedBold)) {
+        //: The word for "Demi" as in "Demi Bold" used as a pattern for string searches
+        QString translatedDemi = QCoreApplication::translate("QFontDatabase", "Demi").toLower();
+        if (s .contains(translatedDemi))
+            return QFont::DemiBold;
+        if (s.contains(translatedExtra))
+            return QFont::ExtraBold;
+        return QFont::Bold;
+    }
+
+    if (s.contains(translatedLight)) {
+        if (s.contains(translatedExtra))
+            return QFont::ExtraLight;
+        return QFont::Light;
+    }
+    return QFont::Normal;
 }
 
-struct QtFontEncoding
-{
-    signed int encoding : 16;
-
-    uint xpoint   : 16;
-    uint xres     : 8;
-    uint yres     : 8;
-    uint avgwidth : 16;
-    uchar pitch   : 8;
-};
 
 struct  QtFontSize
 {
@@ -221,12 +243,19 @@
 {
     weight = getFontWeight(styleString);
 
-    if (styleString.contains(QLatin1String("Italic"))
-        || styleString.contains(QCoreApplication::translate("QFontDatabase", "Italic")))
-        style = QFont::StyleItalic;
-    else if (styleString.contains(QLatin1String("Oblique"))
-             || styleString.contains(QCoreApplication::translate("QFontDatabase", "Oblique")))
-        style = QFont::StyleOblique;
+    if (!styleString.isEmpty()) {
+        // First the straightforward no-translation checks, these are fast.
+        if (styleString.contains(QLatin1String("Italic")))
+            style = QFont::StyleItalic;
+        else if (styleString.contains(QLatin1String("Oblique")))
+            style = QFont::StyleOblique;
+
+        // Then the translation checks. These aren't as fast.
+        else if (styleString.contains(QCoreApplication::translate("QFontDatabase", "Italic")))
+            style = QFont::StyleItalic;
+        else if (styleString.contains(QCoreApplication::translate("QFontDatabase", "Oblique")))
+            style = QFont::StyleOblique;
+    }
 }
 
 QtFontSize *QtFontStyle::pixelSize(unsigned short size, bool add)
@@ -317,7 +346,6 @@
         populated(false),
         fixedPitch(false),
         name(n), count(0), foundries(0)
-        , bogusWritingSystems(false)
         , askedForFallback(false)
     {
         memset(writingSystems, 0, sizeof(writingSystems));
@@ -336,7 +364,6 @@
     int count;
     QtFontFoundry **foundries;
 
-    bool bogusWritingSystems;
     QStringList fallbackFamilies;
     bool askedForFallback;
     unsigned char writingSystems[QFontDatabase::WritingSystemsCount];
@@ -382,7 +409,7 @@
         return;
 
     QGuiApplicationPrivate::platformIntegration()->fontDatabase()->populateFamily(name);
-    Q_ASSERT(populated);
+    Q_ASSERT_X(populated, Q_FUNC_INFO, qPrintable(name));
 }
 
 class QFontDatabasePrivate
@@ -428,8 +455,6 @@
     bool isApplicationFont(const QString &fileName);
 
     void invalidate();
-
-    QStringList fallbackFamilies;
 };
 
 void QFontDatabasePrivate::invalidate()
@@ -582,19 +607,13 @@
 
 struct QtFontDesc
 {
-    inline QtFontDesc() : family(0), foundry(0), style(0), size(0), encoding(0), familyIndex(-1) {}
+    inline QtFontDesc() : family(0), foundry(0), style(0), size(0) {}
     QtFontFamily *family;
     QtFontFoundry *foundry;
     QtFontStyle *style;
     QtFontSize *size;
-    QtFontEncoding *encoding;
-    int familyIndex;
 };
 
-static int match(int script, const QFontDef &request,
-                 const QString &family_name, const QString &foundry_name, int force_encoding_id,
-                 QtFontDesc *desc, const QList<int> &blacklisted);
-
 static void initFontDef(const QtFontDesc &desc, const QFontDef &request, QFontDef *fontDef, bool multi)
 {
     fontDef->family = desc.family->name;
@@ -624,18 +643,6 @@
     fontDef->ignorePitch   = false;
 }
 
-static void getEngineData(const QFontPrivate *d, const QFontDef &def)
-{
-    // look for the requested font in the engine data cache
-    d->engineData = QFontCache::instance()->findEngineData(def);
-    if (!d->engineData) {
-        // create a new one
-        d->engineData = new QFontEngineData;
-        QFontCache::instance()->insertEngineData(def, d->engineData);
-    }
-    d->engineData->ref.ref();
-}
-
 static QStringList familyList(const QFontDef &req)
 {
     // list of families to try
@@ -765,7 +772,7 @@
         }
         if (!contains) {
             i = retList.erase(i);
-            i--;
+            --i;
         }
     }
     return retList;
@@ -800,7 +807,7 @@
 static
 QFontEngine *loadSingleEngine(int script,
                               const QFontDef &request,
-                              QtFontFoundry *foundry,
+                              QtFontFamily *family, QtFontFoundry *foundry,
                               QtFontStyle *style, QtFontSize *size)
 {
     Q_UNUSED(foundry);
@@ -819,6 +826,24 @@
     QFontCache::Key key(def,script);
     QFontEngine *engine = QFontCache::instance()->findEngine(key);
     if (!engine) {
+        if (script != QChar::Script_Common) {
+            // fast path: check if engine was loaded for another script
+            key.script = QChar::Script_Common;
+            engine = QFontCache::instance()->findEngine(key);
+            key.script = script;
+            if (engine) {
+                Q_ASSERT(engine->type() != QFontEngine::Multi);
+                // Also check for OpenType tables when using complex scripts
+                if (Q_UNLIKELY(!engine->supportsScript(QChar::Script(script)))) {
+                    qWarning("  OpenType support missing for script %d", script);
+                    return 0;
+                }
+
+                QFontCache::instance()->insertEngine(key, engine);
+                return engine;
+            }
+        }
+
         // If the font data's native stretch matches the requested stretch we need to set stretch to 100
         // to avoid the fontengine synthesizing stretch. If they didn't match exactly we need to calculate
         // the new stretch factor. This only done if not matched by styleName.
@@ -838,6 +863,13 @@
             }
 
             QFontCache::instance()->insertEngine(key, engine);
+
+            if (!engine->symbol && script != QChar::Script_Common && (family->writingSystems[QFontDatabase::Latin] & QtFontFamily::Supported) != 0) {
+                // cache engine for Common script as well
+                key.script = QChar::Script_Common;
+                if (!QFontCache::instance()->findEngine(key))
+                    QFontCache::instance()->insertEngine(key, engine);
+            }
         }
     }
     return engine;
@@ -848,7 +880,7 @@
                         QtFontFamily *family, QtFontFoundry *foundry,
                         QtFontStyle *style, QtFontSize *size)
 {
-    QFontEngine *engine = loadSingleEngine(script, request, foundry, style, size);
+    QFontEngine *engine = loadSingleEngine(script, request, family, foundry, style, size);
     Q_ASSERT(!engine || engine->type() != QFontEngine::Multi);
     if (engine && !(request.styleStrategy & QFont::NoFontMerging) && !engine->symbol) {
         // make sure that the db has all fallback families
@@ -863,10 +895,8 @@
         }
 
         QStringList fallbacks = request.fallBackFamilies;
-        if (family && !family->fallbackFamilies.isEmpty())
+        if (family)
             fallbacks += family->fallbackFamilies;
-        else
-            fallbacks += privateDb()->fallbackFamilies;
 
         QPlatformFontDatabase *pfdb = QGuiApplicationPrivate::platformIntegration()->fontDatabase();
         QFontEngineMulti *pfMultiEngine = pfdb->fontEngineMulti(engine, QChar::Script(script));
@@ -935,16 +965,14 @@
 unsigned int bestFoundry(int script, unsigned int score, int styleStrategy,
                          const QtFontFamily *family, const QString &foundry_name,
                          QtFontStyle::Key styleKey, int pixelSize, char pitch,
-                         QtFontDesc *desc, int force_encoding_id, QString styleName = QString())
+                         QtFontDesc *desc, const QString &styleName = QString())
 {
-    Q_UNUSED(force_encoding_id);
     Q_UNUSED(script);
     Q_UNUSED(pitch);
 
     desc->foundry = 0;
     desc->style = 0;
     desc->size = 0;
-    desc->encoding = 0;
 
 
     FM_DEBUG("  REMARK: looking for best foundry for family '%s' [%d]", family->name.toLatin1().constData(), family->count);
@@ -1038,8 +1066,7 @@
         enum {
             PitchMismatch       = 0x4000,
             StyleMismatch       = 0x2000,
-            BitmapScaledPenalty = 0x1000,
-            EncodingMismatch    = 0x0002
+            BitmapScaledPenalty = 0x1000
         };
         if (pitch != '*') {
             if ((pitch == 'm' && !family->fixedPitch)
@@ -1082,10 +1109,9 @@
     Tries to find the best match for a given request and family/foundry
 */
 static int match(int script, const QFontDef &request,
-                 const QString &family_name, const QString &foundry_name, int force_encoding_id,
+                 const QString &family_name, const QString &foundry_name,
                  QtFontDesc *desc, const QList<int> &blacklistedFamilies)
 {
-    Q_UNUSED(force_encoding_id);
     int result = -1;
 
     QtFontStyle::Key styleKey;
@@ -1110,14 +1136,15 @@
     desc->foundry = 0;
     desc->style = 0;
     desc->size = 0;
-    desc->encoding = 0;
-    desc->familyIndex = -1;
 
     unsigned int score = ~0u;
 
     load(family_name, script);
 
-    const size_t writingSystem = std::find(scriptForWritingSystem, scriptForWritingSystem + QFontDatabase::WritingSystemsCount, script) - scriptForWritingSystem;
+    size_t writingSystem = std::find(scriptForWritingSystem, scriptForWritingSystem +
+            QFontDatabase::WritingSystemsCount, script) - scriptForWritingSystem;
+    if (writingSystem >= QFontDatabase::WritingSystemsCount)
+        writingSystem = QFontDatabase::Any;
 
     QFontDatabasePrivate *db = privateDb();
     for (int x = 0; x < db->count; ++x) {
@@ -1125,18 +1152,14 @@
             continue;
         QtFontDesc test;
         test.family = db->families[x];
-        test.familyIndex = x;
 
         if (!matchFamilyName(family_name, test.family))
             continue;
 
         test.family->ensurePopulated();
 
-        if (family_name.isEmpty())
-            load(test.family->name, script);
-
         // Check if family is supported in the script we want
-        if (script != QChar::Script_Common && !(test.family->writingSystems[writingSystem] & QtFontFamily::Supported))
+        if (writingSystem != QFontDatabase::Any && !(test.family->writingSystems[writingSystem] & QtFontFamily::Supported))
             continue;
 
         // as we know the script is supported, we can be sure
@@ -1144,13 +1167,13 @@
         unsigned int newscore =
             bestFoundry(script, score, request.styleStrategy,
                         test.family, foundry_name, styleKey, request.pixelSize, pitch,
-                        &test, force_encoding_id, request.styleName);
-        if (test.foundry == 0) {
+                        &test, request.styleName);
+        if (test.foundry == 0 && !foundry_name.isEmpty()) {
             // the specific foundry was not found, so look for
             // any foundry matching our requirements
             newscore = bestFoundry(script, score, request.styleStrategy, test.family,
                                    QString(), styleKey, request.pixelSize,
-                                   pitch, &test, force_encoding_id, request.styleName);
+                                   pitch, &test, request.styleName);
         }
 
         if (newscore < score) {
@@ -1510,6 +1533,9 @@
 bool QFontDatabase::isBitmapScalable(const QString &family,
                                       const QString &style) const
 {
+    if (QGuiApplicationPrivate::platformIntegration()->fontDatabase()->fontsAlwaysScalable())
+        return true;
+
     bool bitmapScalable = false;
     QString familyName, foundryName;
     parseFontName(family, foundryName, familyName);
@@ -1518,11 +1544,10 @@
 
     QT_PREPEND_NAMESPACE(load)(familyName);
 
-    QtFontStyle::Key styleKey(style);
-
     QtFontFamily *f = d->family(familyName);
     if (!f) return bitmapScalable;
 
+    QtFontStyle::Key styleKey(style);
     for (int j = 0; j < f->count; j++) {
         QtFontFoundry *foundry = f->foundries[j];
         if (foundryName.isEmpty() || foundry->name.compare(foundryName, Qt::CaseInsensitive) == 0) {
@@ -1551,6 +1576,9 @@
 */
 bool QFontDatabase::isSmoothlyScalable(const QString &family, const QString &style) const
 {
+    if (QGuiApplicationPrivate::platformIntegration()->fontDatabase()->fontsAlwaysScalable())
+        return true;
+
     bool smoothScalable = false;
     QString familyName, foundryName;
     parseFontName(family, foundryName, familyName);
@@ -1559,11 +1587,19 @@
 
     QT_PREPEND_NAMESPACE(load)(familyName);
 
-    QtFontStyle::Key styleKey(style);
-
     QtFontFamily *f = d->family(familyName);
+    if (!f) {
+        for (int i = 0; i < d->count; i++) {
+            if (d->families[i]->matchesFamilyName(familyName)) {
+                f = d->families[i];
+                f->ensurePopulated();
+                break;
+            }
+        }
+    }
     if (!f) return smoothScalable;
 
+    QtFontStyle::Key styleKey(style);
     for (int j = 0; j < f->count; j++) {
         QtFontFoundry *foundry = f->foundries[j];
         if (foundryName.isEmpty() || foundry->name.compare(foundryName, Qt::CaseInsensitive) == 0) {
@@ -1616,8 +1652,6 @@
 
     QT_PREPEND_NAMESPACE(load)(familyName);
 
-    QtFontStyle::Key styleKey(styleName);
-
     QList<int> sizes;
 
     QtFontFamily *fam = d->family(familyName);
@@ -1626,6 +1660,7 @@
 
     const int dpi = qt_defaultDpiY(); // embedded
 
+    QtFontStyle::Key styleKey(styleName);
     for (int j = 0; j < fam->count; j++) {
         QtFontFoundry *foundry = fam->foundries[j];
         if (foundryName.isEmpty() || foundry->name.compare(foundryName, Qt::CaseInsensitive) == 0) {
@@ -1639,7 +1674,7 @@
             for (int l = 0; l < style->count; l++) {
                 const QtFontSize *size = style->pixelSizes + l;
 
-                if (size->pixelSize != 0 && size->pixelSize != USHRT_MAX) {
+                if (size->pixelSize != 0 && size->pixelSize != SMOOTH_SCALABLE) {
                     const uint pointSize = qRound(size->pixelSize * 72.0 / dpi);
                     if (! sizes.contains(pointSize))
                         sizes.append(pointSize);
@@ -1719,8 +1754,6 @@
 
     QT_PREPEND_NAMESPACE(load)(familyName);
 
-    QtFontStyle::Key styleKey(styleName);
-
     QList<int> sizes;
 
     QtFontFamily *fam = d->family(familyName);
@@ -1729,6 +1762,7 @@
 
     const int dpi = qt_defaultDpiY(); // embedded
 
+    QtFontStyle::Key styleKey(styleName);
     for (int j = 0; j < fam->count; j++) {
         QtFontFoundry *foundry = fam->foundries[j];
         if (foundryName.isEmpty() || foundry->name.compare(foundryName, Qt::CaseInsensitive) == 0) {
@@ -1742,7 +1776,7 @@
             for (int l = 0; l < style->count; l++) {
                 const QtFontSize *size = style->pixelSizes + l;
 
-                if (size->pixelSize != 0 && size->pixelSize != USHRT_MAX) {
+                if (size->pixelSize != 0 && size->pixelSize != SMOOTH_SCALABLE) {
                     const uint pointSize = qRound(size->pixelSize * 72.0 / dpi);
                     if (! sizes.contains(pointSize))
                         sizes.append(pointSize);
@@ -1885,6 +1919,24 @@
 
 
 /*!
+    \since 5.5
+
+    Returns \c true if and only if the \a family font family is private.
+
+    This happens, for instance, on OS X and iOS, where the system UI fonts are not
+    accessible to the user. For completeness, QFontDatabase::families() returns all
+    font families, including the private ones. You should use this function if you
+    are developing a font selection control in order to keep private fonts hidden.
+
+    \sa families()
+*/
+bool QFontDatabase::isPrivateFamily(const QString &family) const
+{
+    return QGuiApplicationPrivate::platformIntegration()->fontDatabase()->isPrivateFontFamily(family);
+}
+
+
+/*!
     Returns the names the \a writingSystem (e.g. for displaying to the
     user in a dialog).
 */
@@ -2459,8 +2511,6 @@
 {
     QMutexLocker locker(fontDatabaseMutex());
 
-    const int force_encoding_id = -1;
-
     if (!privateDb()->count)
         initializeDb();
 
@@ -2483,7 +2533,7 @@
 
     QtFontDesc desc;
     QList<int> blackListed;
-    int index = match(script, request, family_name, foundry_name, force_encoding_id, &desc, blackListed);
+    int index = match(script, request, family_name, foundry_name, &desc, blackListed);
     if (index >= 0) {
         engine = loadEngine(script, request, desc.family, desc.foundry, desc.style, desc.size);
         if (!engine)
@@ -2526,7 +2576,7 @@
                 if (!engine) {
                     QtFontDesc desc;
                     do {
-                        index = match(script, def, def.family, QLatin1String(""), 0, &desc, blackListed);
+                        index = match(script, def, def.family, QLatin1String(""), &desc, blackListed);
                         if (index >= 0) {
                             QFontDef loadDef = def;
                             if (loadDef.family.isEmpty())
@@ -2562,7 +2612,7 @@
     QFontDef req = d->request;
 
     if (req.pixelSize == -1) {
-        req.pixelSize = floor(((req.pointSize * d->dpi) / 72) * 100 + 0.5) / 100;
+        req.pixelSize = std::floor(((req.pointSize * d->dpi) / 72) * 100 + 0.5) / 100;
         req.pixelSize = qRound(req.pixelSize);
     }
     if (req.pointSize < 0)
@@ -2572,19 +2622,27 @@
     if (req.stretch == 0)
         req.stretch = 100;
 
+    if (!d->engineData) {
+        // look for the requested font in the engine data cache
+        d->engineData = QFontCache::instance()->findEngineData(req);
+        if (!d->engineData) {
+            // create a new one
+            d->engineData = new QFontEngineData;
+            QFontCache::instance()->insertEngineData(req, d->engineData);
+        }
+        d->engineData->ref.ref();
+    }
+
+    // the cached engineData could have already loaded the engine we want
+    if (d->engineData->engines[script])
+        return;
+
     // Until we specifically asked not to, try looking for Multi font engine
     // first, the last '1' indicates that we want Multi font engine instead
     // of single ones
     bool multi = !(req.styleStrategy & QFont::NoFontMerging);
     QFontCache::Key key(req, script, multi ? 1 : 0);
 
-    if (!d->engineData)
-        getEngineData(d, req);
-
-    // the cached engineData could have already loaded the engine we want
-    if (d->engineData->engines[script])
-        return;
-
     QFontEngine *fe = QFontCache::instance()->findEngine(key);
 
     // list of families to try
diff -Nuar orig/qtbase/src/gui/text/qfontdatabase.h qtbase/src/gui/text/qfontdatabase.h
--- orig/qtbase/src/gui/text/qfontdatabase.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qfontdatabase.h	2015-05-11 16:21:27.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -51,8 +51,7 @@
 class Q_GUI_EXPORT QFontDatabase
 {
     Q_GADGET
-    Q_ENUMS(WritingSystem)
-    Q_ENUMS(SystemFont)
+    Q_ENUMS(WritingSystem SystemFont)
 public:
     // do not re-order or delete entries from this enum without updating the
     // QPF2 format and makeqpf!!
@@ -99,12 +98,15 @@
         WritingSystemsCount
     };
 
+    //Q_ENUM(WritingSystem)
+
     enum SystemFont {
         GeneralFont,
         FixedFont,
         TitleFont,
         SmallestReadableFont
     };
+    //Q_ENUM(SystemFont)
 
     static QList<int> standardSizes();
 
@@ -132,6 +134,7 @@
     int weight(const QString &family, const QString &style) const;
 
     bool hasFamily(const QString &family) const;
+    bool isPrivateFamily(const QString &family) const;
 
     static QString writingSystemName(WritingSystem writingSystem);
     static QString writingSystemSample(WritingSystem writingSystem);
@@ -159,7 +162,7 @@
     friend class QFontPrivate;
     friend class QFontDialog;
     friend class QFontDialogPrivate;
-    friend class QFontEngineMultiBasicImpl;
+    friend class QFontEngineMulti;
 
     QFontDatabasePrivate *d;
 };
diff -Nuar orig/qtbase/src/gui/text/qfontengine.cpp qtbase/src/gui/text/qfontengine.cpp
--- orig/qtbase/src/gui/text/qfontengine.cpp	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qfontengine.cpp	2015-05-11 13:48:40.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -790,12 +790,11 @@
     QImage alphaMask = alphaMapForGlyph(glyph, t);
     QImage rgbMask(alphaMask.width(), alphaMask.height(), QImage::Format_RGB32);
 
-    QVector<QRgb> colorTable = alphaMask.colorTable();
     for (int y=0; y<alphaMask.height(); ++y) {
         uint *dst = (uint *) rgbMask.scanLine(y);
         uchar *src = (uchar *) alphaMask.scanLine(y);
         for (int x=0; x<alphaMask.width(); ++x) {
-            int val = qAlpha(colorTable.at(src[x]));
+            int val = src[x];
             dst[x] = qRgb(val, val, val);
         }
     }
@@ -876,20 +875,16 @@
     p.drawPath(path);
     p.end();
 
-    QImage indexed(im.width(), im.height(), QImage::Format_Indexed8);
-    QVector<QRgb> colors(256);
-    for (int i=0; i<256; ++i)
-        colors[i] = qRgba(0, 0, 0, i);
-    indexed.setColorTable(colors);
+    QImage alphaMap(im.width(), im.height(), QImage::Format_Indexed8);
 
     for (int y=0; y<im.height(); ++y) {
-        uchar *dst = (uchar *) indexed.scanLine(y);
+        uchar *dst = (uchar *) alphaMap.scanLine(y);
         uint *src = (uint *) im.scanLine(y);
         for (int x=0; x<im.width(); ++x)
             dst[x] = qAlpha(src[x]);
     }
 
-    return indexed;
+    return alphaMap;
 }
 
 void QFontEngine::removeGlyphFromCache(glyph_t)
@@ -1541,13 +1536,9 @@
 QImage QFontEngineBox::alphaMapForGlyph(glyph_t)
 {
     QImage image(_size, _size, QImage::Format_Indexed8);
-    QVector<QRgb> colors(256);
-    for (int i=0; i<256; ++i)
-        colors[i] = qRgba(0, 0, 0, i);
-    image.setColorTable(colors);
     image.fill(0);
 
-    // can't use qpainter for index8; so use setPixel to draw our rectangle.
+    // FIXME: use qpainter
     for (int i=2; i <= _size-3; ++i) {
         image.setPixel(i, 2, 255);
         image.setPixel(i, _size-3, 255);
@@ -1568,34 +1559,109 @@
 static inline glyph_t stripped(glyph_t glyph)
 { return glyph & 0x00ffffff; }
 
-QFontEngineMulti::QFontEngineMulti(int engineCount)
-    : QFontEngine(Multi)
+QFontEngineMulti::QFontEngineMulti(QFontEngine *engine, int script, const QStringList &fallbackFamilies)
+    : QFontEngine(Multi),
+      m_fallbackFamilies(fallbackFamilies),
+      m_script(script),
+      m_fallbackFamiliesQueried(!m_fallbackFamilies.isEmpty())
 {
-    engines.fill(0, engineCount);
-    cache_cost = 0;
+    Q_ASSERT(engine && engine->type() != QFontEngine::Multi);
+
+    if (m_fallbackFamilies.isEmpty()) {
+        // defer obtaining the fallback families until loadEngine(1)
+        m_fallbackFamilies << QString();
+    }
+
+    m_engines.resize(m_fallbackFamilies.size() + 1);
+
+    engine->ref.ref();
+    m_engines[0] = engine;
+
+    fontDef = engine->fontDef;
+    cache_cost = engine->cache_cost;
 }
 
 QFontEngineMulti::~QFontEngineMulti()
 {
-    for (int i = 0; i < engines.size(); ++i) {
-        QFontEngine *fontEngine = engines.at(i);
+    for (int i = 0; i < m_engines.size(); ++i) {
+        QFontEngine *fontEngine = m_engines.at(i);
         if (fontEngine && !fontEngine->ref.deref())
             delete fontEngine;
     }
 }
 
+void QFontEngineMulti::ensureFallbackFamiliesQueried()
+{
+    if (QPlatformIntegration *integration = QGuiApplicationPrivate::platformIntegration()) {
+        const QStringList fallbackFamilies = integration->fontDatabase()->fallbacksForFamily(fontDef.family,
+                                                                                             QFont::Style(fontDef.style),
+                                                                                             QFont::AnyStyle,
+                                                                                             QChar::Script(m_script));
+        setFallbackFamiliesList(fallbackFamilies);
+    }
+}
+
+void QFontEngineMulti::setFallbackFamiliesList(const QStringList &fallbackFamilies)
+{
+    Q_ASSERT(!m_fallbackFamiliesQueried);
+
+    m_fallbackFamilies = fallbackFamilies;
+    if (m_fallbackFamilies.isEmpty()) {
+        // turns out we lied about having any fallback at all
+        Q_ASSERT(m_engines.size() == 2); // see c-tor for details
+        QFontEngine *engine = m_engines.at(0);
+        engine->ref.ref();
+        m_engines[1] = engine;
+        m_fallbackFamilies << fontDef.family;
+    } else {
+        m_engines.resize(m_fallbackFamilies.size() + 1);
+    }
+
+    m_fallbackFamiliesQueried = true;
+}
+
+void QFontEngineMulti::ensureEngineAt(int at)
+{
+    if (!m_fallbackFamiliesQueried)
+        ensureFallbackFamiliesQueried();
+    Q_ASSERT(at < m_engines.size());
+    if (!m_engines.at(at)) {
+        QFontEngine *engine = loadEngine(at);
+        if (!engine)
+            engine = new QFontEngineBox(fontDef.pixelSize);
+        Q_ASSERT(engine && engine->type() != QFontEngine::Multi);
+        engine->ref.ref();
+        m_engines[at] = engine;
+    }
+}
+
+QFontEngine *QFontEngineMulti::loadEngine(int at)
+{
+    QFontDef request(fontDef);
+    request.styleStrategy |= QFont::NoFontMerging;
+    request.family = fallbackFamilyAt(at - 1);
+
+    if (QFontEngine *engine = QFontDatabase::findFont(m_script, /*fontprivate = */0, request, /*multi = */false)) {
+        engine->fontDef = request;
+        return engine;
+    }
+
+    return 0;
+}
+
 glyph_t QFontEngineMulti::glyphIndex(uint ucs4) const
 {
     glyph_t glyph = engine(0)->glyphIndex(ucs4);
     if (glyph == 0 && ucs4 != QChar::LineSeparator) {
-        const_cast<QFontEngineMulti *>(this)->ensureFallbackFamiliesQueried();
-        for (int x = 1, n = qMin(engines.size(), 256); x < n; ++x) {
-            QFontEngine *engine = engines.at(x);
+        if (!m_fallbackFamiliesQueried)
+            const_cast<QFontEngineMulti *>(this)->ensureFallbackFamiliesQueried();
+        for (int x = 1, n = qMin(m_engines.size(), 256); x < n; ++x) {
+            QFontEngine *engine = m_engines.at(x);
             if (!engine) {
                 if (!shouldLoadFontEngineForCharacter(x, ucs4))
                     continue;
-                const_cast<QFontEngineMulti *>(this)->loadEngine(x);
-                engine = engines.at(x);
+                const_cast<QFontEngineMulti *>(this)->ensureEngineAt(x);
+                engine = m_engines.at(x);
             }
             Q_ASSERT(engine != 0);
             if (engine->type() == Box)
@@ -1620,20 +1686,22 @@
     if (!engine(0)->stringToCMap(str, len, glyphs, nglyphs, flags))
         return false;
 
-    const_cast<QFontEngineMulti *>(this)->ensureFallbackFamiliesQueried();
     int glyph_pos = 0;
     QStringIterator it(str, str + len);
     while (it.hasNext()) {
         const uint ucs4 = it.peekNext();
         if (glyphs->glyphs[glyph_pos] == 0 && ucs4 != QChar::LineSeparator) {
-            for (int x = 1, n = qMin(engines.size(), 256); x < n; ++x) {
-                if (engines.at(x) == 0 && !shouldLoadFontEngineForCharacter(x, ucs4))
-                    continue;
-
-                QFontEngine *engine = engines.at(x);
+            if (!m_fallbackFamiliesQueried)
+                const_cast<QFontEngineMulti *>(this)->ensureFallbackFamiliesQueried();
+            for (int x = 1, n = qMin(m_engines.size(), 256); x < n; ++x) {
+                QFontEngine *engine = m_engines.at(x);
                 if (!engine) {
-                    const_cast<QFontEngineMulti *>(this)->loadEngine(x);
-                    engine = engines.at(x);
+                    if (!shouldLoadFontEngineForCharacter(x, ucs4))
+                        continue;
+                    const_cast<QFontEngineMulti *>(this)->ensureEngineAt(x);
+                    engine = m_engines.at(x);
+                    if (!engine)
+                        continue;
                 }
                 Q_ASSERT(engine != 0);
                 if (engine->type() == Box)
@@ -1888,7 +1956,6 @@
 glyph_metrics_t QFontEngineMulti::boundingBox(glyph_t glyph)
 {
     const int which = highByte(glyph);
-    Q_ASSERT(which < engines.size());
     return engine(which)->boundingBox(stripped(glyph));
 }
 
@@ -1967,111 +2034,34 @@
 QImage QFontEngineMulti::alphaMapForGlyph(glyph_t glyph)
 {
     const int which = highByte(glyph);
-    Q_ASSERT(which < engines.size());
     return engine(which)->alphaMapForGlyph(stripped(glyph));
 }
 
 QImage QFontEngineMulti::alphaMapForGlyph(glyph_t glyph, QFixed subPixelPosition)
 {
     const int which = highByte(glyph);
-    Q_ASSERT(which < engines.size());
     return engine(which)->alphaMapForGlyph(stripped(glyph), subPixelPosition);
 }
 
 QImage QFontEngineMulti::alphaMapForGlyph(glyph_t glyph, const QTransform &t)
 {
     const int which = highByte(glyph);
-    Q_ASSERT(which < engines.size());
     return engine(which)->alphaMapForGlyph(stripped(glyph), t);
 }
 
 QImage QFontEngineMulti::alphaMapForGlyph(glyph_t glyph, QFixed subPixelPosition, const QTransform &t)
 {
     const int which = highByte(glyph);
-    Q_ASSERT(which < engines.size());
     return engine(which)->alphaMapForGlyph(stripped(glyph), subPixelPosition, t);
 }
 
 QImage QFontEngineMulti::alphaRGBMapForGlyph(glyph_t glyph, QFixed subPixelPosition, const QTransform &t)
 {
     const int which = highByte(glyph);
-    Q_ASSERT(which < engines.size());
     return engine(which)->alphaRGBMapForGlyph(stripped(glyph), subPixelPosition, t);
 }
 
 /*
-    Creates a new multi engine.
-
-    This function takes ownership of the QFontEngine, increasing it's refcount.
-*/
-QFontEngineMultiBasicImpl::QFontEngineMultiBasicImpl(QFontEngine *fe, int _script, const QStringList &fallbacks)
-    : QFontEngineMulti(fallbacks.size() + 1),
-      fallbackFamilies(fallbacks), script(_script)
-    , fallbacksQueried(true)
-{
-    init(fe);
-}
-
-QFontEngineMultiBasicImpl::QFontEngineMultiBasicImpl(QFontEngine *fe, int _script)
-    : QFontEngineMulti(2)
-    , script(_script)
-    , fallbacksQueried(false)
-{
-    fallbackFamilies << QString();
-    init(fe);
-}
-
-void QFontEngineMultiBasicImpl::init(QFontEngine *fe)
-{
-    Q_ASSERT(fe && fe->type() != QFontEngine::Multi);
-    engines[0] = fe;
-    fe->ref.ref();
-    fontDef = engines[0]->fontDef;
-    cache_cost = fe->cache_cost;
-}
-
-void QFontEngineMultiBasicImpl::loadEngine(int at)
-{
-    ensureFallbackFamiliesQueried();
-    Q_ASSERT(at < engines.size());
-    Q_ASSERT(engines.at(at) == 0);
-    QFontDef request = fontDef;
-    request.styleStrategy |= QFont::NoFontMerging;
-    request.family = fallbackFamilies.at(at-1);
-    engines[at] = QFontDatabase::findFont(script,
-                                          /*fontprivate = */0,
-                                          request, /*multi = */false);
-    Q_ASSERT(engines[at]);
-    engines[at]->ref.ref();
-    engines[at]->fontDef = request;
-}
-void QFontEngineMultiBasicImpl::ensureFallbackFamiliesQueried()
-{
-    if (fallbacksQueried)
-        return;
-    QStringList fallbacks = QGuiApplicationPrivate::instance()->platformIntegration()->fontDatabase()->fallbacksForFamily(engine(0)->fontDef.family, QFont::Style(engine(0)->fontDef.style)
-                                                                                                                          , QFont::AnyStyle, QChar::Script(script));
-    setFallbackFamiliesList(fallbacks);
-}
-
-void QFontEngineMultiBasicImpl::setFallbackFamiliesList(const QStringList &fallbacks)
-{
-    // Original FontEngine to restore after the fill.
-    QFontEngine *fe = engines[0];
-    fallbackFamilies = fallbacks;
-    if (!fallbackFamilies.isEmpty()) {
-        engines.fill(0, fallbackFamilies.size() + 1);
-        engines[0] = fe;
-    } else {
-        // Turns out we lied about having any fallback at all.
-        fallbackFamilies << fe->fontDef.family;
-        engines[1] = fe;
-        fe->ref.ref();
-    }
-    fallbacksQueried = true;
-}
-
-/*
   This is used indirectly by Qt WebKit when using QTextLayout::setRawFont
 
   The purpose of this is to provide the necessary font fallbacks when drawing complex
@@ -2079,7 +2069,7 @@
   the same raw font over and over again, we want to cache the corresponding multi font engine
   as it may contain fallback font engines already.
 */
-QFontEngine* QFontEngineMultiBasicImpl::createMultiFontEngine(QFontEngine *fe, int script)
+QFontEngine *QFontEngineMulti::createMultiFontEngine(QFontEngine *fe, int script)
 {
     QFontEngine *engine = 0;
     QFontCache::Key key(fe->fontDef, script, /*multi = */true);
@@ -2100,7 +2090,7 @@
             fc->updateHitCountAndTimeStamp(it.value());
             break;
         }
-        it++;
+        ++it;
     }
     if (!engine) {
         engine = QGuiApplicationPrivate::instance()->platformIntegration()->fontDatabase()->fontEngineMulti(fe, QChar::Script(script));
diff -Nuar orig/qtbase/src/gui/text/qfontengine_ft.cpp qtbase/src/gui/text/qfontengine_ft.cpp
--- orig/qtbase/src/gui/text/qfontengine_ft.cpp	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qfontengine_ft.cpp	2015-05-11 14:10:43.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -43,6 +43,7 @@
 
 #include "qfile.h"
 #include "qfileinfo.h"
+#include <qscopedvaluerollback.h>
 #include "qthreadstorage.h"
 #include <qmath.h>
 
@@ -76,34 +77,6 @@
 
 QT_BEGIN_NAMESPACE
 
-/*
- * Freetype 2.1.7 and earlier used width/height
- * for matching sizes in the BDF and PCF loaders.
- * This has been fixed for 2.1.8.
- */
-#if (FREETYPE_MAJOR*10000+FREETYPE_MINOR*100+FREETYPE_PATCH) >= 20105
-#define X_SIZE(face,i) ((face)->available_sizes[i].x_ppem)
-#define Y_SIZE(face,i) ((face)->available_sizes[i].y_ppem)
-#else
-#define X_SIZE(face,i) ((face)->available_sizes[i].width << 6)
-#define Y_SIZE(face,i) ((face)->available_sizes[i].height << 6)
-#endif
-
-/* FreeType 2.1.10 starts to provide FT_GlyphSlot_Embolden */
-#if (FREETYPE_MAJOR*10000+FREETYPE_MINOR*100+FREETYPE_PATCH) >= 20110
-#define Q_FT_GLYPHSLOT_EMBOLDEN(slot)   FT_GlyphSlot_Embolden(slot)
-#else
-#define Q_FT_GLYPHSLOT_EMBOLDEN(slot)
-#endif
-
-/* FreeType 2.1.10 starts to provide FT_GlyphSlot_Oblique */
-#if (FREETYPE_MAJOR*10000+FREETYPE_MINOR*100+FREETYPE_PATCH) >= 20110
-#define Q_HAS_FT_GLYPHSLOT_OBLIQUE
-#define Q_FT_GLYPHSLOT_OBLIQUE(slot)   FT_GlyphSlot_Oblique(slot)
-#else
-#define Q_FT_GLYPHSLOT_OBLIQUE(slot)
-#endif
-
 #define FLOOR(x)    ((x) & -64)
 #define CEIL(x)     (((x)+63) & -64)
 #define TRUNC(x)    ((x) >> 6)
@@ -297,7 +270,7 @@
         }
 
         if (!FT_IS_SCALABLE(newFreetype->face) && newFreetype->face->num_fixed_sizes == 1)
-            FT_Set_Char_Size (face, X_SIZE(newFreetype->face, 0), Y_SIZE(newFreetype->face, 0), 0, 0);
+            FT_Set_Char_Size(face, newFreetype->face->available_sizes[0].x_ppem, newFreetype->face->available_sizes[0].y_ppem, 0, 0);
 
         FT_Set_Charmap(newFreetype->face, newFreetype->unicode_map);
         QT_TRY {
@@ -357,18 +330,18 @@
     if (!(face->face_flags & FT_FACE_FLAG_SCALABLE)) {
         int best = 0;
         for (int i = 1; i < face->num_fixed_sizes; i++) {
-            if (qAbs(*ysize -  Y_SIZE(face,i)) <
-                qAbs (*ysize - Y_SIZE(face, best)) ||
-                (qAbs (*ysize - Y_SIZE(face, i)) ==
-                 qAbs (*ysize - Y_SIZE(face, best)) &&
-                 qAbs (*xsize - X_SIZE(face, i)) <
-                 qAbs (*xsize - X_SIZE(face, best)))) {
+            if (qAbs(*ysize -  face->available_sizes[i].y_ppem) <
+                qAbs(*ysize - face->available_sizes[best].y_ppem) ||
+                (qAbs(*ysize - face->available_sizes[i].y_ppem) ==
+                 qAbs(*ysize - face->available_sizes[best].y_ppem) &&
+                 qAbs(*xsize - face->available_sizes[i].x_ppem) <
+                 qAbs(*xsize - face->available_sizes[best].x_ppem))) {
                 best = i;
             }
         }
-        if (FT_Set_Char_Size (face, X_SIZE(face, best), Y_SIZE(face, best), 0, 0) == 0) {
-            *xsize = X_SIZE(face, best);
-            *ysize = Y_SIZE(face, best);
+        if (FT_Set_Char_Size(face, face->available_sizes[best].x_ppem, face->available_sizes[best].y_ppem, 0, 0) == 0) {
+            *xsize = face->available_sizes[best].x_ppem;
+            *ysize = face->available_sizes[best].y_ppem;
         } else {
             int err = 1;
             if (!(face->face_flags & FT_FACE_FLAG_SCALABLE) && ysize == 0 && face->num_fixed_sizes >= 1) {
@@ -538,7 +511,7 @@
 
 extern void qt_addBitmapToPath(qreal x0, qreal y0, const uchar *image_data, int bpl, int w, int h, QPainterPath *path);
 
-void QFreetypeFace::addBitmapToPath(FT_GlyphSlot slot, const QFixedPoint &point, QPainterPath *path, bool)
+void QFreetypeFace::addBitmapToPath(FT_GlyphSlot slot, const QFixedPoint &point, QPainterPath *path)
 {
     if (slot->format != FT_GLYPH_FORMAT_BITMAP
         || slot->bitmap.pixel_mode != FT_PIXEL_MODE_MONO)
@@ -719,14 +692,8 @@
 
     if (FT_IS_SCALABLE(face)) {
         bool fake_oblique = (fontDef.style != QFont::StyleNormal) && !(face->style_flags & FT_STYLE_FLAG_ITALIC);
-        if (fake_oblique) {
-#if !defined(Q_HAS_FT_GLYPHSLOT_OBLIQUE)
-            matrix.xy = 0x10000*3/10;
-            transform = true;
-#else
+        if (fake_oblique)
             obliquen = true;
-#endif
-        }
         FT_Set_Transform(face, &matrix, 0);
         freetype->matrix = matrix;
         // fake bold
@@ -758,7 +725,7 @@
     */
     if (FT_IS_SCALABLE(face)) {
         for (int i = 0; i < face->num_fixed_sizes; ++i) {
-            if (xsize == X_SIZE(face, i) && ysize == Y_SIZE(face, i)) {
+            if (xsize == face->available_sizes[i].x_ppem && ysize == face->available_sizes[i].y_ppem) {
                 face->face_flags &= ~FT_FACE_FLAG_SCALABLE;
 
                 FT_Select_Size(face, i);
@@ -834,6 +801,17 @@
     return load_flags;
 }
 
+static inline bool areMetricsTooLarge(const QFontEngineFT::GlyphInfo &info)
+{
+    // false if exceeds QFontEngineFT::Glyph metrics
+    return (short)(info.linearAdvance) != info.linearAdvance
+            || (signed char)(info.xOff) != info.xOff
+            || (uchar)(info.width) != info.width
+            || (uchar)(info.height) != info.height
+            || (signed char)(info.x) != info.x
+            || (signed char)(info.y) != info.y;
+}
+
 QFontEngineFT::Glyph *QFontEngineFT::loadGlyph(QGlyphSet *set, uint glyph,
                                                QFixed subPixelPosition,
                                                GlyphFormat format,
@@ -841,13 +819,9 @@
 {
 //     Q_ASSERT(freetype->lock == 1);
 
-    if (format == Format_None) {
-        if (defaultFormat != Format_None) {
-            format = defaultFormat;
-        } else {
-            format = Format_Mono;
-        }
-    }
+    if (format == Format_None)
+        format = defaultFormat != Format_None ? defaultFormat : Format_Mono;
+    Q_ASSERT(format != Format_None);
 
     Glyph *g = set ? set->getGlyph(glyph, subPixelPosition) : 0;
     if (g && g->format == format && (fetchMetricsOnly || g->data))
@@ -856,32 +830,28 @@
     if (!g && set && set->isGlyphMissing(glyph))
         return &emptyGlyph;
 
-    QFontEngineFT::GlyphInfo info;
 
-    Q_ASSERT(format != Format_None);
+    FT_Face face = freetype->face;
+
+    FT_Matrix matrix = freetype->matrix;
+
+    FT_Vector v;
+    v.x = format == Format_Mono ? 0 : FT_Pos(subPixelPosition.value());
+    v.y = 0;
+    FT_Set_Transform(face, &matrix, &v);
+
     bool hsubpixel = false;
     int vfactor = 1;
     int load_flags = loadFlags(set, format, 0, hsubpixel, vfactor);
 
-    if (format != Format_Mono && !embeddedbitmap)
-        load_flags |= FT_LOAD_NO_BITMAP;
-
-    FT_Matrix matrix = freetype->matrix;
     bool transform = matrix.xx != 0x10000
                      || matrix.yy != 0x10000
                      || matrix.xy != 0
                      || matrix.yx != 0;
 
-    if (transform)
+    if (transform || (format != Format_Mono && !embeddedbitmap))
         load_flags |= FT_LOAD_NO_BITMAP;
 
-    FT_Face face = freetype->face;
-
-    FT_Vector v;
-    v.x = format == Format_Mono ? 0 : FT_Pos(subPixelPosition.toReal() * 64);
-    v.y = 0;
-    FT_Set_Transform(face, &freetype->matrix, &v);
-
     FT_Error err = FT_Load_Glyph(face, glyph, load_flags);
     if (err && (load_flags & FT_LOAD_NO_BITMAP)) {
         load_flags &= ~FT_LOAD_NO_BITMAP;
@@ -908,9 +878,10 @@
 
     FT_GlyphSlot slot = face->glyph;
 
-    if (embolden) Q_FT_GLYPHSLOT_EMBOLDEN(slot);
+    if (embolden)
+        FT_GlyphSlot_Embolden(slot);
     if (obliquen) {
-        Q_FT_GLYPHSLOT_OBLIQUE(slot);
+        FT_GlyphSlot_Oblique(slot);
 
         // While Embolden alters the metrics of the slot, oblique does not, so we need
         // to fix this ourselves.
@@ -924,8 +895,8 @@
         FT_Matrix_Multiply(&m, &matrix);
     }
 
-    FT_Library library = qt_getFreetype();
-
+    GlyphInfo info;
+    info.linearAdvance = slot->linearHoriAdvance >> 10;
     info.xOff = TRUNC(ROUND(slot->advance.x));
     info.yOff = 0;
 
@@ -934,27 +905,23 @@
         int right = CEIL(slot->metrics.horiBearingX + slot->metrics.width);
         int top    = CEIL(slot->metrics.horiBearingY);
         int bottom = FLOOR(slot->metrics.horiBearingY - slot->metrics.height);
-        int width = right-left;
-        int height = top-bottom;
+        info.x = TRUNC(left);
+        info.y = TRUNC(top);
+        info.width = TRUNC(right - left);
+        info.height = TRUNC(top - bottom);
 
         // If any of the metrics are too large to fit, don't cache them
-        if (qAbs(info.xOff) >= 128
-                || qAbs(TRUNC(top)) >= 128
-                || TRUNC(width) >= 256
-                || TRUNC(height) >= 256
-                || qAbs(TRUNC(left)) >= 128
-                || qAbs(TRUNC(ROUND(slot->advance.x))) >= 128) {
+        if (areMetricsTooLarge(info))
             return 0;
-        }
 
         g = new Glyph;
         g->data = 0;
-        g->linearAdvance = slot->linearHoriAdvance >> 10;
-        g->width = TRUNC(width);
-        g->height = TRUNC(height);
-        g->x = TRUNC(left);
-        g->y = TRUNC(top);
-        g->advance = TRUNC(ROUND(slot->advance.x));
+        g->linearAdvance = info.linearAdvance;
+        g->width = info.width;
+        g->height = info.height;
+        g->x = info.x;
+        g->y = info.y;
+        g->advance = info.xOff;
         g->format = format;
 
         if (set)
@@ -963,12 +930,12 @@
         return g;
     }
 
-    uchar *glyph_buffer = 0;
     int glyph_buffer_size = 0;
+    QScopedArrayPointer<uchar> glyph_buffer;
 #if defined(QT_USE_FREETYPE_LCDFILTER)
     bool useFreetypeRenderGlyph = false;
     if (slot->format == FT_GLYPH_FORMAT_OUTLINE && (hsubpixel || vfactor != 1)) {
-        err = FT_Library_SetLcdFilter(library, (FT_LcdFilter)lcdFilterType);
+        err = FT_Library_SetLcdFilter(slot->library, (FT_LcdFilter)lcdFilterType);
         if (err == FT_Err_Ok)
             useFreetypeRenderGlyph = true;
     }
@@ -979,20 +946,20 @@
         if (err != FT_Err_Ok)
             qWarning("render glyph failed err=%x face=%p, glyph=%d", err, face, glyph);
 
-        FT_Library_SetLcdFilter(library, FT_LCD_FILTER_NONE);
+        FT_Library_SetLcdFilter(slot->library, FT_LCD_FILTER_NONE);
 
         info.height = slot->bitmap.rows / vfactor;
         info.width = hsubpixel ? slot->bitmap.width / 3 : slot->bitmap.width;
-        info.x = -slot->bitmap_left;
+        info.x = slot->bitmap_left;
         info.y = slot->bitmap_top;
 
         glyph_buffer_size = info.width * info.height * 4;
-        glyph_buffer = new uchar[glyph_buffer_size];
+        glyph_buffer.reset(new uchar[glyph_buffer_size]);
 
         if (hsubpixel)
-            convertRGBToARGB(slot->bitmap.buffer, (uint *)glyph_buffer, info.width, info.height, slot->bitmap.pitch, subpixelType != Subpixel_RGB, false);
+            convertRGBToARGB(slot->bitmap.buffer, (uint *)glyph_buffer.data(), info.width, info.height, slot->bitmap.pitch, subpixelType != Subpixel_RGB, false);
         else if (vfactor != 1)
-            convertRGBToARGB_V(slot->bitmap.buffer, (uint *)glyph_buffer, info.width, info.height, slot->bitmap.pitch, subpixelType != Subpixel_VRGB, false);
+            convertRGBToARGB_V(slot->bitmap.buffer, (uint *)glyph_buffer.data(), info.width, info.height, slot->bitmap.pitch, subpixelType != Subpixel_VRGB, false);
     } else
 #endif
     {
@@ -1048,41 +1015,38 @@
         hpixels = hpixels*3 + 8;
     info.width = hpixels;
     info.height = TRUNC(top - bottom);
-    info.x = -TRUNC(left);
+    info.x = TRUNC(left);
     info.y = TRUNC(top);
     if (hsubpixel) {
         info.width /= 3;
-        info.x += 1;
+        info.x -= 1;
     }
 
-    bool large_glyph = (((short)(slot->linearHoriAdvance>>10) != slot->linearHoriAdvance>>10)
-                        || ((uchar)(info.width) != info.width)
-                        || ((uchar)(info.height) != info.height)
-                        || ((signed char)(info.x) != info.x)
-                        || ((signed char)(info.y) != info.y)
-                        || ((signed char)(info.xOff) != info.xOff));
-
-    if (large_glyph) {
-        delete [] glyph_buffer;
+    // If any of the metrics are too large to fit, don't cache them
+    if (areMetricsTooLarge(info))
         return 0;
-    }
 
     int pitch = (format == Format_Mono ? ((info.width + 31) & ~31) >> 3 :
                  (format == Format_A8 ? (info.width + 3) & ~3 : info.width * 4));
-    glyph_buffer_size = pitch * info.height;
-    glyph_buffer = new uchar[glyph_buffer_size];
-    memset(glyph_buffer, 0, glyph_buffer_size);
+    if (glyph_buffer_size < pitch * info.height) {
+        glyph_buffer_size = pitch * info.height;
+        glyph_buffer.reset(new uchar[glyph_buffer_size]);
+    }
+    memset(glyph_buffer.data(), 0, glyph_buffer_size);
 
     if (slot->format == FT_GLYPH_FORMAT_OUTLINE) {
         FT_Bitmap bitmap;
         bitmap.rows = info.height*vfactor;
         bitmap.width = hpixels;
         bitmap.pitch = format == Format_Mono ? (((info.width + 31) & ~31) >> 3) : ((bitmap.width + 3) & ~3);
-        if (!hsubpixel && vfactor == 1 && format != Format_A32)
-            bitmap.buffer = glyph_buffer;
-        else
-            bitmap.buffer = new uchar[bitmap.rows*bitmap.pitch];
-        memset(bitmap.buffer, 0, bitmap.rows*bitmap.pitch);
+        int bitmap_buffer_size = bitmap.rows * bitmap.pitch;
+        if (!hsubpixel && vfactor == 1 && format != Format_A32) {
+            Q_ASSERT(glyph_buffer_size <= bitmap_buffer_size);
+            bitmap.buffer = glyph_buffer.data();
+        } else {
+            bitmap.buffer = new uchar[bitmap_buffer_size];
+            memset(bitmap.buffer, 0, bitmap_buffer_size);
+        }
         bitmap.pixel_mode = format == Format_Mono ? FT_PIXEL_MODE_MONO : FT_PIXEL_MODE_GRAY;
         FT_Matrix matrix;
         matrix.xx = (hsubpixel ? 3 : 1) << 16;
@@ -1091,11 +1055,11 @@
 
         FT_Outline_Transform(&slot->outline, &matrix);
         FT_Outline_Translate (&slot->outline, (hsubpixel ? -3*left +(4<<6) : -left), -bottom*vfactor);
-        FT_Outline_Get_Bitmap(library, &slot->outline, &bitmap);
+        FT_Outline_Get_Bitmap(slot->library, &slot->outline, &bitmap);
         if (hsubpixel) {
             Q_ASSERT (bitmap.pixel_mode == FT_PIXEL_MODE_GRAY);
             Q_ASSERT(antialias);
-            uchar *convoluted = new uchar[bitmap.rows*bitmap.pitch];
+            uchar *convoluted = new uchar[bitmap_buffer_size];
             bool useLegacyLcdFilter = false;
 #if defined(FC_LCD_FILTER) && defined(FT_LCD_FILTER_H)
             useLegacyLcdFilter = (lcdFilterType == FT_LCD_FILTER_LEGACY);
@@ -1105,20 +1069,20 @@
                 convoluteBitmap(bitmap.buffer, convoluted, bitmap.width, info.height, bitmap.pitch);
                 buffer = convoluted;
             }
-            convertRGBToARGB(buffer + 1, (uint *)glyph_buffer, info.width, info.height, bitmap.pitch, subpixelType != Subpixel_RGB, useLegacyLcdFilter);
+            convertRGBToARGB(buffer + 1, (uint *)glyph_buffer.data(), info.width, info.height, bitmap.pitch, subpixelType != Subpixel_RGB, useLegacyLcdFilter);
             delete [] convoluted;
         } else if (vfactor != 1) {
-            convertRGBToARGB_V(bitmap.buffer, (uint *)glyph_buffer, info.width, info.height, bitmap.pitch, subpixelType != Subpixel_VRGB, true);
+            convertRGBToARGB_V(bitmap.buffer, (uint *)glyph_buffer.data(), info.width, info.height, bitmap.pitch, subpixelType != Subpixel_VRGB, true);
         } else if (format == Format_A32 && bitmap.pixel_mode == FT_PIXEL_MODE_GRAY) {
-            convertGRAYToARGB(bitmap.buffer, (uint *)glyph_buffer, info.width, info.height, bitmap.pitch);
+            convertGRAYToARGB(bitmap.buffer, (uint *)glyph_buffer.data(), info.width, info.height, bitmap.pitch);
         }
 
-        if (bitmap.buffer != glyph_buffer)
+        if (bitmap.buffer != glyph_buffer.data())
             delete [] bitmap.buffer;
     } else if (slot->format == FT_GLYPH_FORMAT_BITMAP) {
         Q_ASSERT(slot->bitmap.pixel_mode == FT_PIXEL_MODE_MONO);
         uchar *src = slot->bitmap.buffer;
-        uchar *dst = glyph_buffer;
+        uchar *dst = glyph_buffer.data();
         int h = slot->bitmap.rows;
         if (format == Format_Mono) {
             int bytes = ((info.width + 7) & ~7) >> 3;
@@ -1163,7 +1127,6 @@
         }
     } else {
         qWarning("QFontEngine: Glyph neither outline nor bitmap format=%d", slot->format);
-        delete [] glyph_buffer;
         return 0;
     }
     }
@@ -1174,15 +1137,15 @@
         g->data = 0;
     }
 
-    g->linearAdvance = slot->linearHoriAdvance >> 10;
+    g->linearAdvance = info.linearAdvance;
     g->width = info.width;
     g->height = info.height;
-    g->x = -info.x;
+    g->x = info.x;
     g->y = info.y;
     g->advance = info.xOff;
     g->format = format;
     delete [] g->data;
-    g->data = glyph_buffer;
+    g->data = glyph_buffer.take();
 
     if (set)
         set->setGlyph(glyph, subPixelPosition, g);
@@ -1366,14 +1329,14 @@
     return m;
 }
 
-QFontEngineFT::QGlyphSet *QFontEngineFT::loadTransformedGlyphSet(const QTransform &matrix)
+QFontEngineFT::QGlyphSet *QFontEngineFT::loadGlyphSet(const QTransform &matrix)
 {
     if (matrix.type() > QTransform::TxShear || !cacheEnabled)
         return 0;
 
     // FT_Set_Transform only supports scalable fonts
     if (!FT_IS_SCALABLE(freetype->face))
-        return 0;
+        return matrix.type() <= QTransform::TxTranslate ? &defaultGlyphSet : Q_NULLPTR;
 
     FT_Matrix m = QTransformToFTMatrix(matrix);
 
@@ -1463,7 +1426,7 @@
         for (int gl = 0; gl < glyphs.numGlyphs; gl++) {
             FT_UInt glyph = positioned_glyphs[gl];
             FT_Load_Glyph(face, glyph, FT_LOAD_TARGET_MONO);
-            freetype->addBitmapToPath(face->glyph, positions[gl], path);
+            QFreetypeFace::addBitmapToPath(face->glyph, positions[gl], path);
         }
         unlockFace();
     }
@@ -1482,8 +1445,10 @@
         FT_GlyphSlot g = face->glyph;
         if (g->format != FT_GLYPH_FORMAT_OUTLINE)
             continue;
-        if (embolden) Q_FT_GLYPHSLOT_EMBOLDEN(g);
-        if (obliquen) Q_FT_GLYPHSLOT_OBLIQUE(g);
+        if (embolden)
+            FT_GlyphSlot_Embolden(g);
+        if (obliquen)
+            FT_GlyphSlot_Oblique(g);
         QFreetypeFace::addGlyphToPath(face, g, positions[gl], path, xsize, ysize);
     }
     unlockFace();
@@ -1755,104 +1720,60 @@
     return overall;
 }
 
-QImage *QFontEngineFT::lockedAlphaMapForGlyph(glyph_t glyphIndex, QFixed subPixelPosition,
-                                              QFontEngine::GlyphFormat neededFormat,
-                                              const QTransform &t, QPoint *offset)
+static inline QImage alphaMapFromGlyphData(QFontEngineFT::Glyph *glyph, QFontEngine::GlyphFormat glyphFormat)
 {
-    Q_ASSERT(currentlyLockedAlphaMap.isNull());
-    lockFace();
-
-    if (isBitmapFont())
-        neededFormat = Format_Mono;
-    else if (neededFormat == Format_None && defaultFormat != Format_None)
-        neededFormat = defaultFormat;
-    else if (neededFormat == Format_None)
-        neededFormat = Format_A8;
+    if (glyph == Q_NULLPTR)
+        return QImage();
 
     QImage::Format format;
-    switch (neededFormat) {
-    case Format_Mono:
+    int bytesPerLine;
+    switch (glyphFormat) {
+    case QFontEngine::Format_Mono:
         format = QImage::Format_Mono;
+        bytesPerLine = ((glyph->width + 31) & ~31) >> 3;
         break;
-    case Format_A8:
+    case QFontEngine::Format_A8:
         format = QImage::Format_Indexed8;
+        bytesPerLine = (glyph->width + 3) & ~3;
         break;
-    case Format_A32:
+    case QFontEngine::Format_A32:
         format = QImage::Format_ARGB32;
+        bytesPerLine = glyph->width * 4;
         break;
     default:
-        Q_ASSERT(false);
-        format = QImage::Format_Invalid;
+        Q_UNREACHABLE();
     };
 
-    QFontEngineFT::Glyph *glyph;
-    QScopedPointer<QFontEngineFT::Glyph> glyphGuard;
-    if (cacheEnabled) {
-        QFontEngineFT::QGlyphSet *gset = &defaultGlyphSet;
-        QFontEngine::HintStyle hintStyle = default_hint_style;
-        if (t.type() >= QTransform::TxScale) {
-            // disable hinting if the glyphs are transformed
-            default_hint_style = HintNone;
-            if (t.isAffine())
-                gset = loadTransformedGlyphSet(t);
-            else
-                gset = 0;
-        }
-
-        if (gset) {
-            FT_Matrix m = matrix;
-            FT_Matrix_Multiply(&gset->transformationMatrix, &m);
-            FT_Set_Transform(freetype->face, &m, 0);
-            freetype->matrix = m;
-        }
-
-        if (!gset || gset->outline_drawing || !loadGlyph(gset, glyphIndex, subPixelPosition,
-                                                         neededFormat)) {
-            default_hint_style = hintStyle;
-            return QFontEngine::lockedAlphaMapForGlyph(glyphIndex, subPixelPosition, neededFormat, t,
-                                                       offset);
-        }
-        default_hint_style = hintStyle;
+    return QImage(static_cast<const uchar *>(glyph->data), glyph->width, glyph->height, bytesPerLine, format);
+}
 
-        glyph = gset->getGlyph(glyphIndex, subPixelPosition);
-    } else {
-        FT_Matrix m = matrix;
-        FT_Matrix extra = QTransformToFTMatrix(t);
-        FT_Matrix_Multiply(&extra, &m);
-        FT_Set_Transform(freetype->face, &m, 0);
-        freetype->matrix = m;
-        glyph = loadGlyph(0, glyphIndex, subPixelPosition, neededFormat);
-        glyphGuard.reset(glyph);
-    }
+QImage *QFontEngineFT::lockedAlphaMapForGlyph(glyph_t glyphIndex, QFixed subPixelPosition,
+                                              QFontEngine::GlyphFormat neededFormat,
+                                              const QTransform &t, QPoint *offset)
+{
+    Q_ASSERT(currentlyLockedAlphaMap.isNull());
 
-    if (glyph == 0 || glyph->data == 0 || glyph->width == 0 || glyph->height == 0) {
-        unlockFace();
-        return 0;
-    }
+    if (isBitmapFont())
+        neededFormat = Format_Mono;
+    else if (neededFormat == Format_None && defaultFormat != Format_None)
+        neededFormat = defaultFormat;
+    else if (neededFormat == Format_None)
+        neededFormat = Format_A8;
 
-    int pitch;
-    switch (neededFormat) {
-    case Format_Mono:
-        pitch = ((glyph->width + 31) & ~31) >> 3;
-        break;
-    case Format_A8:
-        pitch = (glyph->width + 3) & ~3;
-        break;
-    case Format_A32:
-        pitch = glyph->width * 4;
-        break;
-    default:
-        Q_ASSERT(false);
-        pitch = 0;
-    };
+    Glyph *glyph = loadGlyphFor(glyphIndex, subPixelPosition, neededFormat, t);
 
-    if (offset != 0)
+    if (offset != 0 && glyph != 0)
         *offset = QPoint(glyph->x, -glyph->y);
 
-    currentlyLockedAlphaMap = QImage(glyph->data, glyph->width, glyph->height, pitch, format);
-    if (!glyphGuard.isNull())
+    currentlyLockedAlphaMap = alphaMapFromGlyphData(glyph, neededFormat);
+
+    if (!cacheEnabled && glyph != &emptyGlyph) {
         currentlyLockedAlphaMap = currentlyLockedAlphaMap.copy();
-    Q_ASSERT(!currentlyLockedAlphaMap.isNull());
+        delete glyph;
+    }
+
+    if (currentlyLockedAlphaMap.isNull())
+        return QFontEngine::lockedAlphaMapForGlyph(glyphIndex, subPixelPosition, neededFormat, t, offset);
 
     QImageData *data = currentlyLockedAlphaMap.data_ptr();
     data->is_locked = true;
@@ -1862,9 +1783,7 @@
 
 void QFontEngineFT::unlockAlphaMapForGlyph()
 {
-    Q_ASSERT(!currentlyLockedAlphaMap.isNull());
-    unlockFace();
-    currentlyLockedAlphaMap = QImage();
+    QFontEngine::unlockAlphaMapForGlyph();
 }
 
 QFontEngineFT::Glyph *QFontEngineFT::loadGlyphFor(glyph_t g,
@@ -1873,31 +1792,24 @@
                                                   const QTransform &t,
                                                   bool fetchBoundingBox)
 {
-    FT_Face face = 0;
-    QGlyphSet *glyphSet = 0;
-    FT_Matrix ftMatrix = QTransformToFTMatrix(t);
-    if (cacheEnabled) {
-        if (t.type() > QTransform::TxTranslate && FT_IS_SCALABLE(freetype->face))
-            glyphSet = loadTransformedGlyphSet(t);
-        else
-            glyphSet = &defaultGlyphSet;
-        Q_ASSERT(glyphSet != 0);
-    }
-
+    QGlyphSet *glyphSet = loadGlyphSet(t);
     if (glyphSet != 0 && glyphSet->outline_drawing && !fetchBoundingBox)
         return 0;
 
     Glyph *glyph = glyphSet != 0 ? glyphSet->getGlyph(g, subPixelPosition) : 0;
-    if (!glyph || glyph->format != format) {
-        face = lockFace();
+    if (!glyph || glyph->format != format || (!fetchBoundingBox && !glyph->data)) {
+        QScopedValueRollback<HintStyle> saved_default_hint_style(default_hint_style);
+        if (t.type() >= QTransform::TxScale)
+            default_hint_style = HintNone; // disable hinting if the glyphs are transformed
+
+        lockFace();
         FT_Matrix m = this->matrix;
+        FT_Matrix ftMatrix = glyphSet != 0 ? glyphSet->transformationMatrix : QTransformToFTMatrix(t);
         FT_Matrix_Multiply(&ftMatrix, &m);
         freetype->matrix = m;
         glyph = loadGlyph(glyphSet, g, subPixelPosition, format, false);
-    }
-
-    if (face)
         unlockFace();
+    }
 
     return glyph;
 }
@@ -1909,38 +1821,20 @@
 
 QImage QFontEngineFT::alphaMapForGlyph(glyph_t g, QFixed subPixelPosition, const QTransform &t)
 {
-    lockFace();
+    const GlyphFormat neededFormat = antialias ? Format_A8 : Format_Mono;
 
-    QScopedPointer<Glyph> glyph(loadGlyphFor(g, subPixelPosition, antialias ? Format_A8 : Format_Mono, t));
-    if (!glyph || !glyph->data) {
-        unlockFace();
-        return QFontEngine::alphaMapForGlyph(g);
-    }
+    Glyph *glyph = loadGlyphFor(g, subPixelPosition, neededFormat, t);
 
-    const int pitch = antialias ? (glyph->width + 3) & ~3 : ((glyph->width + 31)/32) * 4;
+    QImage img = alphaMapFromGlyphData(glyph, neededFormat);
+    img = img.copy();
 
-    QImage img(glyph->width, glyph->height, antialias ? QImage::Format_Indexed8 : QImage::Format_Mono);
-    if (antialias) {
-        QVector<QRgb> colors(256);
-        for (int i=0; i<256; ++i)
-            colors[i] = qRgba(0, 0, 0, i);
-        img.setColorTable(colors);
-    } else {
-        QVector<QRgb> colors(2);
-        colors[0] = qRgba(0, 0, 0, 0);
-        colors[1] = qRgba(0, 0, 0, 255);
-        img.setColorTable(colors);
-    }
-    Q_ASSERT(img.bytesPerLine() == pitch);
-    if (glyph->width) {
-        for (int y = 0; y < glyph->height; ++y)
-            memcpy(img.scanLine(y), &glyph->data[y * pitch], pitch);
-    }
-    if (cacheEnabled)
-        glyph.take();
-    unlockFace();
+    if (!cacheEnabled && glyph != &emptyGlyph)
+        delete glyph;
 
-    return img;
+    if (!img.isNull())
+        return img;
+
+    return QFontEngine::alphaMapForGlyph(g);
 }
 
 QImage QFontEngineFT::alphaRGBMapForGlyph(glyph_t g, QFixed subPixelPosition, const QTransform &t)
@@ -1948,22 +1842,20 @@
     if (t.type() > QTransform::TxRotate)
         return QFontEngine::alphaRGBMapForGlyph(g, subPixelPosition, t);
 
-    lockFace();
+    const GlyphFormat neededFormat = Format_A32;
 
-    QScopedPointer<Glyph> glyph(loadGlyphFor(g, subPixelPosition, Format_A32, t));
-    if (!glyph || !glyph->data) {
-        unlockFace();
-        return QFontEngine::alphaRGBMapForGlyph(g, subPixelPosition, t);
-    }
+    Glyph *glyph = loadGlyphFor(g, subPixelPosition, neededFormat, t);
 
-    QImage img(glyph->width, glyph->height, QImage::Format_RGB32);
-    memcpy(img.bits(), glyph->data, 4 * glyph->width * glyph->height);
+    QImage img = alphaMapFromGlyphData(glyph, neededFormat);
+    img = img.copy();
 
-    if (cacheEnabled)
-        glyph.take();
-    unlockFace();
+    if (!cacheEnabled && glyph != &emptyGlyph)
+        delete glyph;
+
+    if (!img.isNull())
+        return img;
 
-    return img;
+    return QFontEngine::alphaRGBMapForGlyph(g, subPixelPosition, t);
 }
 
 void QFontEngineFT::removeGlyphFromCache(glyph_t glyph)
diff -Nuar orig/qtbase/src/gui/text/qfontengine_ft_p.h qtbase/src/gui/text/qfontengine_ft_p.h
--- orig/qtbase/src/gui/text/qfontengine_ft_p.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qfontengine_ft_p.h	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -102,7 +102,7 @@
     int getPointInOutline(glyph_t glyph, int flags, quint32 point, QFixed *xpos, QFixed *ypos, quint32 *nPoints);
 
     static void addGlyphToPath(FT_Face face, FT_GlyphSlot g, const QFixedPoint &point, QPainterPath *path, FT_Fixed x_scale, FT_Fixed y_scale);
-    static void addBitmapToPath(FT_GlyphSlot slot, const QFixedPoint &point, QPainterPath *path, bool = false);
+    static void addBitmapToPath(FT_GlyphSlot slot, const QFixedPoint &point, QPainterPath *path);
 
 private:
     friend class QFontEngineFT;
@@ -143,6 +143,7 @@
     };
 
     struct GlyphInfo {
+        int             linearAdvance;
         unsigned short  width;
         unsigned short  height;
         short           x;
@@ -188,67 +189,67 @@
         mutable int fast_glyph_count;
     };
 
-    virtual QFontEngine::FaceId faceId() const;
-    virtual QFontEngine::Properties properties() const;
-    virtual QFixed emSquareSize() const;
-    virtual bool supportsSubPixelPositions() const
+    virtual QFontEngine::FaceId faceId() const Q_DECL_OVERRIDE;
+    virtual QFontEngine::Properties properties() const Q_DECL_OVERRIDE;
+    virtual QFixed emSquareSize() const Q_DECL_OVERRIDE;
+    virtual bool supportsSubPixelPositions() const Q_DECL_OVERRIDE
     {
         return default_hint_style == HintLight ||
                default_hint_style == HintNone;
     }
 
-    virtual bool getSfntTableData(uint tag, uchar *buffer, uint *length) const;
-    virtual int synthesized() const;
+    virtual bool getSfntTableData(uint tag, uchar *buffer, uint *length) const Q_DECL_OVERRIDE;
+    virtual int synthesized() const Q_DECL_OVERRIDE;
 
-    virtual QFixed ascent() const;
-    virtual QFixed descent() const;
-    virtual QFixed leading() const;
-    virtual QFixed xHeight() const;
-    virtual QFixed averageCharWidth() const;
-
-    virtual qreal maxCharWidth() const;
-    virtual qreal minLeftBearing() const;
-    virtual qreal minRightBearing() const;
-    virtual QFixed lineThickness() const;
-    virtual QFixed underlinePosition() const;
+    virtual QFixed ascent() const Q_DECL_OVERRIDE;
+    virtual QFixed descent() const Q_DECL_OVERRIDE;
+    virtual QFixed leading() const Q_DECL_OVERRIDE;
+    virtual QFixed xHeight() const Q_DECL_OVERRIDE;
+    virtual QFixed averageCharWidth() const Q_DECL_OVERRIDE;
+
+    virtual qreal maxCharWidth() const Q_DECL_OVERRIDE;
+    virtual qreal minLeftBearing() const Q_DECL_OVERRIDE;
+    virtual qreal minRightBearing() const Q_DECL_OVERRIDE;
+    virtual QFixed lineThickness() const Q_DECL_OVERRIDE;
+    virtual QFixed underlinePosition() const Q_DECL_OVERRIDE;
 
-    virtual glyph_t glyphIndex(uint ucs4) const;
-    void doKerning(QGlyphLayout *, ShaperFlags) const;
+    virtual glyph_t glyphIndex(uint ucs4) const Q_DECL_OVERRIDE;
+    void doKerning(QGlyphLayout *, ShaperFlags) const Q_DECL_OVERRIDE;
 
-    virtual void getUnscaledGlyph(glyph_t glyph, QPainterPath *path, glyph_metrics_t *metrics);
+    virtual void getUnscaledGlyph(glyph_t glyph, QPainterPath *path, glyph_metrics_t *metrics) Q_DECL_OVERRIDE;
 
-    virtual bool supportsTransformation(const QTransform &transform) const;
+    virtual bool supportsTransformation(const QTransform &transform) const Q_DECL_OVERRIDE;
 
     virtual void addGlyphsToPath(glyph_t *glyphs, QFixedPoint *positions, int nglyphs,
-                         QPainterPath *path, QTextItem::RenderFlags flags);
+                         QPainterPath *path, QTextItem::RenderFlags flags) Q_DECL_OVERRIDE;
     virtual void addOutlineToPath(qreal x, qreal y, const QGlyphLayout &glyphs,
-                          QPainterPath *path, QTextItem::RenderFlags flags);
+                          QPainterPath *path, QTextItem::RenderFlags flags) Q_DECL_OVERRIDE;
 
-    virtual bool stringToCMap(const QChar *str, int len, QGlyphLayout *glyphs, int *nglyphs, ShaperFlags flags) const;
+    virtual bool stringToCMap(const QChar *str, int len, QGlyphLayout *glyphs, int *nglyphs, ShaperFlags flags) const Q_DECL_OVERRIDE;
 
-    virtual glyph_metrics_t boundingBox(const QGlyphLayout &glyphs);
-    virtual glyph_metrics_t boundingBox(glyph_t glyph);
-    virtual glyph_metrics_t boundingBox(glyph_t glyph, const QTransform &matrix);
-
-    virtual void recalcAdvances(QGlyphLayout *glyphs, ShaperFlags flags) const;
-    virtual QImage alphaMapForGlyph(glyph_t g) { return alphaMapForGlyph(g, 0); }
-    virtual QImage alphaMapForGlyph(glyph_t, QFixed);
-    QImage alphaMapForGlyph(glyph_t glyph, QFixed subPixelPosition, const QTransform &t);
-    virtual QImage alphaRGBMapForGlyph(glyph_t, QFixed subPixelPosition, const QTransform &t);
+    virtual glyph_metrics_t boundingBox(const QGlyphLayout &glyphs) Q_DECL_OVERRIDE;
+    virtual glyph_metrics_t boundingBox(glyph_t glyph) Q_DECL_OVERRIDE;
+    virtual glyph_metrics_t boundingBox(glyph_t glyph, const QTransform &matrix) Q_DECL_OVERRIDE;
+
+    virtual void recalcAdvances(QGlyphLayout *glyphs, ShaperFlags flags) const Q_DECL_OVERRIDE;
+    virtual QImage alphaMapForGlyph(glyph_t g) Q_DECL_OVERRIDE { return alphaMapForGlyph(g, 0); }
+    virtual QImage alphaMapForGlyph(glyph_t, QFixed) Q_DECL_OVERRIDE;
+    QImage alphaMapForGlyph(glyph_t glyph, QFixed subPixelPosition, const QTransform &t) Q_DECL_OVERRIDE;
+    virtual QImage alphaRGBMapForGlyph(glyph_t, QFixed subPixelPosition, const QTransform &t) Q_DECL_OVERRIDE;
     virtual glyph_metrics_t alphaMapBoundingBox(glyph_t glyph,
                                                 QFixed subPixelPosition,
                                                 const QTransform &matrix,
-                                                QFontEngine::GlyphFormat format);
+                                                QFontEngine::GlyphFormat format) Q_DECL_OVERRIDE;
     virtual QImage *lockedAlphaMapForGlyph(glyph_t glyph, QFixed subPixelPosition,
                                            GlyphFormat neededFormat, const QTransform &t,
-                                           QPoint *offset);
-    virtual bool hasInternalCaching() const { return cacheEnabled; }
-    virtual void unlockAlphaMapForGlyph();
+                                           QPoint *offset) Q_DECL_OVERRIDE;
+    virtual bool hasInternalCaching() const Q_DECL_OVERRIDE { return cacheEnabled; }
+    virtual void unlockAlphaMapForGlyph() Q_DECL_OVERRIDE;
 
-    virtual void removeGlyphFromCache(glyph_t glyph);
-    virtual int glyphMargin(QFontEngine::GlyphFormat /* format */) { return 0; }
+    virtual void removeGlyphFromCache(glyph_t glyph) Q_DECL_OVERRIDE;
+    virtual int glyphMargin(QFontEngine::GlyphFormat /* format */) Q_DECL_OVERRIDE { return 0; }
 
-    virtual int glyphCount() const;
+    virtual int glyphCount() const Q_DECL_OVERRIDE;
 
     enum Scaling {
         Scaled,
@@ -268,7 +269,7 @@
     Glyph *loadGlyph(QGlyphSet *set, uint glyph, QFixed subPixelPosition, GlyphFormat = Format_None, bool fetchMetricsOnly = false) const;
     Glyph *loadGlyphFor(glyph_t g, QFixed subPixelPosition, GlyphFormat format, const QTransform &t, bool fetchBoundingBox = false);
 
-    QGlyphSet *loadTransformedGlyphSet(const QTransform &matrix);
+    QGlyphSet *loadGlyphSet(const QTransform &matrix);
 
     QFontEngineFT(const QFontDef &fd);
     virtual ~QFontEngineFT();
@@ -278,12 +279,12 @@
     bool init(FaceId faceId, bool antialias, GlyphFormat format,
               QFreetypeFace *freetypeFace);
 
-    virtual int getPointInOutline(glyph_t glyph, int flags, quint32 point, QFixed *xpos, QFixed *ypos, quint32 *nPoints);
+    virtual int getPointInOutline(glyph_t glyph, int flags, quint32 point, QFixed *xpos, QFixed *ypos, quint32 *nPoints) Q_DECL_OVERRIDE;
 
 
-    virtual void setDefaultHintStyle(HintStyle style);
+    virtual void setDefaultHintStyle(HintStyle style) Q_DECL_OVERRIDE;
 
-    virtual QFontEngine *cloneWithSize(qreal pixelSize) const;
+    virtual QFontEngine *cloneWithSize(qreal pixelSize) const Q_DECL_OVERRIDE;
     bool initFromFontEngine(const QFontEngineFT *fontEngine);
 
     HintStyle defaultHintStyle() const { return default_hint_style; }
@@ -305,6 +306,7 @@
 private:
     friend class QFontEngineFTRawFont;
     friend class QFontconfigDatabase;
+    friend class QBasicFontDatabase;
     friend class QFontEngineMultiFontConfig;
 
     int loadFlags(QGlyphSet *set, GlyphFormat format, int flags, bool &hsubpixel, int &vfactor) const;
diff -Nuar orig/qtbase/src/gui/text/qfontengineglyphcache_p.h qtbase/src/gui/text/qfontengineglyphcache_p.h
--- orig/qtbase/src/gui/text/qfontengineglyphcache_p.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qfontengineglyphcache_p.h	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
diff -Nuar orig/qtbase/src/gui/text/qfontengine_p.h qtbase/src/gui/text/qfontengine_p.h
--- orig/qtbase/src/gui/text/qfontengine_p.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qfontengine_p.h	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -78,10 +78,6 @@
 typedef void (*qt_destroy_func_t) (void *user_data);
 typedef bool (*qt_get_font_table_func_t) (void *user_data, uint tag, uchar *buffer, uint *length);
 
-const QFont::Weight qt_mediumFontWeight = static_cast<QFont::Weight>(57);
-const QFont::Weight qt_extralightFontWeight = static_cast<QFont::Weight>(12);
-const QFont::Weight qt_thinFontWeight = static_cast<QFont::Weight>(0);
-
 class Q_GUI_EXPORT QFontEngine
 {
 public:
@@ -351,26 +347,26 @@
     QFontEngineBox(int size);
     ~QFontEngineBox();
 
-    virtual glyph_t glyphIndex(uint ucs4) const;
-    virtual bool stringToCMap(const QChar *str, int len, QGlyphLayout *glyphs, int *nglyphs, ShaperFlags flags) const;
-    virtual void recalcAdvances(QGlyphLayout *, ShaperFlags) const;
+    virtual glyph_t glyphIndex(uint ucs4) const Q_DECL_OVERRIDE;
+    virtual bool stringToCMap(const QChar *str, int len, QGlyphLayout *glyphs, int *nglyphs, ShaperFlags flags) const Q_DECL_OVERRIDE;
+    virtual void recalcAdvances(QGlyphLayout *, ShaperFlags) const Q_DECL_OVERRIDE;
 
     void draw(QPaintEngine *p, qreal x, qreal y, const QTextItemInt &si);
-    virtual void addOutlineToPath(qreal x, qreal y, const QGlyphLayout &glyphs, QPainterPath *path, QTextItem::RenderFlags flags);
+    virtual void addOutlineToPath(qreal x, qreal y, const QGlyphLayout &glyphs, QPainterPath *path, QTextItem::RenderFlags flags) Q_DECL_OVERRIDE;
 
-    virtual glyph_metrics_t boundingBox(const QGlyphLayout &glyphs);
-    virtual glyph_metrics_t boundingBox(glyph_t glyph);
-    virtual QFontEngine *cloneWithSize(qreal pixelSize) const;
-
-    virtual QFixed ascent() const;
-    virtual QFixed descent() const;
-    virtual QFixed leading() const;
-    virtual qreal maxCharWidth() const;
-    virtual qreal minLeftBearing() const { return 0; }
-    virtual qreal minRightBearing() const { return 0; }
-    virtual QImage alphaMapForGlyph(glyph_t);
+    virtual glyph_metrics_t boundingBox(const QGlyphLayout &glyphs) Q_DECL_OVERRIDE;
+    virtual glyph_metrics_t boundingBox(glyph_t glyph) Q_DECL_OVERRIDE;
+    virtual QFontEngine *cloneWithSize(qreal pixelSize) const Q_DECL_OVERRIDE;
+
+    virtual QFixed ascent() const Q_DECL_OVERRIDE;
+    virtual QFixed descent() const Q_DECL_OVERRIDE;
+    virtual QFixed leading() const Q_DECL_OVERRIDE;
+    virtual qreal maxCharWidth() const Q_DECL_OVERRIDE;
+    virtual qreal minLeftBearing() const Q_DECL_OVERRIDE { return 0; }
+    virtual qreal minRightBearing() const Q_DECL_OVERRIDE { return 0; }
+    virtual QImage alphaMapForGlyph(glyph_t) Q_DECL_OVERRIDE;
 
-    virtual bool canRender(const QChar *string, int len) const;
+    virtual bool canRender(const QChar *string, int len) const Q_DECL_OVERRIDE;
 
     inline int size() const { return _size; }
 
@@ -385,79 +381,61 @@
 class Q_GUI_EXPORT QFontEngineMulti : public QFontEngine
 {
 public:
-    explicit QFontEngineMulti(int engineCount);
+    explicit QFontEngineMulti(QFontEngine *engine, int script, const QStringList &fallbackFamilies = QStringList());
     ~QFontEngineMulti();
 
-    virtual glyph_t glyphIndex(uint ucs4) const;
-    virtual bool stringToCMap(const QChar *str, int len, QGlyphLayout *glyphs, int *nglyphs, ShaperFlags flags) const;
-
-    virtual glyph_metrics_t boundingBox(const QGlyphLayout &glyphs);
-    virtual glyph_metrics_t boundingBox(glyph_t glyph);
-
-    virtual void recalcAdvances(QGlyphLayout *, ShaperFlags) const;
-    virtual void doKerning(QGlyphLayout *, ShaperFlags) const;
-    virtual void addOutlineToPath(qreal, qreal, const QGlyphLayout &, QPainterPath *, QTextItem::RenderFlags flags);
-    virtual void getGlyphBearings(glyph_t glyph, qreal *leftBearing = 0, qreal *rightBearing = 0);
+    virtual glyph_t glyphIndex(uint ucs4) const Q_DECL_OVERRIDE;
+    virtual bool stringToCMap(const QChar *str, int len, QGlyphLayout *glyphs, int *nglyphs, ShaperFlags flags) const Q_DECL_OVERRIDE;
 
-    virtual QFixed ascent() const;
-    virtual QFixed descent() const;
-    virtual QFixed leading() const;
-    virtual QFixed xHeight() const;
-    virtual QFixed averageCharWidth() const;
-    virtual QImage alphaMapForGlyph(glyph_t);
-    virtual QImage alphaMapForGlyph(glyph_t glyph, QFixed subPixelPosition);
-    virtual QImage alphaMapForGlyph(glyph_t, const QTransform &t);
-    virtual QImage alphaMapForGlyph(glyph_t, QFixed subPixelPosition, const QTransform &t);
-    virtual QImage alphaRGBMapForGlyph(glyph_t, QFixed subPixelPosition, const QTransform &t);
+    virtual glyph_metrics_t boundingBox(const QGlyphLayout &glyphs) Q_DECL_OVERRIDE;
+    virtual glyph_metrics_t boundingBox(glyph_t glyph) Q_DECL_OVERRIDE;
 
-    virtual QFixed lineThickness() const;
-    virtual QFixed underlinePosition() const;
-    virtual qreal maxCharWidth() const;
-    virtual qreal minLeftBearing() const;
-    virtual qreal minRightBearing() const;
+    virtual void recalcAdvances(QGlyphLayout *, ShaperFlags) const Q_DECL_OVERRIDE;
+    virtual void doKerning(QGlyphLayout *, ShaperFlags) const Q_DECL_OVERRIDE;
+    virtual void addOutlineToPath(qreal, qreal, const QGlyphLayout &, QPainterPath *, QTextItem::RenderFlags flags) Q_DECL_OVERRIDE;
+    virtual void getGlyphBearings(glyph_t glyph, qreal *leftBearing = 0, qreal *rightBearing = 0) Q_DECL_OVERRIDE;
+
+    virtual QFixed ascent() const Q_DECL_OVERRIDE;
+    virtual QFixed descent() const Q_DECL_OVERRIDE;
+    virtual QFixed leading() const Q_DECL_OVERRIDE;
+    virtual QFixed xHeight() const Q_DECL_OVERRIDE;
+    virtual QFixed averageCharWidth() const Q_DECL_OVERRIDE;
+    virtual QImage alphaMapForGlyph(glyph_t) Q_DECL_OVERRIDE;
+    virtual QImage alphaMapForGlyph(glyph_t glyph, QFixed subPixelPosition) Q_DECL_OVERRIDE;
+    virtual QImage alphaMapForGlyph(glyph_t, const QTransform &t) Q_DECL_OVERRIDE;
+    virtual QImage alphaMapForGlyph(glyph_t, QFixed subPixelPosition, const QTransform &t) Q_DECL_OVERRIDE;
+    virtual QImage alphaRGBMapForGlyph(glyph_t, QFixed subPixelPosition, const QTransform &t) Q_DECL_OVERRIDE;
+
+    virtual QFixed lineThickness() const Q_DECL_OVERRIDE;
+    virtual QFixed underlinePosition() const Q_DECL_OVERRIDE;
+    virtual qreal maxCharWidth() const Q_DECL_OVERRIDE;
+    virtual qreal minLeftBearing() const Q_DECL_OVERRIDE;
+    virtual qreal minRightBearing() const Q_DECL_OVERRIDE;
+
+    virtual bool canRender(const QChar *string, int len) const Q_DECL_OVERRIDE;
+
+    inline int fallbackFamilyCount() const { return m_fallbackFamilies.size(); }
+    inline QString fallbackFamilyAt(int at) const { return m_fallbackFamilies.at(at); }
 
-    virtual bool canRender(const QChar *string, int len) const;
+    void setFallbackFamiliesList(const QStringList &fallbackFamilies);
 
-    QFontEngine *engine(int at) const
-    {Q_ASSERT(at < engines.size()); return engines.at(at); }
+    inline QFontEngine *engine(int at) const
+    { Q_ASSERT(at < m_engines.size()); return m_engines.at(at); }
 
-    inline void ensureEngineAt(int at)
-    {
-        if (at >= engines.size() || engines.at(at) == 0)
-            loadEngine(at);
-    }
+    void ensureEngineAt(int at);
 
-    virtual bool shouldLoadFontEngineForCharacter(int at, uint ucs4) const;
-    virtual void setFallbackFamiliesList(const QStringList &) {}
+    static QFontEngine *createMultiFontEngine(QFontEngine *fe, int script);
 
 protected:
-    friend class QRawFont;
-    virtual void loadEngine(int at) = 0;
-    virtual void ensureFallbackFamiliesQueried() {}
-    QVector<QFontEngine *> engines;
-};
-
-class Q_GUI_EXPORT QFontEngineMultiBasicImpl : public QFontEngineMulti
-{
-public:
-    QFontEngineMultiBasicImpl(QFontEngine *fe, int script, const QStringList &fallbacks);
-    QFontEngineMultiBasicImpl(QFontEngine *fe, int script);
-
-    void loadEngine(int at);
-    static QFontEngine* createMultiFontEngine(QFontEngine *fe, int script);
-
-    int fallbackFamilyCount() const { return fallbackFamilies.size(); }
-    QString fallbackFamilyAt(int at) const { return fallbackFamilies.at(at); }
-
     virtual void ensureFallbackFamiliesQueried();
-    virtual void setFallbackFamiliesList(const QStringList &fallbacks);
+    virtual bool shouldLoadFontEngineForCharacter(int at, uint ucs4) const;
+    virtual QFontEngine *loadEngine(int at);
 
 private:
-    void init(QFontEngine *fe);
-
-    mutable QStringList fallbackFamilies;
-    int script;
-    mutable bool fallbacksQueried;
+    QVector<QFontEngine *> m_engines;
+    QStringList m_fallbackFamilies;
+    const int m_script;
+    bool m_fallbackFamiliesQueried;
 };
 
 class QTestFontEngine : public QFontEngineBox
diff -Nuar orig/qtbase/src/gui/text/qfontengine_qpf2.cpp qtbase/src/gui/text/qfontengine_qpf2.cpp
--- orig/qtbase/src/gui/text/qfontengine_qpf2.cpp	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qfontengine_qpf2.cpp	2015-05-11 13:59:06.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -49,7 +49,7 @@
 //#define DEBUG_HEADER
 //#define DEBUG_FONTENGINE
 
-static QFontEngineQPF2::TagType tagTypes[QFontEngineQPF2::NumTags] = {
+static const QFontEngineQPF2::TagType tagTypes[QFontEngineQPF2::NumTags] = {
     QFontEngineQPF2::StringType, // FontName
     QFontEngineQPF2::StringType, // FileName
     QFontEngineQPF2::UInt32Type, // FileIndex
diff -Nuar orig/qtbase/src/gui/text/qfontengine_qpf2_p.h qtbase/src/gui/text/qfontengine_qpf2_p.h
--- orig/qtbase/src/gui/text/qfontengine_qpf2_p.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qfontengine_qpf2_p.h	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -152,29 +152,29 @@
     QFontEngineQPF2(const QFontDef &def, const QByteArray &data);
     ~QFontEngineQPF2();
 
-    FaceId faceId() const { return face_id; }
-    bool getSfntTableData(uint tag, uchar *buffer, uint *length) const;
+    FaceId faceId() const Q_DECL_OVERRIDE { return face_id; }
+    bool getSfntTableData(uint tag, uchar *buffer, uint *length) const Q_DECL_OVERRIDE;
 
-    virtual glyph_t glyphIndex(uint ucs4) const;
-    bool stringToCMap(const QChar *str, int len, QGlyphLayout *glyphs, int *nglyphs, ShaperFlags flags) const;
-    void recalcAdvances(QGlyphLayout *, ShaperFlags) const;
-
-    void addOutlineToPath(qreal x, qreal y, const QGlyphLayout &glyphs, QPainterPath *path, QTextItem::RenderFlags flags);
-    QImage alphaMapForGlyph(glyph_t t);
-
-    glyph_metrics_t boundingBox(const QGlyphLayout &glyphs);
-    glyph_metrics_t boundingBox(glyph_t glyph);
-
-    QFixed ascent() const;
-    QFixed descent() const;
-    QFixed leading() const;
-    qreal maxCharWidth() const;
-    qreal minLeftBearing() const;
-    qreal minRightBearing() const;
-    QFixed underlinePosition() const;
-    QFixed lineThickness() const;
+    virtual glyph_t glyphIndex(uint ucs4) const Q_DECL_OVERRIDE;
+    bool stringToCMap(const QChar *str, int len, QGlyphLayout *glyphs, int *nglyphs, ShaperFlags flags) const Q_DECL_OVERRIDE;
+    void recalcAdvances(QGlyphLayout *, ShaperFlags) const Q_DECL_OVERRIDE;
+
+    void addOutlineToPath(qreal x, qreal y, const QGlyphLayout &glyphs, QPainterPath *path, QTextItem::RenderFlags flags) Q_DECL_OVERRIDE;
+    QImage alphaMapForGlyph(glyph_t t) Q_DECL_OVERRIDE;
+
+    glyph_metrics_t boundingBox(const QGlyphLayout &glyphs) Q_DECL_OVERRIDE;
+    glyph_metrics_t boundingBox(glyph_t glyph) Q_DECL_OVERRIDE;
+
+    QFixed ascent() const Q_DECL_OVERRIDE;
+    QFixed descent() const Q_DECL_OVERRIDE;
+    QFixed leading() const Q_DECL_OVERRIDE;
+    qreal maxCharWidth() const Q_DECL_OVERRIDE;
+    qreal minLeftBearing() const Q_DECL_OVERRIDE;
+    qreal minRightBearing() const Q_DECL_OVERRIDE;
+    QFixed underlinePosition() const Q_DECL_OVERRIDE;
+    QFixed lineThickness() const Q_DECL_OVERRIDE;
 
-    virtual int glyphCount() const { return glyphMapEntries; }
+    virtual int glyphCount() const Q_DECL_OVERRIDE { return glyphMapEntries; }
 
     bool isValid() const;
 
diff -Nuar orig/qtbase/src/gui/text/qfont.h qtbase/src/gui/text/qfont.h
--- orig/qtbase/src/gui/text/qfont.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qfont.h	2015-05-11 13:26:07.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -49,7 +49,6 @@
 class Q_GUI_EXPORT QFont
 {
     Q_GADGET
-    Q_ENUMS(StyleStrategy)
 public:
     enum StyleHint {
         Helvetica,  SansSerif = Helvetica,
@@ -78,6 +77,7 @@
         NoSubpixelAntialias = 0x0800,
         NoFontMerging       = 0x8000
     };
+    //Q_ENUM(StyleStrategy)
 
     enum HintingPreference {
         PreferDefaultHinting        = 0,
@@ -86,12 +86,17 @@
         PreferFullHinting           = 3
     };
 
+    // Mapping OpenType weight value.
     enum Weight {
-        Light    = 25,
-        Normal   = 50,
-        DemiBold = 63,
-        Bold     = 75,
-        Black    = 87
+        Thin     = 0,    // 100
+        ExtraLight = 12, // 200
+        Light    = 25,   // 300
+        Normal   = 50,   // 400
+        Medium   = 57,   // 500
+        DemiBold = 63,   // 600
+        Bold     = 75,   // 700
+        ExtraBold = 81,  // 800
+        Black    = 87    // 900
     };
 
     enum Style {
@@ -217,9 +222,10 @@
     void setHintingPreference(HintingPreference hintingPreference);
     HintingPreference hintingPreference() const;
 
-    // is raw mode still needed?
+#if QT_DEPRECATED_SINCE(5, 5)
     bool rawMode() const;
     void setRawMode(bool);
+#endif
 
     // dupicated from QFontInfo
     bool exactMatch() const;
@@ -231,7 +237,7 @@
     operator QVariant() const;
     bool isCopyOf(const QFont &) const;
 #ifdef Q_COMPILER_RVALUE_REFS
-    inline QFont &operator=(QFont &&other)
+    inline QFont &operator=(QFont &&other) Q_DECL_NOEXCEPT
     { qSwap(d, other.d); qSwap(resolve_mask, other.resolve_mask);  return *this; }
 #endif
 
@@ -313,7 +319,7 @@
 Q_GUI_EXPORT uint qHash(const QFont &font, uint seed = 0) Q_DECL_NOTHROW;
 
 inline bool QFont::bold() const
-{ return weight() > Normal; }
+{ return weight() > Medium; }
 
 
 inline void QFont::setBold(bool enable)
diff -Nuar orig/qtbase/src/gui/text/qfontinfo.h qtbase/src/gui/text/qfontinfo.h
--- orig/qtbase/src/gui/text/qfontinfo.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qfontinfo.h	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -65,7 +65,9 @@
     bool strikeOut() const;
     bool fixedPitch() const;
     QFont::StyleHint styleHint() const;
+#if QT_DEPRECATED_SINCE(5, 5)
     bool rawMode() const;
+#endif
 
     bool exactMatch() const;
 
diff -Nuar orig/qtbase/src/gui/text/qfontmetrics.cpp qtbase/src/gui/text/qfontmetrics.cpp
--- orig/qtbase/src/gui/text/qfontmetrics.cpp	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qfontmetrics.cpp	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -38,9 +38,6 @@
 #include "qfont_p.h"
 #include "qfontengine_p.h"
 
-#include <math.h>
-
-
 QT_BEGIN_NAMESPACE
 
 
diff -Nuar orig/qtbase/src/gui/text/qfontmetrics.h qtbase/src/gui/text/qfontmetrics.h
--- orig/qtbase/src/gui/text/qfontmetrics.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qfontmetrics.h	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -58,11 +58,12 @@
 
     QFontMetrics &operator=(const QFontMetrics &);
 #ifdef Q_COMPILER_RVALUE_REFS
-    inline QFontMetrics &operator=(QFontMetrics &&other)
+    inline QFontMetrics &operator=(QFontMetrics &&other) Q_DECL_NOEXCEPT
     { qSwap(d, other.d); return *this; }
 #endif
 
-    void swap(QFontMetrics &other) { qSwap(d, other.d); }
+    void swap(QFontMetrics &other) Q_DECL_NOEXCEPT
+    { qSwap(d, other.d); }
 
     int ascent() const;
     int descent() const;
diff -Nuar orig/qtbase/src/gui/text/qfont_p.h qtbase/src/gui/text/qfont_p.h
--- orig/qtbase/src/gui/text/qfont_p.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qfont_p.h	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -175,8 +175,6 @@
     int dpi;
     int screen;
 
-
-    uint rawMode    :  1;
     uint underline  :  1;
     uint overline   :  1;
     uint strikeOut  :  1;
@@ -277,7 +275,7 @@
 private:
     void increaseCost(uint cost);
     void decreaseCost(uint cost);
-    void timerEvent(QTimerEvent *event);
+    void timerEvent(QTimerEvent *event) Q_DECL_OVERRIDE;
 
     static const uint min_cost;
     uint total_cost, max_cost;
diff -Nuar orig/qtbase/src/gui/text/qfontsubset_agl.cpp qtbase/src/gui/text/qfontsubset_agl.cpp
--- orig/qtbase/src/gui/text/qfontsubset_agl.cpp	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qfontsubset_agl.cpp	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
diff -Nuar orig/qtbase/src/gui/text/qfontsubset.cpp qtbase/src/gui/text/qfontsubset.cpp
--- orig/qtbase/src/gui/text/qfontsubset.cpp	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qfontsubset.cpp	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -36,7 +36,6 @@
 #include <qendian.h>
 #include <qpainterpath.h>
 #include "private/qpdf_p.h"
-#include "private/qfunctions_p.h"
 
 #include "qfontsubset_agl.cpp"
 
@@ -421,7 +420,7 @@
 {
     quint32 sum = 0;
     int offset = 0;
-    const uchar *d = (uchar *)table.constData();
+    const uchar *d = (const uchar *)table.constData();
     while (offset <= table.size()-3) {
         sum += qFromBigEndian<quint32>(d + offset);
         offset += 4;
@@ -979,7 +978,7 @@
     return glyph;
 }
 
-Q_STATIC_GLOBAL_OPERATOR bool operator <(const QTtfGlyph &g1, const QTtfGlyph &g2)
+static bool operator <(const QTtfGlyph &g1, const QTtfGlyph &g2)
 {
     return g1.index < g2.index;
 }
@@ -1057,7 +1056,7 @@
     return list;
 }
 
-Q_STATIC_GLOBAL_OPERATOR bool operator <(const QTtfTable &t1, const QTtfTable &t2)
+static bool operator <(const QTtfTable &t1, const QTtfTable &t2)
 {
     return t1.tag < t2.tag;
 }
diff -Nuar orig/qtbase/src/gui/text/qfontsubset_p.h qtbase/src/gui/text/qfontsubset_p.h
--- orig/qtbase/src/gui/text/qfontsubset_p.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qfontsubset_p.h	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
diff -Nuar orig/qtbase/src/gui/text/qfragmentmap.cpp qtbase/src/gui/text/qfragmentmap.cpp
--- orig/qtbase/src/gui/text/qfragmentmap.cpp	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qfragmentmap.cpp	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
diff -Nuar orig/qtbase/src/gui/text/qfragmentmap_p.h qtbase/src/gui/text/qfragmentmap_p.h
--- orig/qtbase/src/gui/text/qfragmentmap_p.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qfragmentmap_p.h	2015-05-11 15:56:46.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -241,6 +241,7 @@
     free(fragments);
 }
 
+
 template <class Fragment>
 uint QFragmentMapData<Fragment>::createFragment()
 {
@@ -249,6 +250,8 @@
     uint freePos = head->freelist;
     if (freePos == head->allocated) {
         // need to create some free space
+        if (freePos >= uint(MaxAllocSize) / fragmentSize)
+            qBadAlloc();
         uint needed = qAllocMore((freePos+1)*fragmentSize, 0);
         Q_ASSERT(needed/fragmentSize > head->allocated);
         Fragment *newFragments = (Fragment *)realloc(fragments, needed);
diff -Nuar orig/qtbase/src/gui/text/qglyphrun.cpp qtbase/src/gui/text/qglyphrun.cpp
--- orig/qtbase/src/gui/text/qglyphrun.cpp	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qglyphrun.cpp	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
diff -Nuar orig/qtbase/src/gui/text/qglyphrun.h qtbase/src/gui/text/qglyphrun.h
--- orig/qtbase/src/gui/text/qglyphrun.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qglyphrun.h	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
diff -Nuar orig/qtbase/src/gui/text/qglyphrun_p.h qtbase/src/gui/text/qglyphrun_p.h
--- orig/qtbase/src/gui/text/qglyphrun_p.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qglyphrun_p.h	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
diff -Nuar orig/qtbase/src/gui/text/qharfbuzzng.cpp qtbase/src/gui/text/qharfbuzzng.cpp
--- orig/qtbase/src/gui/text/qharfbuzzng.cpp	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qharfbuzzng.cpp	2015-05-11 14:00:20.000000000 -0700
@@ -1,8 +1,8 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
+** Copyright (C) 2015 The Qt Company Ltd.
 ** Copyright (C) 2013 Konstantin Ritt
-** Contact: http://www.qt-project.org/legal
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -11,9 +11,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -24,8 +24,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -94,6 +94,8 @@
     HB_SCRIPT_BUHID,
     HB_SCRIPT_TAGBANWA,
     HB_SCRIPT_COPTIC,
+
+    // Unicode 4.0 additions
     HB_SCRIPT_LIMBU,
     HB_SCRIPT_TAI_LE,
     HB_SCRIPT_LINEAR_B,
@@ -102,6 +104,8 @@
     HB_SCRIPT_OSMANYA,
     HB_SCRIPT_CYPRIOT,
     HB_SCRIPT_BRAILLE,
+
+    // Unicode 4.1 additions
     HB_SCRIPT_BUGINESE,
     HB_SCRIPT_NEW_TAI_LUE,
     HB_SCRIPT_GLAGOLITIC,
@@ -109,11 +113,15 @@
     HB_SCRIPT_SYLOTI_NAGRI,
     HB_SCRIPT_OLD_PERSIAN,
     HB_SCRIPT_KHAROSHTHI,
+
+    // Unicode 5.0 additions
     HB_SCRIPT_BALINESE,
     HB_SCRIPT_CUNEIFORM,
     HB_SCRIPT_PHOENICIAN,
     HB_SCRIPT_PHAGS_PA,
     HB_SCRIPT_NKO,
+
+    // Unicode 5.1 additions
     HB_SCRIPT_SUNDANESE,
     HB_SCRIPT_LEPCHA,
     HB_SCRIPT_OL_CHIKI,
@@ -125,6 +133,8 @@
     HB_SCRIPT_CARIAN,
     HB_SCRIPT_LYDIAN,
     HB_SCRIPT_CHAM,
+
+    // Unicode 5.2 additions
     HB_SCRIPT_TAI_THAM,
     HB_SCRIPT_TAI_VIET,
     HB_SCRIPT_AVESTAN,
@@ -140,18 +150,47 @@
     HB_SCRIPT_INSCRIPTIONAL_PAHLAVI,
     HB_SCRIPT_OLD_TURKIC,
     HB_SCRIPT_KAITHI,
+
+    // Unicode 6.0 additions
     HB_SCRIPT_BATAK,
     HB_SCRIPT_BRAHMI,
     HB_SCRIPT_MANDAIC,
+
+    // Unicode 6.1 additions
     HB_SCRIPT_CHAKMA,
     HB_SCRIPT_MEROITIC_CURSIVE,
     HB_SCRIPT_MEROITIC_HIEROGLYPHS,
     HB_SCRIPT_MIAO,
     HB_SCRIPT_SHARADA,
     HB_SCRIPT_SORA_SOMPENG,
-    HB_SCRIPT_TAKRI
+    HB_SCRIPT_TAKRI,
+
+    // Unicode 7.0 additions
+    HB_SCRIPT_CAUCASIAN_ALBANIAN,
+    HB_SCRIPT_BASSA_VAH,
+    HB_SCRIPT_DUPLOYAN,
+    HB_SCRIPT_ELBASAN,
+    HB_SCRIPT_GRANTHA,
+    HB_SCRIPT_PAHAWH_HMONG,
+    HB_SCRIPT_KHOJKI,
+    HB_SCRIPT_LINEAR_A,
+    HB_SCRIPT_MAHAJANI,
+    HB_SCRIPT_MANICHAEAN,
+    HB_SCRIPT_MENDE_KIKAKUI,
+    HB_SCRIPT_MODI,
+    HB_SCRIPT_MRO,
+    HB_SCRIPT_OLD_NORTH_ARABIAN,
+    HB_SCRIPT_NABATAEAN,
+    HB_SCRIPT_PALMYRENE,
+    HB_SCRIPT_PAU_CIN_HAU,
+    HB_SCRIPT_OLD_PERMIC,
+    HB_SCRIPT_PSALTER_PAHLAVI,
+    HB_SCRIPT_SIDDHAM,
+    HB_SCRIPT_KHUDAWADI,
+    HB_SCRIPT_TIRHUTA,
+    HB_SCRIPT_WARANG_CITI
 };
-Q_STATIC_ASSERT(QChar::ScriptCount == sizeof(_qtscript_to_hbscript) / sizeof(_qtscript_to_hbscript[0]));
+//Q_STATIC_ASSERT(QChar::ScriptCount == sizeof(_qtscript_to_hbscript) / sizeof(_qtscript_to_hbscript[0]));
 
 hb_script_t hb_qt_script_to_script(QChar::Script script)
 {
@@ -375,7 +414,7 @@
                       hb_codepoint_t *glyph,
                       void * /*user_data*/)
 {
-    QFontEngine *fe = (QFontEngine *)font_data;
+    QFontEngine *fe = static_cast<QFontEngine *>(font_data);
     Q_ASSERT(fe);
 
     *glyph = fe->glyphIndex(unicode);
@@ -388,7 +427,7 @@
                                 hb_codepoint_t glyph,
                                 void * /*user_data*/)
 {
-    QFontEngine *fe = (QFontEngine *)font_data;
+    QFontEngine *fe = static_cast<QFontEngine *>(font_data);
     Q_ASSERT(fe);
 
     QFixed advance;
@@ -436,7 +475,7 @@
                                 hb_codepoint_t first_glyph, hb_codepoint_t second_glyph,
                                 void * /*user_data*/)
 {
-    QFontEngine *fe = (QFontEngine *)font_data;
+    QFontEngine *fe = static_cast<QFontEngine *>(font_data);
     Q_ASSERT(fe);
 
     glyph_t glyphs[2] = { first_glyph, second_glyph };
@@ -467,7 +506,7 @@
                               hb_glyph_extents_t *extents,
                               void * /*user_data*/)
 {
-    QFontEngine *fe = (QFontEngine *)font_data;
+    QFontEngine *fe = static_cast<QFontEngine *>(font_data);
     Q_ASSERT(fe);
 
     glyph_metrics_t gm = fe->boundingBox(glyph);
@@ -486,7 +525,7 @@
                                     unsigned int point_index, hb_position_t *x, hb_position_t *y,
                                     void * /*user_data*/)
 {
-    QFontEngine *fe = (QFontEngine *)font_data;
+    QFontEngine *fe = static_cast<QFontEngine *>(font_data);
     Q_ASSERT(fe);
 
     QFixed xpos, ypos;
@@ -573,7 +612,7 @@
 static hb_blob_t *
 _hb_qt_reference_table(hb_face_t * /*face*/, hb_tag_t tag, void *user_data)
 {
-    QFontEngine::FaceData *data = (QFontEngine::FaceData *)user_data;
+    QFontEngine::FaceData *data = static_cast<QFontEngine::FaceData *>(user_data);
     Q_ASSERT(data);
 
     qt_get_font_table_func_t get_font_table = data->get_font_table;
@@ -583,21 +622,21 @@
     if (Q_UNLIKELY(!get_font_table(data->user_data, tag, 0, &length)))
         return hb_blob_get_empty();
 
-    char *buffer = (char *)malloc(length);
+    char *buffer = static_cast<char *>(malloc(length));
     Q_CHECK_PTR(buffer);
 
     if (Q_UNLIKELY(!get_font_table(data->user_data, tag, reinterpret_cast<uchar *>(buffer), &length)))
         length = 0;
 
     return hb_blob_create(const_cast<const char *>(buffer), length,
-                          HB_MEMORY_MODE_WRITABLE,
+                          HB_MEMORY_MODE_READONLY,
                           buffer, free);
 }
 
 static inline hb_face_t *
 _hb_qt_face_create(QFontEngine *fe)
 {
-    QFontEngine::FaceData *data = (QFontEngine::FaceData *)malloc(sizeof(QFontEngine::FaceData));
+    QFontEngine::FaceData *data = static_cast<QFontEngine::FaceData *>(malloc(sizeof(QFontEngine::FaceData)));
     Q_CHECK_PTR(data);
     data->user_data = fe->faceData.user_data;
     data->get_font_table = fe->faceData.get_font_table;
@@ -618,7 +657,7 @@
 _hb_qt_face_release(void *user_data)
 {
     if (Q_LIKELY(user_data))
-        hb_face_destroy((hb_face_t *)user_data);
+        hb_face_destroy(static_cast<hb_face_t *>(user_data));
 }
 
 hb_face_t *hb_qt_face_get_for_engine(QFontEngine *fe)
@@ -632,7 +671,7 @@
         fe->face_destroy_func = _hb_qt_face_release;
     }
 
-    return (hb_face_t *)fe->face_;
+    return static_cast<hb_face_t *>(fe->face_);
 }
 
 
@@ -668,7 +707,7 @@
 _hb_qt_font_release(void *user_data)
 {
     if (Q_LIKELY(user_data))
-        hb_font_destroy((hb_font_t *)user_data);
+        hb_font_destroy(static_cast<hb_font_t *>(user_data));
 }
 
 hb_font_t *hb_qt_font_get_for_engine(QFontEngine *fe)
@@ -682,7 +721,7 @@
         fe->font_destroy_func = _hb_qt_font_release;
     }
 
-    return (hb_font_t *)fe->font_;
+    return static_cast<hb_font_t *>(fe->font_);
 }
 
 QT_END_NAMESPACE
diff -Nuar orig/qtbase/src/gui/text/qharfbuzzng_p.h qtbase/src/gui/text/qharfbuzzng_p.h
--- orig/qtbase/src/gui/text/qharfbuzzng_p.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qharfbuzzng_p.h	2015-05-11 13:25:18.000000000 -0700
@@ -1,8 +1,8 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
+** Copyright (C) 2015 The Qt Company Ltd.
 ** Copyright (C) 2013 Konstantin Ritt
-** Contact: http://www.qt-project.org/legal
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -11,9 +11,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -24,8 +24,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
diff -Nuar orig/qtbase/src/gui/text/qplatformfontdatabase.cpp qtbase/src/gui/text/qplatformfontdatabase.cpp
--- orig/qtbase/src/gui/text/qplatformfontdatabase.cpp	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qplatformfontdatabase.cpp	2015-05-11 13:59:50.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -34,6 +34,9 @@
 #include "qplatformfontdatabase.h"
 #include <QtGui/private/qfontengine_p.h>
 #include <QtGui/private/qfontengine_qpf2_p.h>
+#include <QtGui/QGuiApplication>
+#include <QtGui/QScreen>
+#include <qpa/qplatformscreen.h>
 #include <QtCore/QLibraryInfo>
 #include <QtCore/QDir>
 
@@ -314,7 +317,7 @@
 */
 QFontEngineMulti *QPlatformFontDatabase::fontEngineMulti(QFontEngine *fontEngine, QChar::Script script)
 {
-    return new QFontEngineMultiBasicImpl(fontEngine, script);
+    return new QFontEngineMulti(fontEngine, script);
 }
 
 /*!
@@ -457,6 +460,15 @@
     return ret;
 }
 
+QFontEngine::SubpixelAntialiasingType QPlatformFontDatabase::subpixelAntialiasingTypeHint() const
+{
+    static int type = -1;
+    if (type == -1) {
+        //if (QScreen *screen = QGuiApplication::primaryScreen())
+            //type = screen->handle()->subpixelAntialiasingTypeHint();
+    }
+    return static_cast<QFontEngine::SubpixelAntialiasingType>(type);
+}
 
 // ### copied to tools/makeqpf/qpf2.cpp
 
@@ -510,9 +522,11 @@
     VietnameseCsbBit = 8,
     SimplifiedChineseCsbBit = 18,
     TraditionalChineseCsbBit = 20,
+    ThaiCsbBit = 16,
     JapaneseCsbBit = 17,
     KoreanCsbBit = 19,
-    KoreanJohabCsbBit = 21
+    KoreanJohabCsbBit = 21,
+    SymbolCsbBit = 31
 };
 
 /*!
@@ -567,6 +581,11 @@
         hasScript = true;
         //qDebug("font %s supports Arabic", familyName.latin1());
     }
+    if (codePageRange[0] & (1 << ThaiCsbBit)) {
+        writingSystems.setSupported(QFontDatabase::Thai);
+        hasScript = true;
+        //qDebug("font %s supports Thai", familyName.latin1());
+    }
     if (codePageRange[0] & (1 << VietnameseCsbBit)) {
         writingSystems.setSupported(QFontDatabase::Vietnamese);
         hasScript = true;
@@ -592,6 +611,11 @@
         hasScript = true;
         //qDebug("font %s supports Korean", familyName.latin1());
     }
+    if (codePageRange[0] & (1U << SymbolCsbBit)) {
+        writingSystems = QSupportedWritingSystems();
+        hasScript = false;
+    }
+
     if (!hasScript)
         writingSystems.setSupported(QFontDatabase::Symbol);
 
@@ -599,6 +623,34 @@
 }
 
 /*!
+    Helper function that returns the Qt font weight matching a given opentype integer value.
+
+    \since 5.5
+*/
+
+// convert 0 ~ 1000 integer to QFont::Weight
+QFont::Weight QPlatformFontDatabase::weightFromInteger(int weight)
+{
+    if (weight < 150)
+        return QFont::Thin;
+    if (weight < 250)
+        return QFont::ExtraLight;
+    if (weight < 350)
+        return QFont::Light;
+    if (weight < 450)
+        return QFont::Normal;
+    if (weight < 550)
+        return QFont::Medium;
+    if (weight < 650)
+        return QFont::DemiBold;
+    if (weight < 750)
+        return QFont::Bold;
+    if (weight < 850)
+        return QFont::ExtraBold;
+    return QFont::Black;
+}
+
+/*!
     Helper function that register the \a alias for the \a familyName.
 
     \since 5.2
diff -Nuar orig/qtbase/src/gui/text/qplatformfontdatabase.h qtbase/src/gui/text/qplatformfontdatabase.h
--- orig/qtbase/src/gui/text/qplatformfontdatabase.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qplatformfontdatabase.h	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -49,6 +49,7 @@
 #include <QtCore/QList>
 #include <QtCore/QHash>
 #include <QtGui/QFontDatabase>
+#include <QtGui/private/qfontengine_p.h>
 #include <QtGui/private/qfont_p.h>
 
 QT_BEGIN_NAMESPACE
@@ -107,9 +108,11 @@
     virtual QString resolveFontFamilyAlias(const QString &family) const;
     virtual bool fontsAlwaysScalable() const;
     virtual QList<int> standardSizes() const;
+    QFontEngine::SubpixelAntialiasingType subpixelAntialiasingTypeHint() const;
 
     // helper
     static QSupportedWritingSystems writingSystemsFromTrueTypeBits(quint32 unicodeRange[4], quint32 codePageRange[2]);
+    static QFont::Weight weightFromInteger(int weight);
 
     //callback
     static void registerQPF2Font(const QByteArray &dataArray, void *handle);
diff -Nuar orig/qtbase/src/gui/text/qrawfont.cpp qtbase/src/gui/text/qrawfont.cpp
--- orig/qtbase/src/gui/text/qrawfont.cpp	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qrawfont.cpp	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
diff -Nuar orig/qtbase/src/gui/text/qrawfont.h qtbase/src/gui/text/qrawfont.h
--- orig/qtbase/src/gui/text/qrawfont.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qrawfont.h	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
diff -Nuar orig/qtbase/src/gui/text/qrawfont_p.h qtbase/src/gui/text/qrawfont_p.h
--- orig/qtbase/src/gui/text/qrawfont_p.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qrawfont_p.h	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
diff -Nuar orig/qtbase/src/gui/text/qstatictext.cpp qtbase/src/gui/text/qstatictext.cpp
--- orig/qtbase/src/gui/text/qstatictext.cpp	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qstatictext.cpp	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the test suite of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -393,7 +393,7 @@
 }
 
 QStaticTextPrivate::QStaticTextPrivate()
-        : textWidth(-1.0), items(0), itemCount(0), glyphPool(0), positionPool(0), charPool(0),
+        : textWidth(-1.0), items(0), itemCount(0), glyphPool(0), positionPool(0),
           needsRelayout(true), useBackendOptimizations(false), textFormat(Qt::AutoText),
           untransformedCoordinates(false)
 {
@@ -401,7 +401,7 @@
 
 QStaticTextPrivate::QStaticTextPrivate(const QStaticTextPrivate &other)
     : text(other.text), font(other.font), textWidth(other.textWidth), matrix(other.matrix),
-      items(0), itemCount(0), glyphPool(0), positionPool(0), charPool(0), textOption(other.textOption),
+      items(0), itemCount(0), glyphPool(0), positionPool(0), textOption(other.textOption),
       needsRelayout(true), useBackendOptimizations(other.useBackendOptimizations),
       textFormat(other.textFormat), untransformedCoordinates(other.untransformedCoordinates)
 {
@@ -412,7 +412,6 @@
     delete[] items;
     delete[] glyphPool;
     delete[] positionPool;
-    delete[] charPool;
 }
 
 QStaticTextPrivate *QStaticTextPrivate::get(const QStaticText *q)
@@ -431,7 +430,7 @@
         {
         }
 
-        virtual void updateState(const QPaintEngineState &newState)
+        virtual void updateState(const QPaintEngineState &newState) Q_DECL_OVERRIDE
         {
             if (newState.state() & QPaintEngine::DirtyPen
                 && newState.pen().color() != m_currentColor) {
@@ -440,15 +439,13 @@
             }
         }
 
-        virtual void drawTextItem(const QPointF &position, const QTextItem &textItem)
+        virtual void drawTextItem(const QPointF &position, const QTextItem &textItem) Q_DECL_OVERRIDE
         {
             const QTextItemInt &ti = static_cast<const QTextItemInt &>(textItem);
 
             QStaticTextItem currentItem;
             currentItem.setFontEngine(ti.fontEngine);
             currentItem.font = ti.font();
-            currentItem.charOffset = m_chars.size();
-            currentItem.numChars = ti.num_chars;
             currentItem.glyphOffset = m_glyphs.size(); // Store offset into glyph pool
             currentItem.positionOffset = m_glyphs.size(); // Offset into position pool
             currentItem.useBackendOptimizations = m_useBackendOptimizations;
@@ -468,7 +465,6 @@
 
             m_glyphs.resize(m_glyphs.size() + size);
             m_positions.resize(m_glyphs.size());
-            m_chars.resize(m_chars.size() + ti.num_chars);
 
             glyph_t *glyphsDestination = m_glyphs.data() + currentItem.glyphOffset;
             memcpy(glyphsDestination, glyphs.constData(), sizeof(glyph_t) * currentItem.numGlyphs);
@@ -476,21 +472,18 @@
             QFixedPoint *positionsDestination = m_positions.data() + currentItem.positionOffset;
             memcpy(positionsDestination, positions.constData(), sizeof(QFixedPoint) * currentItem.numGlyphs);
 
-            QChar *charsDestination = m_chars.data() + currentItem.charOffset;
-            memcpy(charsDestination, ti.chars, sizeof(QChar) * currentItem.numChars);
-
             m_items.append(currentItem);
         }
 
-        virtual void drawPolygon(const QPointF *, int , PolygonDrawMode )
+        virtual void drawPolygon(const QPointF *, int , PolygonDrawMode ) Q_DECL_OVERRIDE
         {
             /* intentionally empty */
         }
 
-        virtual bool begin(QPaintDevice *)  { return true; }
-        virtual bool end() { return true; }
-        virtual void drawPixmap(const QRectF &, const QPixmap &, const QRectF &) {}
-        virtual Type type() const
+        virtual bool begin(QPaintDevice *) Q_DECL_OVERRIDE  { return true; }
+        virtual bool end() Q_DECL_OVERRIDE { return true; }
+        virtual void drawPixmap(const QRectF &, const QPixmap &, const QRectF &) Q_DECL_OVERRIDE {}
+        virtual Type type() const Q_DECL_OVERRIDE
         {
             return User;
         }
@@ -510,16 +503,10 @@
             return m_glyphs;
         }
 
-        QVector<QChar> chars() const
-        {
-            return m_chars;
-        }
-
     private:
         QVector<QStaticTextItem> m_items;
         QVector<QFixedPoint> m_positions;
         QVector<glyph_t> m_glyphs;
-        QVector<QChar> m_chars;
 
         bool m_dirtyPen;
         bool m_useBackendOptimizations;
@@ -541,7 +528,7 @@
             delete m_paintEngine;
         }
 
-        int metric(PaintDeviceMetric m) const
+        int metric(PaintDeviceMetric m) const Q_DECL_OVERRIDE
         {
             int val;
             switch (m) {
@@ -575,7 +562,7 @@
             return val;
         }
 
-        virtual QPaintEngine *paintEngine() const
+        virtual QPaintEngine *paintEngine() const Q_DECL_OVERRIDE
         {
             return m_paintEngine;
         }
@@ -595,11 +582,6 @@
             return m_paintEngine->items();
         }
 
-        QVector<QChar> chars() const
-        {
-            return m_paintEngine->chars();
-        }
-
     private:
         DrawTextItemRecorder *m_paintEngine;
     };
@@ -677,7 +659,6 @@
     delete[] items;
     delete[] glyphPool;
     delete[] positionPool;
-    delete[] charPool;
 
     position = QPointF(0, 0);
 
@@ -693,7 +674,6 @@
     QVector<QStaticTextItem> deviceItems = device.items();
     QVector<QFixedPoint> positions = device.positions();
     QVector<glyph_t> glyphs = device.glyphs();
-    QVector<QChar> chars = device.chars();
 
     itemCount = deviceItems.size();
     items = new QStaticTextItem[itemCount];
@@ -704,15 +684,11 @@
     positionPool = new QFixedPoint[positions.size()];
     memcpy(positionPool, positions.constData(), positions.size() * sizeof(QFixedPoint));
 
-    charPool = new QChar[chars.size()];
-    memcpy(charPool, chars.constData(), chars.size() * sizeof(QChar));
-
     for (int i=0; i<itemCount; ++i) {
         items[i] = deviceItems.at(i);
 
         items[i].glyphs = glyphPool + items[i].glyphOffset;
         items[i].glyphPositions = positionPool + items[i].positionOffset;
-        items[i].chars = charPool + items[i].charOffset;
     }
 
     needsRelayout = false;
diff -Nuar orig/qtbase/src/gui/text/qstatictext.h qtbase/src/gui/text/qstatictext.h
--- orig/qtbase/src/gui/text/qstatictext.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qstatictext.h	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the test suite of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
diff -Nuar orig/qtbase/src/gui/text/qstatictext_p.h qtbase/src/gui/text/qstatictext_p.h
--- orig/qtbase/src/gui/text/qstatictext_p.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qstatictext_p.h	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the test suite of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -70,7 +70,7 @@
 class Q_GUI_EXPORT QStaticTextItem
 {
 public:
-    QStaticTextItem() : chars(0), numChars(0), useBackendOptimizations(false),
+    QStaticTextItem() : useBackendOptimizations(false),
                         userDataNeedsUpdate(0), usesRawFont(0),
                         m_fontEngine(0), m_userData(0) {}
 
@@ -83,9 +83,7 @@
     {
         glyphPositions = other.glyphPositions;
         glyphs = other.glyphs;
-        chars = other.chars;
         numGlyphs = other.numGlyphs;
-        numChars = other.numChars;
         font = other.font;
         color = other.color;
         useBackendOptimizations = other.useBackendOptimizations;
@@ -125,28 +123,22 @@
         glyph_t *glyphs;                         // 4 bytes per glyph
         int glyphOffset;
     };
-    union {
-        QChar *chars;                            // 2 bytes per glyph
-        int charOffset;
-    };
                                                  // =================
-                                                 // 14 bytes per glyph
+                                                 // 12 bytes per glyph
 
-                                                 // 12 bytes for pointers
+                                                 // 8 bytes for pointers
     int numGlyphs;                               // 4 bytes per item
-    int numChars;                                // 4 bytes per item
     QFont font;                                  // 8 bytes per item
     QColor color;                                // 10 bytes per item
     char useBackendOptimizations : 1;            // 1 byte per item
     char userDataNeedsUpdate : 1;                //
     char usesRawFont : 1;                        //
-                                                 // ================
-                                                 // 51 bytes per item
 
 private: // Needs special handling in setters, so private to avoid abuse
     QFontEngine *m_fontEngine;                     // 4 bytes per item
     QStaticTextUserData *m_userData;               // 8 bytes per item
-
+                                                 // ================
+                                                 // 43 bytes per item
 };
 
 class QStaticText;
@@ -179,7 +171,6 @@
 
     glyph_t *glyphPool;                  // 4 bytes per text
     QFixedPoint *positionPool;           // 4 bytes per text
-    QChar *charPool;                     // 4 bytes per text
 
     QTextOption textOption;              // 28 bytes per text
 
@@ -188,7 +179,7 @@
     unsigned char textFormat               : 2;
     unsigned char untransformedCoordinates : 1;
                                          // ================
-                                         // 195 bytes per text
+                                         // 191 bytes per text
 
     static QStaticTextPrivate *get(const QStaticText *q);
 };
diff -Nuar orig/qtbase/src/gui/text/qsyntaxhighlighter.cpp qtbase/src/gui/text/qsyntaxhighlighter.cpp
--- orig/qtbase/src/gui/text/qsyntaxhighlighter.cpp	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qsyntaxhighlighter.cpp	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
diff -Nuar orig/qtbase/src/gui/text/qsyntaxhighlighter.h qtbase/src/gui/text/qsyntaxhighlighter.h
--- orig/qtbase/src/gui/text/qsyntaxhighlighter.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qsyntaxhighlighter.h	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
diff -Nuar orig/qtbase/src/gui/text/qtextcursor.cpp qtbase/src/gui/text/qtextcursor.cpp
--- orig/qtbase/src/gui/text/qtextcursor.cpp	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qtextcursor.cpp	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -424,9 +424,9 @@
 
         // skip if already at word start
         QTextEngine *engine = layout->engine();
-        engine->attributes();
+        const QCharAttributes *attributes = engine->attributes();
         if ((relativePos == blockIt.length() - 1)
-            && (engine->atSpace(relativePos - 1) || engine->atWordSeparator(relativePos - 1)))
+            && (attributes[relativePos - 1].whiteSpace || engine->atWordSeparator(relativePos - 1)))
             return false;
 
         if (relativePos < blockIt.length()-1)
@@ -499,7 +499,7 @@
     }
     case QTextCursor::EndOfWord: {
         QTextEngine *engine = layout->engine();
-        engine->attributes();
+        const QCharAttributes *attributes = engine->attributes();
         const int len = blockIt.length() - 1;
         if (relativePos >= len)
             return false;
@@ -508,7 +508,7 @@
             while (relativePos < len && engine->atWordSeparator(relativePos))
                 ++relativePos;
         } else {
-            while (relativePos < len && !engine->atSpace(relativePos) && !engine->atWordSeparator(relativePos))
+            while (relativePos < len && !attributes[relativePos].whiteSpace && !engine->atWordSeparator(relativePos))
                 ++relativePos;
         }
         newPosition = blockIt.position() + relativePos;
@@ -910,8 +910,8 @@
     select text. For selections see selectionStart(), selectionEnd(),
     hasSelection(), clearSelection(), and removeSelectedText().
 
-    If the position() is at the start of a block atBlockStart()
-    returns \c true; and if it is at the end of a block atBlockEnd() returns
+    If the position() is at the start of a block, atBlockStart()
+    returns \c true; and if it is at the end of a block, atBlockEnd() returns
     true. The format of the current character is returned by
     charFormat(), and the format of the current block is returned by
     blockFormat().
@@ -921,9 +921,9 @@
     mergeBlockFormat() functions. The 'set' functions will replace the
     cursor's current character or block format, while the 'merge'
     functions add the given format properties to the cursor's current
-    format. If the cursor has a selection the given format is applied
-    to the current selection. Note that when only parts of a block is
-    selected the block format is applied to the entire block. The text
+    format. If the cursor has a selection, the given format is applied
+    to the current selection. Note that when only a part of a block is
+    selected, the block format is applied to the entire block. The text
     at the current character position can be turned into a list using
     createList().
 
diff -Nuar orig/qtbase/src/gui/text/qtextcursor.h qtbase/src/gui/text/qtextcursor.h
--- orig/qtbase/src/gui/text/qtextcursor.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qtextcursor.h	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
diff -Nuar orig/qtbase/src/gui/text/qtextcursor_p.h qtbase/src/gui/text/qtextcursor_p.h
--- orig/qtbase/src/gui/text/qtextcursor_p.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qtextcursor_p.h	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
diff -Nuar orig/qtbase/src/gui/text/qtextdocument.cpp qtbase/src/gui/text/qtextdocument.cpp
--- orig/qtbase/src/gui/text/qtextdocument.cpp	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qtextdocument.cpp	2015-05-11 13:58:09.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -40,6 +40,7 @@
 #include "qtextlist.h"
 #include <qdebug.h>
 #include <qregexp.h>
+#include <qregularexpression.h>
 #include <qvarlengtharray.h>
 #include <qtextcodec.h>
 #include <qthread.h>
@@ -1141,6 +1142,9 @@
     Returns the plain text contained in the document. If you want
     formatting information use a QTextCursor instead.
 
+    \note Embedded objects, such as images, are represented by a
+    Unicode value U+FFFC (OBJECT REPLACEMENT CHARACTER).
+
     \sa toHtml()
 */
 QString QTextDocument::toPlainText() const
@@ -1171,7 +1175,7 @@
 
 /*!
     Replaces the entire contents of the document with the given plain
-    \a text.
+    \a text. The undo/redo history is reset when this function is called.
 
     \sa setHtml()
 */
@@ -1189,7 +1193,8 @@
 
 /*!
     Replaces the entire contents of the document with the given
-    HTML-formatted text in the \a html string.
+    HTML-formatted text in the \a html string. The undo/redo history
+    is reset when this function is called.
 
     The HTML formatting is respected as much as possible; for example,
     "<b>bold</b> text" will produce text where the first word has a font
@@ -1243,6 +1248,39 @@
     \sa metaInformation(), setMetaInformation()
 */
 
+static bool findInBlock(const QTextBlock &block, const QString &expression, int offset,
+                        QTextDocument::FindFlags options, QTextCursor *cursor)
+{
+    QString text = block.text();
+    text.replace(QChar::Nbsp, QLatin1Char(' '));
+    Qt::CaseSensitivity sensitivity = options & QTextDocument::FindCaseSensitively ? Qt::CaseSensitive : Qt::CaseInsensitive;
+    int idx = -1;
+
+    while (offset >= 0 && offset <= text.length()) {
+        idx = (options & QTextDocument::FindBackward) ?
+               text.lastIndexOf(expression, offset, sensitivity) : text.indexOf(expression, offset, sensitivity);
+        if (idx == -1)
+            return false;
+
+        if (options & QTextDocument::FindWholeWords) {
+            const int start = idx;
+            const int end = start + expression.length();
+            if ((start != 0 && text.at(start - 1).isLetterOrNumber())
+                || (end != text.length() && text.at(end).isLetterOrNumber())) {
+                //if this is not a whole word, continue the search in the string
+                offset = (options & QTextDocument::FindBackward) ? idx-1 : end+1;
+                idx = -1;
+                continue;
+            }
+        }
+        //we have a hit, return the cursor for that.
+        *cursor = QTextCursor(block.docHandle(), block.position() + idx);
+        cursor->setPosition(cursor->position() + expression.length(), QTextCursor::KeepAnchor);
+        return true;
+    }
+    return false;
+}
+
 /*!
     \fn QTextCursor QTextDocument::find(const QString &subString, int position, FindFlags options) const
 
@@ -1261,16 +1299,44 @@
 */
 QTextCursor QTextDocument::find(const QString &subString, int from, FindFlags options) const
 {
-    QRegExp expr(subString);
-    expr.setPatternSyntax(QRegExp::FixedString);
-    expr.setCaseSensitivity((options & QTextDocument::FindCaseSensitively) ? Qt::CaseSensitive : Qt::CaseInsensitive);
+    Q_D(const QTextDocument);
+
+    if (subString.isEmpty())
+        return QTextCursor();
+
+    int pos = from;
+    //the cursor is positioned between characters, so for a backward search
+    //do not include the character given in the position.
+    if (options & FindBackward) {
+        --pos ;
+        if (pos < subString.size())
+            return QTextCursor();
+    }
 
-    return find(expr, from, options);
+    QTextCursor cursor;
+    QTextBlock block = d->blocksFind(pos);
+    int blockOffset = pos - block.position();
+
+    if (!(options & FindBackward)) {
+        while (block.isValid()) {
+            if (findInBlock(block, subString, blockOffset, options, &cursor))
+                return cursor;
+            block = block.next();
+            blockOffset = 0;
+        }
+    } else {
+        while (block.isValid()) {
+            if (findInBlock(block, subString, blockOffset, options, &cursor))
+                return cursor;
+            block = block.previous();
+            blockOffset = block.length() - 2;
+        }
+    }
+
+    return QTextCursor();
 }
 
 /*!
-    \fn QTextCursor QTextDocument::find(const QString &subString, const QTextCursor &cursor, FindFlags options) const
-
     Finds the next occurrence of the string, \a subString, in the document.
     The search starts at the position of the given \a cursor, and proceeds
     forwards through the document unless specified otherwise in the search
@@ -1285,25 +1351,23 @@
     By default the search is case-sensitive, and can match text anywhere in the
     document.
 */
-QTextCursor QTextDocument::find(const QString &subString, const QTextCursor &from, FindFlags options) const
+QTextCursor QTextDocument::find(const QString &subString, const QTextCursor &cursor, FindFlags options) const
 {
     int pos = 0;
-    if (!from.isNull()) {
+    if (!cursor.isNull()) {
         if (options & QTextDocument::FindBackward)
-            pos = from.selectionStart();
+            pos = cursor.selectionStart();
         else
-            pos = from.selectionEnd();
+            pos = cursor.selectionEnd();
     }
-    QRegExp expr(subString);
-    expr.setPatternSyntax(QRegExp::FixedString);
-    expr.setCaseSensitivity((options & QTextDocument::FindCaseSensitively) ? Qt::CaseSensitive : Qt::CaseInsensitive);
 
-    return find(expr, pos, options);
+    return find(subString, pos, options);
 }
 
 
+#ifndef QT_NO_REGEXP
 static bool findInBlock(const QTextBlock &block, const QRegExp &expression, int offset,
-                        QTextDocument::FindFlags options, QTextCursor &cursor)
+                        QTextDocument::FindFlags options, QTextCursor *cursor)
 {
     QRegExp expr(expression);
     QString text = block.text();
@@ -1328,22 +1392,18 @@
             }
         }
         //we have a hit, return the cursor for that.
-        break;
+        *cursor = QTextCursor(block.docHandle(), block.position() + idx);
+        cursor->setPosition(cursor->position() + expr.matchedLength(), QTextCursor::KeepAnchor);
+        return true;
     }
-    if (idx == -1)
-        return false;
-    cursor = QTextCursor(block.docHandle(), block.position() + idx);
-    cursor.setPosition(cursor.position() + expr.matchedLength(), QTextCursor::KeepAnchor);
-    return true;
+    return false;
 }
 
 /*!
-    \fn QTextCursor QTextDocument::find(const QRegExp & expr, int position, FindFlags options) const
-
     \overload
 
     Finds the next occurrence, matching the regular expression, \a expr, in the document.
-    The search starts at the given \a position, and proceeds forwards
+    The search starts at the given \a from position, and proceeds forwards
     through the document unless specified otherwise in the search options.
     The \a options control the type of search performed. The FindCaseSensitively
     option is ignored for this overload, use QRegExp::caseSensitivity instead.
@@ -1351,7 +1411,7 @@
     Returns a cursor with the match selected if a match was found; otherwise
     returns a null cursor.
 
-    If the \a position is 0 (the default) the search begins from the beginning
+    If the \a from position is 0 (the default) the search begins from the beginning
     of the document; otherwise it begins at the specified position.
 */
 QTextCursor QTextDocument::find(const QRegExp & expr, int from, FindFlags options) const
@@ -1372,19 +1432,17 @@
 
     QTextCursor cursor;
     QTextBlock block = d->blocksFind(pos);
-
+    int blockOffset = pos - block.position();
     if (!(options & FindBackward)) {
-       int blockOffset = qMax(0, pos - block.position());
         while (block.isValid()) {
-            if (findInBlock(block, expr, blockOffset, options, cursor))
+            if (findInBlock(block, expr, blockOffset, options, &cursor))
                 return cursor;
-            blockOffset = 0;
             block = block.next();
+            blockOffset = 0;
         }
     } else {
-        int blockOffset = pos - block.position();
         while (block.isValid()) {
-            if (findInBlock(block, expr, blockOffset, options, cursor))
+            if (findInBlock(block, expr, blockOffset, options, &cursor))
                 return cursor;
             block = block.previous();
             blockOffset = block.length() - 1;
@@ -1395,10 +1453,10 @@
 }
 
 /*!
-    \fn QTextCursor QTextDocument::find(const QRegExp &expr, const QTextCursor &cursor, FindFlags options) const
+    \overload
 
     Finds the next occurrence, matching the regular expression, \a expr, in the document.
-    The search starts at the position of the given \a cursor, and proceeds
+    The search starts at the position of the given from \a cursor, and proceeds
     forwards through the document unless specified otherwise in the search
     options. The \a options control the type of search performed. The FindCaseSensitively
     option is ignored for this overload, use QRegExp::caseSensitivity instead.
@@ -1406,24 +1464,148 @@
     Returns a cursor with the match selected if a match was found; otherwise
     returns a null cursor.
 
-    If the given \a cursor has a selection, the search begins after the
+    If the given \a from cursor has a selection, the search begins after the
     selection; otherwise it begins at the cursor's position.
 
     By default the search is case-sensitive, and can match text anywhere in the
     document.
 */
-QTextCursor QTextDocument::find(const QRegExp &expr, const QTextCursor &from, FindFlags options) const
+QTextCursor QTextDocument::find(const QRegExp &expr, const QTextCursor &cursor, FindFlags options) const
 {
     int pos = 0;
-    if (!from.isNull()) {
+    if (!cursor.isNull()) {
         if (options & QTextDocument::FindBackward)
-            pos = from.selectionStart();
+            pos = cursor.selectionStart();
         else
-            pos = from.selectionEnd();
+            pos = cursor.selectionEnd();
     }
     return find(expr, pos, options);
 }
+#endif // QT_REGEXP
+
+#ifndef QT_NO_REGULAREXPRESSION
+static bool findInBlock(const QTextBlock &block, const QRegularExpression &expression, int offset,
+                        QTextDocument::FindFlags options, QTextCursor *cursor)
+{
+    QRegularExpression expr(expression);
+    if (!(options & QTextDocument::FindCaseSensitively))
+        expr.setPatternOptions(expr.patternOptions() | QRegularExpression::CaseInsensitiveOption);
+    else
+        expr.setPatternOptions(expr.patternOptions() & ~QRegularExpression::CaseInsensitiveOption);
+
+    QString text = block.text();
+    text.replace(QChar::Nbsp, QLatin1Char(' '));
+    QRegularExpressionMatch match;
+    int idx = -1;
+
+    while (offset >= 0 && offset <= text.length()) {
+        idx = (options & QTextDocument::FindBackward) ?
+               text.lastIndexOf(expr, offset) : text.indexOf(expr, offset);
+               //text.lastIndexOf(expr, offset, &match) : text.indexOf(expr, offset, &match);
+        if (idx == -1)
+            return false;
+
+        if (options & QTextDocument::FindWholeWords) {
+            const int start = idx;
+            const int end = start + match.capturedLength();
+            if ((start != 0 && text.at(start - 1).isLetterOrNumber())
+                || (end != text.length() && text.at(end).isLetterOrNumber())) {
+                //if this is not a whole word, continue the search in the string
+                offset = (options & QTextDocument::FindBackward) ? idx-1 : end+1;
+                idx = -1;
+                continue;
+            }
+        }
+        //we have a hit, return the cursor for that.
+        *cursor = QTextCursor(block.docHandle(), block.position() + idx);
+        cursor->setPosition(cursor->position() + match.capturedLength(), QTextCursor::KeepAnchor);
+        return true;
+    }
+    return false;
+}
+
+/*!
+    \since 5.5
+
+    Finds the next occurrence, matching the regular expression, \a expr, in the document.
+    The search starts at the given \a from position, and proceeds forwards
+    through the document unless specified otherwise in the search options.
+    The \a options control the type of search performed.
+
+    Returns a cursor with the match selected if a match was found; otherwise
+    returns a null cursor.
+
+    If the \a from position is 0 (the default) the search begins from the beginning
+    of the document; otherwise it begins at the specified position.
+*/
+QTextCursor QTextDocument::find(const QRegularExpression &expr, int from, FindFlags options) const
+{
+    Q_D(const QTextDocument);
+
+    if (!expr.isValid())
+        return QTextCursor();
+
+    int pos = from;
+    //the cursor is positioned between characters, so for a backward search
+    //do not include the character given in the position.
+    if (options & FindBackward) {
+        --pos ;
+        if (pos < 0)
+            return QTextCursor();
+    }
+
+    QTextCursor cursor;
+    QTextBlock block = d->blocksFind(pos);
+    int blockOffset = pos - block.position();
 
+    if (!(options & FindBackward)) {
+        while (block.isValid()) {
+            if (findInBlock(block, expr, blockOffset, options, &cursor))
+                return cursor;
+            block = block.next();
+            blockOffset = 0;
+        }
+    } else {
+        while (block.isValid()) {
+            if (findInBlock(block, expr, blockOffset, options, &cursor))
+                return cursor;
+            block = block.previous();
+            blockOffset = block.length() - 1;
+        }
+    }
+
+    return QTextCursor();
+}
+
+/*!
+    \since 5.5
+
+    Finds the next occurrence, matching the regular expression, \a expr, in the document.
+    The search starts at the position of the given \a cursor, and proceeds
+    forwards through the document unless specified otherwise in the search
+    options. The \a options control the type of search performed.
+
+    Returns a cursor with the match selected if a match was found; otherwise
+    returns a null cursor.
+
+    If the given \a cursor has a selection, the search begins after the
+    selection; otherwise it begins at the cursor's position.
+
+    By default the search is case-sensitive, and can match text anywhere in the
+    document.
+*/
+QTextCursor QTextDocument::find(const QRegularExpression &expr, const QTextCursor &cursor, FindFlags options) const
+{
+    int pos = 0;
+    if (!cursor.isNull()) {
+        if (options & QTextDocument::FindBackward)
+            pos = cursor.selectionStart();
+        else
+            pos = cursor.selectionEnd();
+    }
+    return find(expr, pos, options);
+}
+#endif // QT_NO_REGULAREXPRESSION
 
 /*!
     \fn QTextObject *QTextDocument::createObject(const QTextFormat &format)
diff -Nuar orig/qtbase/src/gui/text/qtextdocumentfragment.cpp qtbase/src/gui/text/qtextdocumentfragment.cpp
--- orig/qtbase/src/gui/text/qtextdocumentfragment.cpp	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qtextdocumentfragment.cpp	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
diff -Nuar orig/qtbase/src/gui/text/qtextdocumentfragment.h qtbase/src/gui/text/qtextdocumentfragment.h
--- orig/qtbase/src/gui/text/qtextdocumentfragment.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qtextdocumentfragment.h	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
diff -Nuar orig/qtbase/src/gui/text/qtextdocumentfragment_p.h qtbase/src/gui/text/qtextdocumentfragment_p.h
--- orig/qtbase/src/gui/text/qtextdocumentfragment_p.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qtextdocumentfragment_p.h	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
diff -Nuar orig/qtbase/src/gui/text/qtextdocument.h qtbase/src/gui/text/qtextdocument.h
--- orig/qtbase/src/gui/text/qtextdocument.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qtextdocument.h	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -63,7 +63,6 @@
 
 template<typename T> class QVector;
 
-#ifndef Q_QDOC // Workaround for QTBUG-35230
 namespace Qt
 {
     Q_GUI_EXPORT bool mightBeRichText(const QString&);
@@ -73,7 +72,6 @@
     Q_GUI_EXPORT QTextCodec *codecForHtml(const QByteArray &ba);
 #endif
 }
-#endif // Q_QDOC
 
 class Q_GUI_EXPORT QAbstractUndoItem
 {
@@ -160,10 +158,17 @@
     Q_DECLARE_FLAGS(FindFlags, FindFlag)
 
     QTextCursor find(const QString &subString, int from = 0, FindFlags options = 0) const;
-    QTextCursor find(const QString &subString, const QTextCursor &from, FindFlags options = 0) const;
+    QTextCursor find(const QString &subString, const QTextCursor &cursor, FindFlags options = 0) const;
 
+#ifndef QT_NO_REGEXP
     QTextCursor find(const QRegExp &expr, int from = 0, FindFlags options = 0) const;
-    QTextCursor find(const QRegExp &expr, const QTextCursor &from, FindFlags options = 0) const;
+    QTextCursor find(const QRegExp &expr, const QTextCursor &cursor, FindFlags options = 0) const;
+#endif
+
+#ifndef QT_NO_REGULAREXPRESSION
+    QTextCursor find(const QRegularExpression &expr, int from = 0, FindFlags options = 0) const;
+    QTextCursor find(const QRegularExpression &expr, const QTextCursor &cursor, FindFlags options = 0) const;
+#endif
 
     QTextFrame *frameAt(int pos) const;
     QTextFrame *rootFrame() const;
diff -Nuar orig/qtbase/src/gui/text/qtextdocumentlayout.cpp qtbase/src/gui/text/qtextdocumentlayout.cpp
--- orig/qtbase/src/gui/text/qtextdocumentlayout.cpp	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qtextdocumentlayout.cpp	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -383,12 +383,12 @@
 };
 Q_DECLARE_TYPEINFO(QCheckPoint, Q_PRIMITIVE_TYPE);
 
-Q_STATIC_GLOBAL_OPERATOR bool operator<(const QCheckPoint &checkPoint, QFixed y)
+static bool operator<(const QCheckPoint &checkPoint, QFixed y)
 {
     return checkPoint.y < y;
 }
 
-Q_STATIC_GLOBAL_OPERATOR bool operator<(const QCheckPoint &checkPoint, int pos)
+static bool operator<(const QCheckPoint &checkPoint, int pos)
 {
     return checkPoint.positionInFrame < pos;
 }
@@ -396,17 +396,17 @@
 #if defined(Q_CC_MSVC) && _MSC_VER < 1600
 //The STL implementation of MSVC 2008 requires the definitions
 
-Q_STATIC_GLOBAL_OPERATOR bool operator<(const QCheckPoint &checkPoint1, const QCheckPoint &checkPoint2)
+static bool operator<(const QCheckPoint &checkPoint1, const QCheckPoint &checkPoint2)
 {
     return checkPoint1.y < checkPoint2.y;
 }
 
-Q_STATIC_GLOBAL_OPERATOR bool operator<(QFixed y, const QCheckPoint &checkPoint)
+static bool operator<(QFixed y, const QCheckPoint &checkPoint)
 {
     return y < checkPoint.y;
 }
 
-Q_STATIC_GLOBAL_OPERATOR bool operator<(int pos, const QCheckPoint &checkPoint)
+static bool operator<(int pos, const QCheckPoint &checkPoint)
 {
     return pos < checkPoint.positionInFrame;
 }
@@ -504,8 +504,6 @@
     void layoutBlock(const QTextBlock &bl, int blockPosition, const QTextBlockFormat &blockFormat,
                      QTextLayoutStruct *layoutStruct, int layoutFrom, int layoutTo, const QTextBlockFormat *previousBlockFormat);
     void layoutFlow(QTextFrame::Iterator it, QTextLayoutStruct *layoutStruct, int layoutFrom, int layoutTo, QFixed width = 0);
-    void pageBreakInsideTable(QTextTable *table, QTextLayoutStruct *layoutStruct);
-
 
     void floatMargins(const QFixed &y, const QTextLayoutStruct *layoutStruct, QFixed *left, QFixed *right) const;
     QFixed findY(QFixed yFrom, const QTextLayoutStruct *layoutStruct, QFixed requiredWidth) const;
@@ -1115,6 +1113,13 @@
     const QFixed leftPadding = td->leftPadding(fmt);
     const QFixed topPadding = td->topPadding(fmt);
 
+    qreal topMargin = (td->effectiveTopMargin + td->cellSpacing + td->border).toReal();
+    qreal bottomMargin = (td->effectiveBottomMargin + td->cellSpacing + td->border).toReal();
+
+    const int headerRowCount = qMin(table->format().headerRowCount(), table->rows() - 1);
+    if (r >= headerRowCount)
+        topMargin += td->headerHeight.toReal();
+
     if (td->border != 0) {
         const QBrush oldBrush = painter->brush();
         const QPen oldPen = painter->pen();
@@ -1142,13 +1147,6 @@
             break;
         }
 
-        qreal topMargin = (td->effectiveTopMargin + td->cellSpacing + td->border).toReal();
-        qreal bottomMargin = (td->effectiveBottomMargin + td->cellSpacing + td->border).toReal();
-
-        const int headerRowCount = qMin(table->format().headerRowCount(), table->rows() - 1);
-        if (r >= headerRowCount)
-            topMargin += td->headerHeight.toReal();
-
         drawBorder(painter, borderRect, topMargin, bottomMargin,
                    border, table->format().borderBrush(), cellBorder);
 
@@ -1159,7 +1157,30 @@
     const QBrush bg = cell.format().background();
     const QPointF brushOrigin = painter->brushOrigin();
     if (bg.style() != Qt::NoBrush) {
-        fillBackground(painter, cellRect, bg, cellRect.topLeft());
+        const qreal pageHeight = document->pageSize().height();
+        const int topPage = pageHeight > 0 ? static_cast<int>(cellRect.top() / pageHeight) : 0;
+        const int bottomPage = pageHeight > 0 ? static_cast<int>((cellRect.bottom()) / pageHeight) : 0;
+
+        if (topPage == bottomPage)
+            fillBackground(painter, cellRect, bg, cellRect.topLeft());
+        else {
+            for (int i = topPage; i <= bottomPage; ++i) {
+                QRectF clipped = cellRect.toRect();
+
+                if (topPage != bottomPage) {
+                    const qreal top = qMax(i * pageHeight + topMargin, cell_context.clip.top());
+                    const qreal bottom = qMin((i + 1) * pageHeight - bottomMargin, cell_context.clip.bottom());
+
+                    clipped.setTop(qMax(clipped.top(), top));
+                    clipped.setBottom(qMin(clipped.bottom(), bottom));
+
+                    if (clipped.bottom() <= clipped.top())
+                        continue;
+
+                    fillBackground(painter, clipped, bg, cellRect.topLeft());
+                }
+            }
+        }
 
         if (bg.style() > Qt::SolidPattern)
             painter->setBrushOrigin(cellRect.topLeft());
@@ -1267,7 +1288,7 @@
     const QTextLayout *tl = bl.layout();
     QRectF r = tl->boundingRect();
     r.translate(offset + tl->position());
-    if (context.clip.isValid() && (r.bottom() < context.clip.y() || r.top() > context.clip.bottom()))
+    if (!bl.isVisible() || (context.clip.isValid() && (r.bottom() < context.clip.y() || r.top() > context.clip.bottom())))
         return;
 //      LDEBUG << debug_indent << "drawBlock" << bl.position() << "at" << offset << "br" << tl->boundingRect();
 
@@ -2409,7 +2430,7 @@
             ++it;
         } else {
             QTextFrame::Iterator lastIt;
-            if (!previousIt.atEnd())
+            if (!previousIt.atEnd() && previousIt != it)
                 lastIt = previousIt;
             previousIt = it;
             QTextBlock block = it.currentBlock();
@@ -2557,6 +2578,8 @@
                                              QTextLayoutStruct *layoutStruct, int layoutFrom, int layoutTo, const QTextBlockFormat *previousBlockFormat)
 {
     Q_Q(QTextDocumentLayout);
+    if (!bl.isVisible())
+        return;
 
     QTextLayout *tl = bl.layout();
     const int blockLength = bl.length();
@@ -3242,7 +3265,7 @@
 QRectF QTextDocumentLayout::blockBoundingRect(const QTextBlock &block) const
 {
     Q_D(const QTextDocumentLayout);
-    if (d->docPrivate->pageSize.isNull() || !block.isValid())
+    if (d->docPrivate->pageSize.isNull() || !block.isValid() || !block.isVisible())
         return QRectF();
     d->ensureLayoutedByPosition(block.position() + block.length());
     QTextFrame *frame = d->document->frameAt(block.position());
diff -Nuar orig/qtbase/src/gui/text/qtextdocumentlayout_p.h qtbase/src/gui/text/qtextdocumentlayout_p.h
--- orig/qtbase/src/gui/text/qtextdocumentlayout_p.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qtextdocumentlayout_p.h	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -66,11 +66,11 @@
     explicit QTextDocumentLayout(QTextDocument *doc);
 
     // from the abstract layout
-    void draw(QPainter *painter, const PaintContext &context);
-    int hitTest(const QPointF &point, Qt::HitTestAccuracy accuracy) const;
+    void draw(QPainter *painter, const PaintContext &context) Q_DECL_OVERRIDE;
+    int hitTest(const QPointF &point, Qt::HitTestAccuracy accuracy) const Q_DECL_OVERRIDE;
 
-    int pageCount() const;
-    QSizeF documentSize() const;
+    int pageCount() const Q_DECL_OVERRIDE;
+    QSizeF documentSize() const Q_DECL_OVERRIDE;
 
     void setCursorWidth(int width);
     int cursorWidth() const;
@@ -81,8 +81,8 @@
     // internal for QTextEdit's NoWrap mode
     void setViewport(const QRectF &viewport);
 
-    virtual QRectF frameBoundingRect(QTextFrame *frame) const;
-    virtual QRectF blockBoundingRect(const QTextBlock &block) const;
+    virtual QRectF frameBoundingRect(QTextFrame *frame) const Q_DECL_OVERRIDE;
+    virtual QRectF blockBoundingRect(const QTextBlock &block) const Q_DECL_OVERRIDE;
     QRectF tableBoundingRect(QTextTable *table) const;
     QRectF tableCellBoundingRect(QTextTable *table, const QTextTableCell &cell) const;
 
@@ -97,12 +97,12 @@
     bool contentHasAlignment() const;
 
 protected:
-    void documentChanged(int from, int oldLength, int length);
-    void resizeInlineObject(QTextInlineObject item, int posInDocument, const QTextFormat &format);
-    void positionInlineObject(QTextInlineObject item, int posInDocument, const QTextFormat &format);
+    void documentChanged(int from, int oldLength, int length) Q_DECL_OVERRIDE;
+    void resizeInlineObject(QTextInlineObject item, int posInDocument, const QTextFormat &format) Q_DECL_OVERRIDE;
+    void positionInlineObject(QTextInlineObject item, int posInDocument, const QTextFormat &format) Q_DECL_OVERRIDE;
     void drawInlineObject(QPainter *p, const QRectF &rect, QTextInlineObject item,
-                          int posInDocument, const QTextFormat &format);
-    virtual void timerEvent(QTimerEvent *e);
+                          int posInDocument, const QTextFormat &format) Q_DECL_OVERRIDE;
+    virtual void timerEvent(QTimerEvent *e) Q_DECL_OVERRIDE;
 private:
     QRectF doLayout(int from, int oldLength, int length);
     void layoutFinished();
diff -Nuar orig/qtbase/src/gui/text/qtextdocument_p.cpp qtbase/src/gui/text/qtextdocument_p.cpp
--- orig/qtbase/src/gui/text/qtextdocument_p.cpp	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qtextdocument_p.cpp	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -125,14 +125,12 @@
         || ch == QTextEndOfFrame;
 }
 
-#if !defined(QT_NO_DEBUG) || defined(QT_FORCE_ASSERTS)
 static bool noBlockInString(const QString &str)
 {
     return !str.contains(QChar::ParagraphSeparator)
         && !str.contains(QTextBeginningOfFrame)
         && !str.contains(QTextEndOfFrame);
 }
-#endif
 
 bool QTextUndoCommand::tryMerge(const QTextUndoCommand &other)
 {
diff -Nuar orig/qtbase/src/gui/text/qtextdocument_p.h qtbase/src/gui/text/qtextdocument_p.h
--- orig/qtbase/src/gui/text/qtextdocument_p.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qtextdocument_p.h	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
diff -Nuar orig/qtbase/src/gui/text/qtextdocumentwriter.cpp qtbase/src/gui/text/qtextdocumentwriter.cpp
--- orig/qtbase/src/gui/text/qtextdocumentwriter.cpp	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qtextdocumentwriter.cpp	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
diff -Nuar orig/qtbase/src/gui/text/qtextdocumentwriter.h qtbase/src/gui/text/qtextdocumentwriter.h
--- orig/qtbase/src/gui/text/qtextdocumentwriter.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qtextdocumentwriter.h	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
diff -Nuar orig/qtbase/src/gui/text/qtextengine.cpp qtbase/src/gui/text/qtextengine.cpp
--- orig/qtbase/src/gui/text/qtextengine.cpp	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qtextengine.cpp	2015-05-11 13:50:23.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -881,16 +881,22 @@
     int spaceAs;
 
     switch (si.analysis.script) {
+    case QChar::Script_Arabic:
+    case QChar::Script_Syriac:
     case QChar::Script_Nko:
     case QChar::Script_Mandaic:
     case QChar::Script_Mongolian:
     case QChar::Script_PhagsPa:
-        // same as default but inter character justification takes precedence
-        spaceAs = Justification_Arabic_Space;
-        break;
+    //case QChar::Script_Manichaean:
+    //case QChar::Script_PsalterPahlavi:
+    //    // same as default but inter character justification takes precedence
+    //    spaceAs = Justification_Arabic_Space;
+    //    break;
 
+    case QChar::Script_Tibetan:
     case QChar::Script_Hiragana:
     case QChar::Script_Katakana:
+    case QChar::Script_Bopomofo:
     case QChar::Script_Han:
         // same as default but inter character justification is the only option
         spaceAs = Justification_Character;
@@ -979,7 +985,7 @@
         string = reinterpret_cast<const ushort *>(casedString.constData());
     }
 
-    if (!ensureSpace(itemLength)) {
+    if (Q_UNLIKELY(!ensureSpace(itemLength))) {
         Q_UNREACHABLE(); // ### report OOM error somehow
         return;
     }
@@ -1051,12 +1057,12 @@
     }
 
 #ifdef QT_ENABLE_HARFBUZZ_NG
-    if (qt_useHarfbuzzNG())
+    if (Q_LIKELY(qt_useHarfbuzzNG()))
         si.num_glyphs = shapeTextWithHarfbuzzNG(si, string, itemLength, fontEngine, itemBoundaries, kerningEnabled);
     else
 #endif
     si.num_glyphs = shapeTextWithHarfbuzz(si, string, itemLength, fontEngine, itemBoundaries, kerningEnabled);
-    if (si.num_glyphs == 0) {
+    if (Q_UNLIKELY(si.num_glyphs == 0)) {
         Q_UNREACHABLE(); // ### report shaping errors somehow
         return;
     }
@@ -1067,7 +1073,7 @@
     QGlyphLayout glyphs = shapedGlyphs(&si);
 
 #ifdef QT_ENABLE_HARFBUZZ_NG
-    if (qt_useHarfbuzzNG())
+    if (Q_LIKELY(qt_useHarfbuzzNG()))
         qt_getJustificationOpportunities(string, itemLength, si, glyphs, logClusters(&si));
 #endif
 
@@ -1116,10 +1122,12 @@
 
 int QTextEngine::shapeTextWithHarfbuzzNG(const QScriptItem &si, const ushort *string, int itemLength, QFontEngine *fontEngine, const QVector<uint> &itemBoundaries, bool kerningEnabled) const
 {
+    uint glyphs_shaped = 0;
+
     hb_buffer_t *buffer = hb_buffer_create();
     hb_buffer_set_unicode_funcs(buffer, hb_qt_get_unicode_funcs());
     hb_buffer_pre_allocate(buffer, itemLength);
-    if (!hb_buffer_allocation_successful(buffer)) {
+    if (Q_UNLIKELY(!hb_buffer_allocation_successful(buffer))) {
         hb_buffer_destroy(buffer);
         return 0;
     }
@@ -1129,18 +1137,13 @@
     props.script = hb_qt_script_to_script(QChar::Script(si.analysis.script));
     // ### props.language = hb_language_get_default_for_script(props.script);
 
-    uint glyphs_shaped = 0;
-    int remaining_glyphs = itemLength;
-
     for (int k = 0; k < itemBoundaries.size(); k += 3) {
-        uint item_pos = itemBoundaries[k];
-        uint item_length = (k + 4 < itemBoundaries.size() ? itemBoundaries[k + 3] : itemLength) - item_pos;
-        uint item_glyph_pos = itemBoundaries[k + 1];
-        uint engineIdx = itemBoundaries[k + 2];
+        const uint item_pos = itemBoundaries[k];
+        const uint item_length = (k + 4 < itemBoundaries.size() ? itemBoundaries[k + 3] : itemLength) - item_pos;
+        const uint engineIdx = itemBoundaries[k + 2];
 
-        QFontEngine *actualFontEngine = fontEngine;
-        if (fontEngine->type() == QFontEngine::Multi)
-            actualFontEngine = static_cast<QFontEngineMulti *>(fontEngine)->engine(engineIdx);
+        QFontEngine *actualFontEngine = fontEngine->type() != QFontEngine::Multi ? fontEngine
+                                                                                 : static_cast<QFontEngineMulti *>(fontEngine)->engine(engineIdx);
 
 
         // prepare buffer
@@ -1153,35 +1156,35 @@
         uint buffer_flags = HB_BUFFER_FLAG_DEFAULT;
         // Symbol encoding used to encode various crap in the 32..255 character code range,
         // and thus might override U+00AD [SHY]; avoid hiding default ignorables
-        if (actualFontEngine->symbol)
+        if (Q_UNLIKELY(actualFontEngine->symbol))
             buffer_flags |= HB_BUFFER_FLAG_PRESERVE_DEFAULT_IGNORABLES;
         hb_buffer_set_flags(buffer, hb_buffer_flags_t(buffer_flags));
 
 
         // shape
-        bool shapedOk = false;
-        if (hb_font_t *hb_font = hb_qt_font_get_for_engine(actualFontEngine)) {
+        {
+            hb_font_t *hb_font = hb_qt_font_get_for_engine(actualFontEngine);
+            Q_ASSERT(hb_font);
             hb_qt_font_set_use_design_metrics(hb_font, option.useDesignMetrics() ? uint(QFontEngine::DesignMetrics) : 0); // ###
 
             const hb_feature_t features[1] = {
                 { HB_TAG('k','e','r','n'), !!kerningEnabled, 0, uint(-1) }
             };
             const int num_features = 1;
-            shapedOk = hb_shape_full(hb_font, buffer, features, num_features, 0);
-        }
-        if (!shapedOk) {
-            hb_buffer_destroy(buffer);
-            return 0;
-        }
 
-        if (si.analysis.bidiLevel % 2)
-            hb_buffer_reverse(buffer);
+            bool shapedOk = hb_shape_full(hb_font, buffer, features, num_features, 0);
+            if (Q_UNLIKELY(!shapedOk)) {
+                hb_buffer_destroy(buffer);
+                return 0;
+            }
 
-        remaining_glyphs -= item_glyph_pos;
+            if (Q_UNLIKELY(HB_DIRECTION_IS_BACKWARD(props.direction)))
+                hb_buffer_reverse(buffer);
+        }
 
-        // ensure we have enough space for shaped glyphs and metrics
         const uint num_glyphs = hb_buffer_get_length(buffer);
-        if (num_glyphs == 0 || !ensureSpace(glyphs_shaped + num_glyphs + remaining_glyphs)) {
+        // ensure we have enough space for shaped glyphs and metrics
+        if (Q_UNLIKELY(num_glyphs == 0 || !ensureSpace(glyphs_shaped + num_glyphs))) {
             hb_buffer_destroy(buffer);
             return 0;
         }
@@ -1195,29 +1198,16 @@
         uint str_pos = 0;
         uint last_cluster = ~0u;
         uint last_glyph_pos = glyphs_shaped;
-        for (uint i = 0; i < num_glyphs; ++i) {
-            g.glyphs[i] = infos[i].codepoint;
+        for (uint i = 0; i < num_glyphs; ++i, ++infos, ++positions) {
+            g.glyphs[i] = infos->codepoint;
 
-            g.advances[i] = QFixed::fromFixed(positions[i].x_advance);
-            g.offsets[i].x = QFixed::fromFixed(positions[i].x_offset);
-            g.offsets[i].y = QFixed::fromFixed(positions[i].y_offset);
-
-            uint cluster = infos[i].cluster;
-            if (last_cluster != cluster) {
-                if (Q_UNLIKELY(g.glyphs[i] == 0)) {
-                    // hide characters that should normally be invisible
-                    switch (string[item_pos + str_pos]) {
-                    case QChar::LineFeed:
-                    case 0x000c: // FormFeed
-                    case QChar::CarriageReturn:
-                    case QChar::LineSeparator:
-                    case QChar::ParagraphSeparator:
-                        g.attributes[i].dontPrint = true;
-                        break;
-                    default:
-                        break;
-                    }
-                }
+            g.advances[i] = QFixed::fromFixed(positions->x_advance);
+            g.offsets[i].x = QFixed::fromFixed(positions->x_offset);
+            g.offsets[i].y = QFixed::fromFixed(positions->y_offset);
+
+            uint cluster = infos->cluster;
+            if (Q_LIKELY(last_cluster != cluster)) {
+                g.attributes[i].clusterStart = true;
 
                 // fix up clusters so that the cluster indices will be monotonic
                 // and thus we never return out-of-order indices
@@ -1225,18 +1215,52 @@
                     log_clusters[str_pos++] = last_glyph_pos;
                 last_glyph_pos = i + glyphs_shaped;
                 last_cluster = cluster;
-                g.attributes[i].clusterStart = true;
+
+                // hide characters that should normally be invisible
+                switch (string[item_pos + str_pos]) {
+                case QChar::LineFeed:
+                case 0x000c: // FormFeed
+                case QChar::CarriageReturn:
+                case QChar::LineSeparator:
+                case QChar::ParagraphSeparator:
+                    g.attributes[i].dontPrint = true;
+                    break;
+                case QChar::SoftHyphen:
+                    if (!actualFontEngine->symbol) {
+                        // U+00AD [SOFT HYPHEN] is a default ignorable codepoint,
+                        // so we replace its glyph and metrics with ones for
+                        // U+002D [HYPHEN-MINUS] and make it visible if it appears at line-break
+                        g.glyphs[i] = actualFontEngine->glyphIndex('-');
+                        if (Q_LIKELY(g.glyphs[i] != 0)) {
+                            QGlyphLayout tmp = g.mid(i, 1);
+                            actualFontEngine->recalcAdvances(&tmp, 0);
+                        }
+                        g.attributes[i].dontPrint = true;
+                    }
+                    break;
+                default:
+                    break;
+                }
             }
         }
         while (str_pos < item_length)
             log_clusters[str_pos++] = last_glyph_pos;
 
-        if (engineIdx != 0) {
+        if (Q_UNLIKELY(engineIdx != 0)) {
             for (quint32 i = 0; i < num_glyphs; ++i)
                 g.glyphs[i] |= (engineIdx << 24);
         }
 
 #ifdef Q_OS_MAC
+        // CTRunGetPosition has a bug which applies matrix on 10.6, so we disable
+        // scaling the advances for this particular version
+        if (actualFontEngine->fontDef.stretch != 100
+                && QSysInfo::MacintoshVersion != QSysInfo::MV_10_6) {
+            QFixed stretch = QFixed(actualFontEngine->fontDef.stretch) / QFixed(100);
+            for (uint i = 0; i < num_glyphs; ++i)
+                g.advances[i] *= stretch;
+        }
+
         if (actualFontEngine->fontDef.styleStrategy & QFont::ForceIntegerMetrics) {
             for (uint i = 0; i < num_glyphs; ++i)
                 g.advances[i] = g.advances[i].round();
@@ -1612,10 +1636,10 @@
         for (int i = 0; i < length; ++i) {
             switch (analysis[i].script) {
             case QChar::Script_Latin:
-            case QChar::Script_Han:
             case QChar::Script_Hiragana:
             case QChar::Script_Katakana:
             case QChar::Script_Bopomofo:
+            case QChar::Script_Han:
                 analysis[i].script = QChar::Script_Common;
                 break;
             default:
@@ -1701,7 +1725,7 @@
         itemize();
     // this places the cursor in the right position depending on the keyboard layout
     if (layoutData->string.isEmpty())
-        return qApp ? qApp->inputMethod()->inputDirection() == Qt::RightToLeft : false;
+        return QGuiApplication::inputMethod()->inputDirection() == Qt::RightToLeft;
     return layoutData->string.isRightToLeft();
 }
 
@@ -1950,7 +1974,7 @@
         if (feCache.prevFontEngine && feCache.prevFontEngine->type() == QFontEngine::Multi && feCache.prevScript == script) {
             engine = feCache.prevFontEngine;
         } else {
-            engine = QFontEngineMultiBasicImpl::createMultiFontEngine(rawFont.d->fontEngine, script);
+            engine = QFontEngineMulti::createMultiFontEngine(rawFont.d->fontEngine, script);
             feCache.prevFontEngine = engine;
             feCache.prevScript = script;
             engine->ref.ref();
@@ -1965,7 +1989,7 @@
             } else {
                 QFontEngine *scEngine = rawFont.d->fontEngine->cloneWithSize(smallCapsFraction * rawFont.pixelSize());
                 scEngine->ref.ref();
-                scaledEngine = QFontEngineMultiBasicImpl::createMultiFontEngine(scEngine, script);
+                scaledEngine = QFontEngineMulti::createMultiFontEngine(scEngine, script);
                 scaledEngine->ref.ref();
                 feCache.prevScaledFontEngine = scaledEngine;
                 // If scEngine is not ref'ed by scaledEngine, make sure it is deallocated and not leaked.
@@ -2525,21 +2549,6 @@
     return false;
 }
 
-bool QTextEngine::atSpace(int position) const
-{
-    const QChar c = layoutData->string.at(position);
-    switch (c.unicode()) {
-    case QChar::Tabulation:
-    case QChar::Space:
-    case QChar::Nbsp:
-    case QChar::LineSeparator:
-        return true;
-    default:
-        break;
-    }
-    return false;
-}
-
 void QTextEngine::setPreeditArea(int position, const QString &preeditText)
 {
     if (preeditText.isEmpty()) {
diff -Nuar orig/qtbase/src/gui/text/qtextengine_p.h qtbase/src/gui/text/qtextengine_p.h
--- orig/qtbase/src/gui/text/qtextengine_p.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qtextengine_p.h	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -592,7 +592,6 @@
 
 public:
     bool atWordSeparator(int position) const;
-    bool atSpace(int position) const;
 
     QString elidedText(Qt::TextElideMode mode, const QFixed &width, int flags = 0, int from = 0, int count = -1) const;
 
diff -Nuar orig/qtbase/src/gui/text/qtextformat.cpp qtbase/src/gui/text/qtextformat.cpp
--- orig/qtbase/src/gui/text/qtextformat.cpp	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qtextformat.cpp	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -258,20 +258,6 @@
     friend QDataStream &operator>>(QDataStream &, QTextFormat &);
 };
 
-// this is only safe because sizeof(int) == sizeof(float)
-static inline uint hash(float d)
-{
-#ifdef Q_CC_GNU
-    // this is a GCC extension and isn't guaranteed to work in other compilers
-    // the reinterpret_cast below generates a strict-aliasing warning with GCC
-    union { float f; uint u; } cvt;
-    cvt.f = d;
-    return cvt.u;
-#else
-    return reinterpret_cast<uint&>(d);
-#endif
-}
-
 static inline uint hash(const QColor &color)
 {
     return (color.isValid()) ? color.rgba() : 0x234109;
@@ -279,7 +265,7 @@
 
 static inline uint hash(const QPen &pen)
 {
-    return hash(pen.color()) + hash(pen.widthF());
+    return hash(pen.color()) + qHash(pen.widthF());
 }
 
 static inline uint hash(const QBrush &brush)
@@ -292,7 +278,7 @@
     // simple and fast hash functions to differentiate between type and value
     switch (variant.userType()) { // sorted by occurrence frequency
     case QVariant::String: return qHash(variant.toString());
-    case QVariant::Double: return hash(variant.toDouble());
+    case QVariant::Double: return qHash(variant.toDouble());
     case QVariant::Int: return 0x811890 + variant.toInt();
     case QVariant::Brush:
         return 0x01010101 + hash(qvariant_cast<QBrush>(variant));
@@ -303,7 +289,7 @@
     case QVariant::Color: return hash(qvariant_cast<QColor>(variant));
       case QVariant::TextLength:
         return 0x377 + hash(qvariant_cast<QTextLength>(variant).rawValue());
-    case QMetaType::Float: return hash(variant.toFloat());
+    case QMetaType::Float: return qHash(variant.toFloat());
     case QVariant::Invalid: return 0;
     default: break;
     }
@@ -319,7 +305,7 @@
 {
     hashValue = 0;
     for (QVector<Property>::ConstIterator it = props.constBegin(); it != props.constEnd(); ++it)
-        hashValue += (it->key << 16) + variantHash(it->value);
+        hashValue += (static_cast<quint32>(it->key) << 16) + variantHash(it->value);
 
     hashDirty = false;
 
@@ -1904,7 +1890,7 @@
 
     If \a behavior is QTextCharFormat::FontPropertiesAll, the font property that
     has not been explicitly set is treated like as it were set with default value;
-    If \a behavior is QTextCharFormat::FontPropertiesAll, the font property that
+    If \a behavior is QTextCharFormat::FontPropertiesSpecifiedOnly, the font property that
     has not been explicitly set is ignored and the respective property value
     remains unchanged.
 
@@ -1942,7 +1928,7 @@
         setFontFixedPitch(font.fixedPitch());
     if (mask & QFont::CapitalizationResolved)
         setFontCapitalization(font.capitalization());
-    if (mask & QFont::LetterSpacingResolved)
+    if (mask & QFont::WordSpacingResolved)
         setFontWordSpacing(font.wordSpacing());
     if (mask & QFont::LetterSpacingResolved) {
         setFontLetterSpacingType(font.letterSpacingType());
@@ -3041,8 +3027,8 @@
     \ingroup richtext-processing
     \ingroup shared
 
-    Inline images are represented by an object replacement character
-    (0xFFFC in Unicode) which has an associated QTextImageFormat. The
+    Inline images are represented by a Unicode value U+FFFC (OBJECT
+    REPLACEMENT CHARACTER) which has an associated QTextImageFormat. The
     image format specifies a name with setName() that is used to
     locate the image. The size of the rectangle that the image will
     occupy is specified using setWidth() and setHeight().
@@ -3472,14 +3458,16 @@
 #ifndef QT_NO_DEBUG_STREAM
 QDebug operator<<(QDebug dbg, const QTextLength &l)
 {
+    QDebugStateSaver saver(dbg);
     dbg.nospace() << "QTextLength(QTextLength::Type(" << l.type() << "))";
-    return dbg.space();
+    return dbg;
 }
 
 QDebug operator<<(QDebug dbg, const QTextFormat &f)
 {
+    QDebugStateSaver saver(dbg);
     dbg.nospace() << "QTextFormat(QTextFormat::FormatType(" << f.type() << "))";
-    return dbg.space();
+    return dbg;
 }
 
 #endif
diff -Nuar orig/qtbase/src/gui/text/qtextformat.h qtbase/src/gui/text/qtextformat.h
--- orig/qtbase/src/gui/text/qtextformat.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qtextformat.h	2015-05-11 16:19:39.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -140,6 +140,7 @@
 
         UserFormat = 100
     };
+    //Q_ENUM(FormatType)
 
     enum Property {
         ObjectIndex = 0x0,
@@ -257,6 +258,7 @@
         // --
         UserProperty = 0x100000
     };
+    //Q_ENUM(Property)
 
     enum ObjectTypes {
         NoObject,
@@ -266,6 +268,7 @@
 
         UserObject = 0x1000
     };
+    //Q_ENUM(ObjectTypes)
 
     enum PageBreakFlag {
         PageBreak_Auto = 0,
diff -Nuar orig/qtbase/src/gui/text/qtextformat_p.h qtbase/src/gui/text/qtextformat_p.h
--- orig/qtbase/src/gui/text/qtextformat_p.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qtextformat_p.h	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
diff -Nuar orig/qtbase/src/gui/text/qtexthtmlparser.cpp qtbase/src/gui/text/qtexthtmlparser.cpp
--- orig/qtbase/src/gui/text/qtexthtmlparser.cpp	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qtexthtmlparser.cpp	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -45,7 +45,6 @@
 #include "qtextdocument_p.h"
 #include "qtextcursor.h"
 #include "qfont_p.h"
-#include "private/qfunctions_p.h"
 
 #include <algorithm>
 
@@ -323,12 +322,12 @@
 }
 #endif
 
-Q_STATIC_GLOBAL_OPERATOR bool operator<(const QString &entityStr, const QTextHtmlEntity &entity)
+static bool operator<(const QString &entityStr, const QTextHtmlEntity &entity)
 {
     return entityStr < QLatin1String(entity.name);
 }
 
-Q_STATIC_GLOBAL_OPERATOR bool operator<(const QTextHtmlEntity &entity, const QString &entityStr)
+static bool operator<(const QTextHtmlEntity &entity, const QString &entityStr)
 {
     return QLatin1String(entity.name) < entityStr;
 }
@@ -443,18 +442,18 @@
 };
 
 #if defined(Q_CC_MSVC) && _MSC_VER < 1600
-Q_STATIC_GLOBAL_OPERATOR bool operator<(const QTextHtmlElement &e1, const QTextHtmlElement &e2)
+static bool operator<(const QTextHtmlElement &e1, const QTextHtmlElement &e2)
 {
     return QLatin1String(e1.name) < QLatin1String(e2.name);
 }
 #endif
 
-Q_STATIC_GLOBAL_OPERATOR bool operator<(const QString &str, const QTextHtmlElement &e)
+static bool operator<(const QString &str, const QTextHtmlElement &e)
 {
     return str < QLatin1String(e.name);
 }
 
-Q_STATIC_GLOBAL_OPERATOR bool operator<(const QTextHtmlElement &e, const QString &str)
+static bool operator<(const QTextHtmlElement &e, const QString &str)
 {
     return QLatin1String(e.name) < str;
 }
@@ -1051,25 +1050,14 @@
     // set element specific attributes
     switch (id) {
         case Html_a:
-            charFormat.setAnchor(true);
             for (int i = 0; i < attributes.count(); i += 2) {
                 const QString key = attributes.at(i);
                 if (key.compare(QLatin1String("href"), Qt::CaseInsensitive) == 0
                     && !attributes.at(i + 1).isEmpty()) {
                     hasHref = true;
-                    charFormat.setUnderlineStyle(QTextCharFormat::SingleUnderline);
-                    charFormat.setForeground(QGuiApplication::palette().link());
                 }
             }
-
-            break;
-        case Html_em:
-        case Html_i:
-        case Html_cite:
-        case Html_address:
-        case Html_var:
-        case Html_dfn:
-            charFormat.setFontItalic(true);
+            charFormat.setAnchor(true);
             break;
         case Html_big:
             charFormat.setProperty(QTextFormat::FontSizeAdjustment, int(1));
@@ -1077,36 +1065,27 @@
         case Html_small:
             charFormat.setProperty(QTextFormat::FontSizeAdjustment, int(-1));
             break;
-        case Html_strong:
-        case Html_b:
-            charFormat.setFontWeight(QFont::Bold);
-            break;
         case Html_h1:
-            charFormat.setFontWeight(QFont::Bold);
             charFormat.setProperty(QTextFormat::FontSizeAdjustment, int(3));
             margin[QTextHtmlParser::MarginTop] = 18;
             margin[QTextHtmlParser::MarginBottom] = 12;
             break;
         case Html_h2:
-            charFormat.setFontWeight(QFont::Bold);
             charFormat.setProperty(QTextFormat::FontSizeAdjustment, int(2));
             margin[QTextHtmlParser::MarginTop] = 16;
             margin[QTextHtmlParser::MarginBottom] = 12;
             break;
         case Html_h3:
-            charFormat.setFontWeight(QFont::Bold);
             charFormat.setProperty(QTextFormat::FontSizeAdjustment, int(1));
             margin[QTextHtmlParser::MarginTop] = 14;
             margin[QTextHtmlParser::MarginBottom] = 12;
             break;
         case Html_h4:
-            charFormat.setFontWeight(QFont::Bold);
             charFormat.setProperty(QTextFormat::FontSizeAdjustment, int(0));
             margin[QTextHtmlParser::MarginTop] = 12;
             margin[QTextHtmlParser::MarginBottom] = 12;
             break;
         case Html_h5:
-            charFormat.setFontWeight(QFont::Bold);
             charFormat.setProperty(QTextFormat::FontSizeAdjustment, int(-1));
             margin[QTextHtmlParser::MarginTop] = 12;
             margin[QTextHtmlParser::MarginBottom] = 4;
@@ -1115,11 +1094,7 @@
             margin[QTextHtmlParser::MarginTop] = 12;
             margin[QTextHtmlParser::MarginBottom] = 12;
             break;
-        case Html_center:
-            blockFormat.setAlignment(Qt::AlignCenter);
-            break;
         case Html_ul:
-            listStyle = QTextListFormat::ListDisc;
             // nested lists don't have margins, except for the toplevel one
             if (!isNestedList(parser)) {
                 margin[QTextHtmlParser::MarginTop] = 12;
@@ -1128,7 +1103,6 @@
             // no left margin as we use indenting instead
             break;
         case Html_ol:
-            listStyle = QTextListFormat::ListDecimal;
             // nested lists don't have margins, except for the toplevel one
             if (!isNestedList(parser)) {
                 margin[QTextHtmlParser::MarginTop] = 12;
@@ -1136,26 +1110,12 @@
             }
             // no left margin as we use indenting instead
             break;
-        case Html_code:
-        case Html_tt:
-        case Html_kbd:
-        case Html_samp:
-            charFormat.setFontFamily(QString::fromLatin1("Courier New,courier"));
-            // <tt> uses a fixed font, so set the property
-            charFormat.setFontFixedPitch(true);
-            break;
         case Html_br:
             text = QChar(QChar::LineSeparator);
-            wsm = QTextHtmlParserNode::WhiteSpacePre;
             break;
-        // ##### sub / sup
         case Html_pre:
-            charFormat.setFontFamily(QString::fromLatin1("Courier New,courier"));
-            wsm = WhiteSpacePre;
             margin[QTextHtmlParser::MarginTop] = 12;
             margin[QTextHtmlParser::MarginBottom] = 12;
-            // <pre> uses a fixed font
-            charFormat.setFontFixedPitch(true);
             break;
         case Html_blockquote:
             margin[QTextHtmlParser::MarginTop] = 12;
@@ -1170,28 +1130,6 @@
         case Html_dd:
             margin[QTextHtmlParser::MarginLeft] = 30;
             break;
-        case Html_u:
-            charFormat.setUnderlineStyle(QTextCharFormat::SingleUnderline);
-            break;
-        case Html_s:
-            charFormat.setFontStrikeOut(true);
-            break;
-        case Html_nobr:
-            wsm = WhiteSpaceNoWrap;
-            break;
-        case Html_th:
-            charFormat.setFontWeight(QFont::Bold);
-            blockFormat.setAlignment(Qt::AlignCenter);
-            break;
-        case Html_td:
-            blockFormat.setAlignment(Qt::AlignLeft);
-            break;
-        case Html_sub:
-            charFormat.setVerticalAlignment(QTextCharFormat::AlignSubScript);
-            break;
-        case Html_sup:
-            charFormat.setVerticalAlignment(QTextCharFormat::AlignSuperScript);
-            break;
         default: break;
     }
 }
@@ -1346,6 +1284,14 @@
         case QCss::QtListNumberSuffix:
             textListNumberSuffix = decl.d->values.first().variant.toString();
             break;
+        case QCss::TextAlignment:
+            switch (identifier) {
+            case QCss::Value_Left: blockFormat.setAlignment(Qt::AlignLeft); break;
+            case QCss::Value_Center: blockFormat.setAlignment(Qt::AlignCenter); break;
+            case QCss::Value_Right: blockFormat.setAlignment(Qt::AlignRight); break;
+            default: break;
+            }
+            break;
         default: break;
         }
     }
@@ -1713,14 +1659,14 @@
     inline QTextHtmlStyleSelector(const QTextHtmlParser *parser)
         : parser(parser) { nameCaseSensitivity = Qt::CaseInsensitive; }
 
-    virtual QStringList nodeNames(NodePtr node) const;
-    virtual QString attribute(NodePtr node, const QString &name) const;
-    virtual bool hasAttributes(NodePtr node) const;
-    virtual bool isNullNode(NodePtr node) const;
-    virtual NodePtr parentNode(NodePtr node) const;
-    virtual NodePtr previousSiblingNode(NodePtr node) const;
-    virtual NodePtr duplicateNode(NodePtr node) const;
-    virtual void freeNode(NodePtr node) const;
+    virtual QStringList nodeNames(NodePtr node) const Q_DECL_OVERRIDE;
+    virtual QString attribute(NodePtr node, const QString &name) const Q_DECL_OVERRIDE;
+    virtual bool hasAttributes(NodePtr node) const Q_DECL_OVERRIDE;
+    virtual bool isNullNode(NodePtr node) const Q_DECL_OVERRIDE;
+    virtual NodePtr parentNode(NodePtr node) const Q_DECL_OVERRIDE;
+    virtual NodePtr previousSiblingNode(NodePtr node) const Q_DECL_OVERRIDE;
+    virtual NodePtr duplicateNode(NodePtr node) const Q_DECL_OVERRIDE;
+    virtual void freeNode(NodePtr node) const Q_DECL_OVERRIDE;
 
 private:
     const QTextHtmlParser *parser;
@@ -1834,6 +1780,189 @@
     }
 }
 
+QVector<QCss::Declaration> standardDeclarationForNode(const QTextHtmlParserNode &node)
+{
+    QVector<QCss::Declaration> decls;
+    QCss::Declaration decl;
+    QCss::Value val;
+    switch (node.id) {
+    case Html_a:
+    case Html_u: {
+        bool needsUnderline = (node.id == Html_u) ? true : false;
+        if (node.id == Html_a) {
+            for (int i = 0; i < node.attributes.count(); i += 2) {
+                const QString key = node.attributes.at(i);
+                if (key.compare(QLatin1String("href"), Qt::CaseInsensitive) == 0
+                    && !node.attributes.at(i + 1).isEmpty()) {
+                    needsUnderline = true;
+                    decl.d->property = QLatin1String("color");
+                    decl.d->propertyId = QCss::Color;
+                    val.type = QCss::Value::Color;
+                    val.variant = QVariant(QGuiApplication::palette().link());
+                    decl.d->values = QVector<QCss::Value>() << val;
+                    decl.d->inheritable = true;
+                    decls << decl;
+                    break;
+                }
+            }
+        }
+        if (needsUnderline) {
+            decl = QCss::Declaration();
+            decl.d->property = QLatin1String("text-decoration");
+            decl.d->propertyId = QCss::TextDecoration;
+            val.type = QCss::Value::KnownIdentifier;
+            val.variant = QVariant(QCss::Value_Underline);
+            decl.d->values = QVector<QCss::Value>() << val;
+            decl.d->inheritable = true;
+            decls << decl;
+        }
+        break;
+    }
+    case Html_b:
+    case Html_strong:
+    case Html_h1:
+    case Html_h2:
+    case Html_h3:
+    case Html_h4:
+    case Html_h5:
+    case Html_th:
+        decl = QCss::Declaration();
+        decl.d->property = QLatin1String("font-weight");
+        decl.d->propertyId = QCss::FontWeight;
+        val.type = QCss::Value::KnownIdentifier;
+        val.variant = QVariant(QCss::Value_Bold);
+        decl.d->values = QVector<QCss::Value>() << val;
+        decl.d->inheritable = true;
+        decls << decl;
+        if (node.id == Html_b || node.id == Html_strong)
+            break;
+        // Delibrate fall through
+    case Html_big:
+    case Html_small:
+        if (node.id != Html_th) {
+            decl = QCss::Declaration();
+            decl.d->property = QLatin1String("font-size");
+            decl.d->propertyId = QCss::FontSize;
+            decl.d->inheritable = false;
+            val.type = QCss::Value::KnownIdentifier;
+            switch (node.id) {
+            case Html_h1: val.variant = QVariant(QCss::Value_XXLarge); break;
+            case Html_h2: val.variant = QVariant(QCss::Value_XLarge); break;
+            case Html_h3: case Html_big: val.variant = QVariant(QCss::Value_Large); break;
+            case Html_h4: val.variant = QVariant(QCss::Value_Medium); break;
+            case Html_h5: case Html_small: val.variant = QVariant(QCss::Value_Small); break;
+            default: break;
+            }
+            decl.d->values = QVector<QCss::Value>() << val;
+            decls << decl;
+            break;
+        }
+        // Delibrate fall through
+    case Html_center:
+    case Html_td:
+        decl = QCss::Declaration();
+        decl.d->property = QLatin1String("text-align");
+        decl.d->propertyId = QCss::TextAlignment;
+        val.type = QCss::Value::KnownIdentifier;
+        val.variant = (node.id == Html_td) ? QVariant(QCss::Value_Left) : QVariant(QCss::Value_Center);
+        decl.d->values = QVector<QCss::Value>() << val;
+        decl.d->inheritable = true;
+        decls << decl;
+        break;
+    case Html_s:
+        decl = QCss::Declaration();
+        decl.d->property = QLatin1String("text-decoration");
+        decl.d->propertyId = QCss::TextDecoration;
+        val.type = QCss::Value::KnownIdentifier;
+        val.variant = QVariant(QCss::Value_LineThrough);
+        decl.d->values = QVector<QCss::Value>() << val;
+        decl.d->inheritable = true;
+        decls << decl;
+        break;
+    case Html_em:
+    case Html_i:
+    case Html_cite:
+    case Html_address:
+    case Html_var:
+    case Html_dfn:
+        decl = QCss::Declaration();
+        decl.d->property = QLatin1String("font-style");
+        decl.d->propertyId = QCss::FontStyle;
+        val.type = QCss::Value::KnownIdentifier;
+        val.variant = QVariant(QCss::Value_Italic);
+        decl.d->values = QVector<QCss::Value>() << val;
+        decl.d->inheritable = true;
+        decls << decl;
+        break;
+    case Html_sub:
+    case Html_sup:
+        decl = QCss::Declaration();
+        decl.d->property = QLatin1String("vertical-align");
+        decl.d->propertyId = QCss::VerticalAlignment;
+        val.type = QCss::Value::KnownIdentifier;
+        val.variant = (node.id == Html_sub) ? QVariant(QCss::Value_Sub) : QVariant(QCss::Value_Super);
+        decl.d->values = QVector<QCss::Value>() << val;
+        decl.d->inheritable = true;
+        decls << decl;
+        break;
+    case Html_ul:
+    case Html_ol:
+        decl = QCss::Declaration();
+        decl.d->property = QLatin1String("list-style");
+        decl.d->propertyId = QCss::ListStyle;
+        val.type = QCss::Value::KnownIdentifier;
+        val.variant = (node.id == Html_ul) ? QVariant(QCss::Value_Disc) : QVariant(QCss::Value_Decimal);
+        decl.d->values = QVector<QCss::Value>() << val;
+        decl.d->inheritable = true;
+        decls << decl;
+        break;
+    case Html_code:
+    case Html_tt:
+    case Html_kbd:
+    case Html_samp:
+    case Html_pre: {
+        decl = QCss::Declaration();
+        decl.d->property = QLatin1String("font-family");
+        decl.d->propertyId = QCss::FontFamily;
+        QVector<QCss::Value> values;
+        val.type = QCss::Value::String;
+        val.variant = QLatin1String("Courier New");
+        values << val;
+        val.type = QCss::Value::TermOperatorComma;
+        val.variant = QVariant();
+        values << val;
+        val.type = QCss::Value::String;
+        val.variant = QLatin1String("courier");
+        values << val;
+        decl.d->values = values;
+        decl.d->inheritable = true;
+        decls << decl;
+        }
+        if (node.id != Html_pre)
+            break;
+        // Delibrate fall through
+    case Html_br:
+    case Html_nobr:
+        decl = QCss::Declaration();
+        decl.d->property = QLatin1String("whitespace");
+        decl.d->propertyId = QCss::Whitespace;
+        val.type = QCss::Value::KnownIdentifier;
+        switch (node.id) {
+        case Html_br: val.variant = QVariant(QCss::Value_PreWrap); break;
+        case Html_nobr: val.variant = QVariant(QCss::Value_NoWrap); break;
+        case Html_pre: val.variant = QVariant(QCss::Value_Pre); break;
+        default: break;
+        }
+        decl.d->values = QVector<QCss::Value>() << val;
+        decl.d->inheritable = true;
+        decls << decl;
+        break;
+    default:
+        break;
+    }
+    return decls;
+}
+
 QVector<QCss::Declaration> QTextHtmlParser::declarationsForNode(int node) const
 {
     QVector<QCss::Declaration> decls;
@@ -1861,8 +1990,20 @@
     const char *extraPseudo = 0;
     if (nodes.at(node).id == Html_a && nodes.at(node).hasHref)
         extraPseudo = "link";
-    decls = selector.declarationsForNode(n, extraPseudo);
-
+    // Ensure that our own style is taken into consideration
+    decls = standardDeclarationForNode(nodes.at(node));
+    decls += selector.declarationsForNode(n, extraPseudo);
+    n = selector.parentNode(n);
+    while (!selector.isNullNode(n)) {
+        QVector<QCss::Declaration> inheritedDecls;
+        inheritedDecls = selector.declarationsForNode(n, extraPseudo);
+        for (int i = 0; i < inheritedDecls.size(); ++i) {
+            const QCss::Declaration &decl = inheritedDecls.at(i);
+            if (decl.d->inheritable)
+                decls.prepend(decl);
+        }
+        n = selector.parentNode(n);
+    }
     return decls;
 }
 
diff -Nuar orig/qtbase/src/gui/text/qtexthtmlparser_p.h qtbase/src/gui/text/qtexthtmlparser_p.h
--- orig/qtbase/src/gui/text/qtexthtmlparser_p.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qtexthtmlparser_p.h	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
diff -Nuar orig/qtbase/src/gui/text/qtextimagehandler.cpp qtbase/src/gui/text/qtextimagehandler.cpp
--- orig/qtbase/src/gui/text/qtextimagehandler.cpp	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qtextimagehandler.cpp	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
diff -Nuar orig/qtbase/src/gui/text/qtextimagehandler_p.h qtbase/src/gui/text/qtextimagehandler_p.h
--- orig/qtbase/src/gui/text/qtextimagehandler_p.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qtextimagehandler_p.h	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -60,8 +60,8 @@
 public:
     explicit QTextImageHandler(QObject *parent = 0);
 
-    virtual QSizeF intrinsicSize(QTextDocument *doc, int posInDocument, const QTextFormat &format);
-    virtual void drawObject(QPainter *p, const QRectF &rect, QTextDocument *doc, int posInDocument, const QTextFormat &format);
+    virtual QSizeF intrinsicSize(QTextDocument *doc, int posInDocument, const QTextFormat &format) Q_DECL_OVERRIDE;
+    virtual void drawObject(QPainter *p, const QRectF &rect, QTextDocument *doc, int posInDocument, const QTextFormat &format) Q_DECL_OVERRIDE;
     QImage image(QTextDocument *doc, const QTextImageFormat &imageFormat);
 };
 
diff -Nuar orig/qtbase/src/gui/text/qtextlayout.cpp qtbase/src/gui/text/qtextlayout.cpp
--- orig/qtbase/src/gui/text/qtextlayout.cpp	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qtextlayout.cpp	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -648,10 +648,10 @@
             while (oldPos < len && d->atWordSeparator(oldPos))
                 oldPos++;
         } else {
-            while (oldPos < len && !d->atSpace(oldPos) && !d->atWordSeparator(oldPos))
+            while (oldPos < len && !attributes[oldPos].whiteSpace && !d->atWordSeparator(oldPos))
                 oldPos++;
         }
-        while (oldPos < len && d->atSpace(oldPos))
+        while (oldPos < len && attributes[oldPos].whiteSpace)
             oldPos++;
     }
 
@@ -679,7 +679,7 @@
         while (oldPos && !attributes[oldPos].graphemeBoundary)
             oldPos--;
     } else {
-        while (oldPos && d->atSpace(oldPos-1))
+        while (oldPos > 0 && attributes[oldPos - 1].whiteSpace)
             oldPos--;
 
         if (oldPos && d->atWordSeparator(oldPos-1)) {
@@ -687,7 +687,7 @@
             while (oldPos && d->atWordSeparator(oldPos-1))
                 oldPos--;
         } else {
-            while (oldPos && !d->atSpace(oldPos-1) && !d->atWordSeparator(oldPos-1))
+            while (oldPos > 0 && !attributes[oldPos - 1].whiteSpace && !d->atWordSeparator(oldPos-1))
                 oldPos--;
         }
     }
@@ -2091,7 +2091,9 @@
     qreal minY = 0;
     qreal maxY = 0;
     QVector<quint32> glyphs;
+    glyphs.reserve(glyphsArray.size());
     QVector<QPointF> positions;
+    positions.reserve(glyphsArray.size());
     for (int i=0; i<glyphsArray.size(); ++i) {
         glyphs.append(glyphsArray.at(i) & 0xffffff);
 
diff -Nuar orig/qtbase/src/gui/text/qtextlayout.h qtbase/src/gui/text/qtextlayout.h
--- orig/qtbase/src/gui/text/qtextlayout.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qtextlayout.h	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
diff -Nuar orig/qtbase/src/gui/text/qtextlist.cpp qtbase/src/gui/text/qtextlist.cpp
--- orig/qtbase/src/gui/text/qtextlist.cpp	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qtextlist.cpp	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
diff -Nuar orig/qtbase/src/gui/text/qtextlist.h qtbase/src/gui/text/qtextlist.h
--- orig/qtbase/src/gui/text/qtextlist.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qtextlist.h	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
diff -Nuar orig/qtbase/src/gui/text/qtextobject.cpp qtbase/src/gui/text/qtextobject.cpp
--- orig/qtbase/src/gui/text/qtextobject.cpp	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qtextobject.cpp	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -1561,7 +1561,7 @@
     Returns the text block in the document before this block, or an empty text
     block if this is the first one.
 
-    Note that the next block may be in a different frame or table to this block.
+    Note that the previous block may be in a different frame or table to this block.
 
     \sa next(), begin(), end()
 */
diff -Nuar orig/qtbase/src/gui/text/qtextobject.h qtbase/src/gui/text/qtextobject.h
--- orig/qtbase/src/gui/text/qtextobject.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qtextobject.h	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
diff -Nuar orig/qtbase/src/gui/text/qtextobject_p.h qtbase/src/gui/text/qtextobject_p.h
--- orig/qtbase/src/gui/text/qtextobject_p.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qtextobject_p.h	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
diff -Nuar orig/qtbase/src/gui/text/qtextodfwriter.cpp qtbase/src/gui/text/qtextodfwriter.cpp
--- orig/qtbase/src/gui/text/qtextodfwriter.cpp	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qtextodfwriter.cpp	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -88,7 +88,7 @@
         if (contentStream)
             contentStream->close();
     }
-    virtual void addFile(const QString &, const QString &, const QByteArray &)
+    virtual void addFile(const QString &, const QString &, const QByteArray &) Q_DECL_OVERRIDE
     {
         // we ignore this...
     }
@@ -131,7 +131,7 @@
         zip.close();
     }
 
-    virtual void addFile(const QString &fileName, const QString &mimeType, const QByteArray &bytes)
+    virtual void addFile(const QString &fileName, const QString &mimeType, const QByteArray &bytes) Q_DECL_OVERRIDE
     {
         zip.addFile(fileName, bytes);
         addFile(fileName, mimeType);
@@ -278,7 +278,7 @@
     writer.writeStartElement(textNS, QString::fromLatin1("p"));
     writer.writeAttribute(textNS, QString::fromLatin1("style-name"), QString::fromLatin1("p%1")
         .arg(block.blockFormatIndex()));
-    for (QTextBlock::Iterator frag= block.begin(); !frag.atEnd(); frag++) {
+    for (QTextBlock::Iterator frag = block.begin(); !frag.atEnd(); ++frag) {
         writer.writeCharacters(QString()); // Trick to make sure that the span gets no linefeed in front of it.
         writer.writeStartElement(textNS, QString::fromLatin1("span"));
 
diff -Nuar orig/qtbase/src/gui/text/qtextodfwriter_p.h qtbase/src/gui/text/qtextodfwriter_p.h
--- orig/qtbase/src/gui/text/qtextodfwriter_p.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qtextodfwriter_p.h	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
diff -Nuar orig/qtbase/src/gui/text/qtextoption.cpp qtbase/src/gui/text/qtextoption.cpp
--- orig/qtbase/src/gui/text/qtextoption.cpp	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qtextoption.cpp	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
diff -Nuar orig/qtbase/src/gui/text/qtextoption.h qtbase/src/gui/text/qtextoption.h
--- orig/qtbase/src/gui/text/qtextoption.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qtextoption.h	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
diff -Nuar orig/qtbase/src/gui/text/qtexttable.cpp qtbase/src/gui/text/qtexttable.cpp
--- orig/qtbase/src/gui/text/qtexttable.cpp	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qtexttable.cpp	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -37,7 +37,6 @@
 #include <qdebug.h>
 #include "qtexttable_p.h"
 #include "qvarlengtharray.h"
-#include "private/qfunctions_p.h"
 
 #include <algorithm>
 #include <stdlib.h>
@@ -371,12 +370,12 @@
     const QTextDocumentPrivate::FragmentMap &fragmentMap;
 };
 
-Q_STATIC_GLOBAL_INLINE_OPERATOR bool operator<(int fragment, const QFragmentFindHelper &helper)
+static inline bool operator<(int fragment, const QFragmentFindHelper &helper)
 {
     return helper.fragmentMap.position(fragment) < helper.pos;
 }
 
-Q_STATIC_GLOBAL_INLINE_OPERATOR bool operator<(const QFragmentFindHelper &helper, int fragment)
+static inline bool operator<(const QFragmentFindHelper &helper, int fragment)
 {
     return helper.pos < helper.fragmentMap.position(fragment);
 }
@@ -1265,12 +1264,6 @@
     return d->nCols;
 }
 
-#if 0
-void QTextTable::mergeCells(const QTextCursor &selection)
-{
-}
-#endif
-
 /*!
     \fn QTextCursor QTextTable::rowStart(const QTextCursor &cursor) const
 
diff -Nuar orig/qtbase/src/gui/text/qtexttable.h qtbase/src/gui/text/qtexttable.h
--- orig/qtbase/src/gui/text/qtexttable.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qtexttable.h	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
diff -Nuar orig/qtbase/src/gui/text/qtexttable_p.h qtbase/src/gui/text/qtexttable_p.h
--- orig/qtbase/src/gui/text/qtexttable_p.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qtexttable_p.h	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -58,8 +58,8 @@
     ~QTextTablePrivate();
 
     static QTextTable *createTable(QTextDocumentPrivate *, int pos, int rows, int cols, const QTextTableFormat &tableFormat);
-    void fragmentAdded(QChar type, uint fragment);
-    void fragmentRemoved(QChar type, uint fragment);
+    void fragmentAdded(QChar type, uint fragment) Q_DECL_OVERRIDE;
+    void fragmentRemoved(QChar type, uint fragment) Q_DECL_OVERRIDE;
 
     void update() const;
 
diff -Nuar orig/qtbase/src/gui/text/qzip.cpp qtbase/src/gui/text/qzip.cpp
--- orig/qtbase/src/gui/text/qzip.cpp	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qzip.cpp	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -194,7 +194,7 @@
     z_stream stream;
     int err;
 
-    stream.next_in = (Bytef*)source;
+    stream.next_in = const_cast<Bytef*>(source);
     stream.avail_in = (uInt)sourceLen;
     if ((uLong)stream.avail_in != sourceLen)
         return Z_BUF_ERROR;
@@ -229,7 +229,7 @@
     z_stream stream;
     int err;
 
-    stream.next_in = (Bytef*)source;
+    stream.next_in = const_cast<Bytef*>(source);
     stream.avail_in = (uInt)sourceLen;
     stream.next_out = dest;
     stream.avail_out = (uInt)*destLen;
@@ -670,7 +670,7 @@
 void QZipWriterPrivate::addEntry(EntryType type, const QString &fileName, const QByteArray &contents/*, QFile::Permissions permissions, QZip::Method m*/)
 {
 #ifndef NDEBUG
-    static const char *entryTypes[] = {
+    static const char *const entryTypes[] = {
         "directory",
         "file     ",
         "symlink  " };
@@ -1008,7 +1008,7 @@
         do {
             baunzip.resize(len);
             res = inflate((uchar*)baunzip.data(), &len,
-                          (uchar*)compressed.constData(), compressed_size);
+                          (const uchar*)compressed.constData(), compressed_size);
 
             switch (res) {
             case Z_OK:
diff -Nuar orig/qtbase/src/gui/text/qzipreader_p.h qtbase/src/gui/text/qzipreader_p.h
--- orig/qtbase/src/gui/text/qzipreader_p.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qzipreader_p.h	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
diff -Nuar orig/qtbase/src/gui/text/qzipwriter_p.h qtbase/src/gui/text/qzipwriter_p.h
--- orig/qtbase/src/gui/text/qzipwriter_p.h	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/qzipwriter_p.h	2015-05-11 13:25:18.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtGui module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
diff -Nuar orig/qtbase/src/gui/text/text.pri qtbase/src/gui/text/text.pri
--- orig/qtbase/src/gui/text/text.pri	2015-02-16 20:56:47.000000000 -0800
+++ qtbase/src/gui/text/text.pri	2015-05-11 13:25:18.000000000 -0700
@@ -86,7 +86,7 @@
 contains(QT_CONFIG, harfbuzz)|contains(QT_CONFIG, system-harfbuzz) {
     DEFINES += QT_ENABLE_HARFBUZZ_NG
 
-    include($$PWD/../../3rdparty/harfbuzzng.pri)
+    include($$PWD/../../3rdparty/harfbuzz_dependency.pri)
 
     SOURCES += text/qharfbuzzng.cpp
     HEADERS += text/qharfbuzzng_p.h
diff -Naur orig/qtbase/src/corelib/tools/qmap.h qtbase/src/corelib/tools/qmap.h
--- orig/qtbase/src/corelib/tools/qmap.h	2015-02-16 20:56:49.000000000 -0800
+++ qtbase/src/corelib/tools/qmap.h	2015-04-13 17:24:43.000000000 -0700
@@ -117,8 +117,10 @@
     QMapNode<Key, T> *lowerBound(const Key &key);
     QMapNode<Key, T> *upperBound(const Key &key);
 
-private:
+//private:
+///QtCore/qmap.h:112: error: 'struct QMapNode<Key, T>' only defines private constructors and has no friends
     QMapNode() Q_DECL_EQ_DELETE;
+private:
     Q_DISABLE_COPY(QMapNode)
 };
 

--- qtquick1/src/declarative/graphicsitems/qdeclarativetextlayout.cpp.orig	2015-05-11 16:56:24.000000000 -0700
+++ qtquick1/src/declarative/graphicsitems/qdeclarativetextlayout.cpp	2015-05-11 16:56:29.000000000 -0700
@@ -1,7 +1,7 @@
 /****************************************************************************
 **
-** Copyright (C) 2014 Digia Plc and/or its subsidiary(-ies).
-** Contact: http://www.qt-project.org/legal
+** Copyright (C) 2015 The Qt Company Ltd.
+** Contact: http://www.qt.io/licensing/
 **
 ** This file is part of the QtDeclarative module of the Qt Toolkit.
 **
@@ -10,9 +10,9 @@
 ** Licensees holding valid commercial Qt licenses may use this file in
 ** accordance with the commercial license agreement provided with the
 ** Software or, alternatively, in accordance with the terms contained in
-** a written agreement between you and Digia. For licensing terms and
-** conditions see http://qt.digia.com/licensing. For further information
-** use the contact form at http://qt.digia.com/contact-us.
+** a written agreement between you and The Qt Company. For licensing terms
+** and conditions see http://www.qt.io/terms-conditions. For further
+** information use the contact form at http://www.qt.io/contact-us.
 **
 ** GNU Lesser General Public License Usage
 ** Alternatively, this file may be used under the terms of the GNU Lesser
@@ -23,8 +23,8 @@
 ** requirements will be met: https://www.gnu.org/licenses/lgpl.html and
 ** http://www.gnu.org/licenses/old-licenses/lgpl-2.1.html.
 **
-** In addition, as a special exception, Digia gives you certain additional
-** rights. These rights are described in the Digia Qt LGPL Exception
+** As a special exception, The Qt Company gives you certain additional
+** rights. These rights are described in The Qt Company LGPL Exception
 ** version 1.1, included in the file LGPL_EXCEPTION.txt in this package.
 **
 ** $QT_END_LICENSE$
@@ -54,7 +54,6 @@
     QVector<QStaticTextItem> items;
     QVector<QFixedPoint> positions;
     QVector<glyph_t> glyphs;
-    QVector<QChar> chars;
 };
 
 namespace {
@@ -80,7 +79,6 @@
         {
             int glyphOffset = m_inertText->glyphs.size(); // Store offset into glyph pool
             int positionOffset = m_inertText->glyphs.size(); // Offset into position pool
-            int charOffset = m_inertText->chars.size();
 
             const QTextItemInt &ti = static_cast<const QTextItemInt &>(textItem);
 
@@ -91,9 +89,6 @@
                 if (last.fontEngine() == ti.fontEngine && last.font == ti.font() &&
                     (!m_dirtyPen || last.color == state->pen().color())) {
                     needFreshCurrentItem = false;
-
-                    last.numChars += ti.num_chars;
-
                 }
             }
 
@@ -102,8 +97,6 @@
 
                 currentItem.setFontEngine(ti.fontEngine);
                 currentItem.font = ti.font();
-                currentItem.charOffset = charOffset;
-                currentItem.numChars = ti.num_chars;
                 currentItem.numGlyphs = 0;
                 currentItem.glyphOffset = glyphOffset;
                 currentItem.positionOffset = positionOffset;
@@ -129,17 +122,12 @@
 
             m_inertText->glyphs.resize(m_inertText->glyphs.size() + size);
             m_inertText->positions.resize(m_inertText->glyphs.size());
-            m_inertText->chars.resize(m_inertText->chars.size() + ti.num_chars);
 
             glyph_t *glyphsDestination = m_inertText->glyphs.data() + glyphOffset;
             memcpy(glyphsDestination, glyphs.constData(), sizeof(glyph_t) * size);
 
             QFixedPoint *positionsDestination = m_inertText->positions.data() + positionOffset;
             memcpy(positionsDestination, positions.constData(), sizeof(QFixedPoint) * size);
-
-            QChar *charsDestination = m_inertText->chars.data() + charOffset;
-            memcpy(charsDestination, ti.chars, sizeof(QChar) * ti.num_chars);
-
         }
 
         virtual void drawPolygon(const QPointF *, int , PolygonDrawMode )
@@ -278,7 +266,6 @@
         d->items.clear();
         d->positions.clear();
         d->glyphs.clear();
-        d->chars.clear();
         d->position = QPointF();
     }
     QTextLayout::beginLayout();
@@ -291,7 +278,6 @@
         d->items.clear();
         d->positions.clear();
         d->glyphs.clear();
-        d->chars.clear();
         d->position = QPointF();
     }
     QTextLayout::clearLayout();
@@ -310,14 +296,12 @@
 
         glyph_t *glyphPool = d->glyphs.data();
         QFixedPoint *positionPool = d->positions.data();
-        QChar *charPool = d->chars.data();
 
         int itemCount = d->items.count();
         for (int ii = 0; ii < itemCount; ++ii) {
             QStaticTextItem &item = d->items[ii];
             item.glyphs = glyphPool + item.glyphOffset;
             item.glyphPositions = positionPool + item.positionOffset;
-            item.chars = charPool + item.charOffset;
         }
 
         d->cached = true;

--- ./qtbase/src/corelib/tools/qtools_p.h.orig  2015-06-10 16:40:58.000000000 -0700
+++ ./qtbase/src/corelib/tools/qtools_p.h       2015-06-10 16:41:19.000000000 -0700
@@ -33,6 +33,7 @@

 #ifndef QTOOLS_P_H
 #define QTOOLS_P_H
+#include <limits>

 //
 //  W A R N I N G
@@ -52,6 +53,11 @@
 // implemented in qbytearray.cpp
 int Q_CORE_EXPORT qAllocMore(int alloc, int extra) Q_DECL_NOTHROW;

+// We typically need an extra bit for qNextPowerOfTwo when determining the next allocation size.
+enum {
+    MaxAllocSize = (1 << (std::numeric_limits<int>::digits - 1)) - 1
+};
+
 QT_END_NAMESPACE

 #endif // QTOOLS_P_H

--- qtbase/src/3rdparty/harfbuzz_dependency.pri.orig        1969-12-31 16:00:00.000000000 -0800
+++ qtbase/src/3rdparty/harfbuzz_dependency.pri     2015-06-10 17:28:18.000000000 -0700
@@ -0,0 +1,6 @@
+contains(QT_CONFIG, harfbuzz) {
+    INCLUDEPATH += $$PWD/harfbuzz-ng/include
+    LIBS_PRIVATE += -L$$QT_BUILD_TREE/lib -lqtharfbuzzng$$qtPlatformTargetSuffix()
+} else:contains(QT_CONFIG, system-harfbuzz) {
+    LIBS_PRIVATE += -lharfbuzz
+}
