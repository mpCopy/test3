set_design_type( sigproc_net );

create_item ("EDGE_TxORFS_Switching_Meas","VSA compatible ORFS measurement due to switching",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_TxORFS_Switching_Meas",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_TxORFS_Switching_Meas",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_TxORFS_Switching_Meas",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SampPerSym","number of samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")),
	create_parm ("FCarrier","carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","890.2e6")),
	create_parm ("TS_Num","number of time slots measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","50")),
	create_parm ("TS_Measured","time slot to be measured in each TDMA frame,0 to 7",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("RIn","input resistance",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50.0 Ohm")),
	create_parm ("RTemp","resistor physical temperature",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-273.15")));


create_item ("EDGE_TxORFS_Modulation_Meas","VSA compatible ORFS measurement due to modulation",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_TxORFS_Modulation_Meas",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_TxORFS_Modulation_Meas",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_TxORFS_Modulation_Meas",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SampPerSym","number of samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")),
	create_parm ("FCarrier","carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","890.2e6")),
	create_parm ("TS_Num","number of time slots measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","50")),
	create_parm ("TS_Measured","time slot to be measured in each TDMA frame,0 to 7",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("RIn","input resistance",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50.0 Ohm")),
	create_parm ("RTemp","resistor physical temperature",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-273.15")));


create_constant_form ("_nEDGE_x5fRF_x5fMod_fNormal", 
	"Normal",
	0,
	"0",
	"Normal");

create_constant_form ("_nEDGE_x5fRF_x5fMod_fInvert", 
	"Invert",
	0,
	"1",
	"Invert");

create_form_set("_nEDGE_x5fRF_x5fMod_fPhasePolaritySet",
	"_nEDGE_x5fRF_x5fMod_fNormal",
	"_nEDGE_x5fRF_x5fMod_fInvert",
	"StdForm");

create_item ("EDGE_RF_Mod","RF Modulator",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_RF_Mod",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_RF_Mod",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_RF_Mod",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("FCarrier","carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","1.9e9")),
	create_parm ("Power","RF output power",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","0.01")),
	create_parm ("VRef","reference voltage for output power calibration",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		VOLTAGE_UNIT,
		prm("StdForm","1.0")),
	create_parm ("I_OriginOffset","I origin offset in percent with respect to output rms value",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("Q_OriginOffset","Q origin offset in percent with respect to output rms value",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("IQ_Rotation","IQ_Rotation in degrees",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("FrequencyError","frequency error",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","0.0")),
	create_parm ("GainImbalance","gain imbalance in dB Q channel has the gain imbalance applied to it",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("PhaseImbalance","phase imbalance in degrees Q channel has the phase imbalance applied to it",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("NDensity","additive noise density in dBm per Hz",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-173.975")),
	create_parm ("ROut","output resistance",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","DefaultROut")),
	create_parm ("TStep","time step",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","0.0")),
	create_parm ("PhasePolarity","if set to Invert, Q channel signal is inverted",
		PARM_INT,
		"_nEDGE_x5fRF_x5fMod_fPhasePolaritySet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fRF_x5fMod_fNormal","Normal")));


create_item ("EDGE_RF_TX_IFin","RF transmitter with IF input and RF output",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_RF_TX_IFin",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_RF_TX_IFin",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_RF_TX_IFin",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("IF_Freq","input IF frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","400e3 Hz")),
	create_parm ("RF_Freq","output RF frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","900e6 Hz")),
	create_parm ("TX_Gain","transmitter gain in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","80 dB")),
	create_parm ("PSat","saturated output power",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(35)")),
	create_parm ("RIn","input resistance",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","DefaultRIn")),
	create_parm ("ROut","output resistance",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","DefaultROut")),
	create_parm ("RTemp","resistor physical temperature, C",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","DefaultRTemp")),
	create_parm ("TStep","time step",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","0.0")),
	create_parm ("SAW_Aripple","amplitude ripple of SAW filter",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1.0")));


create_item ("EDGE_RF_RX_IFout","RF receiver with RF input and IF output",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_RF_RX_IFout",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_RF_RX_IFout",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_RF_RX_IFout",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("RX_AntTemp","receiving antenna noise temperature, in degrees Kelvin",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","150")),
	create_parm ("RX_Gain","receiver gain, in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","50 dB")),
	create_parm ("RX_NF","receiver noise figure",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","5 dB")),
	create_parm ("RF_Freq","input RF frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","900e6 Hz")),
	create_parm ("RF_BW","RF filter bandwidth",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","25e6 Hz")),
	create_parm ("IF_Freq1","1st IF frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","100e6 Hz")),
	create_parm ("IF_Freq2","2nd IF frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","400e3 Hz")),
	create_parm ("IF_BW","IF filter bandwidth",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","30e3 Hz")),
	create_parm ("IP3in","3rd order intercept point at input, in dBm",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-25)")),
	create_parm ("RIn","input resistance",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","DefaultRIn")),
	create_parm ("ROut","output resistance",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","DefaultROut")));


create_item ("EDGE_RF_Demod","RF Demodulator",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_RF_Demod",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_RF_Demod",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_RF_Demod",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("FCarrier","carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","1.9e9")),
	create_parm ("Phase","demodulator reference phase in degrees",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		ANGLE_UNIT,
		prm("StdForm","0.0")),
	create_parm ("VRef","reference voltage for output calibration",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		VOLTAGE_UNIT,
		prm("StdForm","1.0")),
	create_parm ("RIn","input resistance",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","DefaultRIn")));


create_item ("EDGE_Pwr_vs_Time_Meas","VSA compatible power vs time measurement for EDGE",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_Pwr_vs_Time_Meas",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_Pwr_vs_Time_Meas",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_Pwr_vs_Time_Meas",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SampPerSym","number of samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("FCarrier","carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","890.2e6")),
	create_parm ("TS_Measured","time slot to be measured in each TDMA frame,0 to 7",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("RIn","input resistance",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50.0 Ohm")),
	create_parm ("RTemp","resistor physical temperature",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-273.15")));


create_constant_form ("_nEDGE_x5fPwr_x5fvs_x5fTime_fBasic", 
	"Basic",
	0,
	"0",
	"Basic");

create_constant_form ("_nEDGE_x5fPwr_x5fvs_x5fTime_fGSM_x5f8_x5f3_x5f0_x5fRelease_x5f1999", 
	"GSM_8_3_0_Release_1999",
	0,
	"1",
	"GSM 8.3.0 Release 1999");

create_form_set("_nEDGE_x5fPwr_x5fvs_x5fTime_fBurstSpecVersionSet",
	"_nEDGE_x5fPwr_x5fvs_x5fTime_fBasic",
	"_nEDGE_x5fPwr_x5fvs_x5fTime_fGSM_x5f8_x5f3_x5f0_x5fRelease_x5f1999",
	"StdForm");

create_constant_form ("_nEDGE_x5fPwr_x5fvs_x5fTime_fBaseband_x5fsignal", 
	"Baseband signal",
	0,
	"0",
	"Baseband signal");

create_constant_form ("_nEDGE_x5fPwr_x5fvs_x5fTime_fRF_x5fsignal", 
	"RF signal",
	0,
	"1",
	"RF signal");

create_form_set("_nEDGE_x5fPwr_x5fvs_x5fTime_fSignalTypeSet",
	"_nEDGE_x5fPwr_x5fvs_x5fTime_fBaseband_x5fsignal",
	"_nEDGE_x5fPwr_x5fvs_x5fTime_fRF_x5fsignal",
	"StdForm");

create_item ("EDGE_Pwr_vs_Time","Power vs time measurement for EDGE",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_Pwr_vs_Time",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_Pwr_vs_Time",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_Pwr_vs_Time",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("BurstSpecVersion","EDGE specification for normal burst if choose Basic, each burst has 156 symbols, otherwise complys with GSM 8.3.0 Release 1999",
		PARM_INT,
		"_nEDGE_x5fPwr_x5fvs_x5fTime_fBurstSpecVersionSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fPwr_x5fvs_x5fTime_fBasic","Basic")),
	create_parm ("SampPerSym","number of samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("TS_Measured","time slot to be measured in each TDMA frame,0 to 7",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("TS_Num","number of time slots measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","100")),
	create_parm ("SignalType","type of signal",
		PARM_INT,
		"_nEDGE_x5fPwr_x5fvs_x5fTime_fSignalTypeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fPwr_x5fvs_x5fTime_fBaseband_x5fsignal","Baseband_signal")),
	create_parm ("Rref","reference resistance",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50.0 Ohm")),
	create_parm ("Mean_Tx_Pwr","mean transmitted power, in dBm",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","12")));


create_item ("EDGE_Pwr_Meas","VSA compatible mean transmitted RF carrier power measurement",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_Pwr_Meas",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_Pwr_Meas",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_Pwr_Meas",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SampPerSym","number of samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("FCarrier","carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","890.2e6")),
	create_parm ("TS_Measured","time slot to be measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("RIn","input resistance",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50.0 Ohm")),
	create_parm ("RTemp","resistor physical temperature",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-273.15")));


create_constant_form ("_nEDGE_x5fMultipathUp_fNoMultipath", 
	"NoMultipath",
	0,
	"0",
	"NoMultipath");

create_constant_form ("_nEDGE_x5fMultipathUp_fRuralArea1", 
	"RuralArea1",
	0,
	"1",
	"RuralArea1");

create_constant_form ("_nEDGE_x5fMultipathUp_fRuralArea2", 
	"RuralArea2",
	0,
	"2",
	"RuralArea2");

create_constant_form ("_nEDGE_x5fMultipathUp_fHillyTerrain6Tap1", 
	"HillyTerrain6Tap1",
	0,
	"3",
	"HillyTerrain6Tap1");

create_constant_form ("_nEDGE_x5fMultipathUp_fHillyTerrain6Tap2", 
	"HillyTerrain6Tap2",
	0,
	"4",
	"HillyTerrain6Tap2");

create_constant_form ("_nEDGE_x5fMultipathUp_fHillyTerrain12Tap1", 
	"HillyTerrain12Tap1",
	0,
	"5",
	"HillyTerrain12Tap1");

create_constant_form ("_nEDGE_x5fMultipathUp_fHillyTerrain12Tap2", 
	"HillyTerrain12Tap2",
	0,
	"6",
	"HillyTerrain12Tap2");

create_constant_form ("_nEDGE_x5fMultipathUp_fUrbanArea6Tap1", 
	"UrbanArea6Tap1",
	0,
	"7",
	"UrbanArea6Tap1");

create_constant_form ("_nEDGE_x5fMultipathUp_fUrbanArea6Tap2", 
	"UrbanArea6Tap2",
	0,
	"8",
	"UrbanArea6Tap2");

create_constant_form ("_nEDGE_x5fMultipathUp_fUrbanArea12Tap1", 
	"UrbanArea12Tap1",
	0,
	"9",
	"UrbanArea12Tap1");

create_constant_form ("_nEDGE_x5fMultipathUp_fUrbanArea12Tap2", 
	"UrbanArea12Tap2",
	0,
	"10",
	"UrbanArea12Tap2");

create_constant_form ("_nEDGE_x5fMultipathUp_fEqualizationTest", 
	"EqualizationTest",
	0,
	"11",
	"EqualizationTest");

create_form_set("_nEDGE_x5fMultipathUp_fTypeSet",
	"_nEDGE_x5fMultipathUp_fNoMultipath",
	"_nEDGE_x5fMultipathUp_fRuralArea1",
	"_nEDGE_x5fMultipathUp_fRuralArea2",
	"_nEDGE_x5fMultipathUp_fHillyTerrain6Tap1",
	"_nEDGE_x5fMultipathUp_fHillyTerrain6Tap2",
	"_nEDGE_x5fMultipathUp_fHillyTerrain12Tap1",
	"_nEDGE_x5fMultipathUp_fHillyTerrain12Tap2",
	"_nEDGE_x5fMultipathUp_fUrbanArea6Tap1",
	"_nEDGE_x5fMultipathUp_fUrbanArea6Tap2",
	"_nEDGE_x5fMultipathUp_fUrbanArea12Tap1",
	"_nEDGE_x5fMultipathUp_fUrbanArea12Tap2",
	"_nEDGE_x5fMultipathUp_fEqualizationTest",
	"StdForm");

create_constant_form ("_nEDGE_x5fMultipathUp_fNo", 
	"No",
	0,
	"0",
	"No");

create_constant_form ("_nEDGE_x5fMultipathUp_fYes", 
	"Yes",
	0,
	"1",
	"Yes");

create_form_set("_nEDGE_x5fMultipathUp_fPathlossSet",
	"_nEDGE_x5fMultipathUp_fNo",
	"_nEDGE_x5fMultipathUp_fYes",
	"StdForm");

create_constant_form ("_nEDGE_x5fMultipathUp_fkm_x5fhr", 
	"km/hr",
	0,
	"0",
	"km/hr");

create_constant_form ("_nEDGE_x5fMultipathUp_fmiles_x5fhr", 
	"miles/hr",
	0,
	"1",
	"miles/hr");

create_form_set("_nEDGE_x5fMultipathUp_fSpeedTypeSet",
	"_nEDGE_x5fMultipathUp_fkm_x5fhr",
	"_nEDGE_x5fMultipathUp_fmiles_x5fhr",
	"StdForm");

create_item ("EDGE_MultipathUp","Uplink multipath simulator for EDGE",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MultipathUp",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MultipathUp",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MultipathUp",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Type","GSM type options",
		PARM_INT,
		"_nEDGE_x5fMultipathUp_fTypeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMultipathUp_fNoMultipath","NoMultipath")),
	create_parm ("Pathloss","inclusion of large-scale pathloss",
		PARM_INT,
		"_nEDGE_x5fMultipathUp_fPathlossSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMultipathUp_fNo","No")),
	create_parm ("Seed","integer number to randomize the channel output",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1234567")),
	create_parm ("X","X-position coordinate of mobile antenna",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		LENGTH_UNIT,
		prm("StdForm","100.0 meter")),
	create_parm ("Y","Y-position coordinate of mobile antenna",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		LENGTH_UNIT,
		prm("StdForm","0.0 meter")),
	create_parm ("SpeedType","velocity unit option",
		PARM_INT,
		"_nEDGE_x5fMultipathUp_fSpeedTypeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMultipathUp_fkm_x5fhr","km_hr")),
	create_parm ("Vx","X component of velocity vector",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("Vy","Y component of velocity vector",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")));


create_constant_form ("_nEDGE_x5fMultipathDown_fNoMultipath", 
	"NoMultipath",
	0,
	"0",
	"NoMultipath");

create_constant_form ("_nEDGE_x5fMultipathDown_fRuralArea1", 
	"RuralArea1",
	0,
	"1",
	"RuralArea1");

create_constant_form ("_nEDGE_x5fMultipathDown_fRuralArea2", 
	"RuralArea2",
	0,
	"2",
	"RuralArea2");

create_constant_form ("_nEDGE_x5fMultipathDown_fHillyTerrain6Tap1", 
	"HillyTerrain6Tap1",
	0,
	"3",
	"HillyTerrain6Tap1");

create_constant_form ("_nEDGE_x5fMultipathDown_fHillyTerrain6Tap2", 
	"HillyTerrain6Tap2",
	0,
	"4",
	"HillyTerrain6Tap2");

create_constant_form ("_nEDGE_x5fMultipathDown_fHillyTerrain12Tap1", 
	"HillyTerrain12Tap1",
	0,
	"5",
	"HillyTerrain12Tap1");

create_constant_form ("_nEDGE_x5fMultipathDown_fHillyTerrain12Tap2", 
	"HillyTerrain12Tap2",
	0,
	"6",
	"HillyTerrain12Tap2");

create_constant_form ("_nEDGE_x5fMultipathDown_fUrbanArea6Tap1", 
	"UrbanArea6Tap1",
	0,
	"7",
	"UrbanArea6Tap1");

create_constant_form ("_nEDGE_x5fMultipathDown_fUrbanArea6Tap2", 
	"UrbanArea6Tap2",
	0,
	"8",
	"UrbanArea6Tap2");

create_constant_form ("_nEDGE_x5fMultipathDown_fUrbanArea12Tap1", 
	"UrbanArea12Tap1",
	0,
	"9",
	"UrbanArea12Tap1");

create_constant_form ("_nEDGE_x5fMultipathDown_fUrbanArea12Tap2", 
	"UrbanArea12Tap2",
	0,
	"10",
	"UrbanArea12Tap2");

create_constant_form ("_nEDGE_x5fMultipathDown_fEqualizationTest", 
	"EqualizationTest",
	0,
	"11",
	"EqualizationTest");

create_form_set("_nEDGE_x5fMultipathDown_fTypeSet",
	"_nEDGE_x5fMultipathDown_fNoMultipath",
	"_nEDGE_x5fMultipathDown_fRuralArea1",
	"_nEDGE_x5fMultipathDown_fRuralArea2",
	"_nEDGE_x5fMultipathDown_fHillyTerrain6Tap1",
	"_nEDGE_x5fMultipathDown_fHillyTerrain6Tap2",
	"_nEDGE_x5fMultipathDown_fHillyTerrain12Tap1",
	"_nEDGE_x5fMultipathDown_fHillyTerrain12Tap2",
	"_nEDGE_x5fMultipathDown_fUrbanArea6Tap1",
	"_nEDGE_x5fMultipathDown_fUrbanArea6Tap2",
	"_nEDGE_x5fMultipathDown_fUrbanArea12Tap1",
	"_nEDGE_x5fMultipathDown_fUrbanArea12Tap2",
	"_nEDGE_x5fMultipathDown_fEqualizationTest",
	"StdForm");

create_constant_form ("_nEDGE_x5fMultipathDown_fNo", 
	"No",
	0,
	"0",
	"No");

create_constant_form ("_nEDGE_x5fMultipathDown_fYes", 
	"Yes",
	0,
	"1",
	"Yes");

create_form_set("_nEDGE_x5fMultipathDown_fPathlossSet",
	"_nEDGE_x5fMultipathDown_fNo",
	"_nEDGE_x5fMultipathDown_fYes",
	"StdForm");

create_constant_form ("_nEDGE_x5fMultipathDown_fkm_x5fhr", 
	"km/hr",
	0,
	"0",
	"km/hr");

create_constant_form ("_nEDGE_x5fMultipathDown_fmiles_x5fhr", 
	"miles/hr",
	0,
	"1",
	"miles/hr");

create_form_set("_nEDGE_x5fMultipathDown_fSpeedTypeSet",
	"_nEDGE_x5fMultipathDown_fkm_x5fhr",
	"_nEDGE_x5fMultipathDown_fmiles_x5fhr",
	"StdForm");

create_item ("EDGE_MultipathDown","Downlink multipath simulator for EDGE",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MultipathDown",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MultipathDown",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MultipathDown",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Type","GSM type options",
		PARM_INT,
		"_nEDGE_x5fMultipathDown_fTypeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMultipathDown_fNoMultipath","NoMultipath")),
	create_parm ("Pathloss","inclusion of large-scale pathloss",
		PARM_INT,
		"_nEDGE_x5fMultipathDown_fPathlossSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMultipathDown_fNo","No")),
	create_parm ("Seed","integer number to randomize the channel output",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1234567")),
	create_parm ("X","X-position coordinate of mobile antenna",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		LENGTH_UNIT,
		prm("StdForm","100.0 meter")),
	create_parm ("Y","Y-position coordinate of mobile antenna",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		LENGTH_UNIT,
		prm("StdForm","0.0 meter")),
	create_parm ("SpeedType","velocity unit option",
		PARM_INT,
		"_nEDGE_x5fMultipathDown_fSpeedTypeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMultipathDown_fkm_x5fhr","km_hr")),
	create_parm ("Vx","X component of velocity vector",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("Vy","Y component of velocity vector",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")));


create_constant_form ("_nEDGE_x5fFreqErr_x5fOffsetSupp_x5fMeas_ffrequency_x5ferror", 
	"frequency error",
	0,
	"0",
	"frequency error");

create_constant_form ("_nEDGE_x5fFreqErr_x5fOffsetSupp_x5fMeas_forigin_x5foffset_x5fsuppression", 
	"origin offset suppression",
	0,
	"1",
	"origin offset suppression");

create_form_set("_nEDGE_x5fFreqErr_x5fOffsetSupp_x5fMeas_fMeasTypeSet",
	"_nEDGE_x5fFreqErr_x5fOffsetSupp_x5fMeas_ffrequency_x5ferror",
	"_nEDGE_x5fFreqErr_x5fOffsetSupp_x5fMeas_forigin_x5foffset_x5fsuppression",
	"StdForm");

create_item ("EDGE_FreqErr_OffsetSupp_Meas","ESG/VSA Compatible frequency error and origin offset suppression measurement",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_FreqErr_OffsetSupp_Meas",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_FreqErr_OffsetSupp_Meas",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_FreqErr_OffsetSupp_Meas",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SampPerSym","number of samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("MeasType","type of measurement",
		PARM_INT,
		"_nEDGE_x5fFreqErr_x5fOffsetSupp_x5fMeas_fMeasTypeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fFreqErr_x5fOffsetSupp_x5fMeas_ffrequency_x5ferror","frequency_error")),
	create_parm ("TS_Measured","time slot to be measured in each TDMA frame,0 to 7",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("TS_Num","number of time slots measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","5")),
	create_parm ("RIn","input resistance",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50.0 Ohm")),
	create_parm ("RTemp","temperature of resistor in degrees Celsius value cannot be swept",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-273.15")));


create_constant_form ("_nEDGE_x5fEVM_x5fMeas_fEVM_x5frms", 
	"EVM_rms",
	0,
	"0",
	"EVM_rms");

create_constant_form ("_nEDGE_x5fEVM_x5fMeas_fEVM_x5fpeak", 
	"EVM_peak",
	0,
	"1",
	"EVM_peak");

create_constant_form ("_nEDGE_x5fEVM_x5fMeas_fEVM_x5f95th_x5fpercentile", 
	"EVM_95th_percentile",
	0,
	"2",
	"EVM_95th_percentile");

create_form_set("_nEDGE_x5fEVM_x5fMeas_fMeasTypeSet",
	"_nEDGE_x5fEVM_x5fMeas_fEVM_x5frms",
	"_nEDGE_x5fEVM_x5fMeas_fEVM_x5fpeak",
	"_nEDGE_x5fEVM_x5fMeas_fEVM_x5f95th_x5fpercentile",
	"StdForm");

create_constant_form ("_nEDGE_x5fEVM_x5fMeas_fEVM_x5fRatio", 
	"EVM_Ratio",
	0,
	"0",
	"EVM as ratio");

create_constant_form ("_nEDGE_x5fEVM_x5fMeas_fEVM_x5fPercent", 
	"EVM_Percent",
	0,
	"1",
	"EVM as percent");

create_form_set("_nEDGE_x5fEVM_x5fMeas_fEVMValueSet",
	"_nEDGE_x5fEVM_x5fMeas_fEVM_x5fRatio",
	"_nEDGE_x5fEVM_x5fMeas_fEVM_x5fPercent",
	"StdForm");

create_item ("EDGE_EVM_Meas","ESG/VSA Compatible EVM measurement",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_EVM_Meas",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_EVM_Meas",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_EVM_Meas",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SampPerSym","number of samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("MeasType","type of measurement",
		PARM_INT,
		"_nEDGE_x5fEVM_x5fMeas_fMeasTypeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fEVM_x5fMeas_fEVM_x5frms","EVM_rms")),
	create_parm ("TS_Measured","time slot to be measured in each TDMA frame,0 to 7",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("TS_Num","number of time slots measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","5")),
	create_parm ("RIn","input resistance",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50.0 Ohm")),
	create_parm ("RTemp","temperature of resistor in degrees Celsius value cannot be swept",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-273.15")),
	create_parm ("EVMValue","EVM value expression options",
		PARM_INT,
		"_nEDGE_x5fEVM_x5fMeas_fEVMValueSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fEVM_x5fMeas_fEVM_x5fRatio","EVM_Ratio")));


create_constant_form ("_nEDGE_x5fSignal_x5fSource_fPN9", 
	"PN9",
	0,
	"0",
	"PN9");

create_constant_form ("_nEDGE_x5fSignal_x5fSource_fPN15", 
	"PN15",
	0,
	"1",
	"PN15");

create_constant_form ("_nEDGE_x5fSignal_x5fSource_fFIX4", 
	"FIX4",
	0,
	"2",
	"FIX4");

create_constant_form ("_nEDGE_x5fSignal_x5fSource_f_x5f4_x5f1_x5f4_x5f0", 
	"_4_1_4_0",
	0,
	"3",
	"_4_1_4_0");

create_constant_form ("_nEDGE_x5fSignal_x5fSource_f_x5f8_x5f1_x5f8_x5f0", 
	"_8_1_8_0",
	0,
	"4",
	"_8_1_8_0");

create_constant_form ("_nEDGE_x5fSignal_x5fSource_f_x5f16_x5f1_x5f16_x5f0", 
	"_16_1_16_0",
	0,
	"5",
	"_16_1_16_0");

create_constant_form ("_nEDGE_x5fSignal_x5fSource_f_x5f32_x5f1_x5f32_x5f0", 
	"_32_1_32_0",
	0,
	"6",
	"_32_1_32_0");

create_constant_form ("_nEDGE_x5fSignal_x5fSource_f_x5f64_x5f1_x5f64_x5f0", 
	"_64_1_64_0",
	0,
	"7",
	"_64_1_64_0");

create_form_set("_nEDGE_x5fSignal_x5fSource_fDataPatternSet",
	"_nEDGE_x5fSignal_x5fSource_fPN9",
	"_nEDGE_x5fSignal_x5fSource_fPN15",
	"_nEDGE_x5fSignal_x5fSource_fFIX4",
	"_nEDGE_x5fSignal_x5fSource_f_x5f4_x5f1_x5f4_x5f0",
	"_nEDGE_x5fSignal_x5fSource_f_x5f8_x5f1_x5f8_x5f0",
	"_nEDGE_x5fSignal_x5fSource_f_x5f16_x5f1_x5f16_x5f0",
	"_nEDGE_x5fSignal_x5fSource_f_x5f32_x5f1_x5f32_x5f0",
	"_nEDGE_x5fSignal_x5fSource_f_x5f64_x5f1_x5f64_x5f0",
	"StdForm");

create_constant_form ("_nEDGE_x5fSignal_x5fSource_fNone", 
	"None",
	0,
	"0",
	"None");

create_constant_form ("_nEDGE_x5fSignal_x5fSource_fLinear", 
	"Linear",
	0,
	"1",
	"Linear");

create_constant_form ("_nEDGE_x5fSignal_x5fSource_fCosine", 
	"Cosine",
	0,
	"2",
	"Cosine");

create_form_set("_nEDGE_x5fSignal_x5fSource_fPwrTypeSet",
	"_nEDGE_x5fSignal_x5fSource_fNone",
	"_nEDGE_x5fSignal_x5fSource_fLinear",
	"_nEDGE_x5fSignal_x5fSource_fCosine",
	"StdForm");

create_constant_form ("_nEDGE_x5fSignal_x5fSource_fNO", 
	"NO",
	0,
	"0",
	"NO");

create_constant_form ("_nEDGE_x5fSignal_x5fSource_fYES", 
	"YES",
	0,
	"1",
	"YES");

create_form_set("_nEDGE_x5fSignal_x5fSource_fContinuesSet",
	"_nEDGE_x5fSignal_x5fSource_fNO",
	"_nEDGE_x5fSignal_x5fSource_fYES",
	"StdForm");

create_item ("EDGE_Signal_Source","VSA compatible signal source",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_Signal_Source",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_Signal_Source",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_Signal_Source",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SampPerSym","number of samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("TS_State","state of each time slot 0 for idle, 1 for active",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"1 1 1 1 1 1 1 1\"")),
	create_parm ("DataPattern","data pattern of each time slot",
		PARM_INT,
		"_nEDGE_x5fSignal_x5fSource_fDataPatternSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fSignal_x5fSource_fPN9","PN9")),
	create_parm ("FCarrier","carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","890.2e6")),
	create_parm ("SignalPower","RF signal output power",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","0.01")),
	create_parm ("PwrType","power on and power off type",
		PARM_INT,
		"_nEDGE_x5fSignal_x5fSource_fPwrTypeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fSignal_x5fSource_fNone","None")),
	create_parm ("RampLength","power on and power off length",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("RampUpScramble","scramble of ramp up function",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"1 1 1 1\"")),
	create_parm ("RampDownScramble","scramble of ramp down function",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"1 1 1 1\"")),
	create_parm ("Continues","adding ramp between active slots or not",
		PARM_INT,
		"_nEDGE_x5fSignal_x5fSource_fContinuesSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fSignal_x5fSource_fNO","NO")));


create_item ("EDGE_RandomSrc","Continuous random data source for EDGE",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_RandomSrc",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_RandomSrc",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_RandomSrc",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SampPerSym","number of samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")));


create_constant_form ("_nEDGE_x5fPwr_x5fMeasure_fBasic", 
	"Basic",
	0,
	"0",
	"Basic");

create_constant_form ("_nEDGE_x5fPwr_x5fMeasure_fGSM_x5f8_x5f3_x5f0_x5fRelease_x5f1999", 
	"GSM_8_3_0_Release_1999",
	0,
	"1",
	"GSM 8.3.0 Release 1999");

create_form_set("_nEDGE_x5fPwr_x5fMeasure_fBurstSpecVersionSet",
	"_nEDGE_x5fPwr_x5fMeasure_fBasic",
	"_nEDGE_x5fPwr_x5fMeasure_fGSM_x5f8_x5f3_x5f0_x5fRelease_x5f1999",
	"StdForm");

create_constant_form ("_nEDGE_x5fPwr_x5fMeasure_fBaseband_x5fsignal", 
	"Baseband signal",
	0,
	"0",
	"Baseband signal");

create_constant_form ("_nEDGE_x5fPwr_x5fMeasure_fRF_x5fsignal", 
	"RF signal",
	0,
	"1",
	"RF signal");

create_form_set("_nEDGE_x5fPwr_x5fMeasure_fSignalTypeSet",
	"_nEDGE_x5fPwr_x5fMeasure_fBaseband_x5fsignal",
	"_nEDGE_x5fPwr_x5fMeasure_fRF_x5fsignal",
	"StdForm");

create_item ("EDGE_Pwr_Measure","Mean transmitted RF carrier power measurement",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_Pwr_Measure",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_Pwr_Measure",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_Pwr_Measure",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("BurstSpecVersion","EDGE specification for normal burst if choose Basic, each burst has 156 symbols, otherwise complys with GSM 8.3.0 Release 1999",
		PARM_INT,
		"_nEDGE_x5fPwr_x5fMeasure_fBurstSpecVersionSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fPwr_x5fMeasure_fBasic","Basic")),
	create_parm ("SampPerSym","number of samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("TS_Measured","time slot to be measured in each TDMA frame, 0 to 7",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("TS_Num","number of time slots measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","100")),
	create_parm ("SignalType","type of signal",
		PARM_INT,
		"_nEDGE_x5fPwr_x5fMeasure_fSignalTypeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fPwr_x5fMeasure_fBaseband_x5fsignal","Baseband_signal")),
	create_parm ("Rref","reference resistance",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50.0")));


create_constant_form ("_nEDGE_x5fMS_x5fMCS9_x5fReceiver_fMLSE", 
	"MLSE",
	0,
	"0",
	"MLSE");

create_constant_form ("_nEDGE_x5fMS_x5fMCS9_x5fReceiver_fRSSE", 
	"RSSE",
	0,
	"1",
	"RSSE");

create_form_set("_nEDGE_x5fMS_x5fMCS9_x5fReceiver_fAlgorithmSet",
	"_nEDGE_x5fMS_x5fMCS9_x5fReceiver_fMLSE",
	"_nEDGE_x5fMS_x5fMCS9_x5fReceiver_fRSSE",
	"StdForm");

create_item ("EDGE_MS_MCS9_Receiver","EDGE MS MCS9 receiver",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MS_MCS9_Receiver",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MS_MCS9_Receiver",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MS_MCS9_Receiver",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SampPerSym","number of samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("TS_Measured","time slot measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("TSC","training sequence code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("Algorithm","equalization algorithm",
		PARM_INT,
		"_nEDGE_x5fMS_x5fMCS9_x5fReceiver_fAlgorithmSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMS_x5fMCS9_x5fReceiver_fRSSE","RSSE")),
	create_parm ("MaxDelay","maximum delay of channel in symbol duration units",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","5")),
	create_parm ("PartitionArray","array of number of subsets used in each stage of RSSE",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"8 4 2 1 1\"")));


create_constant_form ("_nEDGE_x5fMS_x5fMCS8_x5fReceiver_fMLSE", 
	"MLSE",
	0,
	"0",
	"MLSE");

create_constant_form ("_nEDGE_x5fMS_x5fMCS8_x5fReceiver_fRSSE", 
	"RSSE",
	0,
	"1",
	"RSSE");

create_form_set("_nEDGE_x5fMS_x5fMCS8_x5fReceiver_fAlgorithmSet",
	"_nEDGE_x5fMS_x5fMCS8_x5fReceiver_fMLSE",
	"_nEDGE_x5fMS_x5fMCS8_x5fReceiver_fRSSE",
	"StdForm");

create_item ("EDGE_MS_MCS8_Receiver","EDGE MS MCS8 receiver",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MS_MCS8_Receiver",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MS_MCS8_Receiver",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MS_MCS8_Receiver",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SampPerSym","number of samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("TS_Measured","time slot measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("TSC","training sequence code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("Algorithm","equalization algorithm",
		PARM_INT,
		"_nEDGE_x5fMS_x5fMCS8_x5fReceiver_fAlgorithmSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMS_x5fMCS8_x5fReceiver_fRSSE","RSSE")),
	create_parm ("MaxDelay","maximum delay of channel in symbol duration units",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","5")),
	create_parm ("PartitionArray","array of number of subsets used in each stage of RSSE",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"8 4 2 1 1\"")));


create_constant_form ("_nEDGE_x5fMS_x5fMCS7_x5fReceiver_fMLSE", 
	"MLSE",
	0,
	"0",
	"MLSE");

create_constant_form ("_nEDGE_x5fMS_x5fMCS7_x5fReceiver_fRSSE", 
	"RSSE",
	0,
	"1",
	"RSSE");

create_form_set("_nEDGE_x5fMS_x5fMCS7_x5fReceiver_fAlgorithmSet",
	"_nEDGE_x5fMS_x5fMCS7_x5fReceiver_fMLSE",
	"_nEDGE_x5fMS_x5fMCS7_x5fReceiver_fRSSE",
	"StdForm");

create_item ("EDGE_MS_MCS7_Receiver","EDGE MS MCS7 receiver",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MS_MCS7_Receiver",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MS_MCS7_Receiver",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MS_MCS7_Receiver",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SampPerSym","number of samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("TS_Measured","time slot measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("TSC","training sequence code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("Algorithm","equalization algorithm",
		PARM_INT,
		"_nEDGE_x5fMS_x5fMCS7_x5fReceiver_fAlgorithmSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMS_x5fMCS7_x5fReceiver_fRSSE","RSSE")),
	create_parm ("MaxDelay","maximum delay of channel in symbol duration units",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","5")),
	create_parm ("PartitionArray","array of number of subsets used in each stage of RSSE",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"8 4 2 1 1\"")));


create_constant_form ("_nEDGE_x5fMS_x5fMCS6_x5fReceiver_fMLSE", 
	"MLSE",
	0,
	"0",
	"MLSE");

create_constant_form ("_nEDGE_x5fMS_x5fMCS6_x5fReceiver_fRSSE", 
	"RSSE",
	0,
	"1",
	"RSSE");

create_form_set("_nEDGE_x5fMS_x5fMCS6_x5fReceiver_fAlgorithmSet",
	"_nEDGE_x5fMS_x5fMCS6_x5fReceiver_fMLSE",
	"_nEDGE_x5fMS_x5fMCS6_x5fReceiver_fRSSE",
	"StdForm");

create_item ("EDGE_MS_MCS6_Receiver","EDGE MS MCS6 receiver",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MS_MCS6_Receiver",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MS_MCS6_Receiver",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MS_MCS6_Receiver",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SampPerSym","number of samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("TS_Measured","time slot measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("TSC","training sequence code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("Algorithm","equalization algorithm",
		PARM_INT,
		"_nEDGE_x5fMS_x5fMCS6_x5fReceiver_fAlgorithmSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMS_x5fMCS6_x5fReceiver_fRSSE","RSSE")),
	create_parm ("MaxDelay","maximum delay of channel in symbol duration units",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","5")),
	create_parm ("PartitionArray","array of number of subsets used in each stage of RSSE",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"8 4 2 1 1\"")));


create_constant_form ("_nEDGE_x5fMS_x5fMCS5_x5fReceiver_fMLSE", 
	"MLSE",
	0,
	"0",
	"MLSE");

create_constant_form ("_nEDGE_x5fMS_x5fMCS5_x5fReceiver_fRSSE", 
	"RSSE",
	0,
	"1",
	"RSSE");

create_form_set("_nEDGE_x5fMS_x5fMCS5_x5fReceiver_fAlgorithmSet",
	"_nEDGE_x5fMS_x5fMCS5_x5fReceiver_fMLSE",
	"_nEDGE_x5fMS_x5fMCS5_x5fReceiver_fRSSE",
	"StdForm");

create_item ("EDGE_MS_MCS5_Receiver","EDGE MS MCS5 receiver",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MS_MCS5_Receiver",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MS_MCS5_Receiver",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MS_MCS5_Receiver",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SampPerSym","number of samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("TS_Measured","time slot measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("TSC","training sequence code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("Algorithm","equalization algorithm",
		PARM_INT,
		"_nEDGE_x5fMS_x5fMCS5_x5fReceiver_fAlgorithmSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMS_x5fMCS5_x5fReceiver_fRSSE","RSSE")),
	create_parm ("MaxDelay","maximum delay of channel in symbol duration units",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","5")),
	create_parm ("PartitionArray","array of number of subsets used in each stage of RSSE",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"8 4 2 1 1\"")));


create_constant_form ("_nEDGE_x5fMS_x5fMCS9_x5fPwrCtrlSrc_fPower_x5fcontrolled", 
	"Power controlled",
	0,
	"0",
	"Power controlled");

create_constant_form ("_nEDGE_x5fMS_x5fMCS9_x5fPwrCtrlSrc_fFull_x5fpower_x5fin_x5feach_x5ftime_x5fslot", 
	"Full power in each time slot",
	0,
	"1",
	"Full power in each time slot");

create_form_set("_nEDGE_x5fMS_x5fMCS9_x5fPwrCtrlSrc_fPwrStateSet",
	"_nEDGE_x5fMS_x5fMCS9_x5fPwrCtrlSrc_fPower_x5fcontrolled",
	"_nEDGE_x5fMS_x5fMCS9_x5fPwrCtrlSrc_fFull_x5fpower_x5fin_x5feach_x5ftime_x5fslot",
	"StdForm");

create_item ("EDGE_MS_MCS9_PwrCtrlSrc","EDGE signal source for reference sensitivity level test",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MS_MCS9_PwrCtrlSrc",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MS_MCS9_PwrCtrlSrc",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MS_MCS9_PwrCtrlSrc",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SampPerSym","number of samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("TS_Measured","time slot measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("TSC","training sequence code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("PwrState","power control pattern",
		PARM_INT,
		"_nEDGE_x5fMS_x5fMCS9_x5fPwrCtrlSrc_fPwrStateSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMS_x5fMCS9_x5fPwrCtrlSrc_fPower_x5fcontrolled","Power_controlled")));


create_constant_form ("_nEDGE_x5fMS_x5fMCS8_x5fPwrCtrlSrc_fPower_x5fcontrolled", 
	"Power controlled",
	0,
	"0",
	"Power controlled");

create_constant_form ("_nEDGE_x5fMS_x5fMCS8_x5fPwrCtrlSrc_fFull_x5fpower_x5fin_x5feach_x5ftime_x5fslot", 
	"Full power in each time slot",
	0,
	"1",
	"Full power in each time slot");

create_form_set("_nEDGE_x5fMS_x5fMCS8_x5fPwrCtrlSrc_fPwrStateSet",
	"_nEDGE_x5fMS_x5fMCS8_x5fPwrCtrlSrc_fPower_x5fcontrolled",
	"_nEDGE_x5fMS_x5fMCS8_x5fPwrCtrlSrc_fFull_x5fpower_x5fin_x5feach_x5ftime_x5fslot",
	"StdForm");

create_item ("EDGE_MS_MCS8_PwrCtrlSrc","EDGE signal source for reference sensitivity level test",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MS_MCS8_PwrCtrlSrc",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MS_MCS8_PwrCtrlSrc",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MS_MCS8_PwrCtrlSrc",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SampPerSym","number of samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("TS_Measured","time slot measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("TSC","training sequence code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("PwrState","power control pattern",
		PARM_INT,
		"_nEDGE_x5fMS_x5fMCS8_x5fPwrCtrlSrc_fPwrStateSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMS_x5fMCS8_x5fPwrCtrlSrc_fPower_x5fcontrolled","Power_controlled")));


create_constant_form ("_nEDGE_x5fMS_x5fMCS7_x5fPwrCtrlSrc_fPower_x5fcontrolled", 
	"Power controlled",
	0,
	"0",
	"Power controlled");

create_constant_form ("_nEDGE_x5fMS_x5fMCS7_x5fPwrCtrlSrc_fFull_x5fpower_x5fin_x5feach_x5ftime_x5fslot", 
	"Full power in each time slot",
	0,
	"1",
	"Full power in each time slot");

create_form_set("_nEDGE_x5fMS_x5fMCS7_x5fPwrCtrlSrc_fPwrStateSet",
	"_nEDGE_x5fMS_x5fMCS7_x5fPwrCtrlSrc_fPower_x5fcontrolled",
	"_nEDGE_x5fMS_x5fMCS7_x5fPwrCtrlSrc_fFull_x5fpower_x5fin_x5feach_x5ftime_x5fslot",
	"StdForm");

create_item ("EDGE_MS_MCS7_PwrCtrlSrc","EDGE signal source for reference sensitivity level test",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MS_MCS7_PwrCtrlSrc",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MS_MCS7_PwrCtrlSrc",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MS_MCS7_PwrCtrlSrc",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SampPerSym","number of samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("TS_Measured","time slot measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("TSC","training sequence code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("PwrState","power control pattern",
		PARM_INT,
		"_nEDGE_x5fMS_x5fMCS7_x5fPwrCtrlSrc_fPwrStateSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMS_x5fMCS7_x5fPwrCtrlSrc_fPower_x5fcontrolled","Power_controlled")));


create_constant_form ("_nEDGE_x5fMS_x5fMCS6_x5fPwrCtrlSrc_fPower_x5fcontrolled", 
	"Power controlled",
	0,
	"0",
	"Power controlled");

create_constant_form ("_nEDGE_x5fMS_x5fMCS6_x5fPwrCtrlSrc_fFull_x5fpower_x5fin_x5feach_x5ftime_x5fslot", 
	"Full power in each time slot",
	0,
	"1",
	"Full power in each time slot");

create_form_set("_nEDGE_x5fMS_x5fMCS6_x5fPwrCtrlSrc_fPwrStateSet",
	"_nEDGE_x5fMS_x5fMCS6_x5fPwrCtrlSrc_fPower_x5fcontrolled",
	"_nEDGE_x5fMS_x5fMCS6_x5fPwrCtrlSrc_fFull_x5fpower_x5fin_x5feach_x5ftime_x5fslot",
	"StdForm");

create_item ("EDGE_MS_MCS6_PwrCtrlSrc","EDGE signal source for reference sensitivity level test",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MS_MCS6_PwrCtrlSrc",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MS_MCS6_PwrCtrlSrc",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MS_MCS6_PwrCtrlSrc",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SampPerSym","number of samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("TS_Measured","time slot measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("TSC","training sequence code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("PwrState","power control pattern",
		PARM_INT,
		"_nEDGE_x5fMS_x5fMCS6_x5fPwrCtrlSrc_fPwrStateSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMS_x5fMCS6_x5fPwrCtrlSrc_fPower_x5fcontrolled","Power_controlled")));


create_constant_form ("_nEDGE_x5fMS_x5fMCS5_x5fPwrCtrlSrc_fPower_x5fcontrolled", 
	"Power controlled",
	0,
	"0",
	"Power controlled");

create_constant_form ("_nEDGE_x5fMS_x5fMCS5_x5fPwrCtrlSrc_fFull_x5fpower_x5fin_x5feach_x5ftime_x5fslot", 
	"Full power in each time slot",
	0,
	"1",
	"Full power in each time slot");

create_form_set("_nEDGE_x5fMS_x5fMCS5_x5fPwrCtrlSrc_fPwrStateSet",
	"_nEDGE_x5fMS_x5fMCS5_x5fPwrCtrlSrc_fPower_x5fcontrolled",
	"_nEDGE_x5fMS_x5fMCS5_x5fPwrCtrlSrc_fFull_x5fpower_x5fin_x5feach_x5ftime_x5fslot",
	"StdForm");

create_item ("EDGE_MS_MCS5_PwrCtrlSrc","EDGE signal source for reference sensitivity level test",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MS_MCS5_PwrCtrlSrc",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MS_MCS5_PwrCtrlSrc",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MS_MCS5_PwrCtrlSrc",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SampPerSym","number of samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("TS_Measured","time slot measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("TSC","training sequence code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("PwrState","power control pattern",
		PARM_INT,
		"_nEDGE_x5fMS_x5fMCS5_x5fPwrCtrlSrc_fPwrStateSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMS_x5fMCS5_x5fPwrCtrlSrc_fPower_x5fcontrolled","Power_controlled")));


create_constant_form ("_nEDGE_x5fBTS_x5fMCS9_x5fReceiver_fMLSE", 
	"MLSE",
	0,
	"0",
	"MLSE");

create_constant_form ("_nEDGE_x5fBTS_x5fMCS9_x5fReceiver_fRSSE", 
	"RSSE",
	0,
	"1",
	"RSSE");

create_form_set("_nEDGE_x5fBTS_x5fMCS9_x5fReceiver_fAlgorithmSet",
	"_nEDGE_x5fBTS_x5fMCS9_x5fReceiver_fMLSE",
	"_nEDGE_x5fBTS_x5fMCS9_x5fReceiver_fRSSE",
	"StdForm");

create_item ("EDGE_BTS_MCS9_Receiver","EDGE BTS MCS9 receiver",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_BTS_MCS9_Receiver",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_BTS_MCS9_Receiver",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_BTS_MCS9_Receiver",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SampPerSym","number of samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("TS_Measured","time slot measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("TSC","training sequence code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("Algorithm","equalization algorithm",
		PARM_INT,
		"_nEDGE_x5fBTS_x5fMCS9_x5fReceiver_fAlgorithmSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fBTS_x5fMCS9_x5fReceiver_fRSSE","RSSE")),
	create_parm ("MaxDelay","maximum delay of channel in symbol duration units",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","5")),
	create_parm ("PartitionArray","array of number of subsets used in each stage of RSSE",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"8 4 2 1 1\"")));


create_constant_form ("_nEDGE_x5fBTS_x5fMCS8_x5fReceiver_fMLSE", 
	"MLSE",
	0,
	"0",
	"MLSE");

create_constant_form ("_nEDGE_x5fBTS_x5fMCS8_x5fReceiver_fRSSE", 
	"RSSE",
	0,
	"1",
	"RSSE");

create_form_set("_nEDGE_x5fBTS_x5fMCS8_x5fReceiver_fAlgorithmSet",
	"_nEDGE_x5fBTS_x5fMCS8_x5fReceiver_fMLSE",
	"_nEDGE_x5fBTS_x5fMCS8_x5fReceiver_fRSSE",
	"StdForm");

create_item ("EDGE_BTS_MCS8_Receiver","EDGE BTS MCS8 receiver",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_BTS_MCS8_Receiver",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_BTS_MCS8_Receiver",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_BTS_MCS8_Receiver",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SampPerSym","number of samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("TS_Measured","time slot measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("TSC","training sequence code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("Algorithm","equalization algorithm",
		PARM_INT,
		"_nEDGE_x5fBTS_x5fMCS8_x5fReceiver_fAlgorithmSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fBTS_x5fMCS8_x5fReceiver_fRSSE","RSSE")),
	create_parm ("MaxDelay","maximum delay of channel in symbol duration units",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","5")),
	create_parm ("PartitionArray","array of number of subsets used in each stage of RSSE",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"8 4 2 1 1\"")));


create_constant_form ("_nEDGE_x5fBTS_x5fMCS7_x5fReceiver_fMLSE", 
	"MLSE",
	0,
	"0",
	"MLSE");

create_constant_form ("_nEDGE_x5fBTS_x5fMCS7_x5fReceiver_fRSSE", 
	"RSSE",
	0,
	"1",
	"RSSE");

create_form_set("_nEDGE_x5fBTS_x5fMCS7_x5fReceiver_fAlgorithmSet",
	"_nEDGE_x5fBTS_x5fMCS7_x5fReceiver_fMLSE",
	"_nEDGE_x5fBTS_x5fMCS7_x5fReceiver_fRSSE",
	"StdForm");

create_item ("EDGE_BTS_MCS7_Receiver","EDGE BTS MCS7 receiver",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_BTS_MCS7_Receiver",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_BTS_MCS7_Receiver",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_BTS_MCS7_Receiver",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SampPerSym","number of samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("TS_Measured","time slot measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("TSC","training sequence code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("Algorithm","equalization algorithm",
		PARM_INT,
		"_nEDGE_x5fBTS_x5fMCS7_x5fReceiver_fAlgorithmSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fBTS_x5fMCS7_x5fReceiver_fRSSE","RSSE")),
	create_parm ("MaxDelay","maximum delay of channel in symbol duration units",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","5")),
	create_parm ("PartitionArray","array of number of subsets used in each stage of RSSE",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"8 4 2 1 1\"")));


create_constant_form ("_nEDGE_x5fBTS_x5fMCS6_x5fReceiver_fMLSE", 
	"MLSE",
	0,
	"0",
	"MLSE");

create_constant_form ("_nEDGE_x5fBTS_x5fMCS6_x5fReceiver_fRSSE", 
	"RSSE",
	0,
	"1",
	"RSSE");

create_form_set("_nEDGE_x5fBTS_x5fMCS6_x5fReceiver_fAlgorithmSet",
	"_nEDGE_x5fBTS_x5fMCS6_x5fReceiver_fMLSE",
	"_nEDGE_x5fBTS_x5fMCS6_x5fReceiver_fRSSE",
	"StdForm");

create_item ("EDGE_BTS_MCS6_Receiver","EDGE BTS MCS6 receiver",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_BTS_MCS6_Receiver",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_BTS_MCS6_Receiver",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_BTS_MCS6_Receiver",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SampPerSym","number of samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("TS_Measured","time slot measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("TSC","training sequence code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("Algorithm","equalization algorithm",
		PARM_INT,
		"_nEDGE_x5fBTS_x5fMCS6_x5fReceiver_fAlgorithmSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fBTS_x5fMCS6_x5fReceiver_fRSSE","RSSE")),
	create_parm ("MaxDelay","maximum delay of channel in symbol duration units",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","5")),
	create_parm ("PartitionArray","array of number of subsets used in each stage of RSSE",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"8 4 2 1 1\"")));


create_constant_form ("_nEDGE_x5fBTS_x5fMCS5_x5fReceiver_fMLSE", 
	"MLSE",
	0,
	"0",
	"MLSE");

create_constant_form ("_nEDGE_x5fBTS_x5fMCS5_x5fReceiver_fRSSE", 
	"RSSE",
	0,
	"1",
	"RSSE");

create_form_set("_nEDGE_x5fBTS_x5fMCS5_x5fReceiver_fAlgorithmSet",
	"_nEDGE_x5fBTS_x5fMCS5_x5fReceiver_fMLSE",
	"_nEDGE_x5fBTS_x5fMCS5_x5fReceiver_fRSSE",
	"StdForm");

create_item ("EDGE_BTS_MCS5_Receiver","EDGE BTS MCS5 receiver",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_BTS_MCS5_Receiver",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_BTS_MCS5_Receiver",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_BTS_MCS5_Receiver",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SampPerSym","number of samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("TS_Measured","time slot measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("TSC","training sequence code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("Algorithm","equalization algorithm",
		PARM_INT,
		"_nEDGE_x5fBTS_x5fMCS5_x5fReceiver_fAlgorithmSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fBTS_x5fMCS5_x5fReceiver_fRSSE","RSSE")),
	create_parm ("MaxDelay","maximum delay of channel in symbol duration units",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","5")),
	create_parm ("PartitionArray","array of number of subsets used in each stage of RSSE",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"8 4 2 1 1\"")));


create_constant_form ("_nEDGE_x5fBTS_x5fMCS9_x5fPwrCtrlSrc_fPower_x5fcontrolled", 
	"Power controlled",
	0,
	"0",
	"Power controlled");

create_constant_form ("_nEDGE_x5fBTS_x5fMCS9_x5fPwrCtrlSrc_fFull_x5fpower_x5fin_x5feach_x5ftime_x5fslot", 
	"Full power in each time slot",
	0,
	"1",
	"Full power in each time slot");

create_form_set("_nEDGE_x5fBTS_x5fMCS9_x5fPwrCtrlSrc_fPwrStateSet",
	"_nEDGE_x5fBTS_x5fMCS9_x5fPwrCtrlSrc_fPower_x5fcontrolled",
	"_nEDGE_x5fBTS_x5fMCS9_x5fPwrCtrlSrc_fFull_x5fpower_x5fin_x5feach_x5ftime_x5fslot",
	"StdForm");

create_item ("EDGE_BTS_MCS9_PwrCtrlSrc","EDGE signal source for reference sensitivity level test",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_BTS_MCS9_PwrCtrlSrc",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_BTS_MCS9_PwrCtrlSrc",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_BTS_MCS9_PwrCtrlSrc",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SampPerSym","number of samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("TS_Measured","time slot measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("TSC","training sequence code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("PwrState","power control pattern",
		PARM_INT,
		"_nEDGE_x5fBTS_x5fMCS9_x5fPwrCtrlSrc_fPwrStateSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fBTS_x5fMCS9_x5fPwrCtrlSrc_fPower_x5fcontrolled","Power_controlled")),
	create_parm ("dB_NAllocGain","gain of slots not allocated to MS, in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")));


create_constant_form ("_nEDGE_x5fBTS_x5fMCS8_x5fPwrCtrlSrc_fPower_x5fcontrolled", 
	"Power controlled",
	0,
	"0",
	"Power controlled");

create_constant_form ("_nEDGE_x5fBTS_x5fMCS8_x5fPwrCtrlSrc_fFull_x5fpower_x5fin_x5feach_x5ftime_x5fslot", 
	"Full power in each time slot",
	0,
	"1",
	"Full power in each time slot");

create_form_set("_nEDGE_x5fBTS_x5fMCS8_x5fPwrCtrlSrc_fPwrStateSet",
	"_nEDGE_x5fBTS_x5fMCS8_x5fPwrCtrlSrc_fPower_x5fcontrolled",
	"_nEDGE_x5fBTS_x5fMCS8_x5fPwrCtrlSrc_fFull_x5fpower_x5fin_x5feach_x5ftime_x5fslot",
	"StdForm");

create_item ("EDGE_BTS_MCS8_PwrCtrlSrc","EDGE signal source for reference sensitivity level test",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_BTS_MCS8_PwrCtrlSrc",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_BTS_MCS8_PwrCtrlSrc",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_BTS_MCS8_PwrCtrlSrc",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SampPerSym","number of samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("TS_Measured","time slot measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("TSC","training sequence code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("PwrState","power control pattern",
		PARM_INT,
		"_nEDGE_x5fBTS_x5fMCS8_x5fPwrCtrlSrc_fPwrStateSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fBTS_x5fMCS8_x5fPwrCtrlSrc_fPower_x5fcontrolled","Power_controlled")),
	create_parm ("dB_NAllocGain","gain of slots not allocated to MS, in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")));


create_constant_form ("_nEDGE_x5fBTS_x5fMCS7_x5fPwrCtrlSrc_fPower_x5fcontrolled", 
	"Power controlled",
	0,
	"0",
	"Power controlled");

create_constant_form ("_nEDGE_x5fBTS_x5fMCS7_x5fPwrCtrlSrc_fFull_x5fpower_x5fin_x5feach_x5ftime_x5fslot", 
	"Full power in each time slot",
	0,
	"1",
	"Full power in each time slot");

create_form_set("_nEDGE_x5fBTS_x5fMCS7_x5fPwrCtrlSrc_fPwrStateSet",
	"_nEDGE_x5fBTS_x5fMCS7_x5fPwrCtrlSrc_fPower_x5fcontrolled",
	"_nEDGE_x5fBTS_x5fMCS7_x5fPwrCtrlSrc_fFull_x5fpower_x5fin_x5feach_x5ftime_x5fslot",
	"StdForm");

create_item ("EDGE_BTS_MCS7_PwrCtrlSrc","EDGE signal source for reference sensitivity level test",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_BTS_MCS7_PwrCtrlSrc",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_BTS_MCS7_PwrCtrlSrc",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_BTS_MCS7_PwrCtrlSrc",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SampPerSym","number of samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("TS_Measured","time slot measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("TSC","training sequence code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("PwrState","power control pattern",
		PARM_INT,
		"_nEDGE_x5fBTS_x5fMCS7_x5fPwrCtrlSrc_fPwrStateSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fBTS_x5fMCS7_x5fPwrCtrlSrc_fPower_x5fcontrolled","Power_controlled")),
	create_parm ("dB_NAllocGain","gain of slots not allocated to MS, in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")));


create_constant_form ("_nEDGE_x5fBTS_x5fMCS6_x5fPwrCtrlSrc_fPower_x5fcontrolled", 
	"Power controlled",
	0,
	"0",
	"Power controlled");

create_constant_form ("_nEDGE_x5fBTS_x5fMCS6_x5fPwrCtrlSrc_fFull_x5fpower_x5fin_x5feach_x5ftime_x5fslot", 
	"Full power in each time slot",
	0,
	"1",
	"Full power in each time slot");

create_form_set("_nEDGE_x5fBTS_x5fMCS6_x5fPwrCtrlSrc_fPwrStateSet",
	"_nEDGE_x5fBTS_x5fMCS6_x5fPwrCtrlSrc_fPower_x5fcontrolled",
	"_nEDGE_x5fBTS_x5fMCS6_x5fPwrCtrlSrc_fFull_x5fpower_x5fin_x5feach_x5ftime_x5fslot",
	"StdForm");

create_item ("EDGE_BTS_MCS6_PwrCtrlSrc","EDGE signal source for reference sensitivity level test",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_BTS_MCS6_PwrCtrlSrc",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_BTS_MCS6_PwrCtrlSrc",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_BTS_MCS6_PwrCtrlSrc",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SampPerSym","number of samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("TS_Measured","time slot measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("TSC","training sequence code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("PwrState","power control pattern",
		PARM_INT,
		"_nEDGE_x5fBTS_x5fMCS6_x5fPwrCtrlSrc_fPwrStateSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fBTS_x5fMCS6_x5fPwrCtrlSrc_fPower_x5fcontrolled","Power_controlled")),
	create_parm ("dB_NAllocGain","gain of slots not allocated to MS, in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")));


create_constant_form ("_nEDGE_x5fBTS_x5fMCS5_x5fPwrCtrlSrc_fPower_x5fcontrolled", 
	"Power controlled",
	0,
	"0",
	"Power controlled");

create_constant_form ("_nEDGE_x5fBTS_x5fMCS5_x5fPwrCtrlSrc_fFull_x5fpower_x5fin_x5feach_x5ftime_x5fslot", 
	"Full power in each time slot",
	0,
	"1",
	"Full power in each time slot");

create_form_set("_nEDGE_x5fBTS_x5fMCS5_x5fPwrCtrlSrc_fPwrStateSet",
	"_nEDGE_x5fBTS_x5fMCS5_x5fPwrCtrlSrc_fPower_x5fcontrolled",
	"_nEDGE_x5fBTS_x5fMCS5_x5fPwrCtrlSrc_fFull_x5fpower_x5fin_x5feach_x5ftime_x5fslot",
	"StdForm");

create_item ("EDGE_BTS_MCS5_PwrCtrlSrc","EDGE signal source for reference sensitivity level test",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_BTS_MCS5_PwrCtrlSrc",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_BTS_MCS5_PwrCtrlSrc",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_BTS_MCS5_PwrCtrlSrc",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SampPerSym","number of samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("TS_Measured","time slot measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("TSC","training sequence code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("PwrState","power control pattern",
		PARM_INT,
		"_nEDGE_x5fBTS_x5fMCS5_x5fPwrCtrlSrc_fPwrStateSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fBTS_x5fMCS5_x5fPwrCtrlSrc_fPower_x5fcontrolled","Power_controlled")),
	create_parm ("dB_NAllocGain","gain of slots not allocated to MS, in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")));


create_constant_form ("_nEDGE_x5fBLER_fFinal_x5fValue", 
	"Final Value",
	0,
	"0",
	"Final Value");

create_constant_form ("_nEDGE_x5fBLER_fFrom_x5fStart", 
	"From Start",
	0,
	"1",
	"From Start");

create_form_set("_nEDGE_x5fBLER_fRecordTypeSet",
	"_nEDGE_x5fBLER_fFinal_x5fValue",
	"_nEDGE_x5fBLER_fFrom_x5fStart",
	"StdForm");

create_item ("EDGE_BLER","Block error rate performance measurement",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_BLER",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_BLER",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_BLER",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Start","frame from which measurement starts",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("Stop","frame at which measurement stops",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","100.0")),
	create_parm ("BlockLength","number of bits in a block",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("RecordType","type of result recording",
		PARM_INT,
		"_nEDGE_x5fBLER_fRecordTypeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fBLER_fFinal_x5fValue","Final_Value")));


create_item ("EDGE_ActiveIdleSrc","EDGE signal source with active and idle time slots",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_ActiveIdleSrc",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_ActiveIdleSrc",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_ActiveIdleSrc",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SampPerSym","number of samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("TS_State","state of each time slot: 0 for idle, 1 for active",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"0 0 0 0 0 0 0 0\"")));


create_constant_form ("_nEDGE_x5fSource_fSampleRate_x5f4", 
	"SampleRate 4",
	0,
	"0",
	"4_Samples_Per_Symbol");

create_constant_form ("_nEDGE_x5fSource_fSampleRate_x5f8", 
	"SampleRate 8",
	0,
	"1",
	"8_Samples_Per_Symbol");

create_constant_form ("_nEDGE_x5fSource_fSampleRate_x5f16", 
	"SampleRate 16",
	0,
	"2",
	"16_Samples_Per_Symbol");

create_form_set("_nEDGE_x5fSource_fSampPerSymSet",
	"_nEDGE_x5fSource_fSampleRate_x5f4",
	"_nEDGE_x5fSource_fSampleRate_x5f8",
	"_nEDGE_x5fSource_fSampleRate_x5f16",
	"StdForm");

create_constant_form ("_nEDGE_x5fSource_fModified_x5f8PSK_x5ffor_x5fslot_x5f0", 
	"Modified 8PSK for slot 0",
	0,
	"0",
	"Modified 8PSK");

create_constant_form ("_nEDGE_x5fSource_fGMSK_x5ffor_x5fslot_x5f0", 
	"GMSK for slot 0",
	0,
	"1",
	"GMSK");

create_form_set("_nEDGE_x5fSource_fModType0Set",
	"_nEDGE_x5fSource_fModified_x5f8PSK_x5ffor_x5fslot_x5f0",
	"_nEDGE_x5fSource_fGMSK_x5ffor_x5fslot_x5f0",
	"StdForm");

create_constant_form ("_nEDGE_x5fSource_fModified_x5f8PSK_x5ffor_x5fslot_x5f1", 
	"Modified 8PSK for slot 1",
	0,
	"0",
	"Modified 8PSK");

create_constant_form ("_nEDGE_x5fSource_fGMSK_x5ffor_x5fslot_x5f1", 
	"GMSK for slot 1",
	0,
	"1",
	"GMSK");

create_form_set("_nEDGE_x5fSource_fModType1Set",
	"_nEDGE_x5fSource_fModified_x5f8PSK_x5ffor_x5fslot_x5f1",
	"_nEDGE_x5fSource_fGMSK_x5ffor_x5fslot_x5f1",
	"StdForm");

create_constant_form ("_nEDGE_x5fSource_fModified_x5f8PSK_x5ffor_x5fslot_x5f2", 
	"Modified 8PSK for slot 2",
	0,
	"0",
	"Modified 8PSK");

create_constant_form ("_nEDGE_x5fSource_fGMSK_x5ffor_x5fslot_x5f2", 
	"GMSK for slot 2",
	0,
	"1",
	"GMSK");

create_form_set("_nEDGE_x5fSource_fModType2Set",
	"_nEDGE_x5fSource_fModified_x5f8PSK_x5ffor_x5fslot_x5f2",
	"_nEDGE_x5fSource_fGMSK_x5ffor_x5fslot_x5f2",
	"StdForm");

create_constant_form ("_nEDGE_x5fSource_fModified_x5f8PSK_x5ffor_x5fslot_x5f3", 
	"Modified 8PSK for slot 3",
	0,
	"0",
	"Modified 8PSK");

create_constant_form ("_nEDGE_x5fSource_fGMSK_x5ffor_x5fslot_x5f3", 
	"GMSK for slot 3",
	0,
	"1",
	"GMSK");

create_form_set("_nEDGE_x5fSource_fModType3Set",
	"_nEDGE_x5fSource_fModified_x5f8PSK_x5ffor_x5fslot_x5f3",
	"_nEDGE_x5fSource_fGMSK_x5ffor_x5fslot_x5f3",
	"StdForm");

create_constant_form ("_nEDGE_x5fSource_fModified_x5f8PSK_x5ffor_x5fslot_x5f4", 
	"Modified 8PSK for slot 4",
	0,
	"0",
	"Modified 8PSK");

create_constant_form ("_nEDGE_x5fSource_fGMSK_x5ffor_x5fslot_x5f4", 
	"GMSK for slot 4",
	0,
	"1",
	"GMSK");

create_form_set("_nEDGE_x5fSource_fModType4Set",
	"_nEDGE_x5fSource_fModified_x5f8PSK_x5ffor_x5fslot_x5f4",
	"_nEDGE_x5fSource_fGMSK_x5ffor_x5fslot_x5f4",
	"StdForm");

create_constant_form ("_nEDGE_x5fSource_fModified_x5f8PSK_x5ffor_x5fslot_x5f5", 
	"Modified 8PSK for slot 5",
	0,
	"0",
	"Modified 8PSK");

create_constant_form ("_nEDGE_x5fSource_fGMSK_x5ffor_x5fslot_x5f5", 
	"GMSK for slot 5",
	0,
	"1",
	"GMSK");

create_form_set("_nEDGE_x5fSource_fModType5Set",
	"_nEDGE_x5fSource_fModified_x5f8PSK_x5ffor_x5fslot_x5f5",
	"_nEDGE_x5fSource_fGMSK_x5ffor_x5fslot_x5f5",
	"StdForm");

create_constant_form ("_nEDGE_x5fSource_fModified_x5f8PSK_x5ffor_x5fslot_x5f6", 
	"Modified 8PSK for slot 6",
	0,
	"0",
	"Modified 8PSK");

create_constant_form ("_nEDGE_x5fSource_fGMSK_x5ffor_x5fslot_x5f6", 
	"GMSK for slot 6",
	0,
	"1",
	"GMSK");

create_form_set("_nEDGE_x5fSource_fModType6Set",
	"_nEDGE_x5fSource_fModified_x5f8PSK_x5ffor_x5fslot_x5f6",
	"_nEDGE_x5fSource_fGMSK_x5ffor_x5fslot_x5f6",
	"StdForm");

create_constant_form ("_nEDGE_x5fSource_fModified_x5f8PSK_x5ffor_x5fslot_x5f7", 
	"Modified 8PSK for slot 7",
	0,
	"0",
	"Modified 8PSK");

create_constant_form ("_nEDGE_x5fSource_fGMSK_x5ffor_x5fslot_x5f7", 
	"GMSK for slot 7",
	0,
	"1",
	"GMSK");

create_form_set("_nEDGE_x5fSource_fModType7Set",
	"_nEDGE_x5fSource_fModified_x5f8PSK_x5ffor_x5fslot_x5f7",
	"_nEDGE_x5fSource_fGMSK_x5ffor_x5fslot_x5f7",
	"StdForm");

create_item ("EDGE_Source","EDGE source with framing and modulation",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_Source",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_Source",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_Source",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SampPerSym","number of samples per symbol",
		PARM_INT,
		"_nEDGE_x5fSource_fSampPerSymSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fSource_fSampleRate_x5f8","SampleRate_8")),
	create_parm ("FCarrier","carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","935.2 MHz")),
	create_parm ("ModType0","modulation type for time slot 0 (TN0)",
		PARM_INT,
		"_nEDGE_x5fSource_fModType0Set",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fSource_fModified_x5f8PSK_x5ffor_x5fslot_x5f0","Modified_8PSK_for_slot_0")),
	create_parm ("ModType1","modulation type for time slot 1 (TN1)",
		PARM_INT,
		"_nEDGE_x5fSource_fModType1Set",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fSource_fModified_x5f8PSK_x5ffor_x5fslot_x5f1","Modified_8PSK_for_slot_1")),
	create_parm ("ModType2","modulation type for time slot 2 (TN2)",
		PARM_INT,
		"_nEDGE_x5fSource_fModType2Set",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fSource_fModified_x5f8PSK_x5ffor_x5fslot_x5f2","Modified_8PSK_for_slot_2")),
	create_parm ("ModType3","modulation type for time slot 3 (TN3)",
		PARM_INT,
		"_nEDGE_x5fSource_fModType3Set",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fSource_fModified_x5f8PSK_x5ffor_x5fslot_x5f3","Modified_8PSK_for_slot_3")),
	create_parm ("ModType4","modulation type for time slot 4 (TN4)",
		PARM_INT,
		"_nEDGE_x5fSource_fModType4Set",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fSource_fModified_x5f8PSK_x5ffor_x5fslot_x5f4","Modified_8PSK_for_slot_4")),
	create_parm ("ModType5","modulation type for time slot 5 (TN5)",
		PARM_INT,
		"_nEDGE_x5fSource_fModType5Set",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fSource_fModified_x5f8PSK_x5ffor_x5fslot_x5f5","Modified_8PSK_for_slot_5")),
	create_parm ("ModType6","modulation type for time slot 6 (TN6)",
		PARM_INT,
		"_nEDGE_x5fSource_fModType6Set",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fSource_fModified_x5f8PSK_x5ffor_x5fslot_x5f6","Modified_8PSK_for_slot_6")),
	create_parm ("ModType7","modulation type for time slot 7 (TN7)",
		PARM_INT,
		"_nEDGE_x5fSource_fModType7Set",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fSource_fModified_x5f8PSK_x5ffor_x5fslot_x5f7","Modified_8PSK_for_slot_7")),
	create_parm ("PowerArray","power of each time slot, in dBm",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"1.0 1.0 1.0 1.0 1.0 1.0 1.0 1.0\"")),
	create_parm ("ROut","output resistance",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50.0 Ohm")));


create_constant_form ("_nEDGE_x5fEVM_x5fWithRef_fEVM_x5frms", 
	"EVM_rms",
	0,
	"0",
	"EVM_rms");

create_constant_form ("_nEDGE_x5fEVM_x5fWithRef_fEVM_x5fpeak", 
	"EVM_peak",
	0,
	"1",
	"EVM_peak");

create_constant_form ("_nEDGE_x5fEVM_x5fWithRef_fEVM_x5f95th_x5fpercentile", 
	"EVM_95th_percentile",
	0,
	"2",
	"EVM_95th_percentile");

create_form_set("_nEDGE_x5fEVM_x5fWithRef_fMeasTypeSet",
	"_nEDGE_x5fEVM_x5fWithRef_fEVM_x5frms",
	"_nEDGE_x5fEVM_x5fWithRef_fEVM_x5fpeak",
	"_nEDGE_x5fEVM_x5fWithRef_fEVM_x5f95th_x5fpercentile",
	"StdForm");

create_constant_form ("_nEDGE_x5fEVM_x5fWithRef_fEVM_x5fRatio", 
	"EVM_Ratio",
	0,
	"0",
	"EVM as ratio");

create_constant_form ("_nEDGE_x5fEVM_x5fWithRef_fEVM_x5fPercent", 
	"EVM_Percent",
	0,
	"1",
	"EVM as percent");

create_form_set("_nEDGE_x5fEVM_x5fWithRef_fEVMValueSet",
	"_nEDGE_x5fEVM_x5fWithRef_fEVM_x5fRatio",
	"_nEDGE_x5fEVM_x5fWithRef_fEVM_x5fPercent",
	"StdForm");

create_item ("EDGE_EVM_WithRef","EVM measurement with reference signal input",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_EVM_WithRef",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_EVM_WithRef",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_EVM_WithRef",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("StartSym","start symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","142")),
	create_parm ("SymBurstLen","number of symbols within burst to be measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","142")),
	create_parm ("SampPerSym","number of samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")),
	create_parm ("SymDelayBound","upper bound of delay detection, in symbol, -1 for no detection",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")),
	create_parm ("NumBursts","number of bursts to be measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","5")),
	create_parm ("MeasType","type of measurement",
		PARM_INT,
		"_nEDGE_x5fEVM_x5fWithRef_fMeasTypeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fEVM_x5fWithRef_fEVM_x5frms","EVM_rms")),
	create_parm ("SymbolRate","symbol rate",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","(1625/6) kHz")),
	create_parm ("EVMValue","EVM value expression options",
		PARM_INT,
		"_nEDGE_x5fEVM_x5fWithRef_fEVMValueSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fEVM_x5fWithRef_fEVM_x5fRatio","EVM_Ratio")));


create_constant_form ("_nEDGE_x5fTDMA_fBasic", 
	"Basic",
	0,
	"0",
	"Basic");

create_constant_form ("_nEDGE_x5fTDMA_fGSM_x5f8_x5f3_x5f0_x5fRelease_x5f1999", 
	"GSM_8_3_0_Release_1999",
	0,
	"1",
	"GSM 8.3.0 Release 1999");

create_form_set("_nEDGE_x5fTDMA_fVersionSet",
	"_nEDGE_x5fTDMA_fBasic",
	"_nEDGE_x5fTDMA_fGSM_x5f8_x5f3_x5f0_x5fRelease_x5f1999",
	"StdForm");

create_item ("EDGE_TDMA","TDMA frame constructor",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_TDMA",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_TDMA",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_TDMA",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Version","EDGE specification for normal burst if choose Basic, each burst has 156 symbols, otherwise complys with GSM 8.3.0 Release 1999",
		PARM_INT,
		"_nEDGE_x5fTDMA_fVersionSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fTDMA_fBasic","Basic")),
	create_parm ("BitsPerSlot","number of bits per slot disabled if Version=GSM 8.3.0 Release 1999",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","468")));


create_constant_form ("_nEDGE_x5fPatternedSrc_fPN9", 
	"PN9",
	0,
	"0",
	"PN9");

create_constant_form ("_nEDGE_x5fPatternedSrc_fPN15", 
	"PN15",
	0,
	"1",
	"PN15");

create_constant_form ("_nEDGE_x5fPatternedSrc_fFIX4", 
	"FIX4",
	0,
	"2",
	"FIX4");

create_constant_form ("_nEDGE_x5fPatternedSrc_f_x5f4_x5f1_x5f4_x5f0", 
	"_4_1_4_0",
	0,
	"3",
	"_4_1_4_0");

create_constant_form ("_nEDGE_x5fPatternedSrc_f_x5f8_x5f1_x5f8_x5f0", 
	"_8_1_8_0",
	0,
	"4",
	"_8_1_8_0");

create_constant_form ("_nEDGE_x5fPatternedSrc_f_x5f16_x5f1_x5f16_x5f0", 
	"_16_1_16_0",
	0,
	"5",
	"_16_1_16_0");

create_constant_form ("_nEDGE_x5fPatternedSrc_f_x5f32_x5f1_x5f32_x5f0", 
	"_32_1_32_0",
	0,
	"6",
	"_32_1_32_0");

create_constant_form ("_nEDGE_x5fPatternedSrc_f_x5f64_x5f1_x5f64_x5f0", 
	"_64_1_64_0",
	0,
	"7",
	"_64_1_64_0");

create_form_set("_nEDGE_x5fPatternedSrc_fDataPatternSet",
	"_nEDGE_x5fPatternedSrc_fPN9",
	"_nEDGE_x5fPatternedSrc_fPN15",
	"_nEDGE_x5fPatternedSrc_fFIX4",
	"_nEDGE_x5fPatternedSrc_f_x5f4_x5f1_x5f4_x5f0",
	"_nEDGE_x5fPatternedSrc_f_x5f8_x5f1_x5f8_x5f0",
	"_nEDGE_x5fPatternedSrc_f_x5f16_x5f1_x5f16_x5f0",
	"_nEDGE_x5fPatternedSrc_f_x5f32_x5f1_x5f32_x5f0",
	"_nEDGE_x5fPatternedSrc_f_x5f64_x5f1_x5f64_x5f0",
	"StdForm");

create_item ("EDGE_PatternedSrc","EDGE signal source compatible with ESG",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_PatternedSrc",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_PatternedSrc",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_PatternedSrc",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SampPerSym","number of samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("DataPattern","data pattern",
		PARM_INT,
		"_nEDGE_x5fPatternedSrc_fDataPatternSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fPatternedSrc_fPN9","PN9")));


create_constant_form ("_nEDGE_x5fMCS9_x5fUL_x5fEncoder_fP1", 
	"P1",
	0,
	"0",
	"P1");

create_constant_form ("_nEDGE_x5fMCS9_x5fUL_x5fEncoder_fP2", 
	"P2",
	0,
	"1",
	"P2");

create_constant_form ("_nEDGE_x5fMCS9_x5fUL_x5fEncoder_fP3", 
	"P3",
	0,
	"2",
	"P3");

create_form_set("_nEDGE_x5fMCS9_x5fUL_x5fEncoder_fPuncSchemeSet",
	"_nEDGE_x5fMCS9_x5fUL_x5fEncoder_fP1",
	"_nEDGE_x5fMCS9_x5fUL_x5fEncoder_fP2",
	"_nEDGE_x5fMCS9_x5fUL_x5fEncoder_fP3",
	"StdForm");

create_item ("EDGE_MCS9_UL_Encoder","MCS9 encoder for uplink",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MCS9_UL_Encoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MCS9_UL_Encoder",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MCS9_UL_Encoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PuncScheme","puncturing scheme",
		PARM_INT,
		"_nEDGE_x5fMCS9_x5fUL_x5fEncoder_fPuncSchemeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMCS9_x5fUL_x5fEncoder_fP1","P1")));


create_constant_form ("_nEDGE_x5fMCS9_x5fUL_x5fDecoder_fP1", 
	"P1",
	0,
	"0",
	"P1");

create_constant_form ("_nEDGE_x5fMCS9_x5fUL_x5fDecoder_fP2", 
	"P2",
	0,
	"1",
	"P2");

create_constant_form ("_nEDGE_x5fMCS9_x5fUL_x5fDecoder_fP3", 
	"P3",
	0,
	"2",
	"P3");

create_form_set("_nEDGE_x5fMCS9_x5fUL_x5fDecoder_fPuncSchemeSet",
	"_nEDGE_x5fMCS9_x5fUL_x5fDecoder_fP1",
	"_nEDGE_x5fMCS9_x5fUL_x5fDecoder_fP2",
	"_nEDGE_x5fMCS9_x5fUL_x5fDecoder_fP3",
	"StdForm");

create_item ("EDGE_MCS9_UL_Decoder","MCS9 decoder for uplink",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MCS9_UL_Decoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MCS9_UL_Decoder",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MCS9_UL_Decoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PuncScheme","puncturing scheme",
		PARM_INT,
		"_nEDGE_x5fMCS9_x5fUL_x5fDecoder_fPuncSchemeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMCS9_x5fUL_x5fDecoder_fP1","P1")));


create_constant_form ("_nEDGE_x5fMCS9_x5fDL_x5fEncoder_fP1", 
	"P1",
	0,
	"0",
	"P1");

create_constant_form ("_nEDGE_x5fMCS9_x5fDL_x5fEncoder_fP2", 
	"P2",
	0,
	"1",
	"P2");

create_constant_form ("_nEDGE_x5fMCS9_x5fDL_x5fEncoder_fP3", 
	"P3",
	0,
	"2",
	"P3");

create_form_set("_nEDGE_x5fMCS9_x5fDL_x5fEncoder_fPuncSchemeSet",
	"_nEDGE_x5fMCS9_x5fDL_x5fEncoder_fP1",
	"_nEDGE_x5fMCS9_x5fDL_x5fEncoder_fP2",
	"_nEDGE_x5fMCS9_x5fDL_x5fEncoder_fP3",
	"StdForm");

create_item ("EDGE_MCS9_DL_Encoder","MCS9 encoder for downlink",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MCS9_DL_Encoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MCS9_DL_Encoder",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MCS9_DL_Encoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PuncScheme","puncturing scheme",
		PARM_INT,
		"_nEDGE_x5fMCS9_x5fDL_x5fEncoder_fPuncSchemeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMCS9_x5fDL_x5fEncoder_fP1","P1")));


create_constant_form ("_nEDGE_x5fMCS9_x5fDL_x5fDecoder_fP1", 
	"P1",
	0,
	"0",
	"P1");

create_constant_form ("_nEDGE_x5fMCS9_x5fDL_x5fDecoder_fP2", 
	"P2",
	0,
	"1",
	"P2");

create_constant_form ("_nEDGE_x5fMCS9_x5fDL_x5fDecoder_fP3", 
	"P3",
	0,
	"2",
	"P3");

create_form_set("_nEDGE_x5fMCS9_x5fDL_x5fDecoder_fPuncSchemeSet",
	"_nEDGE_x5fMCS9_x5fDL_x5fDecoder_fP1",
	"_nEDGE_x5fMCS9_x5fDL_x5fDecoder_fP2",
	"_nEDGE_x5fMCS9_x5fDL_x5fDecoder_fP3",
	"StdForm");

create_item ("EDGE_MCS9_DL_Decoder","MCS9 decoder for downlink",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MCS9_DL_Decoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MCS9_DL_Decoder",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MCS9_DL_Decoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PuncScheme","puncturing scheme",
		PARM_INT,
		"_nEDGE_x5fMCS9_x5fDL_x5fDecoder_fPuncSchemeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMCS9_x5fDL_x5fDecoder_fP1","P1")));


create_constant_form ("_nEDGE_x5fMCS8_x5fUL_x5fEncoder_fP1", 
	"P1",
	0,
	"0",
	"P1");

create_constant_form ("_nEDGE_x5fMCS8_x5fUL_x5fEncoder_fP2", 
	"P2",
	0,
	"1",
	"P2");

create_constant_form ("_nEDGE_x5fMCS8_x5fUL_x5fEncoder_fP3", 
	"P3",
	0,
	"2",
	"P3");

create_form_set("_nEDGE_x5fMCS8_x5fUL_x5fEncoder_fPuncSchemeSet",
	"_nEDGE_x5fMCS8_x5fUL_x5fEncoder_fP1",
	"_nEDGE_x5fMCS8_x5fUL_x5fEncoder_fP2",
	"_nEDGE_x5fMCS8_x5fUL_x5fEncoder_fP3",
	"StdForm");

create_item ("EDGE_MCS8_UL_Encoder","MCS8 encoder for uplink",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MCS8_UL_Encoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MCS8_UL_Encoder",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MCS8_UL_Encoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PuncScheme","puncturing scheme",
		PARM_INT,
		"_nEDGE_x5fMCS8_x5fUL_x5fEncoder_fPuncSchemeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMCS8_x5fUL_x5fEncoder_fP1","P1")));


create_constant_form ("_nEDGE_x5fMCS8_x5fUL_x5fDecoder_fP1", 
	"P1",
	0,
	"0",
	"P1");

create_constant_form ("_nEDGE_x5fMCS8_x5fUL_x5fDecoder_fP2", 
	"P2",
	0,
	"1",
	"P2");

create_constant_form ("_nEDGE_x5fMCS8_x5fUL_x5fDecoder_fP3", 
	"P3",
	0,
	"2",
	"P3");

create_form_set("_nEDGE_x5fMCS8_x5fUL_x5fDecoder_fPuncSchemeSet",
	"_nEDGE_x5fMCS8_x5fUL_x5fDecoder_fP1",
	"_nEDGE_x5fMCS8_x5fUL_x5fDecoder_fP2",
	"_nEDGE_x5fMCS8_x5fUL_x5fDecoder_fP3",
	"StdForm");

create_item ("EDGE_MCS8_UL_Decoder","MCS8 decoder for uplink",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MCS8_UL_Decoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MCS8_UL_Decoder",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MCS8_UL_Decoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PuncScheme","puncturing scheme",
		PARM_INT,
		"_nEDGE_x5fMCS8_x5fUL_x5fDecoder_fPuncSchemeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMCS8_x5fUL_x5fDecoder_fP1","P1")));


create_constant_form ("_nEDGE_x5fMCS8_x5fDL_x5fEncoder_fP1", 
	"P1",
	0,
	"0",
	"P1");

create_constant_form ("_nEDGE_x5fMCS8_x5fDL_x5fEncoder_fP2", 
	"P2",
	0,
	"1",
	"P2");

create_constant_form ("_nEDGE_x5fMCS8_x5fDL_x5fEncoder_fP3", 
	"P3",
	0,
	"2",
	"P3");

create_form_set("_nEDGE_x5fMCS8_x5fDL_x5fEncoder_fPuncSchemeSet",
	"_nEDGE_x5fMCS8_x5fDL_x5fEncoder_fP1",
	"_nEDGE_x5fMCS8_x5fDL_x5fEncoder_fP2",
	"_nEDGE_x5fMCS8_x5fDL_x5fEncoder_fP3",
	"StdForm");

create_item ("EDGE_MCS8_DL_Encoder","MCS8 encoder for downlink",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MCS8_DL_Encoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MCS8_DL_Encoder",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MCS8_DL_Encoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PuncScheme","puncturing scheme",
		PARM_INT,
		"_nEDGE_x5fMCS8_x5fDL_x5fEncoder_fPuncSchemeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMCS8_x5fDL_x5fEncoder_fP1","P1")));


create_constant_form ("_nEDGE_x5fMCS8_x5fDL_x5fDecoder_fP1", 
	"P1",
	0,
	"0",
	"P1");

create_constant_form ("_nEDGE_x5fMCS8_x5fDL_x5fDecoder_fP2", 
	"P2",
	0,
	"1",
	"P2");

create_constant_form ("_nEDGE_x5fMCS8_x5fDL_x5fDecoder_fP3", 
	"P3",
	0,
	"2",
	"P3");

create_form_set("_nEDGE_x5fMCS8_x5fDL_x5fDecoder_fPuncSchemeSet",
	"_nEDGE_x5fMCS8_x5fDL_x5fDecoder_fP1",
	"_nEDGE_x5fMCS8_x5fDL_x5fDecoder_fP2",
	"_nEDGE_x5fMCS8_x5fDL_x5fDecoder_fP3",
	"StdForm");

create_item ("EDGE_MCS8_DL_Decoder","MCS8 decoder for downlink",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MCS8_DL_Decoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MCS8_DL_Decoder",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MCS8_DL_Decoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PuncScheme","puncturing scheme",
		PARM_INT,
		"_nEDGE_x5fMCS8_x5fDL_x5fDecoder_fPuncSchemeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMCS8_x5fDL_x5fDecoder_fP1","P1")));


create_constant_form ("_nEDGE_x5fMCS7_x5fUL_x5fEncoder_fP1", 
	"P1",
	0,
	"0",
	"P1");

create_constant_form ("_nEDGE_x5fMCS7_x5fUL_x5fEncoder_fP2", 
	"P2",
	0,
	"1",
	"P2");

create_constant_form ("_nEDGE_x5fMCS7_x5fUL_x5fEncoder_fP3", 
	"P3",
	0,
	"2",
	"P3");

create_form_set("_nEDGE_x5fMCS7_x5fUL_x5fEncoder_fPuncSchemeSet",
	"_nEDGE_x5fMCS7_x5fUL_x5fEncoder_fP1",
	"_nEDGE_x5fMCS7_x5fUL_x5fEncoder_fP2",
	"_nEDGE_x5fMCS7_x5fUL_x5fEncoder_fP3",
	"StdForm");

create_item ("EDGE_MCS7_UL_Encoder","MCS7 encoder for uplink",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MCS7_UL_Encoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MCS7_UL_Encoder",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MCS7_UL_Encoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PuncScheme","puncturing scheme",
		PARM_INT,
		"_nEDGE_x5fMCS7_x5fUL_x5fEncoder_fPuncSchemeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMCS7_x5fUL_x5fEncoder_fP1","P1")));


create_constant_form ("_nEDGE_x5fMCS7_x5fUL_x5fDecoder_fP1", 
	"P1",
	0,
	"0",
	"P1");

create_constant_form ("_nEDGE_x5fMCS7_x5fUL_x5fDecoder_fP2", 
	"P2",
	0,
	"1",
	"P2");

create_constant_form ("_nEDGE_x5fMCS7_x5fUL_x5fDecoder_fP3", 
	"P3",
	0,
	"2",
	"P3");

create_form_set("_nEDGE_x5fMCS7_x5fUL_x5fDecoder_fPuncSchemeSet",
	"_nEDGE_x5fMCS7_x5fUL_x5fDecoder_fP1",
	"_nEDGE_x5fMCS7_x5fUL_x5fDecoder_fP2",
	"_nEDGE_x5fMCS7_x5fUL_x5fDecoder_fP3",
	"StdForm");

create_item ("EDGE_MCS7_UL_Decoder","MCS7 decoder for uplink",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MCS7_UL_Decoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MCS7_UL_Decoder",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MCS7_UL_Decoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PuncScheme","puncturing scheme",
		PARM_INT,
		"_nEDGE_x5fMCS7_x5fUL_x5fDecoder_fPuncSchemeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMCS7_x5fUL_x5fDecoder_fP1","P1")));


create_constant_form ("_nEDGE_x5fMCS7_x5fDL_x5fEncoder_fP1", 
	"P1",
	0,
	"0",
	"P1");

create_constant_form ("_nEDGE_x5fMCS7_x5fDL_x5fEncoder_fP2", 
	"P2",
	0,
	"1",
	"P2");

create_constant_form ("_nEDGE_x5fMCS7_x5fDL_x5fEncoder_fP3", 
	"P3",
	0,
	"2",
	"P3");

create_form_set("_nEDGE_x5fMCS7_x5fDL_x5fEncoder_fPuncSchemeSet",
	"_nEDGE_x5fMCS7_x5fDL_x5fEncoder_fP1",
	"_nEDGE_x5fMCS7_x5fDL_x5fEncoder_fP2",
	"_nEDGE_x5fMCS7_x5fDL_x5fEncoder_fP3",
	"StdForm");

create_item ("EDGE_MCS7_DL_Encoder","MCS7 encoder for downlink",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MCS7_DL_Encoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MCS7_DL_Encoder",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MCS7_DL_Encoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PuncScheme","puncturing scheme",
		PARM_INT,
		"_nEDGE_x5fMCS7_x5fDL_x5fEncoder_fPuncSchemeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMCS7_x5fDL_x5fEncoder_fP1","P1")));


create_constant_form ("_nEDGE_x5fMCS7_x5fDL_x5fDecoder_fP1", 
	"P1",
	0,
	"0",
	"P1");

create_constant_form ("_nEDGE_x5fMCS7_x5fDL_x5fDecoder_fP2", 
	"P2",
	0,
	"1",
	"P2");

create_constant_form ("_nEDGE_x5fMCS7_x5fDL_x5fDecoder_fP3", 
	"P3",
	0,
	"2",
	"P3");

create_form_set("_nEDGE_x5fMCS7_x5fDL_x5fDecoder_fPuncSchemeSet",
	"_nEDGE_x5fMCS7_x5fDL_x5fDecoder_fP1",
	"_nEDGE_x5fMCS7_x5fDL_x5fDecoder_fP2",
	"_nEDGE_x5fMCS7_x5fDL_x5fDecoder_fP3",
	"StdForm");

create_item ("EDGE_MCS7_DL_Decoder","MCS7 decoder for downlink",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MCS7_DL_Decoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MCS7_DL_Decoder",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MCS7_DL_Decoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PuncScheme","puncturing scheme",
		PARM_INT,
		"_nEDGE_x5fMCS7_x5fDL_x5fDecoder_fPuncSchemeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMCS7_x5fDL_x5fDecoder_fP1","P1")));


create_constant_form ("_nEDGE_x5fMCS6_x5fUL_x5fEncoder_fP1", 
	"P1",
	0,
	"0",
	"P1");

create_constant_form ("_nEDGE_x5fMCS6_x5fUL_x5fEncoder_fP2", 
	"P2",
	0,
	"1",
	"P2");

create_form_set("_nEDGE_x5fMCS6_x5fUL_x5fEncoder_fPuncSchemeSet",
	"_nEDGE_x5fMCS6_x5fUL_x5fEncoder_fP1",
	"_nEDGE_x5fMCS6_x5fUL_x5fEncoder_fP2",
	"StdForm");

create_item ("EDGE_MCS6_UL_Encoder","MCS6 encoder for uplink",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MCS6_UL_Encoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MCS6_UL_Encoder",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MCS6_UL_Encoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PuncScheme","puncturing scheme",
		PARM_INT,
		"_nEDGE_x5fMCS6_x5fUL_x5fEncoder_fPuncSchemeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMCS6_x5fUL_x5fEncoder_fP1","P1")));


create_constant_form ("_nEDGE_x5fMCS6_x5fUL_x5fDecoder_fP1", 
	"P1",
	0,
	"0",
	"P1");

create_constant_form ("_nEDGE_x5fMCS6_x5fUL_x5fDecoder_fP2", 
	"P2",
	0,
	"1",
	"P2");

create_form_set("_nEDGE_x5fMCS6_x5fUL_x5fDecoder_fPuncSchemeSet",
	"_nEDGE_x5fMCS6_x5fUL_x5fDecoder_fP1",
	"_nEDGE_x5fMCS6_x5fUL_x5fDecoder_fP2",
	"StdForm");

create_item ("EDGE_MCS6_UL_Decoder","MCS6 decoder for uplink",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MCS6_UL_Decoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MCS6_UL_Decoder",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MCS6_UL_Decoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PuncScheme","puncturing scheme",
		PARM_INT,
		"_nEDGE_x5fMCS6_x5fUL_x5fDecoder_fPuncSchemeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMCS6_x5fUL_x5fDecoder_fP1","P1")));


create_constant_form ("_nEDGE_x5fMCS6_x5fDL_x5fEncoder_fP1", 
	"P1",
	0,
	"0",
	"P1");

create_constant_form ("_nEDGE_x5fMCS6_x5fDL_x5fEncoder_fP2", 
	"P2",
	0,
	"1",
	"P2");

create_form_set("_nEDGE_x5fMCS6_x5fDL_x5fEncoder_fPuncSchemeSet",
	"_nEDGE_x5fMCS6_x5fDL_x5fEncoder_fP1",
	"_nEDGE_x5fMCS6_x5fDL_x5fEncoder_fP2",
	"StdForm");

create_item ("EDGE_MCS6_DL_Encoder","MCS6 encoder for downlink",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MCS6_DL_Encoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MCS6_DL_Encoder",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MCS6_DL_Encoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PuncScheme","puncturing scheme",
		PARM_INT,
		"_nEDGE_x5fMCS6_x5fDL_x5fEncoder_fPuncSchemeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMCS6_x5fDL_x5fEncoder_fP1","P1")));


create_constant_form ("_nEDGE_x5fMCS6_x5fDL_x5fDecoder_fP1", 
	"P1",
	0,
	"0",
	"P1");

create_constant_form ("_nEDGE_x5fMCS6_x5fDL_x5fDecoder_fP2", 
	"P2",
	0,
	"1",
	"P2");

create_form_set("_nEDGE_x5fMCS6_x5fDL_x5fDecoder_fPuncSchemeSet",
	"_nEDGE_x5fMCS6_x5fDL_x5fDecoder_fP1",
	"_nEDGE_x5fMCS6_x5fDL_x5fDecoder_fP2",
	"StdForm");

create_item ("EDGE_MCS6_DL_Decoder","MCS6 decoder for downlink",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MCS6_DL_Decoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MCS6_DL_Decoder",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MCS6_DL_Decoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PuncScheme","puncturing scheme",
		PARM_INT,
		"_nEDGE_x5fMCS6_x5fDL_x5fDecoder_fPuncSchemeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMCS6_x5fDL_x5fDecoder_fP1","P1")));


create_constant_form ("_nEDGE_x5fMCS5_x5fUL_x5fEncoder_fP1", 
	"P1",
	0,
	"0",
	"P1");

create_constant_form ("_nEDGE_x5fMCS5_x5fUL_x5fEncoder_fP2", 
	"P2",
	0,
	"1",
	"P2");

create_form_set("_nEDGE_x5fMCS5_x5fUL_x5fEncoder_fPuncSchemeSet",
	"_nEDGE_x5fMCS5_x5fUL_x5fEncoder_fP1",
	"_nEDGE_x5fMCS5_x5fUL_x5fEncoder_fP2",
	"StdForm");

create_item ("EDGE_MCS5_UL_Encoder","MCS5 encoder for uplink",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MCS5_UL_Encoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MCS5_UL_Encoder",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MCS5_UL_Encoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PuncScheme","puncturing scheme",
		PARM_INT,
		"_nEDGE_x5fMCS5_x5fUL_x5fEncoder_fPuncSchemeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMCS5_x5fUL_x5fEncoder_fP1","P1")));


create_constant_form ("_nEDGE_x5fMCS5_x5fUL_x5fDecoder_fP1", 
	"P1",
	0,
	"0",
	"P1");

create_constant_form ("_nEDGE_x5fMCS5_x5fUL_x5fDecoder_fP2", 
	"P2",
	0,
	"1",
	"P2");

create_form_set("_nEDGE_x5fMCS5_x5fUL_x5fDecoder_fPuncSchemeSet",
	"_nEDGE_x5fMCS5_x5fUL_x5fDecoder_fP1",
	"_nEDGE_x5fMCS5_x5fUL_x5fDecoder_fP2",
	"StdForm");

create_item ("EDGE_MCS5_UL_Decoder","MCS5 decoder for uplink",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MCS5_UL_Decoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MCS5_UL_Decoder",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MCS5_UL_Decoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PuncScheme","puncturing scheme",
		PARM_INT,
		"_nEDGE_x5fMCS5_x5fUL_x5fDecoder_fPuncSchemeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMCS5_x5fUL_x5fDecoder_fP1","P1")));


create_constant_form ("_nEDGE_x5fMCS5_x5fDL_x5fEncoder_fP1", 
	"P1",
	0,
	"0",
	"P1");

create_constant_form ("_nEDGE_x5fMCS5_x5fDL_x5fEncoder_fP2", 
	"P2",
	0,
	"1",
	"P2");

create_form_set("_nEDGE_x5fMCS5_x5fDL_x5fEncoder_fPuncSchemeSet",
	"_nEDGE_x5fMCS5_x5fDL_x5fEncoder_fP1",
	"_nEDGE_x5fMCS5_x5fDL_x5fEncoder_fP2",
	"StdForm");

create_item ("EDGE_MCS5_DL_Encoder","MCS5 encoder for downlink",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MCS5_DL_Encoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MCS5_DL_Encoder",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MCS5_DL_Encoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PuncScheme","puncturing scheme",
		PARM_INT,
		"_nEDGE_x5fMCS5_x5fDL_x5fEncoder_fPuncSchemeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMCS5_x5fDL_x5fEncoder_fP1","P1")));


create_constant_form ("_nEDGE_x5fMCS5_x5fDL_x5fDecoder_fP1", 
	"P1",
	0,
	"0",
	"P1");

create_constant_form ("_nEDGE_x5fMCS5_x5fDL_x5fDecoder_fP2", 
	"P2",
	0,
	"1",
	"P2");

create_form_set("_nEDGE_x5fMCS5_x5fDL_x5fDecoder_fPuncSchemeSet",
	"_nEDGE_x5fMCS5_x5fDL_x5fDecoder_fP1",
	"_nEDGE_x5fMCS5_x5fDL_x5fDecoder_fP2",
	"StdForm");

create_item ("EDGE_MCS5_DL_Decoder","MCS5 decoder for downlink",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MCS5_DL_Decoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MCS5_DL_Decoder",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MCS5_DL_Decoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PuncScheme","puncturing scheme",
		PARM_INT,
		"_nEDGE_x5fMCS5_x5fDL_x5fDecoder_fPuncSchemeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMCS5_x5fDL_x5fDecoder_fP1","P1")));


create_constant_form ("_nEDGE_x5fMCS4_x5fUL_x5fEncoder_fP1", 
	"P1",
	0,
	"0",
	"P1");

create_constant_form ("_nEDGE_x5fMCS4_x5fUL_x5fEncoder_fP2", 
	"P2",
	0,
	"1",
	"P2");

create_constant_form ("_nEDGE_x5fMCS4_x5fUL_x5fEncoder_fP3", 
	"P3",
	0,
	"2",
	"P3");

create_form_set("_nEDGE_x5fMCS4_x5fUL_x5fEncoder_fPuncSchemeSet",
	"_nEDGE_x5fMCS4_x5fUL_x5fEncoder_fP1",
	"_nEDGE_x5fMCS4_x5fUL_x5fEncoder_fP2",
	"_nEDGE_x5fMCS4_x5fUL_x5fEncoder_fP3",
	"StdForm");

create_item ("EDGE_MCS4_UL_Encoder","MCS4 encoder for uplink",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MCS4_UL_Encoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MCS4_UL_Encoder",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MCS4_UL_Encoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PuncScheme","puncturing scheme",
		PARM_INT,
		"_nEDGE_x5fMCS4_x5fUL_x5fEncoder_fPuncSchemeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMCS4_x5fUL_x5fEncoder_fP1","P1")));


create_constant_form ("_nEDGE_x5fMCS4_x5fUL_x5fDecoder_fP1", 
	"P1",
	0,
	"0",
	"P1");

create_constant_form ("_nEDGE_x5fMCS4_x5fUL_x5fDecoder_fP2", 
	"P2",
	0,
	"1",
	"P2");

create_constant_form ("_nEDGE_x5fMCS4_x5fUL_x5fDecoder_fP3", 
	"P3",
	0,
	"2",
	"P3");

create_form_set("_nEDGE_x5fMCS4_x5fUL_x5fDecoder_fPuncSchemeSet",
	"_nEDGE_x5fMCS4_x5fUL_x5fDecoder_fP1",
	"_nEDGE_x5fMCS4_x5fUL_x5fDecoder_fP2",
	"_nEDGE_x5fMCS4_x5fUL_x5fDecoder_fP3",
	"StdForm");

create_item ("EDGE_MCS4_UL_Decoder","MCS4 decoder for uplink",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MCS4_UL_Decoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MCS4_UL_Decoder",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MCS4_UL_Decoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PuncScheme","puncturing scheme",
		PARM_INT,
		"_nEDGE_x5fMCS4_x5fUL_x5fDecoder_fPuncSchemeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMCS4_x5fUL_x5fDecoder_fP1","P1")));


create_constant_form ("_nEDGE_x5fMCS4_x5fDL_x5fEncoder_fP1", 
	"P1",
	0,
	"0",
	"P1");

create_constant_form ("_nEDGE_x5fMCS4_x5fDL_x5fEncoder_fP2", 
	"P2",
	0,
	"1",
	"P2");

create_constant_form ("_nEDGE_x5fMCS4_x5fDL_x5fEncoder_fP3", 
	"P3",
	0,
	"2",
	"P3");

create_form_set("_nEDGE_x5fMCS4_x5fDL_x5fEncoder_fPuncSchemeSet",
	"_nEDGE_x5fMCS4_x5fDL_x5fEncoder_fP1",
	"_nEDGE_x5fMCS4_x5fDL_x5fEncoder_fP2",
	"_nEDGE_x5fMCS4_x5fDL_x5fEncoder_fP3",
	"StdForm");

create_item ("EDGE_MCS4_DL_Encoder","MCS4 encoder for downlink",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MCS4_DL_Encoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MCS4_DL_Encoder",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MCS4_DL_Encoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PuncScheme","puncturing scheme",
		PARM_INT,
		"_nEDGE_x5fMCS4_x5fDL_x5fEncoder_fPuncSchemeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMCS4_x5fDL_x5fEncoder_fP1","P1")));


create_constant_form ("_nEDGE_x5fMCS4_x5fDL_x5fDecoder_fP1", 
	"P1",
	0,
	"0",
	"P1");

create_constant_form ("_nEDGE_x5fMCS4_x5fDL_x5fDecoder_fP2", 
	"P2",
	0,
	"1",
	"P2");

create_constant_form ("_nEDGE_x5fMCS4_x5fDL_x5fDecoder_fP3", 
	"P3",
	0,
	"2",
	"P3");

create_form_set("_nEDGE_x5fMCS4_x5fDL_x5fDecoder_fPuncSchemeSet",
	"_nEDGE_x5fMCS4_x5fDL_x5fDecoder_fP1",
	"_nEDGE_x5fMCS4_x5fDL_x5fDecoder_fP2",
	"_nEDGE_x5fMCS4_x5fDL_x5fDecoder_fP3",
	"StdForm");

create_item ("EDGE_MCS4_DL_Decoder","MCS4 decoder for downlink",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MCS4_DL_Decoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MCS4_DL_Decoder",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MCS4_DL_Decoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PuncScheme","puncturing scheme",
		PARM_INT,
		"_nEDGE_x5fMCS4_x5fDL_x5fDecoder_fPuncSchemeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMCS4_x5fDL_x5fDecoder_fP1","P1")));


create_constant_form ("_nEDGE_x5fMCS3_x5fUL_x5fEncoder_fP1", 
	"P1",
	0,
	"0",
	"P1");

create_constant_form ("_nEDGE_x5fMCS3_x5fUL_x5fEncoder_fP2", 
	"P2",
	0,
	"1",
	"P2");

create_constant_form ("_nEDGE_x5fMCS3_x5fUL_x5fEncoder_fP3", 
	"P3",
	0,
	"2",
	"P3");

create_form_set("_nEDGE_x5fMCS3_x5fUL_x5fEncoder_fPuncSchemeSet",
	"_nEDGE_x5fMCS3_x5fUL_x5fEncoder_fP1",
	"_nEDGE_x5fMCS3_x5fUL_x5fEncoder_fP2",
	"_nEDGE_x5fMCS3_x5fUL_x5fEncoder_fP3",
	"StdForm");

create_item ("EDGE_MCS3_UL_Encoder","MCS3 encoder for uplink",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MCS3_UL_Encoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MCS3_UL_Encoder",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MCS3_UL_Encoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PuncScheme","puncturing scheme",
		PARM_INT,
		"_nEDGE_x5fMCS3_x5fUL_x5fEncoder_fPuncSchemeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMCS3_x5fUL_x5fEncoder_fP1","P1")));


create_constant_form ("_nEDGE_x5fMCS3_x5fUL_x5fDecoder_fP1", 
	"P1",
	0,
	"0",
	"P1");

create_constant_form ("_nEDGE_x5fMCS3_x5fUL_x5fDecoder_fP2", 
	"P2",
	0,
	"1",
	"P2");

create_constant_form ("_nEDGE_x5fMCS3_x5fUL_x5fDecoder_fP3", 
	"P3",
	0,
	"2",
	"P3");

create_form_set("_nEDGE_x5fMCS3_x5fUL_x5fDecoder_fPuncSchemeSet",
	"_nEDGE_x5fMCS3_x5fUL_x5fDecoder_fP1",
	"_nEDGE_x5fMCS3_x5fUL_x5fDecoder_fP2",
	"_nEDGE_x5fMCS3_x5fUL_x5fDecoder_fP3",
	"StdForm");

create_item ("EDGE_MCS3_UL_Decoder","MCS3 decoder for uplink",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MCS3_UL_Decoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MCS3_UL_Decoder",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MCS3_UL_Decoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PuncScheme","puncturing scheme",
		PARM_INT,
		"_nEDGE_x5fMCS3_x5fUL_x5fDecoder_fPuncSchemeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMCS3_x5fUL_x5fDecoder_fP1","P1")));


create_constant_form ("_nEDGE_x5fMCS3_x5fDL_x5fEncoder_fP1", 
	"P1",
	0,
	"0",
	"P1");

create_constant_form ("_nEDGE_x5fMCS3_x5fDL_x5fEncoder_fP2", 
	"P2",
	0,
	"1",
	"P2");

create_constant_form ("_nEDGE_x5fMCS3_x5fDL_x5fEncoder_fP3", 
	"P3",
	0,
	"2",
	"P3");

create_form_set("_nEDGE_x5fMCS3_x5fDL_x5fEncoder_fPuncSchemeSet",
	"_nEDGE_x5fMCS3_x5fDL_x5fEncoder_fP1",
	"_nEDGE_x5fMCS3_x5fDL_x5fEncoder_fP2",
	"_nEDGE_x5fMCS3_x5fDL_x5fEncoder_fP3",
	"StdForm");

create_item ("EDGE_MCS3_DL_Encoder","MCS3 encoder for downlink",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MCS3_DL_Encoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MCS3_DL_Encoder",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MCS3_DL_Encoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PuncScheme","puncturing scheme",
		PARM_INT,
		"_nEDGE_x5fMCS3_x5fDL_x5fEncoder_fPuncSchemeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMCS3_x5fDL_x5fEncoder_fP1","P1")));


create_constant_form ("_nEDGE_x5fMCS3_x5fDL_x5fDecoder_fP1", 
	"P1",
	0,
	"0",
	"P1");

create_constant_form ("_nEDGE_x5fMCS3_x5fDL_x5fDecoder_fP2", 
	"P2",
	0,
	"1",
	"P2");

create_constant_form ("_nEDGE_x5fMCS3_x5fDL_x5fDecoder_fP3", 
	"P3",
	0,
	"2",
	"P3");

create_form_set("_nEDGE_x5fMCS3_x5fDL_x5fDecoder_fPuncSchemeSet",
	"_nEDGE_x5fMCS3_x5fDL_x5fDecoder_fP1",
	"_nEDGE_x5fMCS3_x5fDL_x5fDecoder_fP2",
	"_nEDGE_x5fMCS3_x5fDL_x5fDecoder_fP3",
	"StdForm");

create_item ("EDGE_MCS3_DL_Decoder","MCS3 decoder for downlink",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MCS3_DL_Decoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MCS3_DL_Decoder",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MCS3_DL_Decoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PuncScheme","puncturing scheme",
		PARM_INT,
		"_nEDGE_x5fMCS3_x5fDL_x5fDecoder_fPuncSchemeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMCS3_x5fDL_x5fDecoder_fP1","P1")));


create_constant_form ("_nEDGE_x5fMCS2_x5fUL_x5fEncoder_fP1", 
	"P1",
	0,
	"0",
	"P1");

create_constant_form ("_nEDGE_x5fMCS2_x5fUL_x5fEncoder_fP2", 
	"P2",
	0,
	"1",
	"P2");

create_form_set("_nEDGE_x5fMCS2_x5fUL_x5fEncoder_fPuncSchemeSet",
	"_nEDGE_x5fMCS2_x5fUL_x5fEncoder_fP1",
	"_nEDGE_x5fMCS2_x5fUL_x5fEncoder_fP2",
	"StdForm");

create_item ("EDGE_MCS2_UL_Encoder","MCS2 encoder for uplink",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MCS2_UL_Encoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MCS2_UL_Encoder",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MCS2_UL_Encoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PuncScheme","puncturing scheme",
		PARM_INT,
		"_nEDGE_x5fMCS2_x5fUL_x5fEncoder_fPuncSchemeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMCS2_x5fUL_x5fEncoder_fP1","P1")));


create_constant_form ("_nEDGE_x5fMCS2_x5fUL_x5fDecoder_fP1", 
	"P1",
	0,
	"0",
	"P1");

create_constant_form ("_nEDGE_x5fMCS2_x5fUL_x5fDecoder_fP2", 
	"P2",
	0,
	"1",
	"P2");

create_form_set("_nEDGE_x5fMCS2_x5fUL_x5fDecoder_fPuncSchemeSet",
	"_nEDGE_x5fMCS2_x5fUL_x5fDecoder_fP1",
	"_nEDGE_x5fMCS2_x5fUL_x5fDecoder_fP2",
	"StdForm");

create_item ("EDGE_MCS2_UL_Decoder","MCS2 decoder for uplink",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MCS2_UL_Decoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MCS2_UL_Decoder",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MCS2_UL_Decoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PuncScheme","puncturing scheme",
		PARM_INT,
		"_nEDGE_x5fMCS2_x5fUL_x5fDecoder_fPuncSchemeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMCS2_x5fUL_x5fDecoder_fP1","P1")));


create_constant_form ("_nEDGE_x5fMCS2_x5fDL_x5fEncoder_fP1", 
	"P1",
	0,
	"0",
	"P1");

create_constant_form ("_nEDGE_x5fMCS2_x5fDL_x5fEncoder_fP2", 
	"P2",
	0,
	"1",
	"P2");

create_form_set("_nEDGE_x5fMCS2_x5fDL_x5fEncoder_fPuncSchemeSet",
	"_nEDGE_x5fMCS2_x5fDL_x5fEncoder_fP1",
	"_nEDGE_x5fMCS2_x5fDL_x5fEncoder_fP2",
	"StdForm");

create_item ("EDGE_MCS2_DL_Encoder","MCS2 encoder for downlink",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MCS2_DL_Encoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MCS2_DL_Encoder",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MCS2_DL_Encoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PuncScheme","puncturing scheme",
		PARM_INT,
		"_nEDGE_x5fMCS2_x5fDL_x5fEncoder_fPuncSchemeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMCS2_x5fDL_x5fEncoder_fP1","P1")));


create_constant_form ("_nEDGE_x5fMCS2_x5fDL_x5fDecoder_fP1", 
	"P1",
	0,
	"0",
	"P1");

create_constant_form ("_nEDGE_x5fMCS2_x5fDL_x5fDecoder_fP2", 
	"P2",
	0,
	"1",
	"P2");

create_form_set("_nEDGE_x5fMCS2_x5fDL_x5fDecoder_fPuncSchemeSet",
	"_nEDGE_x5fMCS2_x5fDL_x5fDecoder_fP1",
	"_nEDGE_x5fMCS2_x5fDL_x5fDecoder_fP2",
	"StdForm");

create_item ("EDGE_MCS2_DL_Decoder","MCS2 decoder for downlink",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MCS2_DL_Decoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MCS2_DL_Decoder",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MCS2_DL_Decoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PuncScheme","puncturing scheme",
		PARM_INT,
		"_nEDGE_x5fMCS2_x5fDL_x5fDecoder_fPuncSchemeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMCS2_x5fDL_x5fDecoder_fP1","P1")));


create_constant_form ("_nEDGE_x5fMCS1_x5fUL_x5fEncoder_fP1", 
	"P1",
	0,
	"0",
	"P1");

create_constant_form ("_nEDGE_x5fMCS1_x5fUL_x5fEncoder_fP2", 
	"P2",
	0,
	"1",
	"P2");

create_form_set("_nEDGE_x5fMCS1_x5fUL_x5fEncoder_fPuncSchemeSet",
	"_nEDGE_x5fMCS1_x5fUL_x5fEncoder_fP1",
	"_nEDGE_x5fMCS1_x5fUL_x5fEncoder_fP2",
	"StdForm");

create_item ("EDGE_MCS1_UL_Encoder","MCS1 encoder for uplink",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MCS1_UL_Encoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MCS1_UL_Encoder",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MCS1_UL_Encoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PuncScheme","puncturing scheme",
		PARM_INT,
		"_nEDGE_x5fMCS1_x5fUL_x5fEncoder_fPuncSchemeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMCS1_x5fUL_x5fEncoder_fP1","P1")));


create_constant_form ("_nEDGE_x5fMCS1_x5fUL_x5fDecoder_fP1", 
	"P1",
	0,
	"0",
	"P1");

create_constant_form ("_nEDGE_x5fMCS1_x5fUL_x5fDecoder_fP2", 
	"P2",
	0,
	"1",
	"P2");

create_form_set("_nEDGE_x5fMCS1_x5fUL_x5fDecoder_fPuncSchemeSet",
	"_nEDGE_x5fMCS1_x5fUL_x5fDecoder_fP1",
	"_nEDGE_x5fMCS1_x5fUL_x5fDecoder_fP2",
	"StdForm");

create_item ("EDGE_MCS1_UL_Decoder","MCS1 decoder for uplink",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MCS1_UL_Decoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MCS1_UL_Decoder",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MCS1_UL_Decoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PuncScheme","puncturing scheme",
		PARM_INT,
		"_nEDGE_x5fMCS1_x5fUL_x5fDecoder_fPuncSchemeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMCS1_x5fUL_x5fDecoder_fP1","P1")));


create_constant_form ("_nEDGE_x5fMCS1_x5fDL_x5fEncoder_fP1", 
	"P1",
	0,
	"0",
	"P1");

create_constant_form ("_nEDGE_x5fMCS1_x5fDL_x5fEncoder_fP2", 
	"P2",
	0,
	"1",
	"P2");

create_form_set("_nEDGE_x5fMCS1_x5fDL_x5fEncoder_fPuncSchemeSet",
	"_nEDGE_x5fMCS1_x5fDL_x5fEncoder_fP1",
	"_nEDGE_x5fMCS1_x5fDL_x5fEncoder_fP2",
	"StdForm");

create_item ("EDGE_MCS1_DL_Encoder","MCS1 encoder for downlink",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MCS1_DL_Encoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MCS1_DL_Encoder",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MCS1_DL_Encoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PuncScheme","puncturing scheme",
		PARM_INT,
		"_nEDGE_x5fMCS1_x5fDL_x5fEncoder_fPuncSchemeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMCS1_x5fDL_x5fEncoder_fP1","P1")));


create_constant_form ("_nEDGE_x5fMCS1_x5fDL_x5fDecoder_fP1", 
	"P1",
	0,
	"0",
	"P1");

create_constant_form ("_nEDGE_x5fMCS1_x5fDL_x5fDecoder_fP2", 
	"P2",
	0,
	"1",
	"P2");

create_form_set("_nEDGE_x5fMCS1_x5fDL_x5fDecoder_fPuncSchemeSet",
	"_nEDGE_x5fMCS1_x5fDL_x5fDecoder_fP1",
	"_nEDGE_x5fMCS1_x5fDL_x5fDecoder_fP2",
	"StdForm");

create_item ("EDGE_MCS1_DL_Decoder","MCS1 decoder for downlink",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_MCS1_DL_Decoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_MCS1_DL_Decoder",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_MCS1_DL_Decoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PuncScheme","puncturing scheme",
		PARM_INT,
		"_nEDGE_x5fMCS1_x5fDL_x5fDecoder_fPuncSchemeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fMCS1_x5fDL_x5fDecoder_fP1","P1")));


create_constant_form ("_nEDGE_x5fFrequencyErr_ffrequency_x5ferror", 
	"frequency error",
	0,
	"0",
	"frequency error");

create_constant_form ("_nEDGE_x5fFrequencyErr_forigin_x5foffset_x5fsuppression", 
	"origin offset suppression",
	0,
	"1",
	"origin offset suppression");

create_form_set("_nEDGE_x5fFrequencyErr_fMeasTypeSet",
	"_nEDGE_x5fFrequencyErr_ffrequency_x5ferror",
	"_nEDGE_x5fFrequencyErr_forigin_x5foffset_x5fsuppression",
	"StdForm");

create_item ("EDGE_FrequencyErr","Frequency error measurement with reference signal input",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_FrequencyErr",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_FrequencyErr",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_FrequencyErr",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("StartSym","start symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","142")),
	create_parm ("SymBurstLen","number of symbols within burst to be measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","142")),
	create_parm ("SampPerSym","number of samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")),
	create_parm ("SymDelayBound","upper bound of delay detection, in symbol, -1 for no detection",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")),
	create_parm ("NumBursts","number of bursts to be measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","5")),
	create_parm ("MeasType","type of measurement",
		PARM_INT,
		"_nEDGE_x5fFrequencyErr_fMeasTypeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fFrequencyErr_ffrequency_x5ferror","frequency_error")),
	create_parm ("SymbolRate","symbol rate",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","(1625/6) kHz")));


create_constant_form ("_nEDGE_x5fFramedSrc_fBasic", 
	"Basic",
	0,
	"0",
	"Basic");

create_constant_form ("_nEDGE_x5fFramedSrc_fGSM_x5f8_x5f3_x5f0_x5fRelease_x5f1999", 
	"GSM_8_3_0_Release_1999",
	0,
	"1",
	"GSM 8.3.0 Release 1999");

create_form_set("_nEDGE_x5fFramedSrc_fBurstSpecVersionSet",
	"_nEDGE_x5fFramedSrc_fBasic",
	"_nEDGE_x5fFramedSrc_fGSM_x5f8_x5f3_x5f0_x5fRelease_x5f1999",
	"StdForm");

create_constant_form ("_nEDGE_x5fFramedSrc_fPN9_x5ffor_x5ftime_x5fslot0", 
	"PN9 for time slot0",
	0,
	"0",
	"PN9");

create_constant_form ("_nEDGE_x5fFramedSrc_fPN15_x5ffor_x5ftime_x5fslot0", 
	"PN15 for time slot0",
	0,
	"1",
	"PN15");

create_constant_form ("_nEDGE_x5fFramedSrc_fFIX4_x5ffor_x5ftime_x5fslot0", 
	"FIX4 for time slot0",
	0,
	"2",
	"FIX4");

create_constant_form ("_nEDGE_x5fFramedSrc_f_x5f4_x5f1_x5f4_x5f0_x5ffor_x5ftime_x5fslot0", 
	"_4_1_4_0 for time slot0",
	0,
	"3",
	"_4_1_4_0");

create_constant_form ("_nEDGE_x5fFramedSrc_f_x5f8_x5f1_x5f8_x5f0_x5ffor_x5ftime_x5fslot0", 
	"_8_1_8_0 for time slot0",
	0,
	"4",
	"_8_1_8_0");

create_constant_form ("_nEDGE_x5fFramedSrc_f_x5f16_x5f1_x5f16_x5f0_x5ffor_x5ftime_x5fslot0", 
	"_16_1_16_0 for time slot0",
	0,
	"5",
	"_16_1_16_0");

create_constant_form ("_nEDGE_x5fFramedSrc_f_x5f32_x5f1_x5f32_x5f0_x5ffor_x5ftime_x5fslot0", 
	"_32_1_32_0 for time slot0",
	0,
	"6",
	"_32_1_32_0");

create_constant_form ("_nEDGE_x5fFramedSrc_f_x5f64_x5f1_x5f64_x5f0_x5ffor_x5ftime_x5fslot0", 
	"_64_1_64_0 for time slot0",
	0,
	"7",
	"_64_1_64_0");

create_form_set("_nEDGE_x5fFramedSrc_fDataPattern0Set",
	"_nEDGE_x5fFramedSrc_fPN9_x5ffor_x5ftime_x5fslot0",
	"_nEDGE_x5fFramedSrc_fPN15_x5ffor_x5ftime_x5fslot0",
	"_nEDGE_x5fFramedSrc_fFIX4_x5ffor_x5ftime_x5fslot0",
	"_nEDGE_x5fFramedSrc_f_x5f4_x5f1_x5f4_x5f0_x5ffor_x5ftime_x5fslot0",
	"_nEDGE_x5fFramedSrc_f_x5f8_x5f1_x5f8_x5f0_x5ffor_x5ftime_x5fslot0",
	"_nEDGE_x5fFramedSrc_f_x5f16_x5f1_x5f16_x5f0_x5ffor_x5ftime_x5fslot0",
	"_nEDGE_x5fFramedSrc_f_x5f32_x5f1_x5f32_x5f0_x5ffor_x5ftime_x5fslot0",
	"_nEDGE_x5fFramedSrc_f_x5f64_x5f1_x5f64_x5f0_x5ffor_x5ftime_x5fslot0",
	"StdForm");

create_constant_form ("_nEDGE_x5fFramedSrc_fPN9_x5ffor_x5ftime_x5fslot1", 
	"PN9 for time slot1",
	0,
	"0",
	"PN9");

create_constant_form ("_nEDGE_x5fFramedSrc_fPN15_x5ffor_x5ftime_x5fslot1", 
	"PN15 for time slot1",
	0,
	"1",
	"PN15");

create_constant_form ("_nEDGE_x5fFramedSrc_fFIX4_x5ffor_x5ftime_x5fslot1", 
	"FIX4 for time slot1",
	0,
	"2",
	"FIX4");

create_constant_form ("_nEDGE_x5fFramedSrc_f_x5f4_x5f1_x5f4_x5f0_x5ffor_x5ftime_x5fslot1", 
	"_4_1_4_0 for time slot1",
	0,
	"3",
	"_4_1_4_0");

create_constant_form ("_nEDGE_x5fFramedSrc_f_x5f8_x5f1_x5f8_x5f0_x5ffor_x5ftime_x5fslot1", 
	"_8_1_8_0 for time slot1",
	0,
	"4",
	"_8_1_8_0");

create_constant_form ("_nEDGE_x5fFramedSrc_f_x5f16_x5f1_x5f16_x5f0_x5ffor_x5ftime_x5fslot1", 
	"_16_1_16_0 for time slot1",
	0,
	"5",
	"_16_1_16_0");

create_constant_form ("_nEDGE_x5fFramedSrc_f_x5f32_x5f1_x5f32_x5f0_x5ffor_x5ftime_x5fslot1", 
	"_32_1_32_0 for time slot1",
	0,
	"6",
	"_32_1_32_0");

create_constant_form ("_nEDGE_x5fFramedSrc_f_x5f64_x5f1_x5f64_x5f0_x5ffor_x5ftime_x5fslot1", 
	"_64_1_64_0 for time slot1",
	0,
	"7",
	"_64_1_64_0");

create_form_set("_nEDGE_x5fFramedSrc_fDataPattern1Set",
	"_nEDGE_x5fFramedSrc_fPN9_x5ffor_x5ftime_x5fslot1",
	"_nEDGE_x5fFramedSrc_fPN15_x5ffor_x5ftime_x5fslot1",
	"_nEDGE_x5fFramedSrc_fFIX4_x5ffor_x5ftime_x5fslot1",
	"_nEDGE_x5fFramedSrc_f_x5f4_x5f1_x5f4_x5f0_x5ffor_x5ftime_x5fslot1",
	"_nEDGE_x5fFramedSrc_f_x5f8_x5f1_x5f8_x5f0_x5ffor_x5ftime_x5fslot1",
	"_nEDGE_x5fFramedSrc_f_x5f16_x5f1_x5f16_x5f0_x5ffor_x5ftime_x5fslot1",
	"_nEDGE_x5fFramedSrc_f_x5f32_x5f1_x5f32_x5f0_x5ffor_x5ftime_x5fslot1",
	"_nEDGE_x5fFramedSrc_f_x5f64_x5f1_x5f64_x5f0_x5ffor_x5ftime_x5fslot1",
	"StdForm");

create_constant_form ("_nEDGE_x5fFramedSrc_fPN9_x5ffor_x5ftime_x5fslot2", 
	"PN9 for time slot2",
	0,
	"0",
	"PN9");

create_constant_form ("_nEDGE_x5fFramedSrc_fPN15_x5ffor_x5ftime_x5fslot2", 
	"PN15 for time slot2",
	0,
	"1",
	"PN15");

create_constant_form ("_nEDGE_x5fFramedSrc_fFIX4_x5ffor_x5ftime_x5fslot2", 
	"FIX4 for time slot2",
	0,
	"2",
	"FIX4");

create_constant_form ("_nEDGE_x5fFramedSrc_f_x5f4_x5f1_x5f4_x5f0_x5ffor_x5ftime_x5fslot2", 
	"_4_1_4_0 for time slot2",
	0,
	"3",
	"_4_1_4_0");

create_constant_form ("_nEDGE_x5fFramedSrc_f_x5f8_x5f1_x5f8_x5f0_x5ffor_x5ftime_x5fslot2", 
	"_8_1_8_0 for time slot2",
	0,
	"4",
	"_8_1_8_0");

create_constant_form ("_nEDGE_x5fFramedSrc_f_x5f16_x5f1_x5f16_x5f0_x5ffor_x5ftime_x5fslot2", 
	"_16_1_16_0 for time slot2",
	0,
	"5",
	"_16_1_16_0");

create_constant_form ("_nEDGE_x5fFramedSrc_f_x5f32_x5f1_x5f32_x5f0_x5ffor_x5ftime_x5fslot2", 
	"_32_1_32_0 for time slot2",
	0,
	"6",
	"_32_1_32_0");

create_constant_form ("_nEDGE_x5fFramedSrc_f_x5f64_x5f1_x5f64_x5f0_x5ffor_x5ftime_x5fslot2", 
	"_64_1_64_0 for time slot2",
	0,
	"7",
	"_64_1_64_0");

create_form_set("_nEDGE_x5fFramedSrc_fDataPattern2Set",
	"_nEDGE_x5fFramedSrc_fPN9_x5ffor_x5ftime_x5fslot2",
	"_nEDGE_x5fFramedSrc_fPN15_x5ffor_x5ftime_x5fslot2",
	"_nEDGE_x5fFramedSrc_fFIX4_x5ffor_x5ftime_x5fslot2",
	"_nEDGE_x5fFramedSrc_f_x5f4_x5f1_x5f4_x5f0_x5ffor_x5ftime_x5fslot2",
	"_nEDGE_x5fFramedSrc_f_x5f8_x5f1_x5f8_x5f0_x5ffor_x5ftime_x5fslot2",
	"_nEDGE_x5fFramedSrc_f_x5f16_x5f1_x5f16_x5f0_x5ffor_x5ftime_x5fslot2",
	"_nEDGE_x5fFramedSrc_f_x5f32_x5f1_x5f32_x5f0_x5ffor_x5ftime_x5fslot2",
	"_nEDGE_x5fFramedSrc_f_x5f64_x5f1_x5f64_x5f0_x5ffor_x5ftime_x5fslot2",
	"StdForm");

create_constant_form ("_nEDGE_x5fFramedSrc_fPN9_x5ffor_x5ftime_x5fslot3", 
	"PN9 for time slot3",
	0,
	"0",
	"PN9");

create_constant_form ("_nEDGE_x5fFramedSrc_fPN15_x5ffor_x5ftime_x5fslot3", 
	"PN15 for time slot3",
	0,
	"1",
	"PN15");

create_constant_form ("_nEDGE_x5fFramedSrc_fFIX4_x5ffor_x5ftime_x5fslot3", 
	"FIX4 for time slot3",
	0,
	"2",
	"FIX4");

create_constant_form ("_nEDGE_x5fFramedSrc_f_x5f4_x5f1_x5f4_x5f0_x5ffor_x5ftime_x5fslot3", 
	"_4_1_4_0 for time slot3",
	0,
	"3",
	"_4_1_4_0");

create_constant_form ("_nEDGE_x5fFramedSrc_f_x5f8_x5f1_x5f8_x5f0_x5ffor_x5ftime_x5fslot3", 
	"_8_1_8_0 for time slot3",
	0,
	"4",
	"_8_1_8_0");

create_constant_form ("_nEDGE_x5fFramedSrc_f_x5f16_x5f1_x5f16_x5f0_x5ffor_x5ftime_x5fslot3", 
	"_16_1_16_0 for time slot3",
	0,
	"5",
	"_16_1_16_0");

create_constant_form ("_nEDGE_x5fFramedSrc_f_x5f32_x5f1_x5f32_x5f0_x5ffor_x5ftime_x5fslot3", 
	"_32_1_32_0 for time slot3",
	0,
	"6",
	"_32_1_32_0");

create_constant_form ("_nEDGE_x5fFramedSrc_f_x5f64_x5f1_x5f64_x5f0_x5ffor_x5ftime_x5fslot3", 
	"_64_1_64_0 for time slot3",
	0,
	"7",
	"_64_1_64_0");

create_form_set("_nEDGE_x5fFramedSrc_fDataPattern3Set",
	"_nEDGE_x5fFramedSrc_fPN9_x5ffor_x5ftime_x5fslot3",
	"_nEDGE_x5fFramedSrc_fPN15_x5ffor_x5ftime_x5fslot3",
	"_nEDGE_x5fFramedSrc_fFIX4_x5ffor_x5ftime_x5fslot3",
	"_nEDGE_x5fFramedSrc_f_x5f4_x5f1_x5f4_x5f0_x5ffor_x5ftime_x5fslot3",
	"_nEDGE_x5fFramedSrc_f_x5f8_x5f1_x5f8_x5f0_x5ffor_x5ftime_x5fslot3",
	"_nEDGE_x5fFramedSrc_f_x5f16_x5f1_x5f16_x5f0_x5ffor_x5ftime_x5fslot3",
	"_nEDGE_x5fFramedSrc_f_x5f32_x5f1_x5f32_x5f0_x5ffor_x5ftime_x5fslot3",
	"_nEDGE_x5fFramedSrc_f_x5f64_x5f1_x5f64_x5f0_x5ffor_x5ftime_x5fslot3",
	"StdForm");

create_constant_form ("_nEDGE_x5fFramedSrc_fPN9_x5ffor_x5ftime_x5fslot4", 
	"PN9 for time slot4",
	0,
	"0",
	"PN9");

create_constant_form ("_nEDGE_x5fFramedSrc_fPN15_x5ffor_x5ftime_x5fslot4", 
	"PN15 for time slot4",
	0,
	"1",
	"PN15");

create_constant_form ("_nEDGE_x5fFramedSrc_fFIX4_x5ffor_x5ftime_x5fslot4", 
	"FIX4 for time slot4",
	0,
	"2",
	"FIX4");

create_constant_form ("_nEDGE_x5fFramedSrc_f_x5f4_x5f1_x5f4_x5f0_x5ffor_x5ftime_x5fslot4", 
	"_4_1_4_0 for time slot4",
	0,
	"3",
	"_4_1_4_0");

create_constant_form ("_nEDGE_x5fFramedSrc_f_x5f8_x5f1_x5f8_x5f0_x5ffor_x5ftime_x5fslot4", 
	"_8_1_8_0 for time slot4",
	0,
	"4",
	"_8_1_8_0");

create_constant_form ("_nEDGE_x5fFramedSrc_f_x5f16_x5f1_x5f16_x5f0_x5ffor_x5ftime_x5fslot4", 
	"_16_1_16_0 for time slot4",
	0,
	"5",
	"_16_1_16_0");

create_constant_form ("_nEDGE_x5fFramedSrc_f_x5f32_x5f1_x5f32_x5f0_x5ffor_x5ftime_x5fslot4", 
	"_32_1_32_0 for time slot4",
	0,
	"6",
	"_32_1_32_0");

create_constant_form ("_nEDGE_x5fFramedSrc_f_x5f64_x5f1_x5f64_x5f0_x5ffor_x5ftime_x5fslot4", 
	"_64_1_64_0 for time slot4",
	0,
	"7",
	"_64_1_64_0");

create_form_set("_nEDGE_x5fFramedSrc_fDataPattern4Set",
	"_nEDGE_x5fFramedSrc_fPN9_x5ffor_x5ftime_x5fslot4",
	"_nEDGE_x5fFramedSrc_fPN15_x5ffor_x5ftime_x5fslot4",
	"_nEDGE_x5fFramedSrc_fFIX4_x5ffor_x5ftime_x5fslot4",
	"_nEDGE_x5fFramedSrc_f_x5f4_x5f1_x5f4_x5f0_x5ffor_x5ftime_x5fslot4",
	"_nEDGE_x5fFramedSrc_f_x5f8_x5f1_x5f8_x5f0_x5ffor_x5ftime_x5fslot4",
	"_nEDGE_x5fFramedSrc_f_x5f16_x5f1_x5f16_x5f0_x5ffor_x5ftime_x5fslot4",
	"_nEDGE_x5fFramedSrc_f_x5f32_x5f1_x5f32_x5f0_x5ffor_x5ftime_x5fslot4",
	"_nEDGE_x5fFramedSrc_f_x5f64_x5f1_x5f64_x5f0_x5ffor_x5ftime_x5fslot4",
	"StdForm");

create_constant_form ("_nEDGE_x5fFramedSrc_fPN9_x5ffor_x5ftime_x5fslot5", 
	"PN9 for time slot5",
	0,
	"0",
	"PN9");

create_constant_form ("_nEDGE_x5fFramedSrc_fPN15_x5ffor_x5ftime_x5fslot5", 
	"PN15 for time slot5",
	0,
	"1",
	"PN15");

create_constant_form ("_nEDGE_x5fFramedSrc_fFIX4_x5ffor_x5ftime_x5fslot5", 
	"FIX4 for time slot5",
	0,
	"2",
	"FIX4");

create_constant_form ("_nEDGE_x5fFramedSrc_f_x5f4_x5f1_x5f4_x5f0_x5ffor_x5ftime_x5fslot5", 
	"_4_1_4_0 for time slot5",
	0,
	"3",
	"_4_1_4_0");

create_constant_form ("_nEDGE_x5fFramedSrc_f_x5f8_x5f1_x5f8_x5f0_x5ffor_x5ftime_x5fslot5", 
	"_8_1_8_0 for time slot5",
	0,
	"4",
	"_8_1_8_0");

create_constant_form ("_nEDGE_x5fFramedSrc_f_x5f16_x5f1_x5f16_x5f0_x5ffor_x5ftime_x5fslot5", 
	"_16_1_16_0 for time slot5",
	0,
	"5",
	"_16_1_16_0");

create_constant_form ("_nEDGE_x5fFramedSrc_f_x5f32_x5f1_x5f32_x5f0_x5ffor_x5ftime_x5fslot5", 
	"_32_1_32_0 for time slot5",
	0,
	"6",
	"_32_1_32_0");

create_constant_form ("_nEDGE_x5fFramedSrc_f_x5f64_x5f1_x5f64_x5f0_x5ffor_x5ftime_x5fslot5", 
	"_64_1_64_0 for time slot5",
	0,
	"7",
	"_64_1_64_0");

create_form_set("_nEDGE_x5fFramedSrc_fDataPattern5Set",
	"_nEDGE_x5fFramedSrc_fPN9_x5ffor_x5ftime_x5fslot5",
	"_nEDGE_x5fFramedSrc_fPN15_x5ffor_x5ftime_x5fslot5",
	"_nEDGE_x5fFramedSrc_fFIX4_x5ffor_x5ftime_x5fslot5",
	"_nEDGE_x5fFramedSrc_f_x5f4_x5f1_x5f4_x5f0_x5ffor_x5ftime_x5fslot5",
	"_nEDGE_x5fFramedSrc_f_x5f8_x5f1_x5f8_x5f0_x5ffor_x5ftime_x5fslot5",
	"_nEDGE_x5fFramedSrc_f_x5f16_x5f1_x5f16_x5f0_x5ffor_x5ftime_x5fslot5",
	"_nEDGE_x5fFramedSrc_f_x5f32_x5f1_x5f32_x5f0_x5ffor_x5ftime_x5fslot5",
	"_nEDGE_x5fFramedSrc_f_x5f64_x5f1_x5f64_x5f0_x5ffor_x5ftime_x5fslot5",
	"StdForm");

create_constant_form ("_nEDGE_x5fFramedSrc_fPN9_x5ffor_x5ftime_x5fslot6", 
	"PN9 for time slot6",
	0,
	"0",
	"PN9");

create_constant_form ("_nEDGE_x5fFramedSrc_fPN15_x5ffor_x5ftime_x5fslot6", 
	"PN15 for time slot6",
	0,
	"1",
	"PN15");

create_constant_form ("_nEDGE_x5fFramedSrc_fFIX4_x5ffor_x5ftime_x5fslot6", 
	"FIX4 for time slot6",
	0,
	"2",
	"FIX4");

create_constant_form ("_nEDGE_x5fFramedSrc_f_x5f4_x5f1_x5f4_x5f0_x5ffor_x5ftime_x5fslot6", 
	"_4_1_4_0 for time slot6",
	0,
	"3",
	"_4_1_4_0");

create_constant_form ("_nEDGE_x5fFramedSrc_f_x5f8_x5f1_x5f8_x5f0_x5ffor_x5ftime_x5fslot6", 
	"_8_1_8_0 for time slot6",
	0,
	"4",
	"_8_1_8_0");

create_constant_form ("_nEDGE_x5fFramedSrc_f_x5f16_x5f1_x5f16_x5f0_x5ffor_x5ftime_x5fslot6", 
	"_16_1_16_0 for time slot6",
	0,
	"5",
	"_16_1_16_0");

create_constant_form ("_nEDGE_x5fFramedSrc_f_x5f32_x5f1_x5f32_x5f0_x5ffor_x5ftime_x5fslot6", 
	"_32_1_32_0 for time slot6",
	0,
	"6",
	"_32_1_32_0");

create_constant_form ("_nEDGE_x5fFramedSrc_f_x5f64_x5f1_x5f64_x5f0_x5ffor_x5ftime_x5fslot6", 
	"_64_1_64_0 for time slot6",
	0,
	"7",
	"_64_1_64_0");

create_form_set("_nEDGE_x5fFramedSrc_fDataPattern6Set",
	"_nEDGE_x5fFramedSrc_fPN9_x5ffor_x5ftime_x5fslot6",
	"_nEDGE_x5fFramedSrc_fPN15_x5ffor_x5ftime_x5fslot6",
	"_nEDGE_x5fFramedSrc_fFIX4_x5ffor_x5ftime_x5fslot6",
	"_nEDGE_x5fFramedSrc_f_x5f4_x5f1_x5f4_x5f0_x5ffor_x5ftime_x5fslot6",
	"_nEDGE_x5fFramedSrc_f_x5f8_x5f1_x5f8_x5f0_x5ffor_x5ftime_x5fslot6",
	"_nEDGE_x5fFramedSrc_f_x5f16_x5f1_x5f16_x5f0_x5ffor_x5ftime_x5fslot6",
	"_nEDGE_x5fFramedSrc_f_x5f32_x5f1_x5f32_x5f0_x5ffor_x5ftime_x5fslot6",
	"_nEDGE_x5fFramedSrc_f_x5f64_x5f1_x5f64_x5f0_x5ffor_x5ftime_x5fslot6",
	"StdForm");

create_constant_form ("_nEDGE_x5fFramedSrc_fPN9_x5ffor_x5ftime_x5fslot7", 
	"PN9 for time slot7",
	0,
	"0",
	"PN9");

create_constant_form ("_nEDGE_x5fFramedSrc_fPN15_x5ffor_x5ftime_x5fslot7", 
	"PN15 for time slot7",
	0,
	"1",
	"PN15");

create_constant_form ("_nEDGE_x5fFramedSrc_fFIX4_x5ffor_x5ftime_x5fslot7", 
	"FIX4 for time slot7",
	0,
	"2",
	"FIX4");

create_constant_form ("_nEDGE_x5fFramedSrc_f_x5f4_x5f1_x5f4_x5f0_x5ffor_x5ftime_x5fslot7", 
	"_4_1_4_0 for time slot7",
	0,
	"3",
	"_4_1_4_0");

create_constant_form ("_nEDGE_x5fFramedSrc_f_x5f8_x5f1_x5f8_x5f0_x5ffor_x5ftime_x5fslot7", 
	"_8_1_8_0 for time slot7",
	0,
	"4",
	"_8_1_8_0");

create_constant_form ("_nEDGE_x5fFramedSrc_f_x5f16_x5f1_x5f16_x5f0_x5ffor_x5ftime_x5fslot7", 
	"_16_1_16_0 for time slot7",
	0,
	"5",
	"_16_1_16_0");

create_constant_form ("_nEDGE_x5fFramedSrc_f_x5f32_x5f1_x5f32_x5f0_x5ffor_x5ftime_x5fslot7", 
	"_32_1_32_0 for time slot7",
	0,
	"6",
	"_32_1_32_0");

create_constant_form ("_nEDGE_x5fFramedSrc_f_x5f64_x5f1_x5f64_x5f0_x5ffor_x5ftime_x5fslot7", 
	"_64_1_64_0 for time slot7",
	0,
	"7",
	"_64_1_64_0");

create_form_set("_nEDGE_x5fFramedSrc_fDataPattern7Set",
	"_nEDGE_x5fFramedSrc_fPN9_x5ffor_x5ftime_x5fslot7",
	"_nEDGE_x5fFramedSrc_fPN15_x5ffor_x5ftime_x5fslot7",
	"_nEDGE_x5fFramedSrc_fFIX4_x5ffor_x5ftime_x5fslot7",
	"_nEDGE_x5fFramedSrc_f_x5f4_x5f1_x5f4_x5f0_x5ffor_x5ftime_x5fslot7",
	"_nEDGE_x5fFramedSrc_f_x5f8_x5f1_x5f8_x5f0_x5ffor_x5ftime_x5fslot7",
	"_nEDGE_x5fFramedSrc_f_x5f16_x5f1_x5f16_x5f0_x5ffor_x5ftime_x5fslot7",
	"_nEDGE_x5fFramedSrc_f_x5f32_x5f1_x5f32_x5f0_x5ffor_x5ftime_x5fslot7",
	"_nEDGE_x5fFramedSrc_f_x5f64_x5f1_x5f64_x5f0_x5ffor_x5ftime_x5fslot7",
	"StdForm");

create_constant_form ("_nEDGE_x5fFramedSrc_fNone", 
	"None",
	0,
	"0",
	"None");

create_constant_form ("_nEDGE_x5fFramedSrc_fLinear", 
	"Linear",
	0,
	"1",
	"Linear");

create_constant_form ("_nEDGE_x5fFramedSrc_fCosine", 
	"Cosine",
	0,
	"2",
	"Cosine");

create_form_set("_nEDGE_x5fFramedSrc_fPwrTypeSet",
	"_nEDGE_x5fFramedSrc_fNone",
	"_nEDGE_x5fFramedSrc_fLinear",
	"_nEDGE_x5fFramedSrc_fCosine",
	"StdForm");

create_constant_form ("_nEDGE_x5fFramedSrc_fNO", 
	"NO",
	0,
	"0",
	"NO");

create_constant_form ("_nEDGE_x5fFramedSrc_fYES", 
	"YES",
	0,
	"1",
	"YES");

create_form_set("_nEDGE_x5fFramedSrc_fContinuesSet",
	"_nEDGE_x5fFramedSrc_fNO",
	"_nEDGE_x5fFramedSrc_fYES",
	"StdForm");

create_item ("EDGE_FramedSrc","Framed signal source",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_FramedSrc",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_FramedSrc",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_FramedSrc",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("BurstSpecVersion","EDGE specification for normal burst if choose Basic, each burst has 156 symbols, otherwise complys with GSM 8.3.0 Release 1999",
		PARM_INT,
		"_nEDGE_x5fFramedSrc_fBurstSpecVersionSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fFramedSrc_fBasic","Basic")),
	create_parm ("SampPerSym","number of samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("TS_State","state of each time slot 0 for idle, 1 for active",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"1 1 1 1 1 1 1 1\"")),
	create_parm ("TS_Type","type of data in each time slot 0 for non-framed data,1 for framed data",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"1 1 1 1 1 1 1 1 \"")),
	create_parm ("DataPattern0","data pattern of time slot 0",
		PARM_INT,
		"_nEDGE_x5fFramedSrc_fDataPattern0Set",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fFramedSrc_fPN9_x5ffor_x5ftime_x5fslot0","PN9_for_time_slot0")),
	create_parm ("DataPattern1","data pattern of time slot 1",
		PARM_INT,
		"_nEDGE_x5fFramedSrc_fDataPattern1Set",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fFramedSrc_fPN9_x5ffor_x5ftime_x5fslot1","PN9_for_time_slot1")),
	create_parm ("DataPattern2","data pattern of time slot 2",
		PARM_INT,
		"_nEDGE_x5fFramedSrc_fDataPattern2Set",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fFramedSrc_fPN9_x5ffor_x5ftime_x5fslot2","PN9_for_time_slot2")),
	create_parm ("DataPattern3","data pattern of time slot 3",
		PARM_INT,
		"_nEDGE_x5fFramedSrc_fDataPattern3Set",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fFramedSrc_fPN9_x5ffor_x5ftime_x5fslot3","PN9_for_time_slot3")),
	create_parm ("DataPattern4","data pattern of time slot 4",
		PARM_INT,
		"_nEDGE_x5fFramedSrc_fDataPattern4Set",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fFramedSrc_fPN9_x5ffor_x5ftime_x5fslot4","PN9_for_time_slot4")),
	create_parm ("DataPattern5","data pattern of time slot 5",
		PARM_INT,
		"_nEDGE_x5fFramedSrc_fDataPattern5Set",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fFramedSrc_fPN9_x5ffor_x5ftime_x5fslot5","PN9_for_time_slot5")),
	create_parm ("DataPattern6","data pattern of time slot 6",
		PARM_INT,
		"_nEDGE_x5fFramedSrc_fDataPattern6Set",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fFramedSrc_fPN9_x5ffor_x5ftime_x5fslot6","PN9_for_time_slot6")),
	create_parm ("DataPattern7","data pattern of time slot 7",
		PARM_INT,
		"_nEDGE_x5fFramedSrc_fDataPattern7Set",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fFramedSrc_fPN9_x5ffor_x5ftime_x5fslot7","PN9_for_time_slot7")),
	create_parm ("PwrType","power on and power off type",
		PARM_INT,
		"_nEDGE_x5fFramedSrc_fPwrTypeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fFramedSrc_fNone","None")),
	create_parm ("RampLength","power on and power off length",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("RampUpScramble","scramble of ramp up function",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"1 1 1 1\"")),
	create_parm ("RampDownScramble","scramble of ramp down function",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"1 1 1 1\"")),
	create_parm ("Continues","adding ramp between active slots or not",
		PARM_INT,
		"_nEDGE_x5fFramedSrc_fContinuesSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fFramedSrc_fNO","NO")));


create_constant_form ("_nEDGE_x5fEVM_fEVM_x5frms", 
	"EVM_rms",
	0,
	"0",
	"EVM_rms");

create_constant_form ("_nEDGE_x5fEVM_fEVM_x5fpeak", 
	"EVM_peak",
	0,
	"1",
	"EVM_peak");

create_constant_form ("_nEDGE_x5fEVM_fEVM_x5f95th_x5fpercentile", 
	"EVM_95th_percentile",
	0,
	"2",
	"EVM_95th_percentile");

create_form_set("_nEDGE_x5fEVM_fMeasTypeSet",
	"_nEDGE_x5fEVM_fEVM_x5frms",
	"_nEDGE_x5fEVM_fEVM_x5fpeak",
	"_nEDGE_x5fEVM_fEVM_x5f95th_x5fpercentile",
	"StdForm");

create_constant_form ("_nEDGE_x5fEVM_fEVM_x5fRatio", 
	"EVM_Ratio",
	0,
	"0",
	"EVM as ratio");

create_constant_form ("_nEDGE_x5fEVM_fEVM_x5fPercent", 
	"EVM_Percent",
	0,
	"1",
	"EVM as percent");

create_form_set("_nEDGE_x5fEVM_fEVMValueSet",
	"_nEDGE_x5fEVM_fEVM_x5fRatio",
	"_nEDGE_x5fEVM_fEVM_x5fPercent",
	"StdForm");

create_item ("EDGE_EVM","Single-path EVM measurement for EDGE",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_EVM",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_EVM",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_EVM",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("StartSym","start symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","142")),
	create_parm ("SymBurstLen","number of symbols within burst to be measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","142")),
	create_parm ("SampPerSym","number of samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")),
	create_parm ("NumBursts","number of bursts to be measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","5")),
	create_parm ("MeasType","type of measurement",
		PARM_INT,
		"_nEDGE_x5fEVM_fMeasTypeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fEVM_fEVM_x5frms","EVM_rms")),
	create_parm ("SymbolRate","symbol rate",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","(1625/6) kHz")),
	create_parm ("EVMValue","EVM value expression options",
		PARM_INT,
		"_nEDGE_x5fEVM_fEVMValueSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fEVM_fEVM_x5fRatio","EVM_Ratio")));


create_item ("EDGE_ESG_Sync","Synchronization for ESG",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_ESG_Sync",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_ESG_Sync",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_ESG_Sync",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SampPerSym","number of samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")));


create_constant_form ("_nEDGE_x5fEqualizerAB_fModified_x5f8PSK", 
	"Modified 8PSK",
	0,
	"0",
	"Modified 8PSK");

create_constant_form ("_nEDGE_x5fEqualizerAB_fGMSK", 
	"GMSK",
	0,
	"1",
	"GMSK");

create_form_set("_nEDGE_x5fEqualizerAB_fModTypeSet",
	"_nEDGE_x5fEqualizerAB_fModified_x5f8PSK",
	"_nEDGE_x5fEqualizerAB_fGMSK",
	"StdForm");

create_constant_form ("_nEDGE_x5fEqualizerAB_fMLSE", 
	"MLSE",
	0,
	"0",
	"MLSE");

create_constant_form ("_nEDGE_x5fEqualizerAB_fRSSE", 
	"RSSE",
	0,
	"1",
	"RSSE");

create_form_set("_nEDGE_x5fEqualizerAB_fAlgorithmSet",
	"_nEDGE_x5fEqualizerAB_fMLSE",
	"_nEDGE_x5fEqualizerAB_fRSSE",
	"StdForm");

create_item ("EDGE_EqualizerAB","Adaptive equalizer for access bursts",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_EqualizerAB",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_EqualizerAB",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_EqualizerAB",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("ModType","modulation type",
		PARM_INT,
		"_nEDGE_x5fEqualizerAB_fModTypeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fEqualizerAB_fModified_x5f8PSK","Modified_8PSK")),
	create_parm ("TSC","training sequence code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("Algorithm","equalization algorithm",
		PARM_INT,
		"_nEDGE_x5fEqualizerAB_fAlgorithmSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fEqualizerAB_fRSSE","RSSE")),
	create_parm ("MaxDelay","maximum delay of channel in symbol duration units",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","5")),
	create_parm ("PartitionArray","array of number of subsets used in each stage of RSSE",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"8 4 2 1 1\"")));


create_constant_form ("_nEDGE_x5fEqualizer_fNormal_x5fBurst", 
	"Normal Burst",
	0,
	"0",
	"Normal Burst");

create_constant_form ("_nEDGE_x5fEqualizer_fSynchronization_x5fBurst", 
	"Synchronization Burst",
	0,
	"1",
	"Synchronization Burst");

create_form_set("_nEDGE_x5fEqualizer_fBurstTypeSet",
	"_nEDGE_x5fEqualizer_fNormal_x5fBurst",
	"_nEDGE_x5fEqualizer_fSynchronization_x5fBurst",
	"StdForm");

create_constant_form ("_nEDGE_x5fEqualizer_fModified_x5f8PSK", 
	"Modified 8PSK",
	0,
	"0",
	"Modified 8PSK");

create_constant_form ("_nEDGE_x5fEqualizer_fGMSK", 
	"GMSK",
	0,
	"1",
	"GMSK");

create_form_set("_nEDGE_x5fEqualizer_fModTypeSet",
	"_nEDGE_x5fEqualizer_fModified_x5f8PSK",
	"_nEDGE_x5fEqualizer_fGMSK",
	"StdForm");

create_constant_form ("_nEDGE_x5fEqualizer_fMLSE", 
	"MLSE",
	0,
	"0",
	"MLSE");

create_constant_form ("_nEDGE_x5fEqualizer_fRSSE", 
	"RSSE",
	0,
	"1",
	"RSSE");

create_form_set("_nEDGE_x5fEqualizer_fAlgorithmSet",
	"_nEDGE_x5fEqualizer_fMLSE",
	"_nEDGE_x5fEqualizer_fRSSE",
	"StdForm");

create_item ("EDGE_Equalizer","Adaptive equalizer for normal and synchronization bursts",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_Equalizer",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_Equalizer",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_Equalizer",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("BurstType","burst type",
		PARM_INT,
		"_nEDGE_x5fEqualizer_fBurstTypeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fEqualizer_fNormal_x5fBurst","Normal_Burst")),
	create_parm ("ModType","modulation type",
		PARM_INT,
		"_nEDGE_x5fEqualizer_fModTypeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fEqualizer_fModified_x5f8PSK","Modified_8PSK")),
	create_parm ("TSC","training sequence code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("Algorithm","equalization algorithm",
		PARM_INT,
		"_nEDGE_x5fEqualizer_fAlgorithmSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fEqualizer_fRSSE","RSSE")),
	create_parm ("MaxDelay","maximum delay of channel in symbol duration units",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","5")),
	create_parm ("PartitionArray","array of number of subsets used in each stage of RSSE",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"8 4 2 1 1\"")));


create_item ("EDGE_DeTDMA","TDMA frame disassembly",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_DeTDMA",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_DeTDMA",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_DeTDMA",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("BitsPerSlot","number of bits per time slot",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","468")));


create_constant_form ("_nEDGE_x5fBitSync_fNormal_x5fBurst", 
	"Normal Burst",
	0,
	"0",
	"Normal Burst");

create_constant_form ("_nEDGE_x5fBitSync_fSynchronization_x5fBurst", 
	"Synchronization Burst",
	0,
	"1",
	"Synchronization Burst");

create_constant_form ("_nEDGE_x5fBitSync_fAccess_x5fBurst", 
	"Access Burst",
	0,
	"2",
	"Access Burst");

create_form_set("_nEDGE_x5fBitSync_fBurstTypeSet",
	"_nEDGE_x5fBitSync_fNormal_x5fBurst",
	"_nEDGE_x5fBitSync_fSynchronization_x5fBurst",
	"_nEDGE_x5fBitSync_fAccess_x5fBurst",
	"StdForm");

create_item ("EDGE_BitSync","Bit synchronization for 8PSK modulated bursts",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_BitSync",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_BitSync",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_BitSync",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("BurstType","burst type",
		PARM_INT,
		"_nEDGE_x5fBitSync_fBurstTypeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fBitSync_fNormal_x5fBurst","Normal_Burst")),
	create_parm ("SampPerSym","number of samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("TSC","training sequence code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")));


create_item ("EDGE_8PSKMod","Generation of 8PSK modulated signal",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EDGE_8PSKMod",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EDGE_8PSKMod",
	SPDesignAnnotFmt,
	"SYM_DSN_EDGE_8PSKMod",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SampPerSym","number of samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")));
