de_define_library_palette( "EDGE", SCHEM_WIN, "sigproc_net",
	"EDGE BTS Test and Verification", "EDGE BTS Test and Verification", -1,
	 list( "EDGE", "EDGE_BLER", NULL, "Block error rate performance measurement", "BMP_EDGE_BLER" ),
	 list( "EDGE", "EDGE_BTS_MCS5_Receiver", NULL, "EDGE BTS MCS5 receiver", "BMP_EDGE_BTS_MCS5_Receiver" ),
	 list( "EDGE", "EDGE_BTS_MCS6_Receiver", NULL, "EDGE BTS MCS6 receiver", "BMP_EDGE_BTS_MCS6_Receiver" ),
	 list( "EDGE", "EDGE_BTS_MCS7_Receiver", NULL, "EDGE BTS MCS7 receiver", "BMP_EDGE_BTS_MCS7_Receiver" ),
	 list( "EDGE", "EDGE_BTS_MCS8_Receiver", NULL, "EDGE BTS MCS8 receiver", "BMP_EDGE_BTS_MCS8_Receiver" ),
	 list( "EDGE", "EDGE_BTS_MCS9_Receiver", NULL, "EDGE BTS MCS9 receiver", "BMP_EDGE_BTS_MCS9_Receiver" ),
	 list( "EDGE", "EDGE_MultipathUp", NULL, "Uplink multipath simulator for EDGE", "BMP_EDGE_MultipathUp" ),
	 list( "EDGE", "EDGE_Pwr_Measure", NULL, "Mean transmitted RF carrier power measurement", "BMP_EDGE_Pwr_Measure" ),
	 list( "EDGE", "EDGE_Pwr_vs_Time", NULL, "Power vs time measurement for EDGE", "BMP_EDGE_Pwr_vs_Time" )
);

de_define_library_palette( "EDGE", SCHEM_WIN, "sigproc_net",
	"EDGE Channel Coding", "EDGE Channel Coding", -1,
	 list( "EDGE", "EDGE_MCS1_DL_Decoder", NULL, "MCS1 decoder for downlink", "BMP_EDGE_MCS1_DL_Decoder" ),
	 list( "EDGE", "EDGE_MCS1_DL_Encoder", NULL, "MCS1 encoder for downlink", "BMP_EDGE_MCS1_DL_Encoder" ),
	 list( "EDGE", "EDGE_MCS1_UL_Decoder", NULL, "MCS1 decoder for uplink", "BMP_EDGE_MCS1_UL_Decoder" ),
	 list( "EDGE", "EDGE_MCS1_UL_Encoder", NULL, "MCS1 encoder for uplink", "BMP_EDGE_MCS1_UL_Encoder" ),
	 list( "EDGE", "EDGE_MCS2_DL_Decoder", NULL, "MCS2 decoder for downlink", "BMP_EDGE_MCS2_DL_Decoder" ),
	 list( "EDGE", "EDGE_MCS2_DL_Encoder", NULL, "MCS2 encoder for downlink", "BMP_EDGE_MCS2_DL_Encoder" ),
	 list( "EDGE", "EDGE_MCS2_UL_Decoder", NULL, "MCS2 decoder for uplink", "BMP_EDGE_MCS2_UL_Decoder" ),
	 list( "EDGE", "EDGE_MCS2_UL_Encoder", NULL, "MCS2 encoder for uplink", "BMP_EDGE_MCS2_UL_Encoder" ),
	 list( "EDGE", "EDGE_MCS3_DL_Decoder", NULL, "MCS3 decoder for downlink", "BMP_EDGE_MCS3_DL_Decoder" ),
	 list( "EDGE", "EDGE_MCS3_DL_Encoder", NULL, "MCS3 encoder for downlink", "BMP_EDGE_MCS3_DL_Encoder" ),
	 list( "EDGE", "EDGE_MCS3_UL_Decoder", NULL, "MCS3 decoder for uplink", "BMP_EDGE_MCS3_UL_Decoder" ),
	 list( "EDGE", "EDGE_MCS3_UL_Encoder", NULL, "MCS3 encoder for uplink", "BMP_EDGE_MCS3_UL_Encoder" ),
	 list( "EDGE", "EDGE_MCS4_DL_Decoder", NULL, "MCS4 decoder for downlink", "BMP_EDGE_MCS4_DL_Decoder" ),
	 list( "EDGE", "EDGE_MCS4_DL_Encoder", NULL, "MCS4 encoder for downlink", "BMP_EDGE_MCS4_DL_Encoder" ),
	 list( "EDGE", "EDGE_MCS4_UL_Decoder", NULL, "MCS4 decoder for uplink", "BMP_EDGE_MCS4_UL_Decoder" ),
	 list( "EDGE", "EDGE_MCS4_UL_Encoder", NULL, "MCS4 encoder for uplink", "BMP_EDGE_MCS4_UL_Encoder" ),
	 list( "EDGE", "EDGE_MCS5_DL_Decoder", NULL, "MCS5 decoder for downlink", "BMP_EDGE_MCS5_DL_Decoder" ),
	 list( "EDGE", "EDGE_MCS5_DL_Encoder", NULL, "MCS5 encoder for downlink", "BMP_EDGE_MCS5_DL_Encoder" ),
	 list( "EDGE", "EDGE_MCS5_UL_Decoder", NULL, "MCS5 decoder for uplink", "BMP_EDGE_MCS5_UL_Decoder" ),
	 list( "EDGE", "EDGE_MCS5_UL_Encoder", NULL, "MCS5 encoder for uplink", "BMP_EDGE_MCS5_UL_Encoder" ),
	 list( "EDGE", "EDGE_MCS6_DL_Decoder", NULL, "MCS6 decoder for downlink", "BMP_EDGE_MCS6_DL_Decoder" ),
	 list( "EDGE", "EDGE_MCS6_DL_Encoder", NULL, "MCS6 encoder for downlink", "BMP_EDGE_MCS6_DL_Encoder" ),
	 list( "EDGE", "EDGE_MCS6_UL_Decoder", NULL, "MCS6 decoder for uplink", "BMP_EDGE_MCS6_UL_Decoder" ),
	 list( "EDGE", "EDGE_MCS6_UL_Encoder", NULL, "MCS6 encoder for uplink", "BMP_EDGE_MCS6_UL_Encoder" ),
	 list( "EDGE", "EDGE_MCS7_DL_Decoder", NULL, "MCS7 decoder for downlink", "BMP_EDGE_MCS7_DL_Decoder" ),
	 list( "EDGE", "EDGE_MCS7_DL_Encoder", NULL, "MCS7 encoder for downlink", "BMP_EDGE_MCS7_DL_Encoder" ),
	 list( "EDGE", "EDGE_MCS7_UL_Decoder", NULL, "MCS7 decoder for uplink", "BMP_EDGE_MCS7_UL_Decoder" ),
	 list( "EDGE", "EDGE_MCS7_UL_Encoder", NULL, "MCS7 encoder for uplink", "BMP_EDGE_MCS7_UL_Encoder" ),
	 list( "EDGE", "EDGE_MCS8_DL_Decoder", NULL, "MCS8 decoder for downlink", "BMP_EDGE_MCS8_DL_Decoder" ),
	 list( "EDGE", "EDGE_MCS8_DL_Encoder", NULL, "MCS8 encoder for downlink", "BMP_EDGE_MCS8_DL_Encoder" ),
	 list( "EDGE", "EDGE_MCS8_UL_Decoder", NULL, "MCS8 decoder for uplink", "BMP_EDGE_MCS8_UL_Decoder" ),
	 list( "EDGE", "EDGE_MCS8_UL_Encoder", NULL, "MCS8 encoder for uplink", "BMP_EDGE_MCS8_UL_Encoder" ),
	 list( "EDGE", "EDGE_MCS9_DL_Decoder", NULL, "MCS9 decoder for downlink", "BMP_EDGE_MCS9_DL_Decoder" ),
	 list( "EDGE", "EDGE_MCS9_DL_Encoder", NULL, "MCS9 encoder for downlink", "BMP_EDGE_MCS9_DL_Encoder" ),
	 list( "EDGE", "EDGE_MCS9_UL_Decoder", NULL, "MCS9 decoder for uplink", "BMP_EDGE_MCS9_UL_Decoder" ),
	 list( "EDGE", "EDGE_MCS9_UL_Encoder", NULL, "MCS9 encoder for uplink", "BMP_EDGE_MCS9_UL_Encoder" )
);

de_define_library_palette( "EDGE", SCHEM_WIN, "sigproc_net",
	"EDGE Equalization", "EDGE Equalization", -1,
	 list( "EDGE", "EDGE_Equalizer", NULL, "Adaptive equalizer for normal and synchronization bursts", "BMP_EDGE_Equalizer" ),
	 list( "EDGE", "EDGE_EqualizerAB", NULL, "Adaptive equalizer for access bursts", "BMP_EDGE_EqualizerAB" )
);

de_define_library_palette( "EDGE", SCHEM_WIN, "sigproc_net",
	"EDGE Framing", "EDGE Framing", -1,
	 list( "EDGE", "EDGE_DeTDMA", NULL, "TDMA frame disassembly", "BMP_EDGE_DeTDMA" ),
	 list( "EDGE", "EDGE_TDMA", NULL, "TDMA frame constructor", "BMP_EDGE_TDMA" )
);

de_define_library_palette( "EDGE", SCHEM_WIN, "sigproc_net",
	"EDGE MS Test and Verification", "EDGE MS Test and Verification", -1,
	 list( "EDGE", "EDGE_MS_MCS5_Receiver", NULL, "EDGE MS MCS5 receiver", "BMP_EDGE_MS_MCS5_Receiver" ),
	 list( "EDGE", "EDGE_MS_MCS6_Receiver", NULL, "EDGE MS MCS6 receiver", "BMP_EDGE_MS_MCS6_Receiver" ),
	 list( "EDGE", "EDGE_MS_MCS7_Receiver", NULL, "EDGE MS MCS7 receiver", "BMP_EDGE_MS_MCS7_Receiver" ),
	 list( "EDGE", "EDGE_MS_MCS8_Receiver", NULL, "EDGE MS MCS8 receiver", "BMP_EDGE_MS_MCS8_Receiver" ),
	 list( "EDGE", "EDGE_MS_MCS9_Receiver", NULL, "EDGE MS MCS9 receiver", "BMP_EDGE_MS_MCS9_Receiver" ),
	 list( "EDGE", "EDGE_MultipathDown", NULL, "Downlink multipath simulator for EDGE", "BMP_EDGE_MultipathDown" )
);

de_define_library_palette( "EDGE", SCHEM_WIN, "sigproc_net",
	"EDGE Measurement", "EDGE Measurement", -1,
	 list( "EDGE", "EDGE_EVM", NULL, "Single-path EVM measurement for EDGE", "BMP_EDGE_EVM" ),
	 list( "EDGE", "EDGE_EVM_Meas", NULL, "ESG/VSA Compatible EVM measurement", "BMP_EDGE_EVM_Meas" ),
	 list( "EDGE", "EDGE_EVM_WithRef", NULL, "EVM measurement with reference signal input", "BMP_EDGE_EVM_WithRef" ),
	 list( "EDGE", "EDGE_FreqErr_OffsetSupp_Meas", NULL, "ESG/VSA Compatible frequency error and origin offset suppression measurement", "BMP_EDGE_FreqErr_OffsetSupp_Meas" ),
	 list( "EDGE", "EDGE_FrequencyErr", NULL, "Frequency error measurement with reference signal input", "BMP_EDGE_FrequencyErr" ),
	 list( "EDGE", "EDGE_Pwr_Meas", NULL, "VSA compatible mean transmitted RF carrier power measurement", "BMP_EDGE_Pwr_Meas" ),
	 list( "EDGE", "EDGE_Pwr_vs_Time_Meas", NULL, "VSA compatible power vs time measurement for EDGE", "BMP_EDGE_Pwr_vs_Time_Meas" ),
	 list( "EDGE", "EDGE_TxORFS_Modulation_Meas", NULL, "VSA compatible ORFS measurement due to modulation", "BMP_EDGE_TxORFS_Modulation_Meas" ),
	 list( "EDGE", "EDGE_TxORFS_Switching_Meas", NULL, "VSA compatible ORFS measurement due to switching", "BMP_EDGE_TxORFS_Switching_Meas" )
);

de_define_library_palette( "EDGE", SCHEM_WIN, "sigproc_net",
	"EDGE Modems", "EDGE Modems", -1,
	 list( "EDGE", "EDGE_8PSKMod", NULL, "Generation of 8PSK modulated signal", "BMP_EDGE_8PSKMod" )
);

de_define_library_palette( "EDGE", SCHEM_WIN, "sigproc_net",
	"EDGE RF Subsystems", "EDGE RF Subsystems", -1,
	 list( "EDGE", "EDGE_RF_Demod", NULL, "RF Demodulator", "BMP_EDGE_RF_Demod" ),
	 list( "EDGE", "EDGE_RF_Mod", NULL, "RF Modulator", "BMP_EDGE_RF_Mod" ),
	 list( "EDGE", "EDGE_RF_RX_IFout", NULL, "RF receiver with RF input and IF output", "BMP_EDGE_RF_RX_IFout" ),
	 list( "EDGE", "EDGE_RF_TX_IFin", NULL, "RF transmitter with IF input and RF output", "BMP_EDGE_RF_TX_IFin" )
);

de_define_library_palette( "EDGE", SCHEM_WIN, "sigproc_net",
	"EDGE Signal Sources", "EDGE Signal Sources", -1,
	 list( "EDGE", "EDGE_ActiveIdleSrc", NULL, "EDGE signal source with active and idle time slots", "BMP_EDGE_ActiveIdleSrc" ),
	 list( "EDGE", "EDGE_BTS_MCS5_PwrCtrlSrc", NULL, "EDGE signal source for reference sensitivity level test", "BMP_EDGE_BTS_MCS5_PwrCtrlSrc" ),
	 list( "EDGE", "EDGE_BTS_MCS6_PwrCtrlSrc", NULL, "EDGE signal source for reference sensitivity level test", "BMP_EDGE_BTS_MCS6_PwrCtrlSrc" ),
	 list( "EDGE", "EDGE_BTS_MCS7_PwrCtrlSrc", NULL, "EDGE signal source for reference sensitivity level test", "BMP_EDGE_BTS_MCS7_PwrCtrlSrc" ),
	 list( "EDGE", "EDGE_BTS_MCS8_PwrCtrlSrc", NULL, "EDGE signal source for reference sensitivity level test", "BMP_EDGE_BTS_MCS8_PwrCtrlSrc" ),
	 list( "EDGE", "EDGE_BTS_MCS9_PwrCtrlSrc", NULL, "EDGE signal source for reference sensitivity level test", "BMP_EDGE_BTS_MCS9_PwrCtrlSrc" ),
	 list( "EDGE", "EDGE_FramedSrc", NULL, "Framed signal source", "BMP_EDGE_FramedSrc" ),
	 list( "EDGE", "EDGE_MS_MCS5_PwrCtrlSrc", NULL, "EDGE signal source for reference sensitivity level test", "BMP_EDGE_MS_MCS5_PwrCtrlSrc" ),
	 list( "EDGE", "EDGE_MS_MCS6_PwrCtrlSrc", NULL, "EDGE signal source for reference sensitivity level test", "BMP_EDGE_MS_MCS6_PwrCtrlSrc" ),
	 list( "EDGE", "EDGE_MS_MCS7_PwrCtrlSrc", NULL, "EDGE signal source for reference sensitivity level test", "BMP_EDGE_MS_MCS7_PwrCtrlSrc" ),
	 list( "EDGE", "EDGE_MS_MCS8_PwrCtrlSrc", NULL, "EDGE signal source for reference sensitivity level test", "BMP_EDGE_MS_MCS8_PwrCtrlSrc" ),
	 list( "EDGE", "EDGE_MS_MCS9_PwrCtrlSrc", NULL, "EDGE signal source for reference sensitivity level test", "BMP_EDGE_MS_MCS9_PwrCtrlSrc" ),
	 list( "EDGE", "EDGE_PatternedSrc", NULL, "EDGE signal source compatible with ESG", "BMP_EDGE_PatternedSrc" ),
	 list( "EDGE", "EDGE_RandomSrc", NULL, "Continuous random data source for EDGE", "BMP_EDGE_RandomSrc" ),
	 list( "EDGE", "EDGE_Signal_Source", NULL, "VSA compatible signal source", "BMP_EDGE_Signal_Source" ),
	 list( "EDGE", "EDGE_Source", NULL, "EDGE source with framing and modulation", "BMP_EDGE_Source" )
);

de_define_library_palette( "EDGE", SCHEM_WIN, "sigproc_net",
	"EDGE Synchronization", "EDGE Synchronization", -1,
	 list( "EDGE", "EDGE_BitSync", NULL, "Bit synchronization for 8PSK modulated bursts", "BMP_EDGE_BitSync" ),
	 list( "EDGE", "EDGE_ESG_Sync", NULL, "Synchronization for ESG", "BMP_EDGE_ESG_Sync" )
);

