set_design_type( sigproc_net );
create_text_form ("_nCDMA_x5fWriteSigFile_fwav_x5ffile", 
	"File with wav extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "wav"), prefix_path_to_data_file);
create_form_set ( "_nCDMA_x5fWriteSigFile_fWriteFileName_x5fFileSet",
	"_nCDMA_x5fWriteSigFile_fwav_x5ffile");
create_item ("CDMA_WriteSigFile","Write Reconstructed Signal to a Data File",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_WriteSigFile",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fWriteSigFile_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_WriteSigFile",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("WriteFileName","output file name",
		PARM_STRING,
		"_nCDMA_x5fWriteSigFile_fWriteFileName_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nCDMA_x5fWriteSigFile_fwav_x5ffile","\"output.wav\"")));
library_group("CDMA, CELP Codecs","CDMA, CELP Codecs","CDMA_WriteSigFile");
palette_group("CDMA, CELP Codecs","CDMA, CELP Codecs","CDMA_WriteSigFile");

create_item ("CDMA_WalshModulator","Walsh Modulator for 64-Bit Spread",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_WalshModulator",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fWalshModulator_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_WalshModulator",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("WalshCodeIndex","Walsh code index",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")));
library_group("CDMA, Transmission","CDMA, Transmission","CDMA_WalshModulator");
palette_group("CDMA, Transmission","CDMA, Transmission","CDMA_WalshModulator");

create_constant_form ("_nCDMA_x5fViterbiBitDCC_frate_x5f1_x5f2_x5fK_x5f9_x5fg0_x5f0753_x5fg1_x5f0561", 
	"rate 1/2 K 9 g0 0753 g1 0561",
	0,
	"0",
	"rate 1/2 K 9 g0 0753 g1 0561");
create_constant_form ("_nCDMA_x5fViterbiBitDCC_frate_x5f1_x5f3_x5fK_x5f9_x5fg0_x5f0557_x5fg1_x5f0663_x5fg2_x5f0711", 
	"rate 1/3 K 9 g0 0557 g1 0663 g2 0711",
	0,
	"1",
	"rate 1/3 K 9 g0 0557 g1 0663 g2 0711");
create_constant_form ("_nCDMA_x5fViterbiBitDCC_frate_x5f1_x5f2_x5fK_x5f7_x5fg0_x5f0554_x5fg1_x5f0744", 
	"rate 1/2 K 7 g0 0554 g1 0744",
	0,
	"2",
	"rate 1/2 K 7 g0 0554 g1 0744");
create_constant_form ("_nCDMA_x5fViterbiBitDCC_frate_x5f1_x5f3_x5fK_x5f7_x5fg0_x5f0554_x5fg1_x5f0624_x5fg2_x5f0764", 
	"rate 1/3 K 7 g0 0554 g1 0624 g2 0764",
	0,
	"3",
	"rate 1/3 K 7 g0 0554 g1 0624 g2 0764");
create_constant_form ("_nCDMA_x5fViterbiBitDCC_frate_x5f1_x5f2_x5fK_x5f5_x5fg0_x5f046_x5fg1_x5f072", 
	"rate 1/2 K 5 g0 046 g1 072",
	0,
	"4",
	"rate 1/2 K 5 g0 046 g1 072");
create_constant_form ("_nCDMA_x5fViterbiBitDCC_frate_x5f1_x5f3_x5fK_x5f5_x5fg0_x5f066_x5fg1_x5f052_x5fg2_x5f076", 
	"rate 1/3 K 5 g0 066 g1 052 g2 076",
	0,
	"5",
	"rate 1/3 K 5 g0 066 g1 052 g2 076");
create_constant_form ("_nCDMA_x5fViterbiBitDCC_frate_x5f1_x5f2_x5fK_x5f5_x5fg0_x5f046_x5fg1_x5f066", 
	"rate 1/2 K 5 g0 046 g1 066",
	0,
	"6",
	"rate 1/2 K 5 g0 046 g1 066");
create_constant_form ("_nCDMA_x5fViterbiBitDCC_frate_x5f1_x5f6_x5fK_x5f5_x5fg0_x5f066_x5fg1_x5f052_x5fg2_x5f076_x5fg3_x5f066_x5fg4_x5f052_x5fg5_x5f076", 
	"rate 1/6 K 5 g0 066 g1 052 g2 076 g3 066 g4 052 g5 076",
	0,
	"7",
	"rate 1/6 K 5 g0 066 g1 052 g2 076 g3 066 g4 052 g5 076");
create_constant_form ("_nCDMA_x5fViterbiBitDCC_frate_x5f1_x5f2_x5fK_x5f3_x5fg0_x5f05_x5fg1_x5f07", 
	"rate 1/2 K 3 g0 05 g1 07",
	0,
	"8",
	"rate 1/2 K 3 g0 05 g1 07");
create_form_set("_nCDMA_x5fViterbiBitDCC_fCCTypeSet",
	"_nCDMA_x5fViterbiBitDCC_frate_x5f1_x5f2_x5fK_x5f9_x5fg0_x5f0753_x5fg1_x5f0561",
	"_nCDMA_x5fViterbiBitDCC_frate_x5f1_x5f3_x5fK_x5f9_x5fg0_x5f0557_x5fg1_x5f0663_x5fg2_x5f0711",
	"_nCDMA_x5fViterbiBitDCC_frate_x5f1_x5f2_x5fK_x5f7_x5fg0_x5f0554_x5fg1_x5f0744",
	"_nCDMA_x5fViterbiBitDCC_frate_x5f1_x5f3_x5fK_x5f7_x5fg0_x5f0554_x5fg1_x5f0624_x5fg2_x5f0764",
	"_nCDMA_x5fViterbiBitDCC_frate_x5f1_x5f2_x5fK_x5f5_x5fg0_x5f046_x5fg1_x5f072",
	"_nCDMA_x5fViterbiBitDCC_frate_x5f1_x5f3_x5fK_x5f5_x5fg0_x5f066_x5fg1_x5f052_x5fg2_x5f076",
	"_nCDMA_x5fViterbiBitDCC_frate_x5f1_x5f2_x5fK_x5f5_x5fg0_x5f046_x5fg1_x5f066",
	"_nCDMA_x5fViterbiBitDCC_frate_x5f1_x5f6_x5fK_x5f5_x5fg0_x5f066_x5fg1_x5f052_x5fg2_x5f076_x5fg3_x5f066_x5fg4_x5f052_x5fg5_x5f076",
	"_nCDMA_x5fViterbiBitDCC_frate_x5f1_x5f2_x5fK_x5f3_x5fg0_x5f05_x5fg1_x5f07",
	"StdForm");
create_item ("CDMA_ViterbiBitDCC","Bit-By-Bit Viterbi Decoder for Covolutional Code",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_ViterbiBitDCC",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fViterbiBitDCC_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_ViterbiBitDCC",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("CCType","convolutional code type",
		PARM_INT,
		"_nCDMA_x5fViterbiBitDCC_fCCTypeSet",
		UNITLESS_UNIT,
		prm("_nCDMA_x5fViterbiBitDCC_frate_x5f1_x5f2_x5fK_x5f9_x5fg0_x5f0753_x5fg1_x5f0561","rate_1_2_K_9_g0_0753_g1_0561")));
library_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_ViterbiBitDCC");
palette_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_ViterbiBitDCC");

create_constant_form ("_nCDMA_x5fVariableRateDCC_frate_x5f1_x5f2_x5fK_x5f9_x5fg0_x5f0753_x5fg1_x5f0561", 
	"rate 1/2 K 9 g0 0753 g1 0561",
	0,
	"0",
	"rate 1/2 K 9 g0 0753 g1 0561");
create_constant_form ("_nCDMA_x5fVariableRateDCC_frate_x5f1_x5f3_x5fK_x5f9_x5fg0_x5f0557_x5fg1_x5f0663_x5fg2_x5f0711", 
	"rate 1/3 K 9 g0 0557 g1 0663 g2 0711",
	0,
	"1",
	"rate 1/3 K 9 g0 0557 g1 0663 g2 0711");
create_constant_form ("_nCDMA_x5fVariableRateDCC_frate_x5f1_x5f2_x5fK_x5f7_x5fg0_x5f0554_x5fg1_x5f0744", 
	"rate 1/2 K 7 g0 0554 g1 0744",
	0,
	"2",
	"rate 1/2 K 7 g0 0554 g1 0744");
create_constant_form ("_nCDMA_x5fVariableRateDCC_frate_x5f1_x5f3_x5fK_x5f7_x5fg0_x5f0554_x5fg1_x5f0624_x5fg2_x5f0764", 
	"rate 1/3 K 7 g0 0554 g1 0624 g2 0764",
	0,
	"3",
	"rate 1/3 K 7 g0 0554 g1 0624 g2 0764");
create_constant_form ("_nCDMA_x5fVariableRateDCC_frate_x5f1_x5f2_x5fK_x5f5_x5fg0_x5f046_x5fg1_x5f072", 
	"rate 1/2 K 5 g0 046 g1 072",
	0,
	"4",
	"rate 1/2 K 5 g0 046 g1 072");
create_constant_form ("_nCDMA_x5fVariableRateDCC_frate_x5f1_x5f3_x5fK_x5f5_x5fg0_x5f066_x5fg1_x5f052_x5fg2_x5f076", 
	"rate 1/3 K 5 g0 066 g1 052 g2 076",
	0,
	"5",
	"rate 1/3 K 5 g0 066 g1 052 g2 076");
create_constant_form ("_nCDMA_x5fVariableRateDCC_frate_x5f1_x5f2_x5fK_x5f5_x5fg0_x5f046_x5fg1_x5f066", 
	"rate 1/2 K 5 g0 046 g1 066",
	0,
	"6",
	"rate 1/2 K 5 g0 046 g1 066");
create_constant_form ("_nCDMA_x5fVariableRateDCC_frate_x5f1_x5f6_x5fK_x5f5_x5fg0_x5f066_x5fg1_x5f052_x5fg2_x5f076_x5fg3_x5f066_x5fg4_x5f052_x5fg5_x5f076", 
	"rate 1/6 K 5 g0 066 g1 052 g2 076 g3 066 g4 052 g5 076",
	0,
	"7",
	"rate 1/6 K 5 g0 066 g1 052 g2 076 g3 066 g4 052 g5 076");
create_constant_form ("_nCDMA_x5fVariableRateDCC_frate_x5f1_x5f2_x5fK_x5f3_x5fg0_x5f05_x5fg1_x5f07", 
	"rate 1/2 K 3 g0 05 g1 07",
	0,
	"8",
	"rate 1/2 K 3 g0 05 g1 07");
create_form_set("_nCDMA_x5fVariableRateDCC_fCCTypeSet",
	"_nCDMA_x5fVariableRateDCC_frate_x5f1_x5f2_x5fK_x5f9_x5fg0_x5f0753_x5fg1_x5f0561",
	"_nCDMA_x5fVariableRateDCC_frate_x5f1_x5f3_x5fK_x5f9_x5fg0_x5f0557_x5fg1_x5f0663_x5fg2_x5f0711",
	"_nCDMA_x5fVariableRateDCC_frate_x5f1_x5f2_x5fK_x5f7_x5fg0_x5f0554_x5fg1_x5f0744",
	"_nCDMA_x5fVariableRateDCC_frate_x5f1_x5f3_x5fK_x5f7_x5fg0_x5f0554_x5fg1_x5f0624_x5fg2_x5f0764",
	"_nCDMA_x5fVariableRateDCC_frate_x5f1_x5f2_x5fK_x5f5_x5fg0_x5f046_x5fg1_x5f072",
	"_nCDMA_x5fVariableRateDCC_frate_x5f1_x5f3_x5fK_x5f5_x5fg0_x5f066_x5fg1_x5f052_x5fg2_x5f076",
	"_nCDMA_x5fVariableRateDCC_frate_x5f1_x5f2_x5fK_x5f5_x5fg0_x5f046_x5fg1_x5f066",
	"_nCDMA_x5fVariableRateDCC_frate_x5f1_x5f6_x5fK_x5f5_x5fg0_x5f066_x5fg1_x5f052_x5fg2_x5f076_x5fg3_x5f066_x5fg4_x5f052_x5fg5_x5f076",
	"_nCDMA_x5fVariableRateDCC_frate_x5f1_x5f2_x5fK_x5f3_x5fg0_x5f05_x5fg1_x5f07",
	"StdForm");
create_item ("CDMA_VariableRateDCC","Variable Data Rate Viterbi Decoder for Convolutional Code",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_VariableRateDCC",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fVariableRateDCC_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_VariableRateDCC",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("CCType","convolutional code type",
		PARM_INT,
		"_nCDMA_x5fVariableRateDCC_fCCTypeSet",
		UNITLESS_UNIT,
		prm("_nCDMA_x5fVariableRateDCC_frate_x5f1_x5f2_x5fK_x5f9_x5fg0_x5f0753_x5fg1_x5f0561","rate_1_2_K_9_g0_0753_g1_0561")),
	create_parm ("MaxInFrameLen","maximum input frame length",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","384")));
library_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_VariableRateDCC");
palette_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_VariableRateDCC");

create_constant_form ("_nCDMA_x5fVariableRateCC_frate_x5f1_x5f2_x5fK_x5f9_x5fg0_x5f0753_x5fg1_x5f0561", 
	"rate 1/2 K 9 g0 0753 g1 0561",
	0,
	"0",
	"rate 1/2 K 9 g0 0753 g1 0561");
create_constant_form ("_nCDMA_x5fVariableRateCC_frate_x5f1_x5f3_x5fK_x5f9_x5fg0_x5f0557_x5fg1_x5f0663_x5fg2_x5f0711", 
	"rate 1/3 K 9 g0 0557 g1 0663 g2 0711",
	0,
	"1",
	"rate 1/3 K 9 g0 0557 g1 0663 g2 0711");
create_constant_form ("_nCDMA_x5fVariableRateCC_frate_x5f1_x5f2_x5fK_x5f7_x5fg0_x5f0554_x5fg1_x5f0744", 
	"rate 1/2 K 7 g0 0554 g1 0744",
	0,
	"2",
	"rate 1/2 K 7 g0 0554 g1 0744");
create_constant_form ("_nCDMA_x5fVariableRateCC_frate_x5f1_x5f3_x5fK_x5f7_x5fg0_x5f0554_x5fg1_x5f0624_x5fg2_x5f0764", 
	"rate 1/3 K 7 g0 0554 g1 0624 g2 0764",
	0,
	"3",
	"rate 1/3 K 7 g0 0554 g1 0624 g2 0764");
create_constant_form ("_nCDMA_x5fVariableRateCC_frate_x5f1_x5f2_x5fK_x5f5_x5fg0_x5f046_x5fg1_x5f072", 
	"rate 1/2 K 5 g0 046 g1 072",
	0,
	"4",
	"rate 1/2 K 5 g0 046 g1 072");
create_constant_form ("_nCDMA_x5fVariableRateCC_frate_x5f1_x5f3_x5fK_x5f5_x5fg0_x5f066_x5fg1_x5f052_x5fg2_x5f076", 
	"rate 1/3 K 5 g0 066 g1 052 g2 076",
	0,
	"5",
	"rate 1/3 K 5 g0 066 g1 052 g2 076");
create_constant_form ("_nCDMA_x5fVariableRateCC_frate_x5f1_x5f2_x5fK_x5f5_x5fg0_x5f046_x5fg1_x5f066", 
	"rate 1/2 K 5 g0 046 g1 066",
	0,
	"6",
	"rate 1/2 K 5 g0 046 g1 066");
create_constant_form ("_nCDMA_x5fVariableRateCC_frate_x5f1_x5f6_x5fK_x5f5_x5fg0_x5f066_x5fg1_x5f052_x5fg2_x5f076_x5fg3_x5f066_x5fg4_x5f052_x5fg5_x5f076", 
	"rate 1/6 K 5 g0 066 g1 052 g2 076 g3 066 g4 052 g5 076",
	0,
	"7",
	"rate 1/6 K 5 g0 066 g1 052 g2 076 g3 066 g4 052 g5 076");
create_constant_form ("_nCDMA_x5fVariableRateCC_frate_x5f1_x5f2_x5fK_x5f3_x5fg0_x5f05_x5fg1_x5f07", 
	"rate 1/2 K 3 g0 05 g1 07",
	0,
	"8",
	"rate 1/2 K 3 g0 05 g1 07");
create_form_set("_nCDMA_x5fVariableRateCC_fCCTypeSet",
	"_nCDMA_x5fVariableRateCC_frate_x5f1_x5f2_x5fK_x5f9_x5fg0_x5f0753_x5fg1_x5f0561",
	"_nCDMA_x5fVariableRateCC_frate_x5f1_x5f3_x5fK_x5f9_x5fg0_x5f0557_x5fg1_x5f0663_x5fg2_x5f0711",
	"_nCDMA_x5fVariableRateCC_frate_x5f1_x5f2_x5fK_x5f7_x5fg0_x5f0554_x5fg1_x5f0744",
	"_nCDMA_x5fVariableRateCC_frate_x5f1_x5f3_x5fK_x5f7_x5fg0_x5f0554_x5fg1_x5f0624_x5fg2_x5f0764",
	"_nCDMA_x5fVariableRateCC_frate_x5f1_x5f2_x5fK_x5f5_x5fg0_x5f046_x5fg1_x5f072",
	"_nCDMA_x5fVariableRateCC_frate_x5f1_x5f3_x5fK_x5f5_x5fg0_x5f066_x5fg1_x5f052_x5fg2_x5f076",
	"_nCDMA_x5fVariableRateCC_frate_x5f1_x5f2_x5fK_x5f5_x5fg0_x5f046_x5fg1_x5f066",
	"_nCDMA_x5fVariableRateCC_frate_x5f1_x5f6_x5fK_x5f5_x5fg0_x5f066_x5fg1_x5f052_x5fg2_x5f076_x5fg3_x5f066_x5fg4_x5f052_x5fg5_x5f076",
	"_nCDMA_x5fVariableRateCC_frate_x5f1_x5f2_x5fK_x5f3_x5fg0_x5f05_x5fg1_x5f07",
	"StdForm");
create_item ("CDMA_VariableRateCC","Variable Data Rate Convolutional Encoder",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_VariableRateCC",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fVariableRateCC_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_VariableRateCC",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("CCType","convolutional code type",
		PARM_INT,
		"_nCDMA_x5fVariableRateCC_fCCTypeSet",
		UNITLESS_UNIT,
		prm("_nCDMA_x5fVariableRateCC_frate_x5f1_x5f2_x5fK_x5f9_x5fg0_x5f0753_x5fg1_x5f0561","rate_1_2_K_9_g0_0753_g1_0561")),
	create_parm ("MaxInFrameLen","maximum input frame length",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","192")));
library_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_VariableRateCC");
palette_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_VariableRateCC");

create_item ("CDMA_VariableDataRate","Data Rate Selector Based on Speech Activity",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_VariableDataRate",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fVariableDataRate_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_VariableDataRate",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("RateMode","rate mode indicator: 0=variable rate; 1=fixed rate 1; 2=fixed rate1/2",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("BackNoiseThreshold","background noise threshold",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","160000")),
	create_parm ("BaseNoiseThreshold","basic noise threshold",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","5059644")),
	create_parm ("ThresholdMultiple","multiple coefficient",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1.00547")),
	create_parm ("FirstFrameDiscardFlag","flag to indicate use of first frame: 1=discard, 0=process",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));
library_group("CDMA, CELP Codecs","CDMA, CELP Codecs","CDMA_VariableDataRate");
palette_group("CDMA, CELP Codecs","CDMA, CELP Codecs","CDMA_VariableDataRate");

create_item ("CDMA_UnquantizerWi","Transmission Code to LSP Frequencies Unquantizer",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_UnquantizerWi",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fUnquantizerWi_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_UnquantizerWi",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("LpcOrder","order of LPC filter",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","10")),
	create_parm ("FirstFrameDiscardFlag","flag to indicate use of first frame: 1=discard, 0=process",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));
library_group("CDMA, CELP Codecs","CDMA, CELP Codecs","CDMA_UnquantizerWi");
palette_group("CDMA, CELP Codecs","CDMA, CELP Codecs","CDMA_UnquantizerWi");

create_constant_form ("_nCDMA_x5fTstSrc_fALL_x5f0s", 
	"ALL 0s",
	0,
	"0",
	"ALL 0s");
create_constant_form ("_nCDMA_x5fTstSrc_fALL_x5f1s", 
	"ALL 1s",
	0,
	"1",
	"ALL 1s");
create_constant_form ("_nCDMA_x5fTstSrc_fALTERNATE_x5f0_x5f1", 
	"ALTERNATE 0 1",
	0,
	"2",
	"ALTERNATE 0 1");
create_constant_form ("_nCDMA_x5fTstSrc_fRANDOM_x5fBIT", 
	"RANDOM BIT",
	0,
	"3",
	"RANDOM BIT");
create_form_set("_nCDMA_x5fTstSrc_fMy_x5frandomSet",
	"_nCDMA_x5fTstSrc_fALL_x5f0s",
	"_nCDMA_x5fTstSrc_fALL_x5f1s",
	"_nCDMA_x5fTstSrc_fALTERNATE_x5f0_x5f1",
	"_nCDMA_x5fTstSrc_fRANDOM_x5fBIT",
	"StdForm");
create_constant_form ("_nCDMA_x5fTstSrc_fRANDOM", 
	"RANDOM",
	0,
	"0",
	"RANDOM");
create_constant_form ("_nCDMA_x5fTstSrc_fSEQUENTIAL", 
	"SEQUENTIAL",
	0,
	"1",
	"SEQUENTIAL");
create_constant_form ("_nCDMA_x5fTstSrc_fCONSTANT9600", 
	"CONSTANT9600",
	0,
	"2",
	"CONSTANT9600");
create_constant_form ("_nCDMA_x5fTstSrc_fCONSTANT4800", 
	"CONSTANT4800",
	0,
	"3",
	"CONSTANT4800");
create_constant_form ("_nCDMA_x5fTstSrc_fCONSTANT2400", 
	"CONSTANT2400",
	0,
	"4",
	"CONSTANT2400");
create_constant_form ("_nCDMA_x5fTstSrc_fCONSTANT1200", 
	"CONSTANT1200",
	0,
	"5",
	"CONSTANT1200");
create_form_set("_nCDMA_x5fTstSrc_fOrderSet",
	"_nCDMA_x5fTstSrc_fRANDOM",
	"_nCDMA_x5fTstSrc_fSEQUENTIAL",
	"_nCDMA_x5fTstSrc_fCONSTANT9600",
	"_nCDMA_x5fTstSrc_fCONSTANT4800",
	"_nCDMA_x5fTstSrc_fCONSTANT2400",
	"_nCDMA_x5fTstSrc_fCONSTANT1200",
	"StdForm");
create_item ("CDMA_TstSrc","Test Data Source",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_TstSrc",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fTstSrc_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_TstSrc",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("My_random","type of bit source:ALL 0s, ALL 1s, ALTERNATE 0 1, RANDOM BIT",
		PARM_INT,
		"_nCDMA_x5fTstSrc_fMy_x5frandomSet",
		UNITLESS_UNIT,
		prm("_nCDMA_x5fTstSrc_fRANDOM_x5fBIT","RANDOM_BIT")),
	create_parm ("Order","frame order: RANDOM, SEQUENTIAL, CONSTANT9600, CONSTANT4800, CONSTANT2400, CONSTANT1200",
		PARM_INT,
		"_nCDMA_x5fTstSrc_fOrderSet",
		UNITLESS_UNIT,
		prm("_nCDMA_x5fTstSrc_fSEQUENTIAL","SEQUENTIAL")));
library_group("CDMA, Test","CDMA, Test","CDMA_TstSrc");
palette_group("CDMA, Test","CDMA, Test","CDMA_TstSrc");

create_item ("CDMA_TriffERR","Estimating the Rate-Decision Error of the forward Traffic Channel",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_TriffERR",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fTriffERR_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_TriffERR",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("InitialFrame","number of frames to be ignored",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")));
library_group("CDMA, Test","CDMA, Test","CDMA_TriffERR");
palette_group("CDMA, Test","CDMA, Test","CDMA_TriffERR");

create_item ("CDMA_TrffcFrmRcvry","CDMA Traffic Channel Frame Recovery",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_TrffcFrmRcvry",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fTrffcFrmRcvry_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_TrffcFrmRcvry",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_TrffcFrmRcvry");
palette_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_TrffcFrmRcvry");

create_constant_form ("_nCDMA_x5fTrffcFrmGen_fCDMA_x5fForward_x5fTraffic_x5fChannel", 
	"CDMA Forward Traffic Channel",
	0,
	"0",
	"CDMA Forward Traffic Channel");
create_constant_form ("_nCDMA_x5fTrffcFrmGen_fCDMA_x5fReverse_x5fTraffic_x5fChannel", 
	"CDMA Reverse Traffic Channel",
	0,
	"1",
	"CDMA Reverse Traffic Channel");
create_form_set("_nCDMA_x5fTrffcFrmGen_fTypeSet",
	"_nCDMA_x5fTrffcFrmGen_fCDMA_x5fForward_x5fTraffic_x5fChannel",
	"_nCDMA_x5fTrffcFrmGen_fCDMA_x5fReverse_x5fTraffic_x5fChannel",
	"StdForm");
create_item ("CDMA_TrffcFrmGen","CDMA Traffic Channel Frame Generator",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_TrffcFrmGen",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fTrffcFrmGen_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_TrffcFrmGen",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PreambleNumber","preamble frame number in CDMA Reverse Traffic Channel",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("Type","type of channel:CDMA Forward Traffic Channel, CDMA Reverse Traffic Channel",
		PARM_INT,
		"_nCDMA_x5fTrffcFrmGen_fTypeSet",
		UNITLESS_UNIT,
		prm("_nCDMA_x5fTrffcFrmGen_fCDMA_x5fForward_x5fTraffic_x5fChannel","CDMA_Forward_Traffic_Channel")));
library_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_TrffcFrmGen");
palette_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_TrffcFrmGen");

create_item ("CDMA_TimeAverage","Average in Time Domain",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_TimeAverage",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fTimeAverage_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_TimeAverage",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("TestLength","number of frames for BER estimate",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","10000")),
	create_parm ("DotNumber","number of dots needed to draw BER curve",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("IniLength","number of ineffective firings to be ignored",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")));
library_group("CDMA, Test","CDMA, Test","CDMA_TimeAverage");
palette_group("CDMA, Test","CDMA, Test","CDMA_TimeAverage");

create_item ("CDMA_SyncIntlvr","Sync Channel Interleaver",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_SyncIntlvr",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fSyncIntlvr_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_SyncIntlvr",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_SyncIntlvr");
palette_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_SyncIntlvr");

create_item ("CDMA_SyncDeintlvr","Sync Channel Deinterleaver",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_SyncDeintlvr",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fSyncDeintlvr_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_SyncDeintlvr",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_SyncDeintlvr");
palette_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_SyncDeintlvr");

create_item ("CDMA_Sounder_Statistic","Estimation of Probability for Channel Sounder Output",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_Sounder_Statistic",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fSounder_x5fStatistic_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_Sounder_Statistic",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Ini","number of ineffective firings to be ignored",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("Thresholds","quantization thresholds, in increasing order",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"0.0\"")),
	create_parm ("Levels","output levels",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")));
library_group("CDMA, Test","CDMA, Test","CDMA_Sounder_Statistic");
palette_group("CDMA, Test","CDMA, Test","CDMA_Sounder_Statistic");

create_item ("CDMA_Select1In4","Data Selector",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_Select1In4",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fSelect1In4_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_Select1In4",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("BlockSize","size of input block",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","192")));
library_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_Select1In4");
palette_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_Select1In4");

create_item ("CDMA_ScaledCdbkVector","Scaled Codebook Vector Generator",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_ScaledCdbkVector",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fScaledCdbkVector_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_ScaledCdbkVector",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("FSize","length of frame",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","160")),
	create_parm ("FirstFrameDiscardFlag","flag to indicate use of first frame: 1=discard, 0=process",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));
library_group("CDMA, CELP Codecs","CDMA, CELP Codecs","CDMA_ScaledCdbkVector");
palette_group("CDMA, CELP Codecs","CDMA, CELP Codecs","CDMA_ScaledCdbkVector");

create_item ("CDMA_ReversePowerControl","Reverse Power Control for Base to Mobile Transmission",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_ReversePowerControl",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fReversePowerControl_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_ReversePowerControl",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SIR_Threshold","minimum signal-to-interference ratio",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4.5")),
	create_parm ("SIR_AdjustStep","signal-to-interference ratio adjustment step",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.2")),
	create_parm ("FER_Threshold","threshold of frame error rate: if detected FER >the threshold, transmission power increased, and vice versa",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.01")));
library_group("CDMA, Transmission","CDMA, Transmission","CDMA_ReversePowerControl");
palette_group("CDMA, Transmission","CDMA, Transmission","CDMA_ReversePowerControl");

create_item ("CDMA_RevTrfIntlvr","Reverse Traffic Channel Interleaver",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_RevTrfIntlvr",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fRevTrfIntlvr_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_RevTrfIntlvr",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_RevTrfIntlvr");
palette_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_RevTrfIntlvr");

create_item ("CDMA_RevTrfDeintlvr","Reverse Traffic Channel Deinterleaver",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_RevTrfDeintlvr",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fRevTrfDeintlvr_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_RevTrfDeintlvr",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_RevTrfDeintlvr");
palette_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_RevTrfDeintlvr");

create_item ("CDMA_RevAGC","Base Station Automatic Gain Control",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_RevAGC",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fRevAGC_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_RevAGC",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("CDMA, Receivers","CDMA, Receivers","CDMA_RevAGC");
palette_group("CDMA, Receivers","CDMA, Receivers","CDMA_RevAGC");

create_constant_form ("_nCDMA_x5fRepeat_fForward_x5fTraffic_x5fChannel", 
	"Forward Traffic Channel",
	0,
	"0",
	"Forward Traffic Channel");
create_constant_form ("_nCDMA_x5fRepeat_fReverse_x5fTraffic_x5fChannel", 
	"Reverse Traffic Channel",
	0,
	"1",
	"Reverse Traffic Channel");
create_form_set("_nCDMA_x5fRepeat_fChannelSet",
	"_nCDMA_x5fRepeat_fForward_x5fTraffic_x5fChannel",
	"_nCDMA_x5fRepeat_fReverse_x5fTraffic_x5fChannel",
	"StdForm");
create_item ("CDMA_Repeat","Repeater for CDMA systems",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_Repeat",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fRepeat_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_Repeat",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Channel","channel type:Forward Traffic Channel ,Reverse Traffic Channel",
		PARM_INT,
		"_nCDMA_x5fRepeat_fChannelSet",
		UNITLESS_UNIT,
		prm("_nCDMA_x5fRepeat_fForward_x5fTraffic_x5fChannel","Forward_Traffic_Channel")));
library_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_Repeat");
palette_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_Repeat");

create_item ("CDMA_RemoveDC","Remove DC from Input Signal",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_RemoveDC",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fRemoveDC_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_RemoveDC",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("LowPassRatio","lowpass ratio to interpolate filter the average",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.75")),
	create_parm ("FSize","length of signal frame",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","160")));
library_group("CDMA, CELP Codecs","CDMA, CELP Codecs","CDMA_RemoveDC");
palette_group("CDMA, CELP Codecs","CDMA, CELP Codecs","CDMA_RemoveDC");

create_text_form ("_nCDMA_x5fReadSigFile_fwav_x5ffile", 
	"File with wav extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "wav"), prefix_path_to_data_file);
create_form_set ( "_nCDMA_x5fReadSigFile_fFileName_x5fFileSet",
	"_nCDMA_x5fReadSigFile_fwav_x5ffile");
create_constant_form ("_nCDMA_x5fReadSigFile_fperiodic", 
	"periodic",
	0,
	"0",
	"periodic");
create_constant_form ("_nCDMA_x5fReadSigFile_fnon_x5fperiodic", 
	"non_periodic",
	0,
	"1",
	"non_periodic");
create_form_set("_nCDMA_x5fReadSigFile_fOutputTypeSet",
	"_nCDMA_x5fReadSigFile_fperiodic",
	"_nCDMA_x5fReadSigFile_fnon_x5fperiodic",
	"StdForm");
create_item ("CDMA_ReadSigFile","Read Waveform File for Signal generation",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_ReadSigFile",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fReadSigFile_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_ReadSigFile",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("FileName","name of file to be read",
		PARM_STRING,
		"_nCDMA_x5fReadSigFile_fFileName_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nCDMA_x5fReadSigFile_fwav_x5ffile","\"file.wav\"")),
	create_parm ("OutputType","type of simulation: periodic or non_periodic",
		PARM_INT,
		"_nCDMA_x5fReadSigFile_fOutputTypeSet",
		UNITLESS_UNIT,
		prm("_nCDMA_x5fReadSigFile_fperiodic","periodic")));
library_group("CDMA, CELP Codecs","CDMA, CELP Codecs","CDMA_ReadSigFile");
palette_group("CDMA, CELP Codecs","CDMA, CELP Codecs","CDMA_ReadSigFile");

create_item ("CDMA_QuantizerWi","LSP frequencies to Transmission Code Quantizer",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_QuantizerWi",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fQuantizerWi_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_QuantizerWi",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("LpcOrder","order of LPC filter",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","10")),
	create_parm ("FirstFrameDiscardFlag","flag to indicate use of first frame: 1=discard, 0=process",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));
library_group("CDMA, CELP Codecs","CDMA, CELP Codecs","CDMA_QuantizerWi");
palette_group("CDMA, CELP Codecs","CDMA, CELP Codecs","CDMA_QuantizerWi");

create_item ("CDMA_PowerAllocation","Power Allocation for Different Base Station Channel",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_PowerAllocation",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fPowerAllocation_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_PowerAllocation",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PilotPowerRatio","ratio of pilot channel power to total power",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.2")),
	create_parm ("SyncRelativeDB","sync channel power relative to one traffic channel power, in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-3.0")),
	create_parm ("PagingRelativeDB","paging channel power relative to one traffic channel power, in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3.0")));
library_group("CDMA, Transmission","CDMA, Transmission","CDMA_PowerAllocation");
palette_group("CDMA, Transmission","CDMA, Transmission","CDMA_PowerAllocation");

create_item ("CDMA_PnQCode","Q-Path PN Code Generator for IS95A QPSK and OQPSK",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_PnQCode",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fPnQCode_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_PnQCode",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PN_Offset","base station PN code offset",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")));
library_group("CDMA, Transmission","CDMA, Transmission","CDMA_PnQCode");
palette_group("CDMA, Transmission","CDMA, Transmission","CDMA_PnQCode");

create_item ("CDMA_PnICode","I-Path PN Code Generator for IS95A QPSK and OQPSK",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_PnICode",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fPnICode_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_PnICode",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PN_Offset","base station PN code offset",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")));
library_group("CDMA, Transmission","CDMA, Transmission","CDMA_PnICode");
palette_group("CDMA, Transmission","CDMA, Transmission","CDMA_PnICode");

create_item ("CDMA_PnCodeTrack","PN Code Tracking",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_PnCodeTrack",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fPnCodeTrack_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_PnCodeTrack",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("CDMA, Receivers","CDMA, Receivers","CDMA_PnCodeTrack");
palette_group("CDMA, Receivers","CDMA, Receivers","CDMA_PnCodeTrack");

create_item ("CDMA_PnCodeAcq","PN Code Acquisition",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_PnCodeAcq",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fPnCodeAcq_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_PnCodeAcq",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("CDMA, Receivers","CDMA, Receivers","CDMA_PnCodeAcq");
palette_group("CDMA, Receivers","CDMA, Receivers","CDMA_PnCodeAcq");

create_item ("CDMA_PitchFilter","The Pitch Filter to Reconstruct Speech Signal",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_PitchFilter",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fPitchFilter_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_PitchFilter",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("FSize","length of frame",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","160")),
	create_parm ("MinLag","minimum pitch lag",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","17")),
	create_parm ("MaxLag","maximum pitch lag",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","143")),
	create_parm ("MinGain","minimum pitch gain",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("FirstFrameDiscardFlag","flag to indicate use of first frame: 1=discard, 0=process",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));
library_group("CDMA, CELP Codecs","CDMA, CELP Codecs","CDMA_PitchFilter");
palette_group("CDMA, CELP Codecs","CDMA, CELP Codecs","CDMA_PitchFilter");

create_item ("CDMA_PitchCdbkSelector","Optimal Pitch and Codebook Parameters Selector",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_PitchCdbkSelector",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fPitchCdbkSelector_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_PitchCdbkSelector",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("MinGain","minimum pitch gain",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("MaxGain","maximum pitch gain",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","2.0")),
	create_parm ("StepGain","step of pitch gain when searching",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.25")),
	create_parm ("MinLag","minimum pitch lag",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","17")),
	create_parm ("MaxLag","maximum pitch lag",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","143")),
	create_parm ("StepLag","step of pitch lag when searching",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("MinIndex","minimum codebook index",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("MaxIndex","maximum codebook index",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","127")),
	create_parm ("StepIndex","step of codebook index when searching",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("MperceptWghtFactor","weighting factor of perceptual weighted filter",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.8")),
	create_parm ("FSize","length of frame",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","160")),
	create_parm ("LpcOrder","order of LPC filter",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","10")),
	create_parm ("FirstFrameDiscardFlag","flag to indicate use of first frame: 1=discard, 0=process",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));
library_group("CDMA, CELP Codecs","CDMA, CELP Codecs","CDMA_PitchCdbkSelector");
palette_group("CDMA, CELP Codecs","CDMA, CELP Codecs","CDMA_PitchCdbkSelector");

create_item ("CDMA_PgFwdTrfIntlvr","Paging Channel and Forward Traffic Channel Interleaver",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_PgFwdTrfIntlvr",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fPgFwdTrfIntlvr_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_PgFwdTrfIntlvr",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_PgFwdTrfIntlvr");
palette_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_PgFwdTrfIntlvr");

create_item ("CDMA_PgFwdTrfDeintlvr","Paging Channel and Forward Traffic Channel Deinterleaver",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_PgFwdTrfDeintlvr",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fPgFwdTrfDeintlvr_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_PgFwdTrfDeintlvr",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_PgFwdTrfDeintlvr");
palette_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_PgFwdTrfDeintlvr");

create_item ("CDMA_PathCombiner","Base station Path Combiner",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_PathCombiner",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fPathCombiner_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_PathCombiner",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("MaxPathNum","maximum number of paths in rake combination",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")));
library_group("CDMA, Receivers","CDMA, Receivers","CDMA_PathCombiner");
palette_group("CDMA, Receivers","CDMA, Receivers","CDMA_PathCombiner");

create_item ("CDMA_PCBitExtraction","Extract Power Control Bit and Descramble Data",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_PCBitExtraction",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fPCBitExtraction_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_PCBitExtraction",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("CDMA, Transmission","CDMA, Transmission","CDMA_PCBitExtraction");
palette_group("CDMA, Transmission","CDMA, Transmission","CDMA_PCBitExtraction");

create_item ("CDMA_OneBitQuantizer","One-Bit Quantizer",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_OneBitQuantizer",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fOneBitQuantizer_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_OneBitQuantizer",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_OneBitQuantizer");
palette_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_OneBitQuantizer");

create_item ("CDMA_M_aryModulator","M-ary Modulator for Non-Coherent Detection",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_M_aryModulator",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fM_x5faryModulator_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_M_aryModulator",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("CDMA, Transmission","CDMA, Transmission","CDMA_M_aryModulator");
palette_group("CDMA, Transmission","CDMA, Transmission","CDMA_M_aryModulator");

create_item ("CDMA_MUX","MUX for Power Control Bit Pucture and Long Code Scrambling",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_MUX",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fMUX_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_MUX",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("CDMA, Transmission","CDMA, Transmission","CDMA_MUX");
palette_group("CDMA, Transmission","CDMA, Transmission","CDMA_MUX");

create_constant_form ("_nCDMA_x5fMSTX_fYes", 
	"Yes",
	0,
	"0",
	"Yes");
create_constant_form ("_nCDMA_x5fMSTX_fNo", 
	"No",
	0,
	"1",
	"No");
create_form_set("_nCDMA_x5fMSTX_fPowerControlSet",
	"_nCDMA_x5fMSTX_fYes",
	"_nCDMA_x5fMSTX_fNo",
	"StdForm");
create_constant_form ("_nCDMA_x5fMSTX_fBaseBand", 
	"BaseBand",
	0,
	"0",
	"BaseBand");
create_constant_form ("_nCDMA_x5fMSTX_fIntermidiateFrequency", 
	"IntermidiateFrequency",
	0,
	"1",
	"IntermidiateFrequency");
create_form_set("_nCDMA_x5fMSTX_fSignalTypeSet",
	"_nCDMA_x5fMSTX_fBaseBand",
	"_nCDMA_x5fMSTX_fIntermidiateFrequency",
	"StdForm");
create_item ("CDMA_MSTX","Mobile Station Transmitter",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_MSTX",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fMSTX_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_MSTX",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PowerControl","enable the Power Control: Yes, No",
		PARM_INT,
		"_nCDMA_x5fMSTX_fPowerControlSet",
		UNITLESS_UNIT,
		prm("_nCDMA_x5fMSTX_fYes","Yes")),
	create_parm ("MS_Power","mobile station maximum output power",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","4.0")),
	create_parm ("Init_Power","mobile station initial transmission power",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","1.0")),
	create_parm ("PowerStep","Mobile Station power adjustmnet step, unit: dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1.0")),
	create_parm ("BlockLength","number of chips for each power control group",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","24")),
	create_parm ("SignalType","type of input signal:BaseBand, IntermediateFrequency",
		PARM_INT,
		"_nCDMA_x5fMSTX_fSignalTypeSet",
		UNITLESS_UNIT,
		prm("_nCDMA_x5fMSTX_fBaseBand","BaseBand")));
library_group("CDMA, Transmission","CDMA, Transmission","CDMA_MSTX");
palette_group("CDMA, Transmission","CDMA, Transmission","CDMA_MSTX");

create_constant_form ("_nCDMA_x5fLongCodeGenerator_fTrafficChannel", 
	"TrafficChannel",
	0,
	"0",
	"TrafficChannel");
create_constant_form ("_nCDMA_x5fLongCodeGenerator_fAccessChannel", 
	"AccessChannel",
	0,
	"1",
	"AccessChannel");
create_constant_form ("_nCDMA_x5fLongCodeGenerator_fPagingChannel", 
	"PagingChannel",
	0,
	"2",
	"PagingChannel");
create_form_set("_nCDMA_x5fLongCodeGenerator_fChannelTypeSet",
	"_nCDMA_x5fLongCodeGenerator_fTrafficChannel",
	"_nCDMA_x5fLongCodeGenerator_fAccessChannel",
	"_nCDMA_x5fLongCodeGenerator_fPagingChannel",
	"StdForm");
create_item ("CDMA_LongCodeGenerator","Generation of Long Code with 42-bit Regster Status",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_LongCodeGenerator",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fLongCodeGenerator_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_LongCodeGenerator",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("ChannelType","channel type:TrafficChannel, AccessChannel, PagingChannel",
		PARM_INT,
		"_nCDMA_x5fLongCodeGenerator_fChannelTypeSet",
		UNITLESS_UNIT,
		prm("_nCDMA_x5fLongCodeGenerator_fTrafficChannel","TrafficChannel")),
	create_parm ("ACN","access channel number",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("PCN","paging channel number",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("BASE_ID","base station Identification",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("PILOT_PN","PN code offset for forward CDMA channel",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("ESN1","first 16-bit electronic serial number",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("ESN2","last 16-bit electronic serial number",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")));
library_group("CDMA, Transmission","CDMA, Transmission","CDMA_LongCodeGenerator");
palette_group("CDMA, Transmission","CDMA, Transmission","CDMA_LongCodeGenerator");

create_constant_form ("_nCDMA_x5fLogicToNRZ_fCDMA_x5fForward_x5fTraffic_x5fChannel", 
	"CDMA Forward Traffic Channel",
	0,
	"0",
	"CDMA Forward Traffic Channel");
create_constant_form ("_nCDMA_x5fLogicToNRZ_fCDMA_x5fReverse_x5fTraffic_x5fChannel", 
	"CDMA Reverse Traffic Channel",
	0,
	"1",
	"CDMA Reverse Traffic Channel");
create_constant_form ("_nCDMA_x5fLogicToNRZ_fOthers", 
	"Others",
	0,
	"2",
	"Others");
create_form_set("_nCDMA_x5fLogicToNRZ_fChannelTypeSet",
	"_nCDMA_x5fLogicToNRZ_fCDMA_x5fForward_x5fTraffic_x5fChannel",
	"_nCDMA_x5fLogicToNRZ_fCDMA_x5fReverse_x5fTraffic_x5fChannel",
	"_nCDMA_x5fLogicToNRZ_fOthers",
	"StdForm");
create_item ("CDMA_LogicToNRZ","Logic-to-NRZ Converter for CDMA systems",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_LogicToNRZ",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fLogicToNRZ_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_LogicToNRZ",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Amplitude","amplitude of NRZ binary signaling",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1.0")),
	create_parm ("ChannelType","channel type:CDMA Forward Traffic Channel, CDMA Reverse Traffic Channel, Others",
		PARM_INT,
		"_nCDMA_x5fLogicToNRZ_fChannelTypeSet",
		UNITLESS_UNIT,
		prm("_nCDMA_x5fLogicToNRZ_fOthers","Others")));
library_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_LogicToNRZ");
palette_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_LogicToNRZ");

create_item ("CDMA_LSP_ToLPC","LSP Frequencies to LPC Coefficients Converter",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_LSP_ToLPC",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fLSP_x5fToLPC_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_LSP_ToLPC",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("LSP_Increase","minimum LSP frequency spacing",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.01")),
	create_parm ("LpcOrder","order of LPC filter",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","10")),
	create_parm ("FirstFrameDiscardFlag","flag to indicate use of first frame: 1=discard, 0=process",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));
library_group("CDMA, CELP Codecs","CDMA, CELP Codecs","CDMA_LSP_ToLPC");
palette_group("CDMA, CELP Codecs","CDMA, CELP Codecs","CDMA_LSP_ToLPC");

create_item ("CDMA_LPC_ToLSP","LPC coefficients to LSP Frequencies Converter",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_LPC_ToLSP",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fLPC_x5fToLSP_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_LPC_ToLSP",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("LoopNumber","number of root searches in root scope [0,0.5]",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","800")),
	create_parm ("LpcOrder","order of LPC filter",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","10")),
	create_parm ("IterateNumber","number of iterations for converging to the root",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","100")));
library_group("CDMA, CELP Codecs","CDMA, CELP Codecs","CDMA_LPC_ToLSP");
palette_group("CDMA, CELP Codecs","CDMA, CELP Codecs","CDMA_LPC_ToLSP");

create_item ("CDMA_IncSource","Signal Source with Progressively Increasing Amplitude ",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_IncSource",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fIncSource_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_IncSource",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Step","increasing step",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("RepeaTime","symbol repeat times",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("InitValue","initial signal level",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("Max","maximum signal level",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","576")));
library_group("CDMA, Test","CDMA, Test","CDMA_IncSource");
palette_group("CDMA, Test","CDMA, Test","CDMA_IncSource");

create_item ("CDMA_HammingWindow","The Hamming Window for the Input Signal",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_HammingWindow",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fHammingWindow_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_HammingWindow",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("MultipleCoeff","coefficient used to amplify the output",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1.0")),
	create_parm ("FSize","length of signal frame",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","160")));
library_group("CDMA, CELP Codecs","CDMA, CELP Codecs","CDMA_HammingWindow");
palette_group("CDMA, CELP Codecs","CDMA, CELP Codecs","CDMA_HammingWindow");

create_item ("CDMA_GainPostFilter","Post filter to Enhance Quality of Reconstructed Speech Signal",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_GainPostFilter",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fGainPostFilter_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_GainPostFilter",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PF_Control","post filter control indicator: 1=on, 0=off",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("FSize","length of frame",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","160")),
	create_parm ("LpcOrder","order of LPC filter",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","10")),
	create_parm ("PF_ZeroWghtFactor","weighting factor of post zero filter",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.5")),
	create_parm ("PF_PoleWghtFactor","weighting factor of post pole filter",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.8")),
	create_parm ("AGC_Factor","interpolation factor of post gain",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.9375")),
	create_parm ("AGC_Num","number of subframes when computing post gain",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("FirstFrameDiscardFlag","flag to indicate use of first frame: 1=discard, 0=process",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));
library_group("CDMA, CELP Codecs","CDMA, CELP Codecs","CDMA_GainPostFilter");
palette_group("CDMA, CELP Codecs","CDMA, CELP Codecs","CDMA_GainPostFilter");

create_constant_form ("_nCDMA_x5fFwdChnlSounder_fMultipathSearcher", 
	"MultipathSearcher",
	0,
	"0",
	"MultipathSearcher");
create_constant_form ("_nCDMA_x5fFwdChnlSounder_fTest", 
	"Test",
	0,
	"1",
	"Test");
create_form_set("_nCDMA_x5fFwdChnlSounder_fModeSet",
	"_nCDMA_x5fFwdChnlSounder_fMultipathSearcher",
	"_nCDMA_x5fFwdChnlSounder_fTest",
	"StdForm");
create_item ("CDMA_FwdChnlSounder","Channel Sounder on Pilot Channel for IS95 CDMA System Forward Link Receiver",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_FwdChnlSounder",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fFwdChnlSounder_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_FwdChnlSounder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("NSymblChE","number of consumed symbols for channel estimation in each firing",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("NSymblIni","number of initial ineffective input symbols from the preceding model",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("NFinger","number of Rake receiver finger",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")),
	create_parm ("PN_Offset","offset (in terms of chips) of PN code between base and mobile stations",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("Distance","distance between transmit and receive antennas",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DISTANCE_UNIT,
		prm("StdForm","7.0")),
	create_parm ("Mode","model mode function: MultipathSearcher and Test",
		PARM_INT,
		"_nCDMA_x5fFwdChnlSounder_fModeSet",
		UNITLESS_UNIT,
		prm("_nCDMA_x5fFwdChnlSounder_fMultipathSearcher","MultipathSearcher")),
	create_parm ("SampleRatio","number of samples per chip",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("MaxChSpread","maximum multipath channel delay spread",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","1.45e-5")),
	create_parm ("ChipRate","transmitted chip rate, in terms of chips per second",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1.2288e6")));
library_group("CDMA, Receivers","CDMA, Receivers","CDMA_FwdChnlSounder");
palette_group("CDMA, Receivers","CDMA, Receivers","CDMA_FwdChnlSounder");

create_item ("CDMA_FreqShifter","Carrier Frequency Offset Shifter",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_FreqShifter",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fFreqShifter_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_FreqShifter",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("NConsume","number of received signal tokens consumed in one firing (in terms of samples for this model)",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4096")),
	create_parm ("NfshftInputPeriod","number of input signal tokens to be shifted based on the frequency shift value",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","256")),
	create_parm ("NIniFire","number of initial ineffective firings, =3 if used after AFC part",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")));
library_group("CDMA, Receivers","CDMA, Receivers","CDMA_FreqShifter");
palette_group("CDMA, Receivers","CDMA, Receivers","CDMA_FreqShifter");

create_item ("CDMA_FreqErrEstimate","Carrier Frequency Error Estimation of Received Signal Relative to BS Transmitter",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_FreqErrEstimate",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fFreqErrEstimate_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_FreqErrEstimate",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("NSymblChE","number of consumed symbols for channel estimation in each firing",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("NSymblIni","number of initial ineffective input symbols from the preceding model",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("NFinger","number of Rake receiver finger",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")),
	create_parm ("PN_Offset","offset (in terms of chips) of PN code between base and mobile stations",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("Distance","distance between transmit and receive antennas",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DISTANCE_UNIT,
		prm("StdForm","7.0")),
	create_parm ("SampleRatio","number of samples per chip",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")));
library_group("CDMA, Receivers","CDMA, Receivers","CDMA_FreqErrEstimate");
palette_group("CDMA, Receivers","CDMA, Receivers","CDMA_FreqErrEstimate");

create_item ("CDMA_FormantFilter","LPC Filter to Reconstruct Speech Signal",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_FormantFilter",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fFormantFilter_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_FormantFilter",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("FSize","length of frame",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","160")),
	create_parm ("LpcOrder","order of LPC filter",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","10")),
	create_parm ("FirstFrameDiscardFlag","flag to indicate use of first frame: 1=discard, 0=process",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));
library_group("CDMA, CELP Codecs","CDMA, CELP Codecs","CDMA_FormantFilter");
palette_group("CDMA, CELP Codecs","CDMA, CELP Codecs","CDMA_FormantFilter");

create_item ("CDMA_ErrorRate","Error Rate Estimation",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_ErrorRate",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fErrorRate_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_ErrorRate",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("TestLength","test length",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","192")));
library_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_ErrorRate");
palette_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_ErrorRate");

create_item ("CDMA_EraseTail","Tail bits eraser",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_EraseTail",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fEraseTail_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_EraseTail",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("TailLength","tail length",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("InputFrameLen","input frame length",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","96")));
library_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_EraseTail");
palette_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_EraseTail");

create_item ("CDMA_DurbinRecursion","Computing LPC Coefficients using Durbin's Recursion",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_DurbinRecursion",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fDurbinRecursion_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_DurbinRecursion",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("LpcOrder","order of LPC coefficients",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","10")),
	create_parm ("BETA","scale factor",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.9883")));
library_group("CDMA, CELP Codecs","CDMA, CELP Codecs","CDMA_DurbinRecursion");
palette_group("CDMA, CELP Codecs","CDMA, CELP Codecs","CDMA_DurbinRecursion");

create_item ("CDMA_DataUnPack","Unpack Data Packet into Parameters",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_DataUnPack",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fDataUnPack_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_DataUnPack",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("LpcOrder","order of LPC filter",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","10")));
library_group("CDMA, CELP Codecs","CDMA, CELP Codecs","CDMA_DataUnPack");
palette_group("CDMA, CELP Codecs","CDMA, CELP Codecs","CDMA_DataUnPack");

create_item ("CDMA_DataRandomizer","Data Burst Randomizer and Long Code Spreader for Forward Link",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_DataRandomizer",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fDataRandomizer_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_DataRandomizer",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("CDMA, Transmission","CDMA, Transmission","CDMA_DataRandomizer");
palette_group("CDMA, Transmission","CDMA, Transmission","CDMA_DataRandomizer");

create_item ("CDMA_DataPack","Pack Transmission Codes into a Data Packet",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_DataPack",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fDataPack_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_DataPack",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("LpcOrder","order of LPC filter",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","10")));
library_group("CDMA, CELP Codecs","CDMA, CELP Codecs","CDMA_DataPack");
palette_group("CDMA, CELP Codecs","CDMA, CELP Codecs","CDMA_DataPack");

create_constant_form ("_nCDMA_x5fDCC_x5fWithTail_frate_x5f1_x5f2_x5fK_x5f9_x5fg0_x5f0753_x5fg1_x5f0561", 
	"rate 1/2 K 9 g0 0753 g1 0561",
	0,
	"0",
	"rate 1/2 K 9 g0 0753 g1 0561");
create_constant_form ("_nCDMA_x5fDCC_x5fWithTail_frate_x5f1_x5f3_x5fK_x5f9_x5fg0_x5f0557_x5fg1_x5f0663_x5fg2_x5f0711", 
	"rate 1/3 K 9 g0 0557 g1 0663 g2 0711",
	0,
	"1",
	"rate 1/3 K 9 g0 0557 g1 0663 g2 0711");
create_constant_form ("_nCDMA_x5fDCC_x5fWithTail_frate_x5f1_x5f2_x5fK_x5f7_x5fg0_x5f0554_x5fg1_x5f0744", 
	"rate 1/2 K 7 g0 0554 g1 0744",
	0,
	"2",
	"rate 1/2 K 7 g0 0554 g1 0744");
create_constant_form ("_nCDMA_x5fDCC_x5fWithTail_frate_x5f1_x5f3_x5fK_x5f7_x5fg0_x5f0554_x5fg1_x5f0624_x5fg2_x5f0764", 
	"rate 1/3 K 7 g0 0554 g1 0624 g2 0764",
	0,
	"3",
	"rate 1/3 K 7 g0 0554 g1 0624 g2 0764");
create_constant_form ("_nCDMA_x5fDCC_x5fWithTail_frate_x5f1_x5f2_x5fK_x5f5_x5fg0_x5f046_x5fg1_x5f072", 
	"rate 1/2 K 5 g0 046 g1 072",
	0,
	"4",
	"rate 1/2 K 5 g0 046 g1 072");
create_constant_form ("_nCDMA_x5fDCC_x5fWithTail_frate_x5f1_x5f3_x5fK_x5f5_x5fg0_x5f066_x5fg1_x5f052_x5fg2_x5f076", 
	"rate 1/3 K 5 g0 066 g1 052 g2 076",
	0,
	"5",
	"rate 1/3 K 5 g0 066 g1 052 g2 076");
create_constant_form ("_nCDMA_x5fDCC_x5fWithTail_frate_x5f1_x5f2_x5fK_x5f5_x5fg0_x5f046_x5fg1_x5f066", 
	"rate 1/2 K 5 g0 046 g1 066",
	0,
	"6",
	"rate 1/2 K 5 g0 046 g1 066");
create_constant_form ("_nCDMA_x5fDCC_x5fWithTail_frate_x5f1_x5f6_x5fK_x5f5_x5fg0_x5f066_x5fg1_x5f052_x5fg2_x5f076_x5fg3_x5f066_x5fg4_x5f052_x5fg5_x5f076", 
	"rate 1/6 K 5 g0 066 g1 052 g2 076 g3 066 g4 052 g5 076",
	0,
	"7",
	"rate 1/6 K 5 g0 066 g1 052 g2 076 g3 066 g4 052 g5 076");
create_constant_form ("_nCDMA_x5fDCC_x5fWithTail_frate_x5f1_x5f2_x5fK_x5f3_x5fg0_x5f05_x5fg1_x5f07", 
	"rate 1/2 K 3 g0 05 g1 07",
	0,
	"8",
	"rate 1/2 K 3 g0 05 g1 07");
create_form_set("_nCDMA_x5fDCC_x5fWithTail_fCCTypeSet",
	"_nCDMA_x5fDCC_x5fWithTail_frate_x5f1_x5f2_x5fK_x5f9_x5fg0_x5f0753_x5fg1_x5f0561",
	"_nCDMA_x5fDCC_x5fWithTail_frate_x5f1_x5f3_x5fK_x5f9_x5fg0_x5f0557_x5fg1_x5f0663_x5fg2_x5f0711",
	"_nCDMA_x5fDCC_x5fWithTail_frate_x5f1_x5f2_x5fK_x5f7_x5fg0_x5f0554_x5fg1_x5f0744",
	"_nCDMA_x5fDCC_x5fWithTail_frate_x5f1_x5f3_x5fK_x5f7_x5fg0_x5f0554_x5fg1_x5f0624_x5fg2_x5f0764",
	"_nCDMA_x5fDCC_x5fWithTail_frate_x5f1_x5f2_x5fK_x5f5_x5fg0_x5f046_x5fg1_x5f072",
	"_nCDMA_x5fDCC_x5fWithTail_frate_x5f1_x5f3_x5fK_x5f5_x5fg0_x5f066_x5fg1_x5f052_x5fg2_x5f076",
	"_nCDMA_x5fDCC_x5fWithTail_frate_x5f1_x5f2_x5fK_x5f5_x5fg0_x5f046_x5fg1_x5f066",
	"_nCDMA_x5fDCC_x5fWithTail_frate_x5f1_x5f6_x5fK_x5f5_x5fg0_x5f066_x5fg1_x5f052_x5fg2_x5f076_x5fg3_x5f066_x5fg4_x5f052_x5fg5_x5f076",
	"_nCDMA_x5fDCC_x5fWithTail_frate_x5f1_x5f2_x5fK_x5f3_x5fg0_x5f05_x5fg1_x5f07",
	"StdForm");
create_item ("CDMA_DCC_WithTail","Viterbi Decoder for Convolutional Code with Tail",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_DCC_WithTail",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fDCC_x5fWithTail_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_DCC_WithTail",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("CCType","convolutional code type",
		PARM_INT,
		"_nCDMA_x5fDCC_x5fWithTail_fCCTypeSet",
		UNITLESS_UNIT,
		prm("_nCDMA_x5fDCC_x5fWithTail_frate_x5f1_x5f2_x5fK_x5f9_x5fg0_x5f0753_x5fg1_x5f0561","rate_1_2_K_9_g0_0753_g1_0561")),
	create_parm ("InputFrameLen","input frame length",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","288")));
library_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_DCC_WithTail");
palette_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_DCC_WithTail");

create_constant_form ("_nCDMA_x5fCycCodeEncoder_fall_x5f0_x5fs", 
	"all 0's",
	0,
	"0",
	"all 0's");
create_constant_form ("_nCDMA_x5fCycCodeEncoder_fall_x5f1_x5fs", 
	"all 1's",
	0,
	"1",
	"all 1's");
create_form_set("_nCDMA_x5fCycCodeEncoder_fInitialStateSet",
	"_nCDMA_x5fCycCodeEncoder_fall_x5f0_x5fs",
	"_nCDMA_x5fCycCodeEncoder_fall_x5f1_x5fs",
	"StdForm");
create_item ("CDMA_CycCodeEncoder","Cyclic Code Encoder",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_CycCodeEncoder",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fCycCodeEncoder_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_CycCodeEncoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Polynomial","generator polynomial",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0x1f13")),
	create_parm ("InitialState","initial state of encoder",
		PARM_INT,
		"_nCDMA_x5fCycCodeEncoder_fInitialStateSet",
		UNITLESS_UNIT,
		prm("_nCDMA_x5fCycCodeEncoder_fall_x5f0_x5fs","all_0_s")),
	create_parm ("Vn","length of data to be encoded",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","172")));
library_group("CDMA, Test","CDMA, Test","CDMA_CycCodeEncoder");
palette_group("CDMA, Test","CDMA, Test","CDMA_CycCodeEncoder");

create_item ("CDMA_CoherentRake","Coherent Rake Receiver",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_CoherentRake",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fCoherentRake_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_CoherentRake",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("NSymblChE","number of consumed symbols for channel estimation in each firing",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("NSymblIni","number of initial ineffective input symbols from the preceding model",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("NFinger","number of Rake receiver finger",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")),
	create_parm ("PN_Offset","offset (in terms of chips) of PN code between base and mobile stations",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("SampleRatio","number of samples per chip",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("WalshIndex","Walsh code index",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")));
library_group("CDMA, Receivers","CDMA, Receivers","CDMA_CoherentRake");
palette_group("CDMA, Receivers","CDMA, Receivers","CDMA_CoherentRake");

create_constant_form ("_nCDMA_x5fCC_x5fWithTail_frate_x5f1_x5f2_x5fK_x5f9_x5fg0_x5f0753_x5fg1_x5f0561", 
	"rate 1/2 K 9 g0 0753 g1 0561",
	0,
	"0",
	"rate 1/2 K 9 g0 0753 g1 0561");
create_constant_form ("_nCDMA_x5fCC_x5fWithTail_frate_x5f1_x5f3_x5fK_x5f9_x5fg0_x5f0557_x5fg1_x5f0663_x5fg2_x5f0711", 
	"rate 1/3 K 9 g0 0557 g1 0663 g2 0711",
	0,
	"1",
	"rate 1/3 K 9 g0 0557 g1 0663 g2 0711");
create_constant_form ("_nCDMA_x5fCC_x5fWithTail_frate_x5f1_x5f2_x5fK_x5f7_x5fg0_x5f0554_x5fg1_x5f0744", 
	"rate 1/2 K 7 g0 0554 g1 0744",
	0,
	"2",
	"rate 1/2 K 7 g0 0554 g1 0744");
create_constant_form ("_nCDMA_x5fCC_x5fWithTail_frate_x5f1_x5f3_x5fK_x5f7_x5fg0_x5f0554_x5fg1_x5f0624_x5fg2_x5f0764", 
	"rate 1/3 K 7 g0 0554 g1 0624 g2 0764",
	0,
	"3",
	"rate 1/3 K 7 g0 0554 g1 0624 g2 0764");
create_constant_form ("_nCDMA_x5fCC_x5fWithTail_frate_x5f1_x5f2_x5fK_x5f5_x5fg0_x5f046_x5fg1_x5f072", 
	"rate 1/2 K 5 g0 046 g1 072",
	0,
	"4",
	"rate 1/2 K 5 g0 046 g1 072");
create_constant_form ("_nCDMA_x5fCC_x5fWithTail_frate_x5f1_x5f3_x5fK_x5f5_x5fg0_x5f066_x5fg1_x5f052_x5fg2_x5f076", 
	"rate 1/3 K 5 g0 066 g1 052 g2 076",
	0,
	"5",
	"rate 1/3 K 5 g0 066 g1 052 g2 076");
create_constant_form ("_nCDMA_x5fCC_x5fWithTail_frate_x5f1_x5f2_x5fK_x5f5_x5fg0_x5f046_x5fg1_x5f066", 
	"rate 1/2 K 5 g0 046 g1 066",
	0,
	"6",
	"rate 1/2 K 5 g0 046 g1 066");
create_constant_form ("_nCDMA_x5fCC_x5fWithTail_frate_x5f1_x5f6_x5fK_x5f5_x5fg0_x5f066_x5fg1_x5f052_x5fg2_x5f076_x5fg3_x5f066_x5fg4_x5f052_x5fg5_x5f076", 
	"rate 1/6 K 5 g0 066 g1 052 g2 076 g3 066 g4 052 g5 076",
	0,
	"7",
	"rate 1/6 K 5 g0 066 g1 052 g2 076 g3 066 g4 052 g5 076");
create_constant_form ("_nCDMA_x5fCC_x5fWithTail_frate_x5f1_x5f2_x5fK_x5f3_x5fg0_x5f05_x5fg1_x5f07", 
	"rate 1/2 K 3 g0 05 g1 07",
	0,
	"8",
	"rate 1/2 K 3 g0 05 g1 07");
create_form_set("_nCDMA_x5fCC_x5fWithTail_fCCTypeSet",
	"_nCDMA_x5fCC_x5fWithTail_frate_x5f1_x5f2_x5fK_x5f9_x5fg0_x5f0753_x5fg1_x5f0561",
	"_nCDMA_x5fCC_x5fWithTail_frate_x5f1_x5f3_x5fK_x5f9_x5fg0_x5f0557_x5fg1_x5f0663_x5fg2_x5f0711",
	"_nCDMA_x5fCC_x5fWithTail_frate_x5f1_x5f2_x5fK_x5f7_x5fg0_x5f0554_x5fg1_x5f0744",
	"_nCDMA_x5fCC_x5fWithTail_frate_x5f1_x5f3_x5fK_x5f7_x5fg0_x5f0554_x5fg1_x5f0624_x5fg2_x5f0764",
	"_nCDMA_x5fCC_x5fWithTail_frate_x5f1_x5f2_x5fK_x5f5_x5fg0_x5f046_x5fg1_x5f072",
	"_nCDMA_x5fCC_x5fWithTail_frate_x5f1_x5f3_x5fK_x5f5_x5fg0_x5f066_x5fg1_x5f052_x5fg2_x5f076",
	"_nCDMA_x5fCC_x5fWithTail_frate_x5f1_x5f2_x5fK_x5f5_x5fg0_x5f046_x5fg1_x5f066",
	"_nCDMA_x5fCC_x5fWithTail_frate_x5f1_x5f6_x5fK_x5f5_x5fg0_x5f066_x5fg1_x5f052_x5fg2_x5f076_x5fg3_x5f066_x5fg4_x5f052_x5fg5_x5f076",
	"_nCDMA_x5fCC_x5fWithTail_frate_x5f1_x5f2_x5fK_x5f3_x5fg0_x5f05_x5fg1_x5f07",
	"StdForm");
create_item ("CDMA_CC_WithTail","Convolutional Encoder with tail",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_CC_WithTail",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fCC_x5fWithTail_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_CC_WithTail",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("CCType","convolutional code type",
		PARM_INT,
		"_nCDMA_x5fCC_x5fWithTail_fCCTypeSet",
		UNITLESS_UNIT,
		prm("_nCDMA_x5fCC_x5fWithTail_frate_x5f1_x5f2_x5fK_x5f9_x5fg0_x5f0753_x5fg1_x5f0561","rate_1_2_K_9_g0_0753_g1_0561")),
	create_parm ("InputFrameLen","input frame length",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","96")));
library_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_CC_WithTail");
palette_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_CC_WithTail");

create_constant_form ("_nCDMA_x5fBitCC_frate_x5f1_x5f2_x5fK_x5f9_x5fg0_x5f0753_x5fg1_x5f0561", 
	"rate 1/2 K 9 g0 0753 g1 0561",
	0,
	"0",
	"rate 1/2 K 9 g0 0753 g1 0561");
create_constant_form ("_nCDMA_x5fBitCC_frate_x5f1_x5f3_x5fK_x5f9_x5fg0_x5f0557_x5fg1_x5f0663_x5fg2_x5f0711", 
	"rate 1/3 K 9 g0 0557 g1 0663 g2 0711",
	0,
	"1",
	"rate 1/3 K 9 g0 0557 g1 0663 g2 0711");
create_constant_form ("_nCDMA_x5fBitCC_frate_x5f1_x5f2_x5fK_x5f7_x5fg0_x5f0554_x5fg1_x5f0744", 
	"rate 1/2 K 7 g0 0554 g1 0744",
	0,
	"2",
	"rate 1/2 K 7 g0 0554 g1 0744");
create_constant_form ("_nCDMA_x5fBitCC_frate_x5f1_x5f3_x5fK_x5f7_x5fg0_x5f0554_x5fg1_x5f0624_x5fg2_x5f0764", 
	"rate 1/3 K 7 g0 0554 g1 0624 g2 0764",
	0,
	"3",
	"rate 1/3 K 7 g0 0554 g1 0624 g2 0764");
create_constant_form ("_nCDMA_x5fBitCC_frate_x5f1_x5f2_x5fK_x5f5_x5fg0_x5f046_x5fg1_x5f072", 
	"rate 1/2 K 5 g0 046 g1 072",
	0,
	"4",
	"rate 1/2 K 5 g0 046 g1 072");
create_constant_form ("_nCDMA_x5fBitCC_frate_x5f1_x5f3_x5fK_x5f5_x5fg0_x5f066_x5fg1_x5f052_x5fg2_x5f076", 
	"rate 1/3 K 5 g0 066 g1 052 g2 076",
	0,
	"5",
	"rate 1/3 K 5 g0 066 g1 052 g2 076");
create_constant_form ("_nCDMA_x5fBitCC_frate_x5f1_x5f2_x5fK_x5f5_x5fg0_x5f046_x5fg1_x5f066", 
	"rate 1/2 K 5 g0 046 g1 066",
	0,
	"6",
	"rate 1/2 K 5 g0 046 g1 066");
create_constant_form ("_nCDMA_x5fBitCC_frate_x5f1_x5f6_x5fK_x5f5_x5fg0_x5f066_x5fg1_x5f052_x5fg2_x5f076_x5fg3_x5f066_x5fg4_x5f052_x5fg5_x5f076", 
	"rate 1/6 K 5 g0 066 g1 052 g2 076 g3 066 g4 052 g5 076",
	0,
	"7",
	"rate 1/6 K 5 g0 066 g1 052 g2 076 g3 066 g4 052 g5 076");
create_constant_form ("_nCDMA_x5fBitCC_frate_x5f1_x5f2_x5fK_x5f3_x5fg0_x5f05_x5fg1_x5f07", 
	"rate 1/2 K 3 g0 05 g1 07",
	0,
	"8",
	"rate 1/2 K 3 g0 05 g1 07");
create_form_set("_nCDMA_x5fBitCC_fCCTypeSet",
	"_nCDMA_x5fBitCC_frate_x5f1_x5f2_x5fK_x5f9_x5fg0_x5f0753_x5fg1_x5f0561",
	"_nCDMA_x5fBitCC_frate_x5f1_x5f3_x5fK_x5f9_x5fg0_x5f0557_x5fg1_x5f0663_x5fg2_x5f0711",
	"_nCDMA_x5fBitCC_frate_x5f1_x5f2_x5fK_x5f7_x5fg0_x5f0554_x5fg1_x5f0744",
	"_nCDMA_x5fBitCC_frate_x5f1_x5f3_x5fK_x5f7_x5fg0_x5f0554_x5fg1_x5f0624_x5fg2_x5f0764",
	"_nCDMA_x5fBitCC_frate_x5f1_x5f2_x5fK_x5f5_x5fg0_x5f046_x5fg1_x5f072",
	"_nCDMA_x5fBitCC_frate_x5f1_x5f3_x5fK_x5f5_x5fg0_x5f066_x5fg1_x5f052_x5fg2_x5f076",
	"_nCDMA_x5fBitCC_frate_x5f1_x5f2_x5fK_x5f5_x5fg0_x5f046_x5fg1_x5f066",
	"_nCDMA_x5fBitCC_frate_x5f1_x5f6_x5fK_x5f5_x5fg0_x5f066_x5fg1_x5f052_x5fg2_x5f076_x5fg3_x5f066_x5fg4_x5f052_x5fg5_x5f076",
	"_nCDMA_x5fBitCC_frate_x5f1_x5f2_x5fK_x5f3_x5fg0_x5f05_x5fg1_x5f07",
	"StdForm");
create_item ("CDMA_BitCC","Bit-By-Bit Convolutional Encoder",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_BitCC",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fBitCC_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_BitCC",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("CCType","convolutional code type",
		PARM_INT,
		"_nCDMA_x5fBitCC_fCCTypeSet",
		UNITLESS_UNIT,
		prm("_nCDMA_x5fBitCC_frate_x5f1_x5f2_x5fK_x5f9_x5fg0_x5f0753_x5fg1_x5f0561","rate_1_2_K_9_g0_0753_g1_0561")));
library_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_BitCC");
palette_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_BitCC");

create_constant_form ("_nCDMA_x5fBSTX_fBaseBand", 
	"BaseBand",
	0,
	"0",
	"BaseBand");
create_constant_form ("_nCDMA_x5fBSTX_fIntermidiateFrequency", 
	"IntermidiateFrequency",
	0,
	"1",
	"IntermidiateFrequency");
create_form_set("_nCDMA_x5fBSTX_fSignalTypeSet",
	"_nCDMA_x5fBSTX_fBaseBand",
	"_nCDMA_x5fBSTX_fIntermidiateFrequency",
	"StdForm");
create_item ("CDMA_BSTX","Base Station Transmitter",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_BSTX",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fBSTX_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_BSTX",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("BS_Power","base station transmission power",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","10.0")),
	create_parm ("BlockLength","number of chips for each control group",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","24")),
	create_parm ("SignalType","type of input signal",
		PARM_INT,
		"_nCDMA_x5fBSTX_fSignalTypeSet",
		UNITLESS_UNIT,
		prm("_nCDMA_x5fBSTX_fBaseBand","BaseBand")));
library_group("CDMA, Transmission","CDMA, Transmission","CDMA_BSTX");
palette_group("CDMA, Transmission","CDMA, Transmission","CDMA_BSTX");

create_item ("CDMA_BSSearcher","Base Station Rake Searcher",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_BSSearcher",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fBSSearcher_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_BSSearcher",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("MaxPathNum","maximum number of paths in Rake combination",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")),
	create_parm ("MaxChannelPathNum","range for searching strongest paths",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","30")));
library_group("CDMA, Receivers","CDMA, Receivers","CDMA_BSSearcher");
palette_group("CDMA, Receivers","CDMA, Receivers","CDMA_BSSearcher");

create_item ("CDMA_BSRateconverter","Rake Receiver Output Converter for Sending to Viterbi Decoder",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_BSRateconverter",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fBSRateconverter_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_BSRateconverter",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("DataRate","data rate",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));
library_group("CDMA, Receivers","CDMA, Receivers","CDMA_BSRateconverter");
palette_group("CDMA, Receivers","CDMA, Receivers","CDMA_BSRateconverter");

create_item ("CDMA_BSFinger","Base Station Rake Finger",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_BSFinger",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fBSFinger_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_BSFinger",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("MaxPathNum","maximum number of paths in Rake combination",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")),
	create_parm ("MaxChannelPathNum","range for searching stronger paths",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","30")),
	create_parm ("FingerIndex","finger number",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")));
library_group("CDMA, Receivers","CDMA, Receivers","CDMA_BSFinger");
palette_group("CDMA, Receivers","CDMA, Receivers","CDMA_BSFinger");

create_item ("CDMA_BER","Real Time Error Rate Estimation",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_BER",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fBER_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_BER",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Ini","number of initial ineffective symbols not accounted for in BER calculation",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")));
library_group("CDMA, Test","CDMA, Test","CDMA_BER");
palette_group("CDMA, Test","CDMA, Test","CDMA_BER");

create_item ("CDMA_Autocorrelation","Autocorrelation Function Computation",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_Autocorrelation",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fAutocorrelation_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_Autocorrelation",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("NoLag","order of autocorrelation function",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","11")),
	create_parm ("NoSamplesToAvg","number of input samples to use",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","160")));
library_group("CDMA, CELP Codecs","CDMA, CELP Codecs","CDMA_Autocorrelation");
palette_group("CDMA, CELP Codecs","CDMA, CELP Codecs","CDMA_Autocorrelation");

create_item ("CDMA_AddTail","Tail bits adder",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_AddTail",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fAddTail_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_AddTail",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("FrameLength","input frame length",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","88")),
	create_parm ("TailLength","tail bits length",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")));
library_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_AddTail");
palette_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_AddTail");

create_item ("CDMA_AccessIntlvr","Access Channel Interleaver",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_AccessIntlvr",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fAccessIntlvr_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_AccessIntlvr",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_AccessIntlvr");
palette_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_AccessIntlvr");

create_item ("CDMA_AccessDeintlvr","Access Channel Deinterleaver",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_AccessDeintlvr",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fAccessDeintlvr_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_AccessDeintlvr",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_AccessDeintlvr");
palette_group("CDMA, Channel Codecs","CDMA, Channel Codecs","CDMA_AccessDeintlvr");

create_item ("CDMA_AWGN_Ch","AWGN Channel",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CDMA_AWGN_Ch",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCDMA_x5fAWGN_x5fCh_lsdfcdmastars",
	SPComponentAnnotFmt,
	"SYM_CDMA_AWGN_Ch",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("EbNoRatio","initial Eb/No of AWGN",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("FrameNumberA","first frame in which Eb/No interval is to remain constant",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","100")),
	create_parm ("FrameNumberB","second frame in which Eb/No interval is to remain constant",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","100")),
	create_parm ("FrameSymbolNum","number of symbols in each frame",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","576")),
	create_parm ("SymbolPerBit","number of symbols per bit",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","2.0")),
	create_parm ("Step","step for increasing Eb/No, in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1.0")));
library_group("CDMA, Test","CDMA, Test","CDMA_AWGN_Ch");
palette_group("CDMA, Test","CDMA, Test","CDMA_AWGN_Ch");

