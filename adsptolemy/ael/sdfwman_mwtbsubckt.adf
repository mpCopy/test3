set_design_type( sigproc_net );


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fPeak_x5fpower", 
	"Peak power",
	0,
	"0",
	"Peak power");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fBurst_x5fpower_x5fwhen_x5fall_x5fsubchs_x5foccupied", 
	"Burst power when all subchs occupied",
	0,
	"1",
	"Burst power when all subchs occupied");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fPowerTypeSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fPeak_x5fpower",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fBurst_x5fpower_x5fwhen_x5fall_x5fsubchs_x5foccupied",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fRatio_x5f1", 
	"Ratio 1",
	0,
	"0",
	"Ratio 1");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fRatio_x5f2", 
	"Ratio 2",
	0,
	"1",
	"Ratio 2");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fRatio_x5f4", 
	"Ratio 4",
	0,
	"2",
	"Ratio 4");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fRatio_x5f8", 
	"Ratio 8",
	0,
	"3",
	"Ratio 8");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fRatio_x5f16", 
	"Ratio 16",
	0,
	"4",
	"Ratio 16");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fRatio_x5f32", 
	"Ratio 32",
	0,
	"5",
	"Ratio 32");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fOversamplingOptionSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fRatio_x5f1",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fRatio_x5f2",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fRatio_x5f4",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fRatio_x5f8",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fRatio_x5f16",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fRatio_x5f32",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fFFT_x5f2048", 
	"FFT_2048",
	0,
	"0",
	"2048");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fFFT_x5f1024", 
	"FFT_1024",
	0,
	"1",
	"1024");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fFFT_x5f512", 
	"FFT_512",
	0,
	"2",
	"512");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fFFTSizeSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fFFT_x5f2048",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fFFT_x5f1024",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fFFT_x5f512",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fFDD", 
	"FDD",
	0,
	"0",
	"FDD");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fTDD", 
	"TDD",
	0,
	"1",
	"TDD");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fFrameModeSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fFDD",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fTDD",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_ftime_x5f2_x5fms", 
	"time 2 ms",
	0,
	"0",
	"time 2 ms");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_ftime_x5f2_x5f5_x5fms", 
	"time 2.5 ms",
	0,
	"1",
	"time 2.5 ms");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_ftime_x5f4_x5fms", 
	"time 4 ms",
	0,
	"2",
	"time 4 ms");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_ftime_x5f5_x5fms", 
	"time 5 ms",
	0,
	"3",
	"time 5 ms");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_ftime_x5f8_x5fms", 
	"time 8 ms",
	0,
	"4",
	"time 8 ms");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_ftime_x5f10_x5fms", 
	"time 10 ms",
	0,
	"5",
	"time 10 ms");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_ftime_x5f12_x5f5_x5fms", 
	"time 12.5 ms",
	0,
	"6",
	"time 12.5 ms");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_ftime_x5f20_x5fms", 
	"time 20 ms",
	0,
	"7",
	"time 20 ms");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fFrameDurationSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_ftime_x5f2_x5fms",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_ftime_x5f2_x5f5_x5fms",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_ftime_x5f4_x5fms",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_ftime_x5f5_x5fms",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_ftime_x5f8_x5fms",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_ftime_x5f10_x5fms",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_ftime_x5f12_x5f5_x5fms",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_ftime_x5f20_x5fms",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fPN9", 
	"PN9",
	0,
	"0",
	"PN9");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fPN15", 
	"PN15",
	0,
	"1",
	"PN15");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fFIX4", 
	"FIX4",
	0,
	"2",
	"FIX4");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_f_x5f4_x5f1_x5f4_x5f0", 
	"_4_1_4_0",
	0,
	"3",
	"_4_1_4_0");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_f_x5f8_x5f1_x5f8_x5f0", 
	"_8_1_8_0",
	0,
	"4",
	"_8_1_8_0");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_f_x5f16_x5f1_x5f16_x5f0", 
	"_16_1_16_0",
	0,
	"5",
	"_16_1_16_0");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_f_x5f32_x5f1_x5f32_x5f0", 
	"_32_1_32_0",
	0,
	"6",
	"_32_1_32_0");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_f_x5f64_x5f1_x5f64_x5f0", 
	"_64_1_64_0",
	0,
	"7",
	"_64_1_64_0");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fS_x5fQPSK", 
	"S_QPSK",
	0,
	"8",
	"S_QPSK");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fS_x5f16_x5fQAM", 
	"S_16-QAM",
	0,
	"9",
	"S_16-QAM");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fS_x5f64_x5fQAM", 
	"S_64-QAM",
	0,
	"10",
	"S_64-QAM");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fDataPatternSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fPN9",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fPN15",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fFIX4",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_f_x5f4_x5f1_x5f4_x5f0",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_f_x5f8_x5f1_x5f8_x5f0",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_f_x5f16_x5f1_x5f16_x5f0",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_f_x5f32_x5f1_x5f32_x5f0",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_f_x5f64_x5f1_x5f64_x5f0",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fS_x5fQPSK",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fS_x5f16_x5fQAM",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fS_x5f64_x5fQAM",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fUL_x5fPUSC", 
	"UL_PUSC",
	0,
	"0",
	"UL_PUSC");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fUL_x5fOPUSC", 
	"UL_OPUSC",
	0,
	"1",
	"UL_OPUSC");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fUL_x5fAMC", 
	"UL_AMC",
	0,
	"2",
	"UL_AMC");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fZoneTypeSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fUL_x5fPUSC",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fUL_x5fOPUSC",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fUL_x5fAMC",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fEnableFrameGatingSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fNO",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fEnableFrameMarkersSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fNO",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fData_x5fZone", 
	"Data Zone",
	0,
	"0",
	"Data Zone");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fSegmentMeasuredSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fData_x5fZone",
	"StdForm");


create_item ("WMAN_UL_802_16e_RF_PAE","WMAN Uplink 802.16e RF PAE measurement",
	"WMAN_UL_802_16e_RF_PAE",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST | ITEM_UNIQUE,
	-1,
	"BMP_WMAN_UL_802_16e_RF_PAE",
	"Component Parameters",
	NULL,
	ARFWTBNetlistFmt,
	"WMAN_UL_802_16e_RF_PAE",
	SPDesignAnnotFmt,
	"SYM_DSN_WMAN_UL_802_16e_RF_PAE",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("RequiredParameters","Required Parameters",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("CE_TimeStep","Circuit envelope simulation time step",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","1/11.2 MHz/2")),
	create_parm ("WTB_TimeStep","Set CE_TimeStep<=1/RF_SamplingRate. <br> RF_SamplingRate depends on Bandwidth and OversamplingOption, see help doc for more information.",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("FSource","Source carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","3407 MHz")),
	create_parm ("SourcePower","Source power",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","0.01 W")),
	create_parm ("FMeasurement","Measurement carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","3407 MHz")),
	create_parm ("BasicParameters","Basic Parameters",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("SourceR","Source resistance",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50 Ohm")),
	create_parm ("MeasR","Measurement resistance",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50 Ohm")),
	create_parm ("SignalParameters","Signal Parameters",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("PowerType","Power definition (Peak power in frame, Burst power when all subchs occupied)",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fPowerTypeSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fPeak_x5fpower","Peak_power")),
	create_parm ("Bandwidth","Nominal bandwidth",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","10 MHz")),
	create_parm ("OversamplingOption","Oversampling ratio option",
		PARM_INT,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fOversamplingOptionSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fRatio_x5f2","Ratio_2")),
	create_parm ("FFTSize","FFT size",
		PARM_INT,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fFFTSizeSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fFFT_x5f1024","FFT_1024")),
	create_parm ("CyclicPrefix","Cyclic prefix",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.125")),
	create_parm ("FrameMode","Frame mode",
		PARM_INT,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fFrameModeSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fFDD","FDD")),
	create_parm ("DL_Ratio","Downlink ratio",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.5")),
	create_parm ("FrameDuration","Frame duration",
		PARM_INT,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fFrameDurationSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_ftime_x5f5_x5fms","time_5_ms")),
	create_parm ("DataPattern","WMAN data pattern",
		PARM_INT,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fDataPatternSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fPN9","PN9")),
	create_parm ("ZoneType","Zone type",
		PARM_INT,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fZoneTypeSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fUL_x5fPUSC","UL_PUSC")),
	create_parm ("ZoneNumOfSym","Number of OFDM symbol in zone",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","24")),
	create_parm ("NumberOfBurst","Number of bursts",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("BurstWithFEC","Number of burst with FEC",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("BurstSymOffset","Symbol offset of each burst",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0}")),
	create_parm ("BurstSubchOffset","Subchannel offset of each burst",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0}")),
	create_parm ("BurstAssignedSlot","Assigned slots of each burst",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{96}")),
	create_parm ("DataLength","MAC PDU payload byte length of each burst",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{300}")),
	create_parm ("CodingType","Coding type of each burst",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0}")),
	create_parm ("Rate_ID","Rate ID of each burst",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{3}")),
	create_parm ("RepetitionCoding","Repetition coding of each burst",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0}")),
	create_parm ("BurstPowerOffset","Power offset of each burst in dB",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0}")),
	create_parm ("MeasurementParameters","PAE Measurement",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("VDC_Low","Low DC bias voltage",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		VOLTAGE_UNIT,
		prm("StdForm","2.0")),
	create_parm ("VDC_High","High DC bias voltage",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		VOLTAGE_UNIT,
		prm("StdForm","5.8")),
	create_parm ("EnableFrameGating","Enable frame measurement gating",
		PARM_INT,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fEnableFrameGatingSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fYES","YES")),
	create_parm ("EnableFrameMarkers","Enable frame measurement gating",
		PARM_INT,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fEnableFrameMarkersSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fYES","YES")),
	create_parm ("InitialStartUpDelay","Source signal delay before first frame starts",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","0")),
	create_parm ("SegmentMeasured","Which region is measured per frame (used when EnableFrameGating=YES)",
		PARM_INT,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fSegmentMeasuredSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fRF_x5fPAE_fData_x5fZone","Data_Zone")),
	create_parm ("NumFramesMeasured","Number of frames measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));



create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fPeak_x5fpower", 
	"Peak power",
	0,
	"0",
	"Peak power");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fBurst_x5fpower_x5fwhen_x5fall_x5fsubchs_x5foccupied", 
	"Burst power when all subchs occupied",
	0,
	"1",
	"Burst power when all subchs occupied");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fBurst_x5fpower_x5fwith_x5fallocated_x5fsubchs", 
	"Burst power with allocated subchs",
	0,
	"2",
	"Burst power with allocated subchs");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fPowerTypeSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fPeak_x5fpower",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fBurst_x5fpower_x5fwhen_x5fall_x5fsubchs_x5foccupied",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fBurst_x5fpower_x5fwith_x5fallocated_x5fsubchs",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fRatio_x5f1", 
	"Ratio 1",
	0,
	"0",
	"Ratio 1");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fRatio_x5f2", 
	"Ratio 2",
	0,
	"1",
	"Ratio 2");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fRatio_x5f4", 
	"Ratio 4",
	0,
	"2",
	"Ratio 4");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fRatio_x5f8", 
	"Ratio 8",
	0,
	"3",
	"Ratio 8");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fRatio_x5f16", 
	"Ratio 16",
	0,
	"4",
	"Ratio 16");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fRatio_x5f32", 
	"Ratio 32",
	0,
	"5",
	"Ratio 32");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fOversamplingOptionSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fRatio_x5f1",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fRatio_x5f2",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fRatio_x5f4",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fRatio_x5f8",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fRatio_x5f16",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fRatio_x5f32",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fFFT_x5f2048", 
	"FFT_2048",
	0,
	"0",
	"2048");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fFFT_x5f1024", 
	"FFT_1024",
	0,
	"1",
	"1024");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fFFT_x5f512", 
	"FFT_512",
	0,
	"2",
	"512");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fFFTSizeSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fFFT_x5f2048",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fFFT_x5f1024",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fFFT_x5f512",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fFDD", 
	"FDD",
	0,
	"0",
	"FDD");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fTDD", 
	"TDD",
	0,
	"1",
	"TDD");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fFrameModeSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fFDD",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fTDD",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_ftime_x5f2_x5fms", 
	"time 2 ms",
	0,
	"0",
	"time 2 ms");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_ftime_x5f2_x5f5_x5fms", 
	"time 2.5 ms",
	0,
	"1",
	"time 2.5 ms");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_ftime_x5f4_x5fms", 
	"time 4 ms",
	0,
	"2",
	"time 4 ms");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_ftime_x5f5_x5fms", 
	"time 5 ms",
	0,
	"3",
	"time 5 ms");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_ftime_x5f8_x5fms", 
	"time 8 ms",
	0,
	"4",
	"time 8 ms");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_ftime_x5f10_x5fms", 
	"time 10 ms",
	0,
	"5",
	"time 10 ms");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_ftime_x5f12_x5f5_x5fms", 
	"time 12.5 ms",
	0,
	"6",
	"time 12.5 ms");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_ftime_x5f20_x5fms", 
	"time 20 ms",
	0,
	"7",
	"time 20 ms");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fFrameDurationSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_ftime_x5f2_x5fms",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_ftime_x5f2_x5f5_x5fms",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_ftime_x5f4_x5fms",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_ftime_x5f5_x5fms",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_ftime_x5f8_x5fms",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_ftime_x5f10_x5fms",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_ftime_x5f12_x5f5_x5fms",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_ftime_x5f20_x5fms",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fDLMAP_x5fEnableSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fNO",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fULMAP_x5fEnableSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fNO",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fPN9", 
	"PN9",
	0,
	"0",
	"PN9");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fPN15", 
	"PN15",
	0,
	"1",
	"PN15");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fFIX4", 
	"FIX4",
	0,
	"2",
	"FIX4");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_f_x5f4_x5f1_x5f4_x5f0", 
	"_4_1_4_0",
	0,
	"3",
	"_4_1_4_0");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_f_x5f8_x5f1_x5f8_x5f0", 
	"_8_1_8_0",
	0,
	"4",
	"_8_1_8_0");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_f_x5f16_x5f1_x5f16_x5f0", 
	"_16_1_16_0",
	0,
	"5",
	"_16_1_16_0");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_f_x5f32_x5f1_x5f32_x5f0", 
	"_32_1_32_0",
	0,
	"6",
	"_32_1_32_0");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_f_x5f64_x5f1_x5f64_x5f0", 
	"_64_1_64_0",
	0,
	"7",
	"_64_1_64_0");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fS_x5fQPSK", 
	"S_QPSK",
	0,
	"8",
	"S_QPSK");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fS_x5f16_x5fQAM", 
	"S_16-QAM",
	0,
	"9",
	"S_16-QAM");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fS_x5f64_x5fQAM", 
	"S_64-QAM",
	0,
	"10",
	"S_64-QAM");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fDataPatternSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fPN9",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fPN15",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fFIX4",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_f_x5f4_x5f1_x5f4_x5f0",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_f_x5f8_x5f1_x5f8_x5f0",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_f_x5f16_x5f1_x5f16_x5f0",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_f_x5f32_x5f1_x5f32_x5f0",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_f_x5f64_x5f1_x5f64_x5f0",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fS_x5fQPSK",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fS_x5f16_x5fQAM",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fS_x5f64_x5fQAM",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fDL_x5fPUSC", 
	"DL_PUSC",
	0,
	"0",
	"DL_PUSC");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fDL_x5fFUSC", 
	"DL_FUSC",
	0,
	"1",
	"DL_FUSC");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fDL_x5fOFUSC", 
	"DL_OFUSC",
	0,
	"2",
	"DL_OFUSC");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fZoneTypeSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fDL_x5fPUSC",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fDL_x5fFUSC",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fDL_x5fOFUSC",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fEnableFrameGatingSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fNO",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fEnableFrameMarkersSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fNO",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fPreamble", 
	"Preamble",
	0,
	"0",
	"Preamble");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fFCH_x5fMAP", 
	"FCH/MAP",
	0,
	"1",
	"FCH/MAP");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fData_x5fZone", 
	"Data Zone",
	0,
	"2",
	"Data Zone");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fPreamble_x5fFCH_x5fMAP", 
	"Preamble+FCH/MAP",
	0,
	"3",
	"Preamble+FCH/MAP");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fPreamble_x5fFCH_x5fMAP_x5fDataZone", 
	"Preamble+FCH/MAP+DataZone",
	0,
	"4",
	"Preamble+FCH/MAP+DataZone");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fSegmentMeasuredSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fPreamble",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fFCH_x5fMAP",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fData_x5fZone",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fPreamble_x5fFCH_x5fMAP",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fPreamble_x5fFCH_x5fMAP_x5fDataZone",
	"StdForm");


create_item ("WMAN_DL_802_16e_RF_PAE","WMAN Downlink 802.16e RF PAE measurement",
	"WMAN_DL_802_16e_RF_PAE",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST | ITEM_UNIQUE,
	-1,
	"BMP_WMAN_DL_802_16e_RF_PAE",
	"Component Parameters",
	NULL,
	ARFWTBNetlistFmt,
	"WMAN_DL_802_16e_RF_PAE",
	SPDesignAnnotFmt,
	"SYM_DSN_WMAN_DL_802_16e_RF_PAE",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("RequiredParameters","Required Parameters",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("CE_TimeStep","Circuit envelope simulation time step",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","1/11.2 MHz/2")),
	create_parm ("WTB_TimeStep","Set CE_TimeStep<=1/RF_SamplingRate. <br> RF_SamplingRate depends on Bandwidth and OversamplingOption, see help doc for more information.",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("FSource","Source carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","3407 MHz")),
	create_parm ("SourcePower","Source power",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","0.01 W")),
	create_parm ("FMeasurement","Measurement carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","3407 MHz")),
	create_parm ("BasicParameters","Basic Parameters",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("SourceR","Source resistance",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50 Ohm")),
	create_parm ("MeasR","Measurement resistance",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50 Ohm")),
	create_parm ("SignalParameters","Signal Parameters",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("PowerType","Power definition (Peak power in frame, Burst power when all subchs occupied, Burst power with allocated subchs)",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fPowerTypeSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fPeak_x5fpower","Peak_power")),
	create_parm ("Bandwidth","Nominal bandwidth",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","10 MHz")),
	create_parm ("OversamplingOption","Oversampling ratio option",
		PARM_INT,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fOversamplingOptionSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fRatio_x5f2","Ratio_2")),
	create_parm ("FFTSize","FFT size",
		PARM_INT,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fFFTSizeSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fFFT_x5f1024","FFT_1024")),
	create_parm ("CyclicPrefix","Cyclic prefix",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.125")),
	create_parm ("FrameMode","Frame mode",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fFrameModeSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fFDD","FDD")),
	create_parm ("DL_Ratio","Downlink Ratio in TDD mode",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.5")),
	create_parm ("FrameDuration","Frame duration",
		PARM_INT,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fFrameDurationSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_ftime_x5f5_x5fms","time_5_ms")),
	create_parm ("DLMAP_Enable","DLMAP is inserted or not",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fDLMAP_x5fEnableSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fNO","NO")),
	create_parm ("ULMAP_Enable","ULMAP is inserted or not",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fULMAP_x5fEnableSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fNO","NO")),
	create_parm ("DataPattern","WMAN data pattern",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fDataPatternSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fPN9","PN9")),
	create_parm ("ZoneType","Zone type",
		PARM_INT,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fZoneTypeSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fDL_x5fPUSC","DL_PUSC")),
	create_parm ("ZoneNumOfSym","Number of OFDM symbols in zone",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","22")),
	create_parm ("GroupBitmask","Used subchannel bitmaps",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1, 1, 1, 1, 1, 1}")),
	create_parm ("NumberOfBurst","Number of Bursts",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("BurstWithFEC","The number of burst with FEC",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("BurstSymOffset","Symbol offset of each burst",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{2}")),
	create_parm ("BurstSubchOffset","Subchannel offset of each burst",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0}")),
	create_parm ("BurstNumOfSym","Number of symbols of each burst",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{20}")),
	create_parm ("BurstNumOfSubch","Number of subchannels of each burst",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{30}")),
	create_parm ("DataLength","MAC PDU payload byte length of each burst",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{200}")),
	create_parm ("CodingType","Coding type of each burst",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0}")),
	create_parm ("Rate_ID","Rate ID of each burst",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{5}")),
	create_parm ("RepetitionCoding","Repetition coding of each burst",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0}")),
	create_parm ("PowerBoosting","Power boosting of each burst in dB",
		PARM_REALARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0}")),
	create_parm ("MeasurementParameters","PAE Measurement",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("VDC_Low","Low DC bias voltage",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		VOLTAGE_UNIT,
		prm("StdForm","2.0")),
	create_parm ("VDC_High","High DC bias voltage",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		VOLTAGE_UNIT,
		prm("StdForm","5.8")),
	create_parm ("EnableFrameGating","Enable frame measurement gating",
		PARM_INT,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fEnableFrameGatingSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fYES","YES")),
	create_parm ("EnableFrameMarkers","Enable frame measurement gating",
		PARM_INT,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fEnableFrameMarkersSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fYES","YES")),
	create_parm ("InitialStartUpDelay","Source signal delay before first frame starts",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","0")),
	create_parm ("SegmentMeasured","Which region is measured per frame (used when EnableFrameGating=YES)",
		PARM_INT,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fSegmentMeasuredSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fRF_x5fPAE_fPreamble_x5fFCH_x5fMAP_x5fDataZone","Preamble_FCH_MAP_DataZone")),
	create_parm ("NumFramesMeasured","Number of frames measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));



create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fRF_x5fEnvelopeMeasurementSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fConstellationSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fPowerMeasurementSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fSpectrumMeasurementSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fEVM_x5fMeasurementSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fEnableSourceNoiseSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fMirrorSourceSpectrumSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fMirrorMeasSpectrumSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fRF_x5fMirrorFreqSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fMeasMirrorFreqSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fRatio_x5f1", 
	"Ratio 1",
	0,
	"0",
	"Ratio 1");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fRatio_x5f2", 
	"Ratio 2",
	0,
	"1",
	"Ratio 2");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fRatio_x5f4", 
	"Ratio 4",
	0,
	"2",
	"Ratio 4");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fRatio_x5f8", 
	"Ratio 8",
	0,
	"3",
	"Ratio 8");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fRatio_x5f16", 
	"Ratio 16",
	0,
	"4",
	"Ratio 16");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fRatio_x5f32", 
	"Ratio 32",
	0,
	"5",
	"Ratio 32");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fOversamplingOptionSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fRatio_x5f1",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fRatio_x5f2",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fRatio_x5f4",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fRatio_x5f8",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fRatio_x5f16",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fRatio_x5f32",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fFFT_x5f2048", 
	"FFT_2048",
	0,
	"0",
	"2048");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fFFT_x5f1024", 
	"FFT_1024",
	0,
	"1",
	"1024");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fFFT_x5f512", 
	"FFT_512",
	0,
	"2",
	"512");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fFFTSizeSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fFFT_x5f2048",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fFFT_x5f1024",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fFFT_x5f512",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fFDD", 
	"FDD",
	0,
	"0",
	"FDD");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fTDD", 
	"TDD",
	0,
	"1",
	"TDD");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fFrameModeSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fFDD",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fTDD",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_ftime_x5f2_x5fms", 
	"time 2 ms",
	0,
	"0",
	"time 2 ms");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_ftime_x5f2_x5f5_x5fms", 
	"time 2.5 ms",
	0,
	"1",
	"time 2.5 ms");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_ftime_x5f4_x5fms", 
	"time 4 ms",
	0,
	"2",
	"time 4 ms");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_ftime_x5f5_x5fms", 
	"time 5 ms",
	0,
	"3",
	"time 5 ms");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_ftime_x5f8_x5fms", 
	"time 8 ms",
	0,
	"4",
	"time 8 ms");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_ftime_x5f10_x5fms", 
	"time 10 ms",
	0,
	"5",
	"time 10 ms");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_ftime_x5f12_x5f5_x5fms", 
	"time 12.5 ms",
	0,
	"6",
	"time 12.5 ms");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_ftime_x5f20_x5fms", 
	"time 20 ms",
	0,
	"7",
	"time 20 ms");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fFrameDurationSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_ftime_x5f2_x5fms",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_ftime_x5f2_x5f5_x5fms",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_ftime_x5f4_x5fms",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_ftime_x5f5_x5fms",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_ftime_x5f8_x5fms",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_ftime_x5f10_x5fms",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_ftime_x5f12_x5f5_x5fms",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_ftime_x5f20_x5fms",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fFrameIncreasedSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fPN9", 
	"PN9",
	0,
	"0",
	"PN9");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fPN15", 
	"PN15",
	0,
	"1",
	"PN15");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fFIX4", 
	"FIX4",
	0,
	"2",
	"FIX4");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_f_x5f4_x5f1_x5f4_x5f0", 
	"_4_1_4_0",
	0,
	"3",
	"_4_1_4_0");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_f_x5f8_x5f1_x5f8_x5f0", 
	"_8_1_8_0",
	0,
	"4",
	"_8_1_8_0");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_f_x5f16_x5f1_x5f16_x5f0", 
	"_16_1_16_0",
	0,
	"5",
	"_16_1_16_0");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_f_x5f32_x5f1_x5f32_x5f0", 
	"_32_1_32_0",
	0,
	"6",
	"_32_1_32_0");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_f_x5f64_x5f1_x5f64_x5f0", 
	"_64_1_64_0",
	0,
	"7",
	"_64_1_64_0");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fS_x5fQPSK", 
	"S_QPSK",
	0,
	"8",
	"S_QPSK");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fS_x5f16_x5fQAM", 
	"S_16-QAM",
	0,
	"9",
	"S_16-QAM");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fS_x5f64_x5fQAM", 
	"S_64-QAM",
	0,
	"10",
	"S_64-QAM");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fDataPatternSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fPN9",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fPN15",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fFIX4",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_f_x5f4_x5f1_x5f4_x5f0",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_f_x5f8_x5f1_x5f8_x5f0",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_f_x5f16_x5f1_x5f16_x5f0",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_f_x5f32_x5f1_x5f32_x5f0",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_f_x5f64_x5f1_x5f64_x5f0",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fS_x5fQPSK",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fS_x5f16_x5fQAM",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fS_x5f64_x5fQAM",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fAutoMACHeaderSettingSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fMSB_x5ffirst", 
	"MSB first",
	0,
	"0",
	"MSB first");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fLSB_x5ffirst", 
	"LSB first",
	0,
	"1",
	"LSB first");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fCRC32_x5fModeSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fMSB_x5ffirst",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fLSB_x5ffirst",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fUL_x5fPUSC", 
	"UL_PUSC",
	0,
	"0",
	"UL_PUSC");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fUL_x5fOPUSC", 
	"UL_OPUSC",
	0,
	"1",
	"UL_OPUSC");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fZoneTypeSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fUL_x5fPUSC",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fUL_x5fOPUSC",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fnone", 
	"none",
	0,
	"0",
	"none");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fHamming_x5f0_x5f54", 
	"Hamming 0.54",
	0,
	"1",
	"Hamming 0.54");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fHanning_x5f0_x5f50", 
	"Hanning 0.50",
	0,
	"2",
	"Hanning 0.50");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fGaussian_x5f0_x5f75", 
	"Gaussian 0.75",
	0,
	"3",
	"Gaussian 0.75");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fKaiser_x5f7_x5f865", 
	"Kaiser 7.865",
	0,
	"4",
	"Kaiser 7.865");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_f_x5f8510_x5f6_x5f0", 
	"_8510 6.0",
	0,
	"5",
	"8510 6.0");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fBlackman", 
	"Blackman",
	0,
	"6",
	"Blackman");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fBlackman_x5fHarris", 
	"Blackman-Harris",
	0,
	"7",
	"Blackman-Harris");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fSpecMeasWindowSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fnone",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fHamming_x5f0_x5f54",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fHanning_x5f0_x5f50",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fGaussian_x5f0_x5f75",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fKaiser_x5f7_x5f865",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_f_x5f8510_x5f6_x5f0",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fBlackman",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fBlackman_x5fHarris",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fOff", 
	"Off",
	0,
	"0",
	"Off");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fRMS_x5f_x5fVideo_x5f", 
	"RMS (Video)",
	0,
	"1",
	"RMS (Video)");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fEVM_x5fAverageTypeSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fOff",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fRMS_x5f_x5fVideo_x5f",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fEVM_x5fPulseSearchSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fEVM_x5fTrackAmplitudeSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fEVM_x5fTrackPhaseSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fEVM_x5fTrackTimingSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fEVM_x5fExtendFrequencyLockRangeSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fChan_x5fEstimation_x5fSeq_x5fOnly", 
	"Chan Estimation Seq Only",
	0,
	"0",
	"Chan Estimation Seq Only");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fChan_x5fEstimation_x5fSeq_x5f_x5f_x5fData", 
	"Chan Estimation Seq & Data",
	0,
	"1",
	"Chan Estimation Seq & Data");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fChan_x5fEstimation_x5fSeq_x5f_x5f_x5fPilots", 
	"Chan Estimation Seq & Pilots",
	0,
	"2",
	"Chan Estimation Seq & Pilots");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fEVM_x5fEqualizerTrainingSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fChan_x5fEstimation_x5fSeq_x5fOnly",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fChan_x5fEstimation_x5fSeq_x5f_x5f_x5fData",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fChan_x5fEstimation_x5fSeq_x5f_x5f_x5fPilots",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fEnableESGSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fInternal", 
	"Internal",
	0,
	"0",
	"Internal");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fExternal", 
	"External",
	0,
	"1",
	"External");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fESG_x5fClkRefSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fInternal",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fExternal",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fthrough", 
	"through",
	0,
	"0",
	"through");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_ffilter_x5f2100kHz", 
	"filter_2100kHz",
	0,
	"1",
	"filter_2100kHz");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_ffilter_x5f40MHz", 
	"filter_40MHz",
	0,
	"2",
	"filter_40MHz");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fESG_x5fIQFilterSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fthrough",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_ffilter_x5f2100kHz",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_ffilter_x5f40MHz",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fESG_x5fAutoScalingSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fESG_x5fArbOnSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fESG_x5fRFPowOnSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNeither", 
	"Neither",
	0,
	"0",
	"Neither");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fEvent1", 
	"Event1",
	0,
	"1",
	"Event1");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fEvent2", 
	"Event2",
	0,
	"2",
	"Event2");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fBoth", 
	"Both",
	0,
	"3",
	"Both");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fESG_x5fEventMarkerTypeSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNeither",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fEvent1",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fEvent2",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fBoth",
	"StdForm");


create_item ("WMAN_UL_802_16e_TX","WMAN Uplink 802.16e TX test",
	"WMAN_UL_802_16e_TX",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST | ITEM_UNIQUE,
	-1,
	"BMP_WMAN_UL_802_16e_TX",
	"Component Parameters",
	NULL,
	ARFWTBNetlistFmt,
	"WMAN_UL_802_16e_TX",
	SPDesignAnnotFmt,
	"SYM_DSN_WMAN_UL_802_16e_TX",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("RequiredParameters","Required Parameters",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("CE_TimeStep","Circuit envelope simulation time step",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","1/11.2 MHz/4")),
	create_parm ("WTB_TimeStep","Set CE_TimeStep<=1/RF_SamplingRate. <br> Expression variables are in Signal Parameters tab/category.",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("FSource","Source carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","3407 MHz")),
	create_parm ("SourcePower","Source power",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","0.01 W")),
	create_parm ("FMeasurement","Measurement carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","3407 MHz")),
	create_parm ("MeasurementInfo","Available Measurements <br> Each measurement has parameters on its tab/category below.",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("RF_EnvelopeMeasurement","Enable RF envelope measurement?",
		PARM_INT,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fRF_x5fEnvelopeMeasurementSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES","YES")),
	create_parm ("Constellation","Enable constellation measurement?",
		PARM_INT,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fConstellationSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO","NO")),
	create_parm ("PowerMeasurement","Enable power measurement?",
		PARM_INT,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fPowerMeasurementSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO","NO")),
	create_parm ("SpectrumMeasurement","Enable spectrum measurement?",
		PARM_INT,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fSpectrumMeasurementSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO","NO")),
	create_parm ("EVM_Measurement","Enable EVM measurement?",
		PARM_INT,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fEVM_x5fMeasurementSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO","NO")),
	create_parm ("BasicParameters","Basic Parameters",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("SourceR","Source resistance",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50 Ohm")),
	create_parm ("SourceTemp","Source resistor temperature",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		TEMPERATURE_UNIT,
		prm("StdForm","-273.15")),
	create_parm ("EnableSourceNoise","Enable source thermal noise?",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fEnableSourceNoiseSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO","NO")),
	create_parm ("MeasR","Measurement resistance",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50 Ohm")),
	create_parm ("MirrorSourceSpectrum","Mirror source spectrum about carrier?",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fMirrorSourceSpectrumSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO","NO")),
	create_parm ("MirrorMeasSpectrum","Mirror meas spectrum about carrier?",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fMirrorMeasSpectrumSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO","NO")),
	create_parm ("RF_MirrorFreq","Mirror source frequency for spectrum/envelope measurement?",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fRF_x5fMirrorFreqSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO","NO")),
	create_parm ("MeasMirrorFreq","Mirror meas frequency for spectrum/envelope measurement?",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fMeasMirrorFreqSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO","NO")),
	create_parm ("TestBenchSeed","Random number generator seed",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1234567")),
	create_parm ("SignalParameters","Signal Parameters",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("GainImbalance","Gain imbalance, Q vs I",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0.0")),
	create_parm ("PhaseImbalance","Phase imbalance, Q vs I",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		ANGLE_UNIT,
		prm("StdForm","0.0")),
	create_parm ("I_OriginOffset","I origin offset (percent)",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("Q_OriginOffset","Q origin offset (percent)",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("IQ_Rotation","IQ rotation",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		ANGLE_UNIT,
		prm("StdForm","0.0")),
	create_parm ("Bandwidth","Nominal bandwidth",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","10 MHz")),
	create_parm ("OversamplingOption","Oversampling ratio option",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fOversamplingOptionSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fRatio_x5f2","Ratio_2")),
	create_parm ("FFTSize","FFT size",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fFFTSizeSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fFFT_x5f1024","FFT_1024")),
	create_parm ("CyclicPrefix","Cyclic prefix",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.125")),
	create_parm ("FrameMode","Frame mode",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fFrameModeSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fTDD","TDD")),
	create_parm ("DL_Ratio","Downlink Ratio in TDD mode",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.5")),
	create_parm ("FrameDuration","Frame duration",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fFrameDurationSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_ftime_x5f5_x5fms","time_5_ms")),
	create_parm ("PreambleIndex","Preamble index",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")),
	create_parm ("FrameNumber","Frame number",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("FrameIncreased","Frame number increasing or not",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fFrameIncreasedSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO","NO")),
	create_parm ("UL_PermBase","Uplink permutation base",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("DataPattern","WMAN data pattern",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fDataPatternSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fPN9","PN9")),
	create_parm ("AutoMACHeaderSetting","Auto MAC header setting or not",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fAutoMACHeaderSettingSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES","YES")),
	create_parm ("MAC_Header","MAC header data",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0XA2, 0X48, 0X22, 0X4F, 0X93, 0X0E}")),
	create_parm ("CRC32_Mode","CRC32 mode",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fCRC32_x5fModeSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fMSB_x5ffirst","MSB_first")),
	create_parm ("ZoneType","Zone type",
		PARM_INT,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fZoneTypeSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fUL_x5fPUSC","UL_PUSC")),
	create_parm ("ZoneNumOfSym","Number of OFDM symbol in zone",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","24")),
	create_parm ("NumberOfBurst","Number of Bursts",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("BurstWithFEC","The number of burst with FEC",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("BurstSymOffset","Symbol offset of each burst",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0}")),
	create_parm ("BurstSubchOffset","Subchannel offset of each burst",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0}")),
	create_parm ("BurstAssignedSlot","Assigned slots of each burst",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{96}")),
	create_parm ("DataLength","MAC PDU payload byte length of each burst",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{200}")),
	create_parm ("CodingType","Coding type of each burst",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0}")),
	create_parm ("Rate_ID","Rate ID of each burst",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{5}")),
	create_parm ("RepetitionCoding","Repetition coding of each burst",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0}")),
	create_parm ("BurstPowerOffset","Power offset of each burst in dB",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0}")),
	create_parm ("RF_EnvelopeMeasurementParameters","RF Envelope Measurement",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("RF_EnvelopeDisplayPages","RF envelope measurement display pages: <br> WMAN_DL_802_16e_TX Envelope RF Figures <br> WMAN_DL_802_16e_TX Envelope Meas Figures <br> WMAN_DL_802_16e_TX Envelope Equations",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("RF_EnvelopeStart","RF envelope measurement start",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","0.0")),
	create_parm ("RF_EnvelopeStop","RF envelope measurement stop",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","100.0 usec")),
	create_parm ("ConstellationParameters","Constellation",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("ConstellationDisplayPages","Constellation measurement display pages: <br> WMAN_DL_802_16e_TX Constellation Figures",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("PowerMeasurementParameters","Power Measurement",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("PowerDisplayPages","Power measurement display pages: <br> WMAN_DL_802_16e_TX Power Figures/Tables/Equations",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("PowerBursts","Power measurement bursts",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")),
	create_parm ("SpectrumMeasurementParameters","Spectrum Measurement",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("SpectrumDisplayPages","Spectrum  measurement display pages: <br> WMAN_DL_802_16e_TX Spectrum Equations <br> WMAN_DL_802_16e_TX Spectrum Figures/Tables",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("SpecMeasStart","Spectrum measurement start",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","0.0")),
	create_parm ("SpecMeasStop","Spectrum measurement stop",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","100.0 usec")),
	create_parm ("SpecMeasResBW","Spectrum resolution bandwidth",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","100 kHz")),
	create_parm ("SpecMeasWindow","Window type",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fSpecMeasWindowSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fKaiser_x5f7_x5f865","Kaiser_7_865")),
	create_parm ("EVM_MeasurementParameters","EVM Measurement",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("EVM_DisplayPages","EVM measurement display pages: <br> WMAN_DL_802_16e_TX EVM Tables",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("EVM_Start","EVM measurement start",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","0.0")),
	create_parm ("EVM_AverageType","Average type",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fEVM_x5fAverageTypeSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fRMS_x5f_x5fVideo_x5f","RMS__Video_")),
	create_parm ("EVM_FramesToAverage","Frames used for RMS averaging",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","5")),
	create_parm ("EVM_PulseSearch","Perform pulse search?",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fEVM_x5fPulseSearchSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES","YES")),
	create_parm ("EVM_SymbolTimingAdjust","Symbol timing adjustment (in % of FFT time)",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-3.125")),
	create_parm ("EVM_TrackAmplitude","Track amplitude?",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fEVM_x5fTrackAmplitudeSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO","NO")),
	create_parm ("EVM_TrackPhase","Track phase?",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fEVM_x5fTrackPhaseSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES","YES")),
	create_parm ("EVM_TrackTiming","Track timing?",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fEVM_x5fTrackTimingSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO","NO")),
	create_parm ("EVM_ExtendFrequencyLockRange","Extend frequency lock range?",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fEVM_x5fExtendFrequencyLockRangeSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO","NO")),
	create_parm ("EVM_EqualizerTraining","Equalizer training method",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fEVM_x5fEqualizerTrainingSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fChan_x5fEstimation_x5fSeq_x5fOnly","Chan_Estimation_Seq_Only")),
	create_parm ("SignalToESG_Parameters","Signal to ESG",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("EnableESG","Enable signal to ESG?",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fEnableESGSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fNO","NO")),
	create_parm ("ESG_Instrument","ESG instrument address",
		PARM_STRING | PARM_NO_DISPLAY,
		"InstrumentFormSet",
		UNITLESS_UNIT,
		prm("InstrumentForm","\"[GPIB0::19::INSTR][localhost][4790]\"")),
	create_parm ("ESG_Start","Signal start",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","0.0")),
	create_parm ("ESG_Stop","Signal stop",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","100.0 usec")),
	create_parm ("ESG_Bursts","Bursts to ESG",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")),
	create_parm ("ESG_Power","ESG RF ouput power (dBm)",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-20.0")),
	create_parm ("ESG_ClkRef","Waveform clock reference",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fESG_x5fClkRefSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fInternal","Internal")),
	create_parm ("ESG_ExtClkRefFreq","External clock reference freq",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","10 MHz")),
	create_parm ("ESG_IQFilter","IQ filter",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fESG_x5fIQFilterSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fthrough","through")),
	create_parm ("ESG_SampleClkRate","Sequencer sample clock rate",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","80 MHz")),
	create_parm ("ESG_Filename","ESG waveform storage filename",
		PARM_STRING | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"WMAN_UL_16e\"")),
	create_parm ("ESG_AutoScaling","Activate auto scaling?",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fESG_x5fAutoScalingSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES","YES")),
	create_parm ("ESG_ArbOn","Select waveform and turn ArbOn after download?",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fESG_x5fArbOnSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES","YES")),
	create_parm ("ESG_RFPowOn","Turn RF ON after download?",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fESG_x5fRFPowOnSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fYES","YES")),
	create_parm ("ESG_EventMarkerType","Event marker type",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fESG_x5fEventMarkerTypeSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fTX_fEvent1","Event1")),
	create_parm ("ESG_MarkerLength","ESG marker length",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","10")));



create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fRF_x5fEnvelopeMeasurementSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fConstellationSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fPowerMeasurementSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fSpectrumMeasurementSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fEVM_x5fMeasurementSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fEnableSourceNoiseSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fMirrorSourceSpectrumSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fMirrorMeasSpectrumSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fRF_x5fMirrorFreqSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fMeasMirrorFreqSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fRatio_x5f1", 
	"Ratio 1",
	0,
	"0",
	"Ratio 1");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fRatio_x5f2", 
	"Ratio 2",
	0,
	"1",
	"Ratio 2");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fRatio_x5f4", 
	"Ratio 4",
	0,
	"2",
	"Ratio 4");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fRatio_x5f8", 
	"Ratio 8",
	0,
	"3",
	"Ratio 8");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fRatio_x5f16", 
	"Ratio 16",
	0,
	"4",
	"Ratio 16");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fRatio_x5f32", 
	"Ratio 32",
	0,
	"5",
	"Ratio 32");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fOversamplingOptionSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fRatio_x5f1",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fRatio_x5f2",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fRatio_x5f4",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fRatio_x5f8",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fRatio_x5f16",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fRatio_x5f32",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fFFT_x5f2048", 
	"FFT_2048",
	0,
	"0",
	"2048");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fFFT_x5f1024", 
	"FFT_1024",
	0,
	"1",
	"1024");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fFFT_x5f512", 
	"FFT_512",
	0,
	"2",
	"512");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fFFTSizeSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fFFT_x5f2048",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fFFT_x5f1024",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fFFT_x5f512",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fFDD", 
	"FDD",
	0,
	"0",
	"FDD");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fTDD", 
	"TDD",
	0,
	"1",
	"TDD");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fFrameModeSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fFDD",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fTDD",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_ftime_x5f2_x5fms", 
	"time 2 ms",
	0,
	"0",
	"time 2 ms");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_ftime_x5f2_x5f5_x5fms", 
	"time 2.5 ms",
	0,
	"1",
	"time 2.5 ms");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_ftime_x5f4_x5fms", 
	"time 4 ms",
	0,
	"2",
	"time 4 ms");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_ftime_x5f5_x5fms", 
	"time 5 ms",
	0,
	"3",
	"time 5 ms");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_ftime_x5f8_x5fms", 
	"time 8 ms",
	0,
	"4",
	"time 8 ms");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_ftime_x5f10_x5fms", 
	"time 10 ms",
	0,
	"5",
	"time 10 ms");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_ftime_x5f12_x5f5_x5fms", 
	"time 12.5 ms",
	0,
	"6",
	"time 12.5 ms");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_ftime_x5f20_x5fms", 
	"time 20 ms",
	0,
	"7",
	"time 20 ms");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fFrameDurationSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_ftime_x5f2_x5fms",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_ftime_x5f2_x5f5_x5fms",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_ftime_x5f4_x5fms",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_ftime_x5f5_x5fms",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_ftime_x5f8_x5fms",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_ftime_x5f10_x5fms",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_ftime_x5f12_x5f5_x5fms",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_ftime_x5f20_x5fms",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fDLMAP_x5fEnableSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fULMAP_x5fEnableSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fFrameIncreasedSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fPN9", 
	"PN9",
	0,
	"0",
	"PN9");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fPN15", 
	"PN15",
	0,
	"1",
	"PN15");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fFIX4", 
	"FIX4",
	0,
	"2",
	"FIX4");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_f_x5f4_x5f1_x5f4_x5f0", 
	"_4_1_4_0",
	0,
	"3",
	"_4_1_4_0");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_f_x5f8_x5f1_x5f8_x5f0", 
	"_8_1_8_0",
	0,
	"4",
	"_8_1_8_0");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_f_x5f16_x5f1_x5f16_x5f0", 
	"_16_1_16_0",
	0,
	"5",
	"_16_1_16_0");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_f_x5f32_x5f1_x5f32_x5f0", 
	"_32_1_32_0",
	0,
	"6",
	"_32_1_32_0");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_f_x5f64_x5f1_x5f64_x5f0", 
	"_64_1_64_0",
	0,
	"7",
	"_64_1_64_0");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fS_x5fQPSK", 
	"S_QPSK",
	0,
	"8",
	"S_QPSK");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fS_x5f16_x5fQAM", 
	"S_16-QAM",
	0,
	"9",
	"S_16-QAM");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fS_x5f64_x5fQAM", 
	"S_64-QAM",
	0,
	"10",
	"S_64-QAM");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fDataPatternSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fPN9",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fPN15",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fFIX4",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_f_x5f4_x5f1_x5f4_x5f0",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_f_x5f8_x5f1_x5f8_x5f0",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_f_x5f16_x5f1_x5f16_x5f0",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_f_x5f32_x5f1_x5f32_x5f0",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_f_x5f64_x5f1_x5f64_x5f0",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fS_x5fQPSK",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fS_x5f16_x5fQAM",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fS_x5f64_x5fQAM",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fAutoMACHeaderSettingSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fMSB_x5ffirst", 
	"MSB first",
	0,
	"0",
	"MSB first");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fLSB_x5ffirst", 
	"LSB first",
	0,
	"1",
	"LSB first");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fCRC32_x5fModeSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fMSB_x5ffirst",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fLSB_x5ffirst",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fDL_x5fPUSC", 
	"DL_PUSC",
	0,
	"0",
	"DL_PUSC");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fDL_x5fFUSC", 
	"DL_FUSC",
	0,
	"1",
	"DL_FUSC");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fDL_x5fOFUSC", 
	"DL_OFUSC",
	0,
	"2",
	"DL_OFUSC");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fZoneTypeSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fDL_x5fPUSC",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fDL_x5fFUSC",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fDL_x5fOFUSC",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fUL_x5fPUSC", 
	"UL_PUSC",
	0,
	"0",
	"UL_PUSC");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fUL_x5fOPUSC", 
	"UL_OPUSC",
	0,
	"1",
	"UL_OPUSC");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fUL_x5fZoneTypeSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fUL_x5fPUSC",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fUL_x5fOPUSC",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fUL_x5fAllSCIndicatorSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fnone", 
	"none",
	0,
	"0",
	"none");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fHamming_x5f0_x5f54", 
	"Hamming 0.54",
	0,
	"1",
	"Hamming 0.54");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fHanning_x5f0_x5f50", 
	"Hanning 0.50",
	0,
	"2",
	"Hanning 0.50");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fGaussian_x5f0_x5f75", 
	"Gaussian 0.75",
	0,
	"3",
	"Gaussian 0.75");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fKaiser_x5f7_x5f865", 
	"Kaiser 7.865",
	0,
	"4",
	"Kaiser 7.865");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_f_x5f8510_x5f6_x5f0", 
	"_8510 6.0",
	0,
	"5",
	"8510 6.0");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fBlackman", 
	"Blackman",
	0,
	"6",
	"Blackman");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fBlackman_x5fHarris", 
	"Blackman-Harris",
	0,
	"7",
	"Blackman-Harris");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fSpecMeasWindowSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fnone",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fHamming_x5f0_x5f54",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fHanning_x5f0_x5f50",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fGaussian_x5f0_x5f75",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fKaiser_x5f7_x5f865",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_f_x5f8510_x5f6_x5f0",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fBlackman",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fBlackman_x5fHarris",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fOff", 
	"Off",
	0,
	"0",
	"Off");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fRMS_x5f_x5fVideo_x5f", 
	"RMS (Video)",
	0,
	"1",
	"RMS (Video)");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fEVM_x5fAverageTypeSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fOff",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fRMS_x5f_x5fVideo_x5f",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fEVM_x5fPulseSearchSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fEVM_x5fTrackAmplitudeSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fEVM_x5fTrackPhaseSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fEVM_x5fTrackTimingSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fChan_x5fEstimation_x5fSeq_x5fOnly", 
	"Chan Estimation Seq Only",
	0,
	"0",
	"Chan Estimation Seq Only");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fChan_x5fEstimation_x5fSeq_x5f_x5f_x5fData", 
	"Chan Estimation Seq & Data",
	0,
	"1",
	"Chan Estimation Seq & Data");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fChan_x5fEstimation_x5fSeq_x5f_x5f_x5fPilots", 
	"Chan Estimation Seq & Pilots",
	0,
	"2",
	"Chan Estimation Seq & Pilots");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fEVM_x5fEqualizerTrainingSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fChan_x5fEstimation_x5fSeq_x5fOnly",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fChan_x5fEstimation_x5fSeq_x5f_x5f_x5fData",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fChan_x5fEstimation_x5fSeq_x5f_x5f_x5fPilots",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fEnableESGSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fInternal", 
	"Internal",
	0,
	"0",
	"Internal");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fExternal", 
	"External",
	0,
	"1",
	"External");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fESG_x5fClkRefSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fInternal",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fExternal",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fthrough", 
	"through",
	0,
	"0",
	"through");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_ffilter_x5f2100kHz", 
	"filter_2100kHz",
	0,
	"1",
	"filter_2100kHz");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_ffilter_x5f40MHz", 
	"filter_40MHz",
	0,
	"2",
	"filter_40MHz");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fESG_x5fIQFilterSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fthrough",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_ffilter_x5f2100kHz",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_ffilter_x5f40MHz",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fESG_x5fAutoScalingSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fESG_x5fArbOnSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fESG_x5fRFPowOnSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNeither", 
	"Neither",
	0,
	"0",
	"Neither");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fEvent1", 
	"Event1",
	0,
	"1",
	"Event1");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fEvent2", 
	"Event2",
	0,
	"2",
	"Event2");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fBoth", 
	"Both",
	0,
	"3",
	"Both");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fESG_x5fEventMarkerTypeSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNeither",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fEvent1",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fEvent2",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fBoth",
	"StdForm");


create_item ("WMAN_DL_802_16e_TX","WMAN Downlink 802.16e TX test",
	"WMAN_DL_802_16e_TX",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST | ITEM_UNIQUE,
	-1,
	"BMP_WMAN_DL_802_16e_TX",
	"Component Parameters",
	NULL,
	ARFWTBNetlistFmt,
	"WMAN_DL_802_16e_TX",
	SPDesignAnnotFmt,
	"SYM_DSN_WMAN_DL_802_16e_TX",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("RequiredParameters","Required Parameters",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("CE_TimeStep","Circuit envelope simulation time step",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","1/11.2 MHz/4")),
	create_parm ("WTB_TimeStep","Set CE_TimeStep<=1/RF_SamplingRate. <br> Expression variables are in Signal Parameters tab/category.",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("FSource","Source carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","3407 MHz")),
	create_parm ("SourcePower","Source power",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","0.01 W")),
	create_parm ("FMeasurement","Measurement carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","3407 MHz")),
	create_parm ("MeasurementInfo","Available Measurements <br> Each measurement has parameters on its tab/category below.",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("RF_EnvelopeMeasurement","Enable RF envelope measurement?",
		PARM_INT,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fRF_x5fEnvelopeMeasurementSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES","YES")),
	create_parm ("Constellation","Enable constellation measurement?",
		PARM_INT,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fConstellationSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO","NO")),
	create_parm ("PowerMeasurement","Enable power measurement?",
		PARM_INT,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fPowerMeasurementSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO","NO")),
	create_parm ("SpectrumMeasurement","Enable spectrum measurement?",
		PARM_INT,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fSpectrumMeasurementSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO","NO")),
	create_parm ("EVM_Measurement","Enable EVM measurement?",
		PARM_INT,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fEVM_x5fMeasurementSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO","NO")),
	create_parm ("BasicParameters","Basic Parameters",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("SourceR","Source resistance",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50 Ohm")),
	create_parm ("SourceTemp","Source resistor temperature",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		TEMPERATURE_UNIT,
		prm("StdForm","-273.15")),
	create_parm ("EnableSourceNoise","Enable source thermal noise?",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fEnableSourceNoiseSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO","NO")),
	create_parm ("MeasR","Measurement resistance",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50 Ohm")),
	create_parm ("MirrorSourceSpectrum","Mirror source spectrum about carrier?",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fMirrorSourceSpectrumSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO","NO")),
	create_parm ("MirrorMeasSpectrum","Mirror meas spectrum about carrier?",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fMirrorMeasSpectrumSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO","NO")),
	create_parm ("RF_MirrorFreq","Mirror source frequency for spectrum/envelope measurement?",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fRF_x5fMirrorFreqSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO","NO")),
	create_parm ("MeasMirrorFreq","Mirror meas frequency for spectrum/envelope measurement?",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fMeasMirrorFreqSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO","NO")),
	create_parm ("TestBenchSeed","Random number generator seed",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1234567")),
	create_parm ("SignalParameters","Signal Parameters",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("GainImbalance","Gain imbalance, Q vs I",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0.0")),
	create_parm ("PhaseImbalance","Phase imbalance, Q vs I",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		ANGLE_UNIT,
		prm("StdForm","0.0")),
	create_parm ("I_OriginOffset","I origin offset (percent)",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("Q_OriginOffset","Q origin offset (percent)",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("IQ_Rotation","IQ rotation",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		ANGLE_UNIT,
		prm("StdForm","0.0")),
	create_parm ("Bandwidth","Nominal bandwidth",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","10 MHz")),
	create_parm ("OversamplingOption","Oversampling ratio option",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fOversamplingOptionSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fRatio_x5f2","Ratio_2")),
	create_parm ("FFTSize","FFT size",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fFFTSizeSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fFFT_x5f1024","FFT_1024")),
	create_parm ("CyclicPrefix","Cyclic prefix",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.125")),
	create_parm ("FrameMode","Frame mode",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fFrameModeSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fTDD","TDD")),
	create_parm ("DL_Ratio","Downlink Ratio in TDD mode",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.5")),
	create_parm ("FrameDuration","Frame duration",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fFrameDurationSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_ftime_x5f5_x5fms","time_5_ms")),
	create_parm ("DLMAP_Enable","DLMAP is inserted or not",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fDLMAP_x5fEnableSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO","NO")),
	create_parm ("ULMAP_Enable","ULMAP is inserted or not",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fULMAP_x5fEnableSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO","NO")),
	create_parm ("PreambleIndex","Preamble index",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")),
	create_parm ("FrameNumber","Frame number",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("FrameIncreased","Frame number increasing or not",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fFrameIncreasedSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO","NO")),
	create_parm ("DL_PermBase","Downlink permutation base",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","9")),
	create_parm ("DCD_Count","DCD count",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("BSID","Base station ID",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0X00, 0X00, 0X00, 0X00, 0X00, 0X01}")),
	create_parm ("PRBS_ID","PRBS ID",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("DataPattern","WMAN data pattern",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fDataPatternSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fPN9","PN9")),
	create_parm ("AutoMACHeaderSetting","Auto MAC header setting or not",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fAutoMACHeaderSettingSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES","YES")),
	create_parm ("MAC_Header","MAC header data",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0XA2, 0X48, 0X22, 0X4F, 0X93, 0X0E}")),
	create_parm ("CRC32_Mode","CRC32 mode",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fCRC32_x5fModeSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fMSB_x5ffirst","MSB_first")),
	create_parm ("ZoneType","Zone type",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fZoneTypeSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fDL_x5fPUSC","DL_PUSC")),
	create_parm ("ZoneNumOfSym","Number of OFDM symbols in zone",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("GroupBitmask","Used subchannel bitmaps",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1, 1, 1, 1, 1, 1}")),
	create_parm ("NumberOfBurst","Number of Bursts",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("BurstWithFEC","The number of burst with FEC",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("BurstSymOffset","Symbol offset of each burst",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{2}")),
	create_parm ("BurstSubchOffset","Subchannel offset of each burst",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0}")),
	create_parm ("BurstNumOfSym","Number of symbols of each burst",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{2}")),
	create_parm ("BurstNumOfSubch","Number of subchannels of each burst",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{30}")),
	create_parm ("DataLength","MAC PDU payload byte length of each burst",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{200}")),
	create_parm ("CodingType","Coding type of each burst",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0}")),
	create_parm ("Rate_ID","Rate ID of each burst",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{5}")),
	create_parm ("RepetitionCoding","Repetition coding of each burst",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0}")),
	create_parm ("PowerBoosting","Power boosting of each burst in dB",
		PARM_REALARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0}")),
	create_parm ("DLMAP_CodingType","Coding type of DLMAP",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("DLMAP_RepetitionCoding","Repetition coding of DLMAP",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("ULMAP_CodingType","Coding type of ULMAP",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("ULMAP_Rate_ID","Rate ID of ULMAP",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("ULMAP_RepetitionCoding","Repetition coding of ULMAP",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("ULMAP_PowerBoosting","Power boosting of ULMAP in dB",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("UL_ZoneType","UL zone type",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fUL_x5fZoneTypeSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fUL_x5fPUSC","UL_PUSC")),
	create_parm ("UL_ZoneSymOffset","Symbol offset in UL zone",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("UL_ZoneNumOfSym","Number of OFDMA symbols in the UL subframe",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","24")),
	create_parm ("UL_PermBase","UL permutation base",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("UL_AllSCIndicator","Use all subchannels or not",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fUL_x5fAllSCIndicatorSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO","NO")),
	create_parm ("UCD_Count","UCD count",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("UL_NumberOfBurst","Number of Bursts in uplink",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("UL_CID","Uplink CID",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1}")),
	create_parm ("UL_CodingType","Uplink coding type of each burst",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0}")),
	create_parm ("UL_Rate_ID","Uplink rate ID",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0}")),
	create_parm ("UL_BurstAssignedSlot","Assigned slots of each burst in uplink",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{96}")),
	create_parm ("UL_RepetitionCoding","Repetition coding of each burst in uplink",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0}")),
	create_parm ("RF_EnvelopeMeasurementParameters","RF Envelope Measurement",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("RF_EnvelopeDisplayPages","RF envelope measurement display pages: <br> WMAN_DL_802_16e_TX Envelope RF Figures <br> WMAN_DL_802_16e_TX Envelope Meas Figures <br> WMAN_DL_802_16e_TX Envelope Equations",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("RF_EnvelopeStart","RF envelope measurement start",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","0.0")),
	create_parm ("RF_EnvelopeStop","RF envelope measurement stop",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","100.0 usec")),
	create_parm ("ConstellationParameters","Constellation",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("ConstellationDisplayPages","Constellation measurement display pages: <br> WMAN_DL_802_16e_TX Constellation Figures",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("PowerMeasurementParameters","Power Measurement",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("PowerDisplayPages","Power measurement display pages: <br> WMAN_DL_802_16e_TX Power Figures/Tables/Equations",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("PowerBursts","Power measurement bursts",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")),
	create_parm ("SpectrumMeasurementParameters","Spectrum Measurement",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("SpectrumDisplayPages","Spectrum  measurement display pages: <br> WMAN_DL_802_16e_TX Spectrum Equations <br> WMAN_DL_802_16e_TX Spectrum Figures/Tables",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("SpecMeasStart","Spectrum measurement start",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","0.0")),
	create_parm ("SpecMeasStop","Spectrum measurement stop",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","100.0 usec")),
	create_parm ("SpecMeasResBW","Spectrum resolution bandwidth",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","100 kHz")),
	create_parm ("SpecMeasWindow","Window type",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fSpecMeasWindowSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fKaiser_x5f7_x5f865","Kaiser_7_865")),
	create_parm ("EVM_MeasurementParameters","EVM Measurement",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("EVM_DisplayPages","EVM measurement display pages: <br> WMAN_DL_802_16e_TX EVM Tables",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("EVM_Start","EVM measurement start",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","0.0")),
	create_parm ("EVM_AverageType","Average type",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fEVM_x5fAverageTypeSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fRMS_x5f_x5fVideo_x5f","RMS__Video_")),
	create_parm ("EVM_FramesToAverage","Frames used for RMS averaging",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","5")),
	create_parm ("EVM_PulseSearch","Perform pulse search?",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fEVM_x5fPulseSearchSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES","YES")),
	create_parm ("EVM_SymbolTimingAdjust","Symbol timing adjustment (in % of FFT time)",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-3.125")),
	create_parm ("EVM_TrackAmplitude","Track amplitude?",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fEVM_x5fTrackAmplitudeSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO","NO")),
	create_parm ("EVM_TrackPhase","Track phase?",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fEVM_x5fTrackPhaseSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES","YES")),
	create_parm ("EVM_TrackTiming","Track timing?",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fEVM_x5fTrackTimingSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO","NO")),
	create_parm ("EVM_EqualizerTraining","Equalizer training method",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fEVM_x5fEqualizerTrainingSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fChan_x5fEstimation_x5fSeq_x5fOnly","Chan_Estimation_Seq_Only")),
	create_parm ("SignalToESG_Parameters","Signal to ESG",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("EnableESG","Enable signal to ESG?",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fEnableESGSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fNO","NO")),
	create_parm ("ESG_Instrument","ESG instrument address",
		PARM_STRING | PARM_NO_DISPLAY,
		"InstrumentFormSet",
		UNITLESS_UNIT,
		prm("InstrumentForm","\"[GPIB0::19::INSTR][localhost][4790]\"")),
	create_parm ("ESG_Start","Signal start",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","0.0")),
	create_parm ("ESG_Stop","Signal stop",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","100.0 usec")),
	create_parm ("ESG_Bursts","Bursts to ESG",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")),
	create_parm ("ESG_Power","ESG RF ouput power (dBm)",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-20.0")),
	create_parm ("ESG_ClkRef","Waveform clock reference",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fESG_x5fClkRefSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fInternal","Internal")),
	create_parm ("ESG_ExtClkRefFreq","External clock reference freq",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","10 MHz")),
	create_parm ("ESG_IQFilter","IQ filter",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fESG_x5fIQFilterSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fthrough","through")),
	create_parm ("ESG_SampleClkRate","Sequencer sample clock rate",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","80 MHz")),
	create_parm ("ESG_Filename","ESG waveform storage filename",
		PARM_STRING | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"WMAN_DL_16e\"")),
	create_parm ("ESG_AutoScaling","Activate auto scaling?",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fESG_x5fAutoScalingSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES","YES")),
	create_parm ("ESG_ArbOn","Select waveform and turn ArbOn after download?",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fESG_x5fArbOnSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES","YES")),
	create_parm ("ESG_RFPowOn","Turn RF ON after download?",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fESG_x5fRFPowOnSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fYES","YES")),
	create_parm ("ESG_EventMarkerType","Event marker type",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fESG_x5fEventMarkerTypeSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fTX_fEvent1","Event1")),
	create_parm ("ESG_MarkerLength","ESG marker length",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","10")));



create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fMirrorSourceSpectrumSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fNO",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fMirrorMeasSpectrumSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fNO",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fRatio_x5f1", 
	"Ratio 1",
	0,
	"0",
	"Ratio 1");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fRatio_x5f2", 
	"Ratio 2",
	0,
	"1",
	"Ratio 2");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fRatio_x5f4", 
	"Ratio 4",
	0,
	"2",
	"Ratio 4");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fRatio_x5f8", 
	"Ratio 8",
	0,
	"3",
	"Ratio 8");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fRatio_x5f16", 
	"Ratio 16",
	0,
	"4",
	"Ratio 16");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fRatio_x5f32", 
	"Ratio 32",
	0,
	"5",
	"Ratio 32");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fOversamplingOptionSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fRatio_x5f1",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fRatio_x5f2",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fRatio_x5f4",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fRatio_x5f8",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fRatio_x5f16",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fRatio_x5f32",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fFFT_x5f2048", 
	"FFT_2048",
	0,
	"0",
	"2048");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fFFT_x5f1024", 
	"FFT_1024",
	0,
	"1",
	"1024");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fFFT_x5f512", 
	"FFT_512",
	0,
	"2",
	"512");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fFFTSizeSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fFFT_x5f2048",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fFFT_x5f1024",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fFFT_x5f512",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fFDD", 
	"FDD",
	0,
	"0",
	"FDD");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fTDD", 
	"TDD",
	0,
	"1",
	"TDD");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fFrameModeSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fFDD",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fTDD",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_ftime_x5f2_x5fms", 
	"time 2 ms",
	0,
	"0",
	"time 2 ms");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_ftime_x5f2_x5f5_x5fms", 
	"time 2.5 ms",
	0,
	"1",
	"time 2.5 ms");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_ftime_x5f4_x5fms", 
	"time 4 ms",
	0,
	"2",
	"time 4 ms");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_ftime_x5f5_x5fms", 
	"time 5 ms",
	0,
	"3",
	"time 5 ms");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_ftime_x5f8_x5fms", 
	"time 8 ms",
	0,
	"4",
	"time 8 ms");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_ftime_x5f10_x5fms", 
	"time 10 ms",
	0,
	"5",
	"time 10 ms");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_ftime_x5f12_x5f5_x5fms", 
	"time 12.5 ms",
	0,
	"6",
	"time 12.5 ms");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_ftime_x5f20_x5fms", 
	"time 20 ms",
	0,
	"7",
	"time 20 ms");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fFrameDurationSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_ftime_x5f2_x5fms",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_ftime_x5f2_x5f5_x5fms",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_ftime_x5f4_x5fms",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_ftime_x5f5_x5fms",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_ftime_x5f8_x5fms",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_ftime_x5f10_x5fms",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_ftime_x5f12_x5f5_x5fms",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_ftime_x5f20_x5fms",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fUL_x5fPUSC", 
	"UL_PUSC",
	0,
	"0",
	"UL_PUSC");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fUL_x5fOPUSC", 
	"UL_OPUSC",
	0,
	"1",
	"UL_OPUSC");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fZoneTypeSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fUL_x5fPUSC",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fUL_x5fOPUSC",
	"StdForm");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fHard", 
	"Hard",
	0,
	"0",
	"Hard");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fSoft", 
	"Soft",
	0,
	"1",
	"Soft");


create_constant_form ("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fCSI", 
	"CSI",
	0,
	"2",
	"CSI");


create_form_set("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fDecoderTypeSet",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fHard",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fSoft",
	"_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fCSI",
	"StdForm");


create_item ("WMAN_UL_802_16e_RX_Sensitivity","WMAN 802.16e RX sensitivity",
	"WMAN_UL_802_16e_RX_Sensitivity",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST | ITEM_UNIQUE,
	-1,
	"BMP_WMAN_UL_802_16e_RX_Sensitivity",
	"Component Parameters",
	NULL,
	ARFWTBNetlistFmt,
	"WMAN_UL_802_16e_RX_Sensitivity",
	SPDesignAnnotFmt,
	"SYM_DSN_WMAN_UL_802_16e_RX_Sensitivity",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("RequiredParameters","Required Parameters",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("CE_TimeStep","Circuit envelope simulation time step",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","1/11.2 MHz/4")),
	create_parm ("WTB_TimeStep","Set CE_TimeStep<=1/RF_SamplingRate. <br> Expression variables are in Signal Parameters tab/category.",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("FSource","Source carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","3407 MHz")),
	create_parm ("SourcePower","Source power",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-75.0)")),
	create_parm ("FMeasurement","Measurement carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","3407 MHz")),
	create_parm ("BasicParameters","Basic Parameters",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("SourceR","Source resistance",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50 Ohm")),
	create_parm ("SourceTemp","Source resistor temperature",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		TEMPERATURE_UNIT,
		prm("StdForm","16.85")),
	create_parm ("MeasR","Measurement resistance",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50 Ohm")),
	create_parm ("MirrorSourceSpectrum","Mirror source spectrum about carrier?",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fMirrorSourceSpectrumSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fNO","NO")),
	create_parm ("MirrorMeasSpectrum","Mirror meas spectrum about carrier?",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fMirrorMeasSpectrumSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fNO","NO")),
	create_parm ("TestBenchSeed","Random number generator seed",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1234567")),
	create_parm ("SignalParameters","Signal Parameters",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("GainImbalance","Gain imbalance, Q vs I",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0.0")),
	create_parm ("PhaseImbalance","Phase imbalance, Q vs I",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		ANGLE_UNIT,
		prm("StdForm","0.0")),
	create_parm ("I_OriginOffset","I origin offset (percent)",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("Q_OriginOffset","Q origin offset (percent)",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("IQ_Rotation","IQ rotation",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		ANGLE_UNIT,
		prm("StdForm","0.0")),
	create_parm ("Bandwidth","Nominal bandwidth",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","10 MHz")),
	create_parm ("OversamplingOption","Oversampling ratio option",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fOversamplingOptionSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fRatio_x5f2","Ratio_2")),
	create_parm ("FFTSize","FFT size",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fFFTSizeSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fFFT_x5f1024","FFT_1024")),
	create_parm ("CyclicPrefix","Cyclic prefix",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.125")),
	create_parm ("FrameMode","Frame mode",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fFrameModeSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fTDD","TDD")),
	create_parm ("DL_Ratio","Downlink Ratio in TDD mode",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.5")),
	create_parm ("FrameDuration","Frame duration",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fFrameDurationSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_ftime_x5f5_x5fms","time_5_ms")),
	create_parm ("PreambleIndex","Preamble index",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")),
	create_parm ("UL_PermBase","Uplink permutation base",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("ZoneType","Zone type",
		PARM_INT,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fZoneTypeSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fUL_x5fPUSC","UL_PUSC")),
	create_parm ("ZoneNumOfSym","Number of OFDM symbols in zone",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","6")),
	create_parm ("NumberOfBurst","Number of Bursts",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("BurstWithFEC","The number of burst with FEC",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("BurstSymOffset","Symbol offset of each burst",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0}")),
	create_parm ("BurstSubchOffset","Subchannel offset of each burst",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0}")),
	create_parm ("BurstAssignedSlot","Assigned slots of each burst",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{70}")),
	create_parm ("DataLength","MAC PDU payload byte length of each burst",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{200}")),
	create_parm ("CodingType","Coding type of each burst",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0}")),
	create_parm ("Rate_ID","Rate ID of each burst",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{5}")),
	create_parm ("RepetitionCoding","Repetition coding of each burst",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0}")),
	create_parm ("BurstPowerOffset","Power offset of each burst in dB",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0}")),
	create_parm ("MeasurementParameters","Measurement",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("DisplayPages","RX sensitivity display pages: <br> WMAN_DL_802_1e_RX_Sensitivity Table",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("DecoderType","Decoder type",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fDecoderTypeSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fUL_x5f802_x5f16e_x5fRX_x5fSensitivity_fCSI","CSI")),
	create_parm ("StopFrame","Stop burst",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","100")));



create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fMirrorSourceSpectrumSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fNO",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fMirrorMeasSpectrumSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fNO",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fRatio_x5f1", 
	"Ratio 1",
	0,
	"0",
	"Ratio 1");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fRatio_x5f2", 
	"Ratio 2",
	0,
	"1",
	"Ratio 2");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fRatio_x5f4", 
	"Ratio 4",
	0,
	"2",
	"Ratio 4");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fRatio_x5f8", 
	"Ratio 8",
	0,
	"3",
	"Ratio 8");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fRatio_x5f16", 
	"Ratio 16",
	0,
	"4",
	"Ratio 16");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fRatio_x5f32", 
	"Ratio 32",
	0,
	"5",
	"Ratio 32");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fOversamplingOptionSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fRatio_x5f1",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fRatio_x5f2",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fRatio_x5f4",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fRatio_x5f8",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fRatio_x5f16",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fRatio_x5f32",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fFFT_x5f2048", 
	"FFT_2048",
	0,
	"0",
	"2048");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fFFT_x5f1024", 
	"FFT_1024",
	0,
	"1",
	"1024");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fFFT_x5f512", 
	"FFT_512",
	0,
	"2",
	"512");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fFFTSizeSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fFFT_x5f2048",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fFFT_x5f1024",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fFFT_x5f512",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fFDD", 
	"FDD",
	0,
	"0",
	"FDD");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fTDD", 
	"TDD",
	0,
	"1",
	"TDD");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fFrameModeSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fFDD",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fTDD",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_ftime_x5f2_x5fms", 
	"time 2 ms",
	0,
	"0",
	"time 2 ms");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_ftime_x5f2_x5f5_x5fms", 
	"time 2.5 ms",
	0,
	"1",
	"time 2.5 ms");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_ftime_x5f4_x5fms", 
	"time 4 ms",
	0,
	"2",
	"time 4 ms");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_ftime_x5f5_x5fms", 
	"time 5 ms",
	0,
	"3",
	"time 5 ms");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_ftime_x5f8_x5fms", 
	"time 8 ms",
	0,
	"4",
	"time 8 ms");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_ftime_x5f10_x5fms", 
	"time 10 ms",
	0,
	"5",
	"time 10 ms");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_ftime_x5f12_x5f5_x5fms", 
	"time 12.5 ms",
	0,
	"6",
	"time 12.5 ms");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_ftime_x5f20_x5fms", 
	"time 20 ms",
	0,
	"7",
	"time 20 ms");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fFrameDurationSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_ftime_x5f2_x5fms",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_ftime_x5f2_x5f5_x5fms",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_ftime_x5f4_x5fms",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_ftime_x5f5_x5fms",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_ftime_x5f8_x5fms",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_ftime_x5f10_x5fms",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_ftime_x5f12_x5f5_x5fms",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_ftime_x5f20_x5fms",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fDLMAP_x5fEnableSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fNO",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fULMAP_x5fEnableSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fNO",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fYES",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fDL_x5fPUSC", 
	"DL_PUSC",
	0,
	"0",
	"DL_PUSC");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fDL_x5fFUSC", 
	"DL_FUSC",
	0,
	"1",
	"DL_FUSC");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fDL_x5fOFUSC", 
	"DL_OFUSC",
	0,
	"2",
	"DL_OFUSC");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fZoneTypeSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fDL_x5fPUSC",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fDL_x5fFUSC",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fDL_x5fOFUSC",
	"StdForm");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fHard", 
	"Hard",
	0,
	"0",
	"Hard");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fSoft", 
	"Soft",
	0,
	"1",
	"Soft");


create_constant_form ("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fCSI", 
	"CSI",
	0,
	"2",
	"CSI");


create_form_set("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fDecoderTypeSet",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fHard",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fSoft",
	"_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fCSI",
	"StdForm");


create_item ("WMAN_DL_802_16e_RX_Sensitivity","WMAN 802.16e RX sensitivity",
	"WMAN_DL_802_16e_RX_Sensitivity",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST | ITEM_UNIQUE,
	-1,
	"BMP_WMAN_DL_802_16e_RX_Sensitivity",
	"Component Parameters",
	NULL,
	ARFWTBNetlistFmt,
	"WMAN_DL_802_16e_RX_Sensitivity",
	SPDesignAnnotFmt,
	"SYM_DSN_WMAN_DL_802_16e_RX_Sensitivity",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("RequiredParameters","Required Parameters",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("CE_TimeStep","Circuit envelope simulation time step",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","1/11.2 MHz/4")),
	create_parm ("WTB_TimeStep","Set CE_TimeStep<=1/RF_SamplingRate. <br> Expression variables are in Signal Parameters tab/category.",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("FSource","Source carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","3407 MHz")),
	create_parm ("SourcePower","Source power",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-75.0)")),
	create_parm ("FMeasurement","Measurement carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","3407 MHz")),
	create_parm ("BasicParameters","Basic Parameters",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("SourceR","Source resistance",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50 Ohm")),
	create_parm ("SourceTemp","Source resistor temperature",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		TEMPERATURE_UNIT,
		prm("StdForm","16.85")),
	create_parm ("MeasR","Measurement resistance",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50 Ohm")),
	create_parm ("MirrorSourceSpectrum","Mirror source spectrum about carrier?",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fMirrorSourceSpectrumSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fNO","NO")),
	create_parm ("MirrorMeasSpectrum","Mirror meas spectrum about carrier?",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fMirrorMeasSpectrumSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fNO","NO")),
	create_parm ("TestBenchSeed","Random number generator seed",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1234567")),
	create_parm ("SignalParameters","Signal Parameters",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("GainImbalance","Gain imbalance, Q vs I",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0.0")),
	create_parm ("PhaseImbalance","Phase imbalance, Q vs I",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		ANGLE_UNIT,
		prm("StdForm","0.0")),
	create_parm ("I_OriginOffset","I origin offset (percent)",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("Q_OriginOffset","Q origin offset (percent)",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("IQ_Rotation","IQ rotation",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		ANGLE_UNIT,
		prm("StdForm","0.0")),
	create_parm ("Bandwidth","Nominal bandwidth",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","10 MHz")),
	create_parm ("OversamplingOption","Oversampling ratio option",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fOversamplingOptionSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fRatio_x5f2","Ratio_2")),
	create_parm ("FFTSize","FFT size",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fFFTSizeSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fFFT_x5f1024","FFT_1024")),
	create_parm ("CyclicPrefix","Cyclic prefix",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.125")),
	create_parm ("FrameMode","Frame mode",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fFrameModeSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fTDD","TDD")),
	create_parm ("DL_Ratio","Downlink Ratio in TDD mode",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.5")),
	create_parm ("FrameDuration","Frame duration",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fFrameDurationSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_ftime_x5f5_x5fms","time_5_ms")),
	create_parm ("DLMAP_Enable","DLMAP is inserted or not",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fDLMAP_x5fEnableSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fNO","NO")),
	create_parm ("ULMAP_Enable","ULMAP is inserted or not",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fULMAP_x5fEnableSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fNO","NO")),
	create_parm ("PreambleIndex","Preamble index",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")),
	create_parm ("DL_PermBase","Downlink permutation base",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","9")),
	create_parm ("BSID","Base station ID",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0X00, 0X00, 0X00, 0X00, 0X00, 0X01}")),
	create_parm ("PRBS_ID","PRBS ID",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("ZoneType","Zone type",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fZoneTypeSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fDL_x5fPUSC","DL_PUSC")),
	create_parm ("ZoneNumOfSym","Number of OFDM symbols in zone",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("GroupBitmask","Used subchannel bitmaps",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1, 1, 1, 1, 1, 1}")),
	create_parm ("NumberOfBurst","Number of Bursts",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("BurstWithFEC","The number of burst with FEC",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("BurstSymOffset","Symbol offset of each burst",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{2}")),
	create_parm ("BurstSubchOffset","Subchannel offset of each burst",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0}")),
	create_parm ("BurstNumOfSym","Number of symbols of each burst",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{2}")),
	create_parm ("BurstNumOfSubch","Number of subchannels of each burst",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{30}")),
	create_parm ("DataLength","MAC PDU payload byte length of each burst",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{200}")),
	create_parm ("CodingType","Coding type of each burst",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0}")),
	create_parm ("Rate_ID","Rate ID of each burst",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{5}")),
	create_parm ("RepetitionCoding","Repetition coding of each burst",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0}")),
	create_parm ("PowerBoosting","Power boosting of each burst in dB",
		PARM_REALARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0}")),
	create_parm ("MeasurementParameters","Measurement",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("DisplayPages","RX sensitivity display pages: <br> WMAN_DL_802_1e_RX_Sensitivity Table",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("DecoderType","Decoder type",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fDecoderTypeSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fDL_x5f802_x5f16e_x5fRX_x5fSensitivity_fCSI","CSI")),
	create_parm ("StopFrame","Stop burst",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","100")));
