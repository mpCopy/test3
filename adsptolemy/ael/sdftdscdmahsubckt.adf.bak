set_design_type( sigproc_net );
create_item ("TDSCDMA_UpLnk_RX_Sensitivity_Info","",
	"T",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_TDSCDMA_UpLnk_RX_Sensitivity_Info",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"TDSCDMA_UpLnk_RX_Sensitivity_Info",
	SPDesignAnnotFmt,
	"TDSCDMA_UpLnk_RX_Sensitivity_Info",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("InformationComponent","InformationComponent","TDSCDMA_UpLnk_RX_Sensitivity_Info");
palette_group("InformationComponent","InformationComponent","TDSCDMA_UpLnk_RX_Sensitivity_Info");

create_item ("TDSCDMA_DnLnk_RX_ACS_Info","",
	"T",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_TDSCDMA_DnLnk_RX_ACS_Info",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"TDSCDMA_DnLnk_RX_ACS_Info",
	SPDesignAnnotFmt,
	"TDSCDMA_DnLnk_RX_ACS_Info",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("InformationComponent","InformationComponent","TDSCDMA_DnLnk_RX_ACS_Info");
palette_group("InformationComponent","InformationComponent","TDSCDMA_DnLnk_RX_ACS_Info");

create_item ("TDSCDMA_UpLnk_TX_Info","",
	"T",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_TDSCDMA_UpLnk_TX_Info",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"TDSCDMA_UpLnk_TX_Info",
	SPDesignAnnotFmt,
	"TDSCDMA_UpLnk_TX_Info",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("InformationComponent","InformationComponent","TDSCDMA_UpLnk_TX_Info");
palette_group("InformationComponent","InformationComponent","TDSCDMA_UpLnk_TX_Info");

create_item ("TDSCDMA_DnLnk_TX_Info","",
	"T",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_TDSCDMA_DnLnk_TX_Info",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"TDSCDMA_DnLnk_TX_Info",
	SPDesignAnnotFmt,
	"TDSCDMA_DnLnk_TX_Info",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("InformationComponent","InformationComponent","TDSCDMA_DnLnk_TX_Info");
palette_group("InformationComponent","InformationComponent","TDSCDMA_DnLnk_TX_Info");

create_item ("TDSCDMA_DnLnk_MultiCarrier_TX_Info","",
	"T",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_TDSCDMA_DnLnk_MultiCarrier_TX_Info",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"TDSCDMA_DnLnk_MultiCarrier_TX_Info",
	SPDesignAnnotFmt,
	"TDSCDMA_DnLnk_MultiCarrier_TX_Info",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("InformationComponent","InformationComponent","TDSCDMA_DnLnk_MultiCarrier_TX_Info");
palette_group("InformationComponent","InformationComponent","TDSCDMA_DnLnk_MultiCarrier_TX_Info");

create_constant_form ("_nTDSCDMA_x5fChannel16_x5fRF_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nTDSCDMA_x5fChannel16_x5fRF_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nTDSCDMA_x5fChannel16_x5fRF_fNoiseSet",
	"_nTDSCDMA_x5fChannel16_x5fRF_fNO",
	"_nTDSCDMA_x5fChannel16_x5fRF_fYES",
	"StdForm");
create_constant_form ("_nTDSCDMA_x5fChannel16_x5fRF_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nTDSCDMA_x5fChannel16_x5fRF_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nTDSCDMA_x5fChannel16_x5fRF_fMirrorSpectrumSet",
	"_nTDSCDMA_x5fChannel16_x5fRF_fNO",
	"_nTDSCDMA_x5fChannel16_x5fRF_fYES",
	"StdForm");
create_item ("TDSCDMA_Channel16_RF","16 Dedicated physical RF channels",
	"T",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_TDSCDMA_Channel16_RF",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"TDSCDMA_Channel16_RF",
	SPDesignAnnotFmt,
	"SYM_DSN_TDSCDMA_Channel16_RF",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("ROut","output resistance",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50")),
	create_parm ("Temp","Temperature",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		TEMPERATURE_UNIT,
		prm("StdForm","-273.15")),
	create_parm ("Noise","Enable thermal noise?",
		PARM_INT,
		"_nTDSCDMA_x5fChannel16_x5fRF_fNoiseSet",
		UNITLESS_UNIT,
		prm("_nTDSCDMA_x5fChannel16_x5fRF_fNO","NO")),
	create_parm ("FCarrier","carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","1900MHz")),
	create_parm ("Power","Power",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","0.01W")),
	create_parm ("MirrorSpectrum","Mirror spectrum about carrier?",
		PARM_INT,
		"_nTDSCDMA_x5fChannel16_x5fRF_fMirrorSpectrumSet",
		UNITLESS_UNIT,
		prm("_nTDSCDMA_x5fChannel16_x5fRF_fNO","NO")),
	create_parm ("GainImbalance","gain imbalance, Q vs I",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("PhaseImbalance","Phase imbalance, Q vs I",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		ANGLE_UNIT,
		prm("StdForm","0.0")),
	create_parm ("I_OriginOffset","I origin offset (percent)",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("Q_OriginOffset","Q origin offset (percent)",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("IQ_Rotation","IQ rotation",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		ANGLE_UNIT,
		prm("StdForm","0.0")),
	create_parm ("SamplesPerChip","samples per chip",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("FilterLength","RRC filter length",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","2")),
	create_parm ("SlotIndex","index of slot",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","2")));
library_group("Testing (for development use only)","Testing (for development use only)","TDSCDMA_Channel16_RF");
palette_group("Testing (for development use only)","Testing (for development use only)","TDSCDMA_Channel16_RF");

create_constant_form ("_nTDSCDMA_x5fPowerRelated_fTS0", 
	"TS0",
	0,
	"0",
	"TS0");
create_constant_form ("_nTDSCDMA_x5fPowerRelated_fTS1", 
	"TS1",
	0,
	"1",
	"TS1");
create_constant_form ("_nTDSCDMA_x5fPowerRelated_fTS2", 
	"TS2",
	0,
	"2",
	"TS2");
create_constant_form ("_nTDSCDMA_x5fPowerRelated_fTS3", 
	"TS3",
	0,
	"3",
	"TS3");
create_constant_form ("_nTDSCDMA_x5fPowerRelated_fTS4", 
	"TS4",
	0,
	"4",
	"TS4");
create_constant_form ("_nTDSCDMA_x5fPowerRelated_fTS5", 
	"TS5",
	0,
	"5",
	"TS5");
create_constant_form ("_nTDSCDMA_x5fPowerRelated_fTS6", 
	"TS6",
	0,
	"6",
	"TS6");
create_form_set("_nTDSCDMA_x5fPowerRelated_fAnalysisTimeslotSet",
	"_nTDSCDMA_x5fPowerRelated_fTS0",
	"_nTDSCDMA_x5fPowerRelated_fTS1",
	"_nTDSCDMA_x5fPowerRelated_fTS2",
	"_nTDSCDMA_x5fPowerRelated_fTS3",
	"_nTDSCDMA_x5fPowerRelated_fTS4",
	"_nTDSCDMA_x5fPowerRelated_fTS5",
	"_nTDSCDMA_x5fPowerRelated_fTS6",
	"StdForm");
create_constant_form ("_nTDSCDMA_x5fPowerRelated_fDwPTS", 
	"DwPTS",
	0,
	"0",
	"DwPTS");
create_constant_form ("_nTDSCDMA_x5fPowerRelated_fUpPTS", 
	"UpPTS",
	0,
	"1",
	"UpPTS");
create_constant_form ("_nTDSCDMA_x5fPowerRelated_fMidamble", 
	"Midamble",
	0,
	"2",
	"Midamble");
create_form_set("_nTDSCDMA_x5fPowerRelated_fSyncCodeUsedSet",
	"_nTDSCDMA_x5fPowerRelated_fDwPTS",
	"_nTDSCDMA_x5fPowerRelated_fUpPTS",
	"_nTDSCDMA_x5fPowerRelated_fMidamble",
	"StdForm");
create_constant_form ("_nTDSCDMA_x5fPowerRelated_fS1", 
	"S1",
	0,
	"0",
	"S1");
create_constant_form ("_nTDSCDMA_x5fPowerRelated_fS2", 
	"S2",
	0,
	"1",
	"S2");
create_form_set("_nTDSCDMA_x5fPowerRelated_fModPhaseSet",
	"_nTDSCDMA_x5fPowerRelated_fS1",
	"_nTDSCDMA_x5fPowerRelated_fS2",
	"StdForm");
create_constant_form ("_nTDSCDMA_x5fPowerRelated_fUE_x5fSpecific", 
	"UE_Specific",
	0,
	"0",
	"UE_Specific");
create_constant_form ("_nTDSCDMA_x5fPowerRelated_fCommon", 
	"Common",
	0,
	"1",
	"Common");
create_constant_form ("_nTDSCDMA_x5fPowerRelated_fDefault", 
	"Default",
	0,
	"2",
	"Default");
create_form_set("_nTDSCDMA_x5fPowerRelated_fMidambleAllocSchemeSet",
	"_nTDSCDMA_x5fPowerRelated_fUE_x5fSpecific",
	"_nTDSCDMA_x5fPowerRelated_fCommon",
	"_nTDSCDMA_x5fPowerRelated_fDefault",
	"StdForm");
create_item ("TDSCDMA_PowerRelated","RF signal complementary cumulative distribution function",
	"T",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_TDSCDMA_PowerRelated",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"TDSCDMA_PowerRelated",
	SPDesignAnnotFmt,
	"SYM_DSN_TDSCDMA_RF_PwrMeasure",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("RLoad","reference resistance",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","DefaultRIn")),
	create_parm ("RTemp","temperature of reference resistor, in degrees C",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","DefaultRTemp")),
	create_parm ("FCarrier","carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","1.9e9Hz")),
	create_parm ("AnalysisTimeslot","timeslot to be analyzed",
		PARM_INT,
		"_nTDSCDMA_x5fPowerRelated_fAnalysisTimeslotSet",
		UNITLESS_UNIT,
		prm("_nTDSCDMA_x5fPowerRelated_fTS2","TS2")),
	create_parm ("SamplesPerSymbol","samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("FilterLength","length of raised cosine filters in number of symbols",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")),
	create_parm ("SystemDelay","delay due to transmitter filters",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","64")),
	create_parm ("NumSlotsMeasured","number of slot to be measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","5")),
	create_parm ("SyncCodeUsed","Code used in synchronization",
		PARM_INT,
		"_nTDSCDMA_x5fPowerRelated_fSyncCodeUsedSet",
		UNITLESS_UNIT,
		prm("_nTDSCDMA_x5fPowerRelated_fDwPTS","DwPTS")),
	create_parm ("SyncCodeIdx","index of basic synchronization code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("ModPhase","type of modulation quadruples,valid only in downlink",
		PARM_INT,
		"_nTDSCDMA_x5fPowerRelated_fModPhaseSet",
		UNITLESS_UNIT,
		prm("_nTDSCDMA_x5fPowerRelated_fS1","S1")),
	create_parm ("MidambleAllocScheme","midamble allocation scheme",
		PARM_INT,
		"_nTDSCDMA_x5fPowerRelated_fMidambleAllocSchemeSet",
		UNITLESS_UNIT,
		prm("_nTDSCDMA_x5fPowerRelated_fDefault","Default")),
	create_parm ("BasicMidambleID","index of basic midamble",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("K","maximum number of midamble shifts in a cell",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")),
	create_parm ("MidambleID","index of midamble",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("SpreadFactor","spreading factor",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")),
	create_parm ("SpreadCode","index of spread code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("PhyChNum","number of channelization codes used in a timeslot",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));
library_group("Testing (for development use only)","Testing (for development use only)","TDSCDMA_PowerRelated");
palette_group("Testing (for development use only)","Testing (for development use only)","TDSCDMA_PowerRelated");

create_constant_form ("_nTDSCDMA_x5f12_x5f2_x5fUL_x5fRakeReceiver_x5fH_fNo", 
	"No",
	0,
	"0",
	"No");
create_constant_form ("_nTDSCDMA_x5f12_x5f2_x5fUL_x5fRakeReceiver_x5fH_fYes", 
	"Yes",
	0,
	"1",
	"Yes");
create_form_set("_nTDSCDMA_x5f12_x5f2_x5fUL_x5fRakeReceiver_x5fH_fAWGNSet",
	"_nTDSCDMA_x5f12_x5f2_x5fUL_x5fRakeReceiver_x5fH_fNo",
	"_nTDSCDMA_x5f12_x5f2_x5fUL_x5fRakeReceiver_x5fH_fYes",
	"StdForm");
create_item ("TDSCDMA_12_2_UL_RakeReceiver_H","Uplink rake receiver",
	"T",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_TDSCDMA_12_2_UL_RakeReceiver_H",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"TDSCDMA_12_2_UL_RakeReceiver_H",
	SPDesignAnnotFmt,
	"SYM_DSN_TDSCDMA_12_2_UL_RakeReceiver_H",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("RIn","output resistance",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","DefaultRIn")),
	create_parm ("FCarrier","carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","1900MHz")),
	create_parm ("AWGN","AWGN channel or not",
		PARM_INT,
		"_nTDSCDMA_x5f12_x5f2_x5fUL_x5fRakeReceiver_x5fH_fAWGNSet",
		UNITLESS_UNIT,
		prm("_nTDSCDMA_x5f12_x5f2_x5fUL_x5fRakeReceiver_x5fH_fYes","Yes")),
	create_parm ("SamplesPerSymbol","samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("SlotIndex","slot index",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","2")),
	create_parm ("BasicMidambleID","index of basic midamble",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("K","maximum number of midamble shifts in a cell",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")),
	create_parm ("MidambleID","midamble index",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("SpreadCode","spreading code for the DPCH",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("FilterLength","length of raised cosine filters in number of symbols",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")),
	create_parm ("SystemDelay","total system delay in symbols including delay caused by filters",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")),
	create_parm ("IgnoreNumber","ignored subframe numbers",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("PowerThreshold","power threshold for channel estimation",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("PhyChNum_SA","physical channel allocation configuration",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"0 0 1 0 0 0 0\"")),
	create_parm ("MaxPhyChNum","sum of allocated physical channel in all slots",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("ModType_SA","type of modulation of all slots, 0 for QPSK, 1 for 8PSK",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"0 0 0 0 0 0 0\"")),
	create_parm ("TFCI_SA","allocated TFCI transmitted active slots configuration",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"0 0 1 0 0 0 0\"")),
	create_parm ("TFCI_Length_SA","length of TFCI of all slots",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"0 0 16 0 0 0 0\"")),
	create_parm ("SS_TPC_SA","type of SS and TPC of all slots",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"2 2 1 2 2 2 2\"")),
	create_parm ("MinSF_PA","minimum spreading factor array corresponding to allocated physical channels",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"8\"")));
library_group("Testing (for development use only)","Testing (for development use only)","TDSCDMA_12_2_UL_RakeReceiver_H");
palette_group("Testing (for development use only)","Testing (for development use only)","TDSCDMA_12_2_UL_RakeReceiver_H");

create_constant_form ("_nTDSCDMA_x5f12_x5f2_x5fDL_x5fRakeReceiver_x5fH_fNo", 
	"No",
	0,
	"0",
	"No");
create_constant_form ("_nTDSCDMA_x5f12_x5f2_x5fDL_x5fRakeReceiver_x5fH_fYes", 
	"Yes",
	0,
	"1",
	"Yes");
create_form_set("_nTDSCDMA_x5f12_x5f2_x5fDL_x5fRakeReceiver_x5fH_fAWGNSet",
	"_nTDSCDMA_x5f12_x5f2_x5fDL_x5fRakeReceiver_x5fH_fNo",
	"_nTDSCDMA_x5f12_x5f2_x5fDL_x5fRakeReceiver_x5fH_fYes",
	"StdForm");
create_item ("TDSCDMA_12_2_DL_RakeReceiver_H","Downlink rake receiver",
	"T",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_TDSCDMA_12_2_DL_RakeReceiver_H",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"TDSCDMA_12_2_DL_RakeReceiver_H",
	SPDesignAnnotFmt,
	"SYM_DSN_TDSCDMA_12_2_DL_RakeReceiver_H",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("RIn","output resistance",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","DefaultRIn")),
	create_parm ("FCarrier","carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","1900MHz")),
	create_parm ("AWGN","AWGN channel or not",
		PARM_INT,
		"_nTDSCDMA_x5f12_x5f2_x5fDL_x5fRakeReceiver_x5fH_fAWGNSet",
		UNITLESS_UNIT,
		prm("_nTDSCDMA_x5f12_x5f2_x5fDL_x5fRakeReceiver_x5fH_fYes","Yes")),
	create_parm ("SamplesPerSymbol","samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("SlotIndex","slot index",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","6")),
	create_parm ("BasicMidambleID","index of basic midamble",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("K","maximum number of midamble shifts in a cell",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")),
	create_parm ("MidambleID","midamble index",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("SpreadCode1","spreading code for the first DPCH",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("SpreadCode2","spreading code for the second DPCH",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","2")),
	create_parm ("FilterLength","length of raised cosine filters in number of symbols",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")),
	create_parm ("SystemDelay","total system delay in symbols including delay caused by filters",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")),
	create_parm ("IgnoreNumber","ignored subframe numbers",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("PowerThreshold","power threshold for channel estimation",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("PhyChNum_SA","physical channel allocation configuration",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"0 0 2 0 0 0 0\"")),
	create_parm ("MaxPhyChNum","sum of allocated physical channel in all slots",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","2")),
	create_parm ("ModType_SA","type of modulation of all slots, 0 for QPSK, 1 for 8PSK",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"0 0 0 0 0 0 0\"")),
	create_parm ("TFCI_SA","allocated TFCI transmitted active slots configuration",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"0 0 1 0 0 0 0\"")),
	create_parm ("TFCI_Length_SA","length of TFCI of all slots",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"0 0 16 0 0 0 0\"")),
	create_parm ("SS_TPC_SA","type of SS and TPC of all slots",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"2 2 1 2 2 2 2\"")),
	create_parm ("MinSF_PA","minimum spreading factor array corresponding to allocated physical channels",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"16 16\"")));
library_group("Testing (for development use only)","Testing (for development use only)","TDSCDMA_12_2_DL_RakeReceiver_H");
palette_group("Testing (for development use only)","Testing (for development use only)","TDSCDMA_12_2_DL_RakeReceiver_H");

create_constant_form ("_nTDSCDMA_x5fRefCh_x5fRF_x5fH_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nTDSCDMA_x5fRefCh_x5fRF_x5fH_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nTDSCDMA_x5fRefCh_x5fRF_x5fH_fNoiseSet",
	"_nTDSCDMA_x5fRefCh_x5fRF_x5fH_fNO",
	"_nTDSCDMA_x5fRefCh_x5fRF_x5fH_fYES",
	"StdForm");
create_constant_form ("_nTDSCDMA_x5fRefCh_x5fRF_x5fH_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nTDSCDMA_x5fRefCh_x5fRF_x5fH_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nTDSCDMA_x5fRefCh_x5fRF_x5fH_fMirrorSourceSpectrumSet",
	"_nTDSCDMA_x5fRefCh_x5fRF_x5fH_fNO",
	"_nTDSCDMA_x5fRefCh_x5fRF_x5fH_fYES",
	"StdForm");
create_constant_form ("_nTDSCDMA_x5fRefCh_x5fRF_x5fH_fDownlink", 
	"Downlink",
	0,
	"0",
	"Downlink");
create_constant_form ("_nTDSCDMA_x5fRefCh_x5fRF_x5fH_fUplink", 
	"Uplink",
	0,
	"1",
	"Uplink");
create_form_set("_nTDSCDMA_x5fRefCh_x5fRF_x5fH_fLinkSet",
	"_nTDSCDMA_x5fRefCh_x5fRF_x5fH_fDownlink",
	"_nTDSCDMA_x5fRefCh_x5fRF_x5fH_fUplink",
	"StdForm");
create_constant_form ("_nTDSCDMA_x5fRefCh_x5fRF_x5fH_fCH_x5f12_x5f2k_x5fMultiCode", 
	"CH_12.2k_MultiCode",
	0,
	"0",
	"12.2k_MultiCode");
create_constant_form ("_nTDSCDMA_x5fRefCh_x5fRF_x5fH_fCH_x5f12_x5f2k_x5fSingleCode", 
	"CH_12.2k_SingleCode",
	0,
	"1",
	"12.2k_SingleCode");
create_constant_form ("_nTDSCDMA_x5fRefCh_x5fRF_x5fH_fCH_x5f64k", 
	"CH_64k",
	0,
	"2",
	"64k");
create_constant_form ("_nTDSCDMA_x5fRefCh_x5fRF_x5fH_fCH_x5f144k", 
	"CH_144k",
	0,
	"3",
	"144k");
create_constant_form ("_nTDSCDMA_x5fRefCh_x5fRF_x5fH_fCH_x5f384k", 
	"CH_384k",
	0,
	"4",
	"384k");
create_form_set("_nTDSCDMA_x5fRefCh_x5fRF_x5fH_fRefChSet",
	"_nTDSCDMA_x5fRefCh_x5fRF_x5fH_fCH_x5f12_x5f2k_x5fMultiCode",
	"_nTDSCDMA_x5fRefCh_x5fRF_x5fH_fCH_x5f12_x5f2k_x5fSingleCode",
	"_nTDSCDMA_x5fRefCh_x5fRF_x5fH_fCH_x5f64k",
	"_nTDSCDMA_x5fRefCh_x5fRF_x5fH_fCH_x5f144k",
	"_nTDSCDMA_x5fRefCh_x5fRF_x5fH_fCH_x5f384k",
	"StdForm");
create_item ("TDSCDMA_RefCh_RF_H","RF reference measurement channel",
	"T",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_TDSCDMA_RefCh_RF_H",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"TDSCDMA_RefCh_RF_H",
	SPDesignAnnotFmt,
	"SYM_DSN_TDSCDMA_RefCh_RF_H",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Noise","Enable thermal noise?",
		PARM_INT,
		"_nTDSCDMA_x5fRefCh_x5fRF_x5fH_fNoiseSet",
		UNITLESS_UNIT,
		prm("_nTDSCDMA_x5fRefCh_x5fRF_x5fH_fNO","NO")),
	create_parm ("Temp","Temperature",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		TEMPERATURE_UNIT,
		prm("StdForm","-273.15")),
	create_parm ("ROut","output resistance",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50")),
	create_parm ("FCarrier","carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","1900MHz")),
	create_parm ("Power","modulator output power",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","0.1W")),
	create_parm ("VRef","reference voltage",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		VOLTAGE_UNIT,
		prm("StdForm","0.5236V")),
	create_parm ("MirrorSourceSpectrum","Mirror source spectrum about carrier?",
		PARM_INT,
		"_nTDSCDMA_x5fRefCh_x5fRF_x5fH_fMirrorSourceSpectrumSet",
		UNITLESS_UNIT,
		prm("_nTDSCDMA_x5fRefCh_x5fRF_x5fH_fNO","NO")),
	create_parm ("GainImbalance","Gain imbalance (Q vs I)",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("PhaseImbalance","Phase imbalance, Q vs I",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		ANGLE_UNIT,
		prm("StdForm","0.0")),
	create_parm ("I_OriginOffset","I origin offset (percent)",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("Q_OriginOffset","Q origin offset (percent)",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("IQ_Rotation","IQ rotation",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		ANGLE_UNIT,
		prm("StdForm","0.0")),
	create_parm ("RRC_FilterLength","RRC filter length (chips)",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","12")),
	create_parm ("SamplesPerSymbol","samples per symbol period",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("Link","link selection",
		PARM_INT,
		"_nTDSCDMA_x5fRefCh_x5fRF_x5fH_fLinkSet",
		UNITLESS_UNIT,
		prm("_nTDSCDMA_x5fRefCh_x5fRF_x5fH_fDownlink","Downlink")),
	create_parm ("RefCh","reference channel selection indicator",
		PARM_INT,
		"_nTDSCDMA_x5fRefCh_x5fRF_x5fH_fRefChSet",
		UNITLESS_UNIT,
		prm("_nTDSCDMA_x5fRefCh_x5fRF_x5fH_fCH_x5f12_x5f2k_x5fMultiCode","CH_12_2k_MultiCode")),
	create_parm ("PhyChNum_SA","physical channel allocation configuration",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"0 0 2 0 0 0 0\"")),
	create_parm ("MaxPhyChNum","sum of allocated physical channel in all slots",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","2")),
	create_parm ("ModType_SA","type of modulation of all slots, 0 for QPSK, 1 for 8PSK",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"0 0 0 0 0 0 0\"")),
	create_parm ("TFCI_SA","allocated TFCI transmitted active slots configuration",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"0 0 1 0 0 0 0\"")),
	create_parm ("TFCI_Length_SA","length of TFCI of all slots",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"0 0 16 0 0 0 0\"")),
	create_parm ("SS_TPC_SA","type of SS and TPC of all slots",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"2 2 1 2 2 2 2\"")),
	create_parm ("MinSF_PA","minimum spreading factor array corresponding to allocated physical channels",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"16 16\"")),
	create_parm ("SpreadCode_PA","index of OVSF code corresponding to allocated physical channels",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"1 2 \"")),
	create_parm ("BasicMidambleID","index of basic midamble",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("K_SA","maximum number of midamble shifts in a cell for all slots",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"16 16 16 16 16 16 16 \"")),
	create_parm ("MidambleID_SA","index of midamble for all slots",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"5 5 5 5 5 5 5\"")),
	create_parm ("Gain_PA","gain setting array corresponding to allocated physical channels",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"1.0 1.0\"")));
library_group("Testing (for development use only)","Testing (for development use only)","TDSCDMA_RefCh_RF_H");
palette_group("Testing (for development use only)","Testing (for development use only)","TDSCDMA_RefCh_RF_H");

