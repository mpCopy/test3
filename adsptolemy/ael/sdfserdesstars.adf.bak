set_design_type( sigproc_net );
create_constant_form ("_nFFE_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nFFE_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nFFE_fFFinitialSet",
	"_nFFE_fNO",
	"_nFFE_fYES",
	"StdForm");
create_constant_form ("_nFFE_fNone", 
	"None",
	0,
	"0",
	"None");
create_constant_form ("_nFFE_fLMS", 
	"LMS",
	0,
	"1",
	"LMS");
create_constant_form ("_nFFE_fRLS", 
	"RLS",
	0,
	"2",
	"RLS");
create_constant_form ("_nFFE_fZF", 
	"ZF",
	0,
	"3",
	"ZF");
create_form_set("_nFFE_fEquAlgorithmSet",
	"_nFFE_fNone",
	"_nFFE_fLMS",
	"_nFFE_fRLS",
	"_nFFE_fZF",
	"StdForm");
create_item ("FFE","feed-forward equalizer",
	"F",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_FFE",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nFFE_lsdfserdesstars",
	SPComponentAnnotFmt,
	"SYM_FFE",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("NumFFtaps","number of feed-forward taps",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","5")),
	create_parm ("FFinitial","feed-forward filter taps are initialized by users or not",
		PARM_INT,
		"_nFFE_fFFinitialSet",
		UNITLESS_UNIT,
		prm("_nFFE_fNO","NO")),
	create_parm ("FFtaps","initial feed-forward filter taps (only valid when FFinitial is YES)",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0, 0, 0, 0, 0}")),
	create_parm ("EquAlgorithm","adaptive algorithm",
		PARM_INT,
		"_nFFE_fEquAlgorithmSet",
		UNITLESS_UNIT,
		prm("_nFFE_fLMS","LMS")),
	create_parm ("TrainSeqLen","length of training sequence",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1000")),
	create_parm ("Fraction","number of samples per symbol at input, range [1, 16]",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("RefTap","index of reference tap for LMS and RLS algorithms, range [1, NumFFtaps]",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")),
	create_parm ("Alpha","step size for LMS algorithm",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1e-3")),
	create_parm ("Lambda","weighting factor for RLS algorithm",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.999")),
	create_parm ("Delta","small positive constant for RLS algorithm",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.001")),
	create_parm ("TargetMSE","reference MSE in dB for stopping updating coefficients when RLS equalizer reaches this MSE",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","-40")),
	create_parm ("SaveTapsFile","filename in which to save final tap values",
		PARM_STRING,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")));
library_group("Numeric, Communications","Numeric, Communications","FFE");
palette_group("Numeric, Communications","Numeric, Communications","FFE");

create_constant_form ("_nDFE_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nDFE_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nDFE_fFFinitialSet",
	"_nDFE_fNO",
	"_nDFE_fYES",
	"StdForm");
create_constant_form ("_nDFE_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nDFE_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nDFE_fFBinitialSet",
	"_nDFE_fNO",
	"_nDFE_fYES",
	"StdForm");
create_constant_form ("_nDFE_fNone", 
	"None",
	0,
	"0",
	"None");
create_constant_form ("_nDFE_fLMS", 
	"LMS",
	0,
	"1",
	"LMS");
create_constant_form ("_nDFE_fRLS", 
	"RLS",
	0,
	"2",
	"RLS");
create_constant_form ("_nDFE_fZF", 
	"ZF",
	0,
	"3",
	"ZF");
create_form_set("_nDFE_fEquAlgorithmSet",
	"_nDFE_fNone",
	"_nDFE_fLMS",
	"_nDFE_fRLS",
	"_nDFE_fZF",
	"StdForm");
create_item ("DFE","decision feedback equalizer",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DFE",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDFE_lsdfserdesstars",
	SPComponentAnnotFmt,
	"SYM_DFE",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("NumFFtaps","number of feed-forward taps",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","5")),
	create_parm ("FFinitial","feed-forward filter taps are initialized by users or not",
		PARM_INT,
		"_nDFE_fFFinitialSet",
		UNITLESS_UNIT,
		prm("_nDFE_fNO","NO")),
	create_parm ("FFtaps","initial feed-forward filter taps (only valid when FFinitial is YES)",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0, 0, 0, 0, 0}")),
	create_parm ("NumFBtaps","number of feedback filter taps",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","2")),
	create_parm ("FBinitial","feedback filter taps are initialized by users or not",
		PARM_INT,
		"_nDFE_fFBinitialSet",
		UNITLESS_UNIT,
		prm("_nDFE_fNO","NO")),
	create_parm ("FBtaps","initial feedback filter taps (only valid when FBinitial is YES)",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0, 0}")),
	create_parm ("EquAlgorithm","adaptive algorithm",
		PARM_INT,
		"_nDFE_fEquAlgorithmSet",
		UNITLESS_UNIT,
		prm("_nDFE_fLMS","LMS")),
	create_parm ("TrainSeqLen","length of training sequence",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1000")),
	create_parm ("Fraction","number of samples per symbol at input, range [1, 16]",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("RefTap","index of reference tap for LMS and RLS algorithms, range [1, NumFFtaps]",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")),
	create_parm ("Alpha","step size for LMS algorithm",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1e-3")),
	create_parm ("Lambda","weighting factor for RLS algorithm",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.999")),
	create_parm ("Delta","small positive constant for RLS algorithm",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.001")),
	create_parm ("TargetMSE","reference MSE in dB for stopping updating coefficients when RLS equalizer reaches this MSE",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","-40")),
	create_parm ("SaveFFTapsFile","filename in which to save final FF tap values",
		PARM_STRING,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("SaveFBTapsFile","filename in which to save final FB tap values",
		PARM_STRING,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")));
library_group("Numeric, Communications","Numeric, Communications","DFE");
palette_group("Numeric, Communications","Numeric, Communications","DFE");

create_constant_form ("_nBlindFFE_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nBlindFFE_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nBlindFFE_fFFinitialSet",
	"_nBlindFFE_fNO",
	"_nBlindFFE_fYES",
	"StdForm");
create_constant_form ("_nBlindFFE_fNone", 
	"None",
	0,
	"0",
	"None");
create_constant_form ("_nBlindFFE_fCMA", 
	"CMA",
	0,
	"1",
	"CMA");
create_constant_form ("_nBlindFFE_fDD", 
	"DD",
	0,
	"2",
	"DD");
create_form_set("_nBlindFFE_fEquAlgorithmSet",
	"_nBlindFFE_fNone",
	"_nBlindFFE_fCMA",
	"_nBlindFFE_fDD",
	"StdForm");
create_item ("BlindFFE","Blind feed-forward equalizer",
	"B",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_BlindFFE",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nBlindFFE_lsdfserdesstars",
	SPComponentAnnotFmt,
	"SYM_BlindFFE",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("NumFFtaps","number of feed-forward taps",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","5")),
	create_parm ("FFinitial","feed-forward filter taps are initialized by users or not",
		PARM_INT,
		"_nBlindFFE_fFFinitialSet",
		UNITLESS_UNIT,
		prm("_nBlindFFE_fNO","NO")),
	create_parm ("FFtaps","initial feed-forward filter taps (only valid when FFinitial is YES)",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0, 0, 1, 0, 0}")),
	create_parm ("EquAlgorithm","adaptive algorithm",
		PARM_INT,
		"_nBlindFFE_fEquAlgorithmSet",
		UNITLESS_UNIT,
		prm("_nBlindFFE_fCMA","CMA")),
	create_parm ("Fraction","number of samples per symbol at input, range [1, 16]",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("Alpha","step size for tap adjustment",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1e-4")),
	create_parm ("SaveTapsFile","filename in which to save final tap values",
		PARM_STRING,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")));
library_group("Numeric, Communications","Numeric, Communications","BlindFFE");
palette_group("Numeric, Communications","Numeric, Communications","BlindFFE");

create_constant_form ("_nBlindDFE_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nBlindDFE_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nBlindDFE_fFFinitialSet",
	"_nBlindDFE_fNO",
	"_nBlindDFE_fYES",
	"StdForm");
create_constant_form ("_nBlindDFE_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nBlindDFE_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nBlindDFE_fFBinitialSet",
	"_nBlindDFE_fNO",
	"_nBlindDFE_fYES",
	"StdForm");
create_constant_form ("_nBlindDFE_fNone", 
	"None",
	0,
	"0",
	"None");
create_constant_form ("_nBlindDFE_fCMA", 
	"CMA",
	0,
	"1",
	"CMA");
create_constant_form ("_nBlindDFE_fDD", 
	"DD",
	0,
	"2",
	"DD");
create_form_set("_nBlindDFE_fEquAlgorithmSet",
	"_nBlindDFE_fNone",
	"_nBlindDFE_fCMA",
	"_nBlindDFE_fDD",
	"StdForm");
create_item ("BlindDFE","Blind decision feedback equalizer",
	"B",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_BlindDFE",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nBlindDFE_lsdfserdesstars",
	SPComponentAnnotFmt,
	"SYM_BlindDFE",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("NumFFtaps","number of feed-forward taps",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","5")),
	create_parm ("FFinitial","feed-forward filter taps are initialized by users or not",
		PARM_INT,
		"_nBlindDFE_fFFinitialSet",
		UNITLESS_UNIT,
		prm("_nBlindDFE_fNO","NO")),
	create_parm ("FFtaps","initial feed-forward filter taps (only valid when FFinitial is YES)",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0, 0, 1, 0, 0}")),
	create_parm ("NumFBtaps","number of feedback filter taps",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","2")),
	create_parm ("FBinitial","feedback filter taps are initialized by users or not",
		PARM_INT,
		"_nBlindDFE_fFBinitialSet",
		UNITLESS_UNIT,
		prm("_nBlindDFE_fNO","NO")),
	create_parm ("FBtaps","initial feedback filter taps (only valid when FBinitial is YES)",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0, 0}")),
	create_parm ("EquAlgorithm","adaptive algorithm",
		PARM_INT,
		"_nBlindDFE_fEquAlgorithmSet",
		UNITLESS_UNIT,
		prm("_nBlindDFE_fCMA","CMA")),
	create_parm ("Fraction","number of samples per symbol at input, range [1, 16]",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("Alpha","step size for tap adjustment",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1e-4")),
	create_parm ("SaveFFTapsFile","filename in which to save final FF tap values",
		PARM_STRING,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("SaveFBTapsFile","filename in which to save final FB tap values",
		PARM_STRING,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")));
library_group("Numeric, Communications","Numeric, Communications","BlindDFE");
palette_group("Numeric, Communications","Numeric, Communications","BlindDFE");

create_item ("8b10bDecoder","8b/10b decoder",
	"b",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_8b10bDecoder",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_n8b10bDecoder_lsdfserdesstars",
	SPComponentAnnotFmt,
	"SYM_8b10bDecoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Delay","number of 10-bit symbol delay",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")));
library_group("Numeric, Communications","Numeric, Communications","8b10bDecoder");
palette_group("Numeric, Communications","Numeric, Communications","8b10bDecoder");

create_item ("8b10bCoder","8b/10b coder",
	"b",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_8b10bCoder",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_n8b10bCoder_lsdfserdesstars",
	SPComponentAnnotFmt,
	"SYM_8b10bCoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("Numeric, Communications","Numeric, Communications","8b10bCoder");
palette_group("Numeric, Communications","Numeric, Communications","8b10bCoder");

create_constant_form ("_n64b66bDecoder_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_n64b66bDecoder_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_n64b66bDecoder_fScramblerSet",
	"_n64b66bDecoder_fNO",
	"_n64b66bDecoder_fYES",
	"StdForm");
create_item ("64b66bDecoder","64b/66b decoder",
	"b",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_64b66bDecoder",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_n64b66bDecoder_lsdfserdesstars",
	SPComponentAnnotFmt,
	"SYM_64b66bDecoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Scrambler","scramble or not",
		PARM_INT,
		"_n64b66bDecoder_fScramblerSet",
		UNITLESS_UNIT,
		prm("_n64b66bDecoder_fNO","NO")),
	create_parm ("ScramblerInit","initial state of scrambler",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}")),
	create_parm ("Delay","number of 66-bit symbol delayed for descrambler",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")));
library_group("Numeric, Communications","Numeric, Communications","64b66bDecoder");
palette_group("Numeric, Communications","Numeric, Communications","64b66bDecoder");

create_constant_form ("_n64b66bCoder_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_n64b66bCoder_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_n64b66bCoder_fScramblerSet",
	"_n64b66bCoder_fNO",
	"_n64b66bCoder_fYES",
	"StdForm");
create_item ("64b66bCoder","64b/66b coder",
	"b",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_64b66bCoder",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_n64b66bCoder_lsdfserdesstars",
	SPComponentAnnotFmt,
	"SYM_64b66bCoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Scrambler","scramble or not",
		PARM_INT,
		"_n64b66bCoder_fScramblerSet",
		UNITLESS_UNIT,
		prm("_n64b66bCoder_fNO","NO")),
	create_parm ("ScramblerInit","initial state of scrambler",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}")));
library_group("Numeric, Communications","Numeric, Communications","64b66bCoder");
palette_group("Numeric, Communications","Numeric, Communications","64b66bCoder");

