set_design_type( sigproc_net );


create_constant_form ("_n3GPPFDD_x5fBS_x5fRX_fRefLevel", 
	"RefLevel",
	0,
	"0",
	"RefLevel");


create_constant_form ("_n3GPPFDD_x5fBS_x5fRX_fDynamicRange", 
	"DynamicRange",
	0,
	"1",
	"DynamicRange");


create_constant_form ("_n3GPPFDD_x5fBS_x5fRX_fACS", 
	"ACS",
	0,
	"2",
	"ACS");


create_constant_form ("_n3GPPFDD_x5fBS_x5fRX_fBlocking", 
	"Blocking",
	0,
	"3",
	"Blocking");


create_constant_form ("_n3GPPFDD_x5fBS_x5fRX_fIntermod", 
	"Intermod",
	0,
	"4",
	"Intermod");


create_form_set("_n3GPPFDD_x5fBS_x5fRX_fMeasTypeSet",
	"_n3GPPFDD_x5fBS_x5fRX_fRefLevel",
	"_n3GPPFDD_x5fBS_x5fRX_fDynamicRange",
	"_n3GPPFDD_x5fBS_x5fRX_fACS",
	"_n3GPPFDD_x5fBS_x5fRX_fBlocking",
	"_n3GPPFDD_x5fBS_x5fRX_fIntermod",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fBS_x5fRX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_n3GPPFDD_x5fBS_x5fRX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_n3GPPFDD_x5fBS_x5fRX_fMirrorSourceSpectrumSet",
	"_n3GPPFDD_x5fBS_x5fRX_fNO",
	"_n3GPPFDD_x5fBS_x5fRX_fYES",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fBS_x5fRX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_n3GPPFDD_x5fBS_x5fRX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_n3GPPFDD_x5fBS_x5fRX_fMirrorMeasSpectrumSet",
	"_n3GPPFDD_x5fBS_x5fRX_fNO",
	"_n3GPPFDD_x5fBS_x5fRX_fYES",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fBS_x5fRX_fVersion_x5f03_x5f00", 
	"Version 03_00",
	0,
	"0",
	"Version 03_00");


create_constant_form ("_n3GPPFDD_x5fBS_x5fRX_fVersion_x5f12_x5f00", 
	"Version 12_00",
	0,
	"1",
	"Version 12_00");


create_constant_form ("_n3GPPFDD_x5fBS_x5fRX_fVersion_x5f03_x5f02", 
	"Version 03_02",
	0,
	"2",
	"Version 03_02");


create_form_set("_n3GPPFDD_x5fBS_x5fRX_fSpecVersionSet",
	"_n3GPPFDD_x5fBS_x5fRX_fVersion_x5f03_x5f00",
	"_n3GPPFDD_x5fBS_x5fRX_fVersion_x5f12_x5f00",
	"_n3GPPFDD_x5fBS_x5fRX_fVersion_x5f03_x5f02",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fBS_x5fRX_fdbmtow_x5f_x5f121_x5f_x5fRefLevel", 
	"dbmtow(-121) RefLevel",
	0,
	"dbmtow(-121.0)",
	"dbmtow(-121.0)");


create_form_set("_n3GPPFDD_x5fBS_x5fRX_f_x5fRefLevel_x5fWantedSignalPowerSet",
	"_n3GPPFDD_x5fBS_x5fRX_fdbmtow_x5f_x5f121_x5f_x5fRefLevel",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fBS_x5fRX_fdbmtow_x5f_x5f91_x5f_x5fDynamicRange", 
	"dbmtow(-91) DynamicRange",
	0,
	"dbmtow(-91.0)",
	"dbmtow(-91.0)");


create_form_set("_n3GPPFDD_x5fBS_x5fRX_f_x5fDynamicRange_x5fWantedSignalPowerSet",
	"_n3GPPFDD_x5fBS_x5fRX_fdbmtow_x5f_x5f91_x5f_x5fDynamicRange",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fBS_x5fRX_fdbmtow_x5f_x5f73_x5f_x5f_x5f3_x5f84MHz_x5f_x5fDynamicRange", 
	"dbmtow(-73)/(3.84MHz) DynamicRange",
	0,
	"dbmtow(-73.0)/(3.84 MHz)",
	"dbmtow(-73.0)/(3.84 MHz)");


create_form_set("_n3GPPFDD_x5fBS_x5fRX_f_x5fDynamicRange_x5fAWGN_x5fDensitySet",
	"_n3GPPFDD_x5fBS_x5fRX_fdbmtow_x5f_x5f73_x5f_x5f_x5f3_x5f84MHz_x5f_x5fDynamicRange",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fBS_x5fRX_fdbmtow_x5f_x5f115_x5f_x5fACS", 
	"dbmtow(-115) ACS",
	0,
	"dbmtow(-115.0)",
	"dbmtow(-115.0)");


create_form_set("_n3GPPFDD_x5fBS_x5fRX_f_x5fACS_x5fWantedSignalPowerSet",
	"_n3GPPFDD_x5fBS_x5fRX_fdbmtow_x5f_x5f115_x5f_x5fACS",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fBS_x5fRX_fplus_x5f5MHz_x5fACS", 
	"plus 5MHz ACS",
	0,
	"+5 MHz",
	"+5 MHz");


create_constant_form ("_n3GPPFDD_x5fBS_x5fRX_fminus_x5f5MHz_x5fACS", 
	"minus 5MHz ACS",
	0,
	"-5 MHz",
	"-5 MHz");


create_form_set("_n3GPPFDD_x5fBS_x5fRX_f_x5fACS_x5fModFreqOffsetSet",
	"_n3GPPFDD_x5fBS_x5fRX_fplus_x5f5MHz_x5fACS",
	"_n3GPPFDD_x5fBS_x5fRX_fminus_x5f5MHz_x5fACS",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fBS_x5fRX_fdbmtow_x5f_x5f52_x5f_x5fACS", 
	"dbmtow(-52) ACS",
	0,
	"dbmtow(-52.0)",
	"dbmtow(-52.0)");


create_form_set("_n3GPPFDD_x5fBS_x5fRX_f_x5fACS_x5fModPowerSet",
	"_n3GPPFDD_x5fBS_x5fRX_fdbmtow_x5f_x5f52_x5f_x5fACS",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fBS_x5fRX_fdbmtow_x5f_x5f115_x5f_x5fBlocking", 
	"dbmtow(-115) Blocking",
	0,
	"dbmtow(-115.0)",
	"dbmtow(-115.0)");


create_form_set("_n3GPPFDD_x5fBS_x5fRX_f_x5fBlocking_x5fWantedSignalPowerSet",
	"_n3GPPFDD_x5fBS_x5fRX_fdbmtow_x5f_x5f115_x5f_x5fBlocking",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fBS_x5fRX_fplus_x5f10MHz_x5fBlocking", 
	"plus 10MHz Blocking",
	0,
	"+10 MHz",
	"+10 MHz");


create_constant_form ("_n3GPPFDD_x5fBS_x5fRX_fminus_x5f10MHz_x5fBlocking", 
	"minus 10MHz Blocking",
	0,
	"-10 MHz",
	"-10 MHz");


create_form_set("_n3GPPFDD_x5fBS_x5fRX_f_x5fBlocking_x5fModFreqOffsetSet",
	"_n3GPPFDD_x5fBS_x5fRX_fplus_x5f10MHz_x5fBlocking",
	"_n3GPPFDD_x5fBS_x5fRX_fminus_x5f10MHz_x5fBlocking",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fBS_x5fRX_fdbmtow_x5f_x5f40_x5f_x5fBlocking", 
	"dbmtow(-40) Blocking",
	0,
	"dbmtow(-40.0)",
	"dbmtow(-40.0)");


create_form_set("_n3GPPFDD_x5fBS_x5fRX_f_x5fBlocking_x5fModPowerSet",
	"_n3GPPFDD_x5fBS_x5fRX_fdbmtow_x5f_x5f40_x5f_x5fBlocking",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fBS_x5fRX_fdbmtow_x5f_x5f115_x5f_x5fIntermod", 
	"dbmtow(-115) Intermod",
	0,
	"dbmtow(-115.0)",
	"dbmtow(-115.0)");


create_form_set("_n3GPPFDD_x5fBS_x5fRX_f_x5fIntermod_x5fWantedSignalPowerSet",
	"_n3GPPFDD_x5fBS_x5fRX_fdbmtow_x5f_x5f115_x5f_x5fIntermod",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fBS_x5fRX_fplus_x5f10MHz_x5fIntermod_x5fCW", 
	"plus 10MHz Intermod_CW",
	0,
	"+10 MHz",
	"+10 MHz");


create_constant_form ("_n3GPPFDD_x5fBS_x5fRX_fminus_x5f10MHz_x5fIntermod_x5fCW", 
	"minus 10MHz Intermod_CW",
	0,
	"-10 MHz",
	"-10 MHz");


create_form_set("_n3GPPFDD_x5fBS_x5fRX_f_x5fIntermod_x5fCW_x5fFreqOffsetSet",
	"_n3GPPFDD_x5fBS_x5fRX_fplus_x5f10MHz_x5fIntermod_x5fCW",
	"_n3GPPFDD_x5fBS_x5fRX_fminus_x5f10MHz_x5fIntermod_x5fCW",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fBS_x5fRX_fdbmtow_x5f_x5f48_x5f_x5fIntermod_x5fCW", 
	"dbmtow(-48) Intermod_CW",
	0,
	"dbmtow(-48.0)",
	"dbmtow(-48.0)");


create_form_set("_n3GPPFDD_x5fBS_x5fRX_f_x5fIntermod_x5fCW_x5fPowerSet",
	"_n3GPPFDD_x5fBS_x5fRX_fdbmtow_x5f_x5f48_x5f_x5fIntermod_x5fCW",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fBS_x5fRX_fplus_x5f20MHz_x5fIntermod_x5fMod", 
	"plus 20MHz Intermod_Mod",
	0,
	"+20 MHz",
	"+20 MHz");


create_constant_form ("_n3GPPFDD_x5fBS_x5fRX_fminus_x5f20MHz_x5fIntermod_x5fMod", 
	"minus 20MHz Intermod_Mod",
	0,
	"-20 MHz",
	"-20 MHz");


create_form_set("_n3GPPFDD_x5fBS_x5fRX_f_x5fIntermod_x5fModFreqOffsetSet",
	"_n3GPPFDD_x5fBS_x5fRX_fplus_x5f20MHz_x5fIntermod_x5fMod",
	"_n3GPPFDD_x5fBS_x5fRX_fminus_x5f20MHz_x5fIntermod_x5fMod",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fBS_x5fRX_fdbmtow_x5f_x5f48_x5f_x5fIntermod_x5fMod", 
	"dbmtow(-48) Intermod_Mod",
	0,
	"dbmtow(-48.0)",
	"dbmtow(-48.0)");


create_form_set("_n3GPPFDD_x5fBS_x5fRX_f_x5fIntermod_x5fModPowerSet",
	"_n3GPPFDD_x5fBS_x5fRX_fdbmtow_x5f_x5f48_x5f_x5fIntermod_x5fMod",
	"StdForm");


create_item ("3GPPFDD_BS_RX","3GPP FDD BS RX test",
	"3GPPFDD_BS_RX",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST | ITEM_UNIQUE,
	-1,
	"BMP_3GPPFDD_BS_RX",
	"Component Parameters",
	NULL,
	ARFWTBNetlistFmt,
	"3GPPFDD_BS_RX",
	SPDesignAnnotFmt,
	"SYM_DSN_3GPPFDD_BS_RX",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("RequiredParameters","Required Parameters",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("CE_TimeStep","Circuit envelope simulation time step",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","1/3.84 MHz/8")),
	create_parm ("WTB_TimeStep","Set CE_TimeStep <= 1/3.84e6/SamplesPerChip. <br> SamplesPerChip is in Signal Parameters tab.",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("FSource","Source carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","1950 MHz")),
	create_parm ("FMeasurement","Measurement carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","1950 MHz")),
	create_parm ("MeasurementInfo","Available Measurements <br> Each measurement has parameters on its tab/category below.",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("MeasType","Measurement type",
		PARM_INT,
		"_n3GPPFDD_x5fBS_x5fRX_fMeasTypeSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fBS_x5fRX_fRefLevel","RefLevel")),
	create_parm ("BasicParameters","Basic Parameters",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("SourceR","Source resistance",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50 Ohm")),
	create_parm ("SourceTemp","Source resistor temperature",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		TEMPERATURE_UNIT,
		prm("StdForm","16.85")),
	create_parm ("MeasR","Measurement resistance",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50 Ohm")),
	create_parm ("MirrorSourceSpectrum","Mirror source spectrum about carrier?",
		PARM_INT | PARM_NO_DISPLAY,
		"_n3GPPFDD_x5fBS_x5fRX_fMirrorSourceSpectrumSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fBS_x5fRX_fNO","NO")),
	create_parm ("MirrorMeasSpectrum","Mirror meas spectrum about carrier?",
		PARM_INT | PARM_NO_DISPLAY,
		"_n3GPPFDD_x5fBS_x5fRX_fMirrorMeasSpectrumSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fBS_x5fRX_fNO","NO")),
	create_parm ("DUT_DelayBound","DUT delay bound",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","10.0 usec")),
	create_parm ("TestBenchSeed","Random number generator seed",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1234567")),
	create_parm ("SignalParameters","Signal Parameters",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("GainImbalance","Gain imbalance, Q vs I",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0.0")),
	create_parm ("PhaseImbalance","Phase imbalance, Q vs I",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		ANGLE_UNIT,
		prm("StdForm","0.0")),
	create_parm ("I_OriginOffset","I origin offset (percent)",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("Q_OriginOffset","Q origin offset (percent)",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("IQ_Rotation","IQ rotation",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		ANGLE_UNIT,
		prm("StdForm","0.0")),
	create_parm ("SamplesPerChip","Samples per chip",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("RRC_FilterLength","RRC filter chip length",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")),
	create_parm ("SpecVersion","Secification version",
		PARM_INT | PARM_NO_DISPLAY,
		"_n3GPPFDD_x5fBS_x5fRX_fSpecVersionSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fBS_x5fRX_fVersion_x5f12_x5f00","Version_12_00")),
	create_parm ("RefLevelParameters","RefLevel Parameters",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("RefLevel_WantedSignalPower","Wanted signal power",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"_n3GPPFDD_x5fBS_x5fRX_f_x5fRefLevel_x5fWantedSignalPowerSet",
		POWER_UNIT,
		prm("_n3GPPFDD_x5fBS_x5fRX_fdbmtow_x5f_x5f121_x5f_x5fRefLevel","dbmtow__121__RefLevel")),
	create_parm ("DynamicRangeParameters","DynamicRange Parameters",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("DynamicRange_WantedSignalPower","Wanted signal power",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"_n3GPPFDD_x5fBS_x5fRX_f_x5fDynamicRange_x5fWantedSignalPowerSet",
		POWER_UNIT,
		prm("_n3GPPFDD_x5fBS_x5fRX_fdbmtow_x5f_x5f91_x5f_x5fDynamicRange","dbmtow__91__DynamicRange")),
	create_parm ("DynamicRange_AWGN_Density","AWGN interference power density",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"_n3GPPFDD_x5fBS_x5fRX_f_x5fDynamicRange_x5fAWGN_x5fDensitySet",
		POWER_UNIT,
		prm("_n3GPPFDD_x5fBS_x5fRX_fdbmtow_x5f_x5f73_x5f_x5f_x5f3_x5f84MHz_x5f_x5fDynamicRange","dbmtow__73___3_84MHz__DynamicRange")),
	create_parm ("ACS_Parameters","ACS Parameters",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("ACS_WantedSignalPower","Wanted signal power",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"_n3GPPFDD_x5fBS_x5fRX_f_x5fACS_x5fWantedSignalPowerSet",
		POWER_UNIT,
		prm("_n3GPPFDD_x5fBS_x5fRX_fdbmtow_x5f_x5f115_x5f_x5fACS","dbmtow__115__ACS")),
	create_parm ("ACS_ModFreqOffset","Modulated channel frequency offset",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"_n3GPPFDD_x5fBS_x5fRX_f_x5fACS_x5fModFreqOffsetSet",
		FREQUENCY_UNIT,
		prm("_n3GPPFDD_x5fBS_x5fRX_fplus_x5f5MHz_x5fACS","plus_5MHz_ACS")),
	create_parm ("ACS_ModPower","Modulated channel power",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"_n3GPPFDD_x5fBS_x5fRX_f_x5fACS_x5fModPowerSet",
		POWER_UNIT,
		prm("_n3GPPFDD_x5fBS_x5fRX_fdbmtow_x5f_x5f52_x5f_x5fACS","dbmtow__52__ACS")),
	create_parm ("BlockingParameters","Blocking Parameters",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("Blocking_Info","When Blocking_ModFreqOffset is +10 MHz / -10 MHz, the recommended SamplesPerChip (in Signal Parameters Tab) is 16.  Also, set CE_TimeStep equal to or less than the value 1/3.84e6/SamplesPerChip.",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("Blocking_WantedSignalPower","Wanted signal power",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"_n3GPPFDD_x5fBS_x5fRX_f_x5fBlocking_x5fWantedSignalPowerSet",
		POWER_UNIT,
		prm("_n3GPPFDD_x5fBS_x5fRX_fdbmtow_x5f_x5f115_x5f_x5fBlocking","dbmtow__115__Blocking")),
	create_parm ("Blocking_ModFreqOffset","Modulated channel frequency offset",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"_n3GPPFDD_x5fBS_x5fRX_f_x5fBlocking_x5fModFreqOffsetSet",
		FREQUENCY_UNIT,
		prm("_n3GPPFDD_x5fBS_x5fRX_fplus_x5f10MHz_x5fBlocking","plus_10MHz_Blocking")),
	create_parm ("Blocking_ModPower","Modulated channel power",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"_n3GPPFDD_x5fBS_x5fRX_f_x5fBlocking_x5fModPowerSet",
		POWER_UNIT,
		prm("_n3GPPFDD_x5fBS_x5fRX_fdbmtow_x5f_x5f40_x5f_x5fBlocking","dbmtow__40__Blocking")),
	create_parm ("IntermodParameters","Intermod Parameters",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("Intermod_Info","When Intermod_ModFreqOffset is +20 MHz / -20 MHz, the recommended SamplesPerChip (in Signal Parameters Tab) is 32.  Also, set CE_TimeStep equal to or less than the value 1/3.84e6/SamplesPerChip.",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("Intermod_WantedSignalPower","Wanted signal power",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"_n3GPPFDD_x5fBS_x5fRX_f_x5fIntermod_x5fWantedSignalPowerSet",
		POWER_UNIT,
		prm("_n3GPPFDD_x5fBS_x5fRX_fdbmtow_x5f_x5f115_x5f_x5fIntermod","dbmtow__115__Intermod")),
	create_parm ("Intermod_CW_FreqOffset","Continuous wave frequency offset",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"_n3GPPFDD_x5fBS_x5fRX_f_x5fIntermod_x5fCW_x5fFreqOffsetSet",
		FREQUENCY_UNIT,
		prm("_n3GPPFDD_x5fBS_x5fRX_fplus_x5f10MHz_x5fIntermod_x5fCW","plus_10MHz_Intermod_CW")),
	create_parm ("Intermod_CW_Power","Continuous wave power",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"_n3GPPFDD_x5fBS_x5fRX_f_x5fIntermod_x5fCW_x5fPowerSet",
		POWER_UNIT,
		prm("_n3GPPFDD_x5fBS_x5fRX_fdbmtow_x5f_x5f48_x5f_x5fIntermod_x5fCW","dbmtow__48__Intermod_CW")),
	create_parm ("Intermod_ModFreqOffset","Modulated channel frequency offset",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"_n3GPPFDD_x5fBS_x5fRX_f_x5fIntermod_x5fModFreqOffsetSet",
		FREQUENCY_UNIT,
		prm("_n3GPPFDD_x5fBS_x5fRX_fplus_x5f20MHz_x5fIntermod_x5fMod","plus_20MHz_Intermod_Mod")),
	create_parm ("Intermod_ModPower","Modulated channel power",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"_n3GPPFDD_x5fBS_x5fRX_f_x5fIntermod_x5fModPowerSet",
		POWER_UNIT,
		prm("_n3GPPFDD_x5fBS_x5fRX_fdbmtow_x5f_x5f48_x5f_x5fIntermod_x5fMod","dbmtow__48__Intermod_Mod")),
	create_parm ("MeasurementParameters","Measurement Parameters",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("DisplayPages","RX measurement display pages: <br> 3GPPFDD_BS_RX_test Table <br> 3GPPFDD_BS_RX_test Equations",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("FrameSetsMeasured","Sets of 4 frames measured",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","21")),
	create_parm ("RAKE_PathDelay","Path delay for RAKE (samples)",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")));



create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_n3GPPFDD_x5fBS_x5fTX_fRF_x5fEnvelopeMeasurementSet",
	"_n3GPPFDD_x5fBS_x5fTX_fNO",
	"_n3GPPFDD_x5fBS_x5fTX_fYES",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_n3GPPFDD_x5fBS_x5fTX_fPowerMeasurementSet",
	"_n3GPPFDD_x5fBS_x5fTX_fNO",
	"_n3GPPFDD_x5fBS_x5fTX_fYES",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_n3GPPFDD_x5fBS_x5fTX_fACLR_x5fMeasurementSet",
	"_n3GPPFDD_x5fBS_x5fTX_fNO",
	"_n3GPPFDD_x5fBS_x5fTX_fYES",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_n3GPPFDD_x5fBS_x5fTX_fOccupiedBW_x5fMeasurementSet",
	"_n3GPPFDD_x5fBS_x5fTX_fNO",
	"_n3GPPFDD_x5fBS_x5fTX_fYES",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_n3GPPFDD_x5fBS_x5fTX_fCDP_x5fMeasurementSet",
	"_n3GPPFDD_x5fBS_x5fTX_fNO",
	"_n3GPPFDD_x5fBS_x5fTX_fYES",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_n3GPPFDD_x5fBS_x5fTX_fPCDE_x5fMeasurementSet",
	"_n3GPPFDD_x5fBS_x5fTX_fNO",
	"_n3GPPFDD_x5fBS_x5fTX_fYES",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_n3GPPFDD_x5fBS_x5fTX_fEVM_x5fMeasurementSet",
	"_n3GPPFDD_x5fBS_x5fTX_fNO",
	"_n3GPPFDD_x5fBS_x5fTX_fYES",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_n3GPPFDD_x5fBS_x5fTX_fEnableSourceNoiseSet",
	"_n3GPPFDD_x5fBS_x5fTX_fNO",
	"_n3GPPFDD_x5fBS_x5fTX_fYES",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_n3GPPFDD_x5fBS_x5fTX_fMirrorSourceSpectrumSet",
	"_n3GPPFDD_x5fBS_x5fTX_fNO",
	"_n3GPPFDD_x5fBS_x5fTX_fYES",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_n3GPPFDD_x5fBS_x5fTX_fMirrorMeasSpectrumSet",
	"_n3GPPFDD_x5fBS_x5fTX_fNO",
	"_n3GPPFDD_x5fBS_x5fTX_fYES",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_n3GPPFDD_x5fBS_x5fTX_fRF_x5fMirrorFreqSet",
	"_n3GPPFDD_x5fBS_x5fTX_fNO",
	"_n3GPPFDD_x5fBS_x5fTX_fYES",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_n3GPPFDD_x5fBS_x5fTX_fMeasMirrorFreqSet",
	"_n3GPPFDD_x5fBS_x5fTX_fNO",
	"_n3GPPFDD_x5fBS_x5fTX_fYES",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fVersion_x5f03_x5f00", 
	"Version 03_00",
	0,
	"0",
	"Version 03_00");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fVersion_x5f12_x5f00", 
	"Version 12_00",
	0,
	"1",
	"Version 12_00");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fVersion_x5f03_x5f02", 
	"Version 03_02",
	0,
	"2",
	"Version 03_02");


create_form_set("_n3GPPFDD_x5fBS_x5fTX_fSpecVersionSet",
	"_n3GPPFDD_x5fBS_x5fTX_fVersion_x5f03_x5f00",
	"_n3GPPFDD_x5fBS_x5fTX_fVersion_x5f12_x5f00",
	"_n3GPPFDD_x5fBS_x5fTX_fVersion_x5f03_x5f02",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fTestModel1_x5f16DPCHs", 
	"TestModel1_16DPCHs",
	0,
	"0",
	"TestModel1_16DPCHs");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fTestModel1_x5f32DPCHs", 
	"TestModel1_32DPCHs",
	0,
	"1",
	"TestModel1_32DPCHs");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fTestModel1_x5f64DPCHs", 
	"TestModel1_64DPCHs",
	0,
	"2",
	"TestModel1_64DPCHs");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fTestModel2", 
	"TestModel2",
	0,
	"3",
	"TestModel2");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fTestModel3_x5f16DPCHs", 
	"TestModel3_16DPCHs",
	0,
	"4",
	"TestModel3_16DPCHs");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fTestModel3_x5f32DPCHs", 
	"TestModel3_32DPCHs",
	0,
	"5",
	"TestModel3_32DPCHs");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fTestModel4", 
	"TestModel4",
	0,
	"6",
	"TestModel4");


create_form_set("_n3GPPFDD_x5fBS_x5fTX_fSourceTypeSet",
	"_n3GPPFDD_x5fBS_x5fTX_fTestModel1_x5f16DPCHs",
	"_n3GPPFDD_x5fBS_x5fTX_fTestModel1_x5f32DPCHs",
	"_n3GPPFDD_x5fBS_x5fTX_fTestModel1_x5f64DPCHs",
	"_n3GPPFDD_x5fBS_x5fTX_fTestModel2",
	"_n3GPPFDD_x5fBS_x5fTX_fTestModel3_x5f16DPCHs",
	"_n3GPPFDD_x5fBS_x5fTX_fTestModel3_x5f32DPCHs",
	"_n3GPPFDD_x5fBS_x5fTX_fTestModel4",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fACLR_x5fnone", 
	"ACLR none",
	0,
	"0",
	"ACLR none");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fACLR_x5fHamming_x5f0_x5f54", 
	"ACLR Hamming 0.54",
	0,
	"1",
	"ACLR Hamming 0.54");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fACLR_x5fHanning_x5f0_x5f50", 
	"ACLR Hanning 0.50",
	0,
	"2",
	"ACLR Hanning 0.50");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fACLR_x5fGaussian_x5f0_x5f75", 
	"ACLR Gaussian 0.75",
	0,
	"3",
	"ACLR Gaussian 0.75");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fACLR_x5fKaiser_x5f7_x5f865", 
	"ACLR Kaiser 7.865",
	0,
	"4",
	"ACLR Kaiser 7.865");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fACLR_x5f8510_x5f6_x5f0", 
	"ACLR 8510 6.0",
	0,
	"5",
	"ACLR 8510 6.0");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fACLR_x5fBlackman", 
	"ACLR Blackman",
	0,
	"6",
	"ACLR Blackman");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fACLR_x5fBlackman_x5fHarris", 
	"ACLR Blackman-Harris",
	0,
	"7",
	"ACLR Blackman-Harris");


create_form_set("_n3GPPFDD_x5fBS_x5fTX_fACLR_x5fSpecMeasWindowSet",
	"_n3GPPFDD_x5fBS_x5fTX_fACLR_x5fnone",
	"_n3GPPFDD_x5fBS_x5fTX_fACLR_x5fHamming_x5f0_x5f54",
	"_n3GPPFDD_x5fBS_x5fTX_fACLR_x5fHanning_x5f0_x5f50",
	"_n3GPPFDD_x5fBS_x5fTX_fACLR_x5fGaussian_x5f0_x5f75",
	"_n3GPPFDD_x5fBS_x5fTX_fACLR_x5fKaiser_x5f7_x5f865",
	"_n3GPPFDD_x5fBS_x5fTX_fACLR_x5f8510_x5f6_x5f0",
	"_n3GPPFDD_x5fBS_x5fTX_fACLR_x5fBlackman",
	"_n3GPPFDD_x5fBS_x5fTX_fACLR_x5fBlackman_x5fHarris",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fOBW_x5fnone", 
	"OBW none",
	0,
	"0",
	"OBW none");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fOBW_x5fHamming_x5f0_x5f54", 
	"OBW Hamming 0.54",
	0,
	"1",
	"OBW Hamming 0.54");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fOBW_x5fHanning_x5f0_x5f50", 
	"OBW Hanning 0.50",
	0,
	"2",
	"OBW Hanning 0.50");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fOBW_x5fGaussian_x5f0_x5f75", 
	"OBW Gaussian 0.75",
	0,
	"3",
	"OBW Gaussian 0.75");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fOBW_x5fKaiser_x5f7_x5f865", 
	"OBW Kaiser 7.865",
	0,
	"4",
	"OBW Kaiser 7.865");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fOBW_x5f8510_x5f6_x5f0", 
	"OBW 8510 6.0",
	0,
	"5",
	"OBW 8510 6.0");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fOBW_x5fBlackman", 
	"OBW Blackman",
	0,
	"6",
	"OBW Blackman");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fOBW_x5fBlackman_x5fHarris", 
	"OBW Blackman-Harris",
	0,
	"7",
	"OBW Blackman-Harris");


create_form_set("_n3GPPFDD_x5fBS_x5fTX_fOBW_x5fSpecMeasWindowSet",
	"_n3GPPFDD_x5fBS_x5fTX_fOBW_x5fnone",
	"_n3GPPFDD_x5fBS_x5fTX_fOBW_x5fHamming_x5f0_x5f54",
	"_n3GPPFDD_x5fBS_x5fTX_fOBW_x5fHanning_x5f0_x5f50",
	"_n3GPPFDD_x5fBS_x5fTX_fOBW_x5fGaussian_x5f0_x5f75",
	"_n3GPPFDD_x5fBS_x5fTX_fOBW_x5fKaiser_x5f7_x5f865",
	"_n3GPPFDD_x5fBS_x5fTX_fOBW_x5f8510_x5f6_x5f0",
	"_n3GPPFDD_x5fBS_x5fTX_fOBW_x5fBlackman",
	"_n3GPPFDD_x5fBS_x5fTX_fOBW_x5fBlackman_x5fHarris",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_n3GPPFDD_x5fBS_x5fTX_fEnableESGSet",
	"_n3GPPFDD_x5fBS_x5fTX_fNO",
	"_n3GPPFDD_x5fBS_x5fTX_fYES",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fInternal", 
	"Internal",
	0,
	"0",
	"Internal");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fExternal", 
	"External",
	0,
	"1",
	"External");


create_form_set("_n3GPPFDD_x5fBS_x5fTX_fESG_x5fClkRefSet",
	"_n3GPPFDD_x5fBS_x5fTX_fInternal",
	"_n3GPPFDD_x5fBS_x5fTX_fExternal",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fthrough", 
	"through",
	0,
	"0",
	"through");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_ffilter_x5f2100kHz", 
	"filter_2100kHz",
	0,
	"1",
	"filter_2100kHz");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_ffilter_x5f40MHz", 
	"filter_40MHz",
	0,
	"2",
	"filter_40MHz");


create_form_set("_n3GPPFDD_x5fBS_x5fTX_fESG_x5fIQFilterSet",
	"_n3GPPFDD_x5fBS_x5fTX_fthrough",
	"_n3GPPFDD_x5fBS_x5fTX_ffilter_x5f2100kHz",
	"_n3GPPFDD_x5fBS_x5fTX_ffilter_x5f40MHz",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_n3GPPFDD_x5fBS_x5fTX_fESG_x5fAutoScalingSet",
	"_n3GPPFDD_x5fBS_x5fTX_fNO",
	"_n3GPPFDD_x5fBS_x5fTX_fYES",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_n3GPPFDD_x5fBS_x5fTX_fESG_x5fArbOnSet",
	"_n3GPPFDD_x5fBS_x5fTX_fNO",
	"_n3GPPFDD_x5fBS_x5fTX_fYES",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_n3GPPFDD_x5fBS_x5fTX_fESG_x5fRFPowOnSet",
	"_n3GPPFDD_x5fBS_x5fTX_fNO",
	"_n3GPPFDD_x5fBS_x5fTX_fYES",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fNeither", 
	"Neither",
	0,
	"0",
	"Neither");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fEvent1", 
	"Event1",
	0,
	"1",
	"Event1");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fEvent2", 
	"Event2",
	0,
	"2",
	"Event2");


create_constant_form ("_n3GPPFDD_x5fBS_x5fTX_fBoth", 
	"Both",
	0,
	"3",
	"Both");


create_form_set("_n3GPPFDD_x5fBS_x5fTX_fESG_x5fEventMarkerTypeSet",
	"_n3GPPFDD_x5fBS_x5fTX_fNeither",
	"_n3GPPFDD_x5fBS_x5fTX_fEvent1",
	"_n3GPPFDD_x5fBS_x5fTX_fEvent2",
	"_n3GPPFDD_x5fBS_x5fTX_fBoth",
	"StdForm");


create_item ("3GPPFDD_BS_TX","3GPP FDD BS TX  test",
	"3GPPFDD_BS_TX",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST | ITEM_UNIQUE,
	-1,
	"BMP_3GPPFDD_BS_TX",
	"Component Parameters",
	NULL,
	ARFWTBNetlistFmt,
	"3GPPFDD_BS_TX",
	SPDesignAnnotFmt,
	"SYM_DSN_3GPPFDD_BS_TX",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("RequiredParameters","Required Parameters",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("CE_TimeStep","Circuit envelope simulation time step",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","1/3.84 MHz/8")),
	create_parm ("WTB_TimeStep","Set CE_TimeStep <= 1/3.84e6/SamplesPerChip. <br> SamplesPerChip is in Signal Parameters tab.",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("FSource","Source carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","2140 MHz")),
	create_parm ("SourcePower","Source power",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-20.0)")),
	create_parm ("FMeasurement","Measurement carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","2140 MHz")),
	create_parm ("MeasurementInfo","Available Measurements <br> Each measurement has parameters on its tab/category below.",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("RF_EnvelopeMeasurement","Enable RF envelope measurement?",
		PARM_INT,
		"_n3GPPFDD_x5fBS_x5fTX_fRF_x5fEnvelopeMeasurementSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fBS_x5fTX_fYES","YES")),
	create_parm ("PowerMeasurement","Enable power measurement?",
		PARM_INT,
		"_n3GPPFDD_x5fBS_x5fTX_fPowerMeasurementSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fBS_x5fTX_fNO","NO")),
	create_parm ("ACLR_Measurement","Enable ACLR measurement?",
		PARM_INT,
		"_n3GPPFDD_x5fBS_x5fTX_fACLR_x5fMeasurementSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fBS_x5fTX_fNO","NO")),
	create_parm ("OccupiedBW_Measurement","Enable occupied bandwidth measurement?",
		PARM_INT,
		"_n3GPPFDD_x5fBS_x5fTX_fOccupiedBW_x5fMeasurementSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fBS_x5fTX_fNO","NO")),
	create_parm ("CDP_Measurement","Enable code domain power measurement?",
		PARM_INT,
		"_n3GPPFDD_x5fBS_x5fTX_fCDP_x5fMeasurementSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fBS_x5fTX_fNO","NO")),
	create_parm ("PCDE_Measurement","Enable peak code domain error measurement?",
		PARM_INT,
		"_n3GPPFDD_x5fBS_x5fTX_fPCDE_x5fMeasurementSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fBS_x5fTX_fNO","NO")),
	create_parm ("EVM_Measurement","Enable EVM measurement?",
		PARM_INT,
		"_n3GPPFDD_x5fBS_x5fTX_fEVM_x5fMeasurementSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fBS_x5fTX_fNO","NO")),
	create_parm ("BasicParameters","Basic Parameters",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("SourceR","Source resistance",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50 Ohm")),
	create_parm ("SourceTemp","Source resistor temperature",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		TEMPERATURE_UNIT,
		prm("StdForm","-273.15")),
	create_parm ("EnableSourceNoise","Enable source thermal noise?",
		PARM_INT | PARM_NO_DISPLAY,
		"_n3GPPFDD_x5fBS_x5fTX_fEnableSourceNoiseSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fBS_x5fTX_fNO","NO")),
	create_parm ("MeasR","Measurement resistance",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50 Ohm")),
	create_parm ("MirrorSourceSpectrum","Mirror source spectrum about carrier?",
		PARM_INT | PARM_NO_DISPLAY,
		"_n3GPPFDD_x5fBS_x5fTX_fMirrorSourceSpectrumSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fBS_x5fTX_fNO","NO")),
	create_parm ("MirrorMeasSpectrum","Mirror meas spectrum about carrier?",
		PARM_INT | PARM_NO_DISPLAY,
		"_n3GPPFDD_x5fBS_x5fTX_fMirrorMeasSpectrumSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fBS_x5fTX_fNO","NO")),
	create_parm ("RF_MirrorFreq","Mirror source frequency for spectrum/envelope measurement?",
		PARM_INT | PARM_NO_DISPLAY,
		"_n3GPPFDD_x5fBS_x5fTX_fRF_x5fMirrorFreqSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fBS_x5fTX_fNO","NO")),
	create_parm ("MeasMirrorFreq","Mirror meas frequency for spectrum/envelope measurement?",
		PARM_INT | PARM_NO_DISPLAY,
		"_n3GPPFDD_x5fBS_x5fTX_fMeasMirrorFreqSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fBS_x5fTX_fNO","NO")),
	create_parm ("DUT_DelayBound","DUT delay bound",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","10.0 usec")),
	create_parm ("TestBenchSeed","Random number generator seed",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1234567")),
	create_parm ("SignalParameters","Signal Parameters",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("GainImbalance","Gain imbalance, Q vs I",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0.0")),
	create_parm ("PhaseImbalance","Phase imbalance, Q vs I",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		ANGLE_UNIT,
		prm("StdForm","0.0")),
	create_parm ("I_OriginOffset","I origin offset (percent)",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("Q_OriginOffset","Q origin offset (percent)",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("IQ_Rotation","IQ rotation",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		ANGLE_UNIT,
		prm("StdForm","0.0")),
	create_parm ("SamplesPerChip","Samples per chip",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("RRC_FilterLength","RRC filter length (chips)",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")),
	create_parm ("SpecVersion","Secification version",
		PARM_INT | PARM_NO_DISPLAY,
		"_n3GPPFDD_x5fBS_x5fTX_fSpecVersionSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fBS_x5fTX_fVersion_x5f12_x5f00","Version_12_00")),
	create_parm ("SourceType","Source type",
		PARM_INT | PARM_NO_DISPLAY,
		"_n3GPPFDD_x5fBS_x5fTX_fSourceTypeSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fBS_x5fTX_fTestModel1_x5f16DPCHs","TestModel1_16DPCHs")),
	create_parm ("RF_EnvelopeMeasurementParameters","RF Envelope Measurement",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("RF_EnvelopeDisplayPages","RF envelope measurement display pages: <br> 3GPPFDD_BS_TX Envelope Figures",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("RF_EnvelopeStart","RF envelope measurement start",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","0.0")),
	create_parm ("RF_EnvelopeStop","RF envelope measurement stop",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","(2560/3.84) usec")),
	create_parm ("RF_EnvelopeSlots","RF envelope measurement slots",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("PowerMeasurementParameters","Power Measurement",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("PowerDisplayPages","Power measurement display pages: <br> 3GPPFDD_BS_TX Power Tables <br> 3GPPFDD_BS_TX Power Figures <br> 3GPPFDD_BS_TX Power Equations",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("PowerStartSlot","Start slot",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("PowerSlotsMeasured","Slots measured",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("ACLR_MeasurementParameters","ACLR Measurement",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("ACLR_DisplayPages","ACLR measurement display pages: <br> 3GPPFDD_BS_TX ACLR Tables <br> 3GPPFDD_BS_TX ACLR Figures <br> 3GPPFDD_BS_TX ACLR Equations",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("ACLR_Start","Measurement start",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","0.0")),
	create_parm ("ACLR_Stop","Measurement stop",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","(2560/3.84) usec")),
	create_parm ("ACLR_Slots","Measurement slots",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("ACLR_SpecMeasResBW","Spectrum resolution bandwidth",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","0")),
	create_parm ("ACLR_SpecMeasWindow","Window type",
		PARM_INT | PARM_NO_DISPLAY,
		"_n3GPPFDD_x5fBS_x5fTX_fACLR_x5fSpecMeasWindowSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fBS_x5fTX_fACLR_x5fnone","ACLR_none")),
	create_parm ("OccupiedBW_MeasurementParameters","Occupied BW Measurement",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("OBW_DisplayPages","Occupied BW measurement display pages: <br> 3GPPFDD_BS_TX OBW Tables <br> 3GPPFDD_BS_TX OBW Figures <br> 3GPPFDD_BS_TX OBW Equations",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("OBW_Start","Measurement start",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","0.0")),
	create_parm ("OBW_Stop","Measurement stop",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","(2560/3.84) usec")),
	create_parm ("OBW_Slots","Measurement slots",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("OBW_SpecMeasResBW","Spectrum resolution bandwidth",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","0")),
	create_parm ("OBW_SpecMeasWindow","Window type",
		PARM_INT | PARM_NO_DISPLAY,
		"_n3GPPFDD_x5fBS_x5fTX_fOBW_x5fSpecMeasWindowSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fBS_x5fTX_fOBW_x5fnone","OBW_none")),
	create_parm ("CDP_MeasurementParameters","CDP Measurement",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("CDP_DisplayPages","CDP measurement display pages: <br> 3GPPFDD_BS_TX CDP Figures",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("CDP_StartSlot","Start slot",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("PCDE_MeasurementParameters","PCDE Measurement",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("PCDE_DisplayPages","PCDE measurement display pages: <br> 3GPPFDD_BS_TX PCDE Tables <br> 3GPPFDD_BS_TX PCDE Figures <br> 3GPPFDD_BS_TX PCDE Equations",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("PCDE_StartSlot","Start slot",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("EVM_MeasurementParameters","EVM Measurement",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("EVM_DisplayPages","EVM measurement display pages: <br> 3GPPFDD_BS_TX EVM Tables <br> 3GPPFDD_BS_TX EVM Equations",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("EVM_Start","Measurement start",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","0.0")),
	create_parm ("EVM_SlotsMeasured","Slots measured",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("SignalToESG_Parameters","Signal to ESG",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("EnableESG","Enable signal to ESG?",
		PARM_INT | PARM_NO_DISPLAY,
		"_n3GPPFDD_x5fBS_x5fTX_fEnableESGSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fBS_x5fTX_fNO","NO")),
	create_parm ("ESG_Instrument","ESG instrument address",
		PARM_STRING | PARM_NO_DISPLAY,
		"InstrumentFormSet",
		UNITLESS_UNIT,
		prm("InstrumentForm","\"[GPIB0::19::INSTR][localhost][4790]\"")),
	create_parm ("ESG_Start","Signal start",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","0")),
	create_parm ("ESG_Stop","Signal stop",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","(2560/3.84) usec")),
	create_parm ("ESG_Slots","Slots to ESG",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","15")),
	create_parm ("ESG_Power","ESG RF ouput power (dBm)",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-20.0")),
	create_parm ("ESG_ClkRef","Waveform clock reference",
		PARM_INT | PARM_NO_DISPLAY,
		"_n3GPPFDD_x5fBS_x5fTX_fESG_x5fClkRefSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fBS_x5fTX_fInternal","Internal")),
	create_parm ("ESG_ExtClkRefFreq","External clock reference freq",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","10 MHz")),
	create_parm ("ESG_IQFilter","IQ filter",
		PARM_INT | PARM_NO_DISPLAY,
		"_n3GPPFDD_x5fBS_x5fTX_fESG_x5fIQFilterSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fBS_x5fTX_fthrough","through")),
	create_parm ("ESG_SampleClkRate","Sequencer sample clock rate",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","30.72 MHz")),
	create_parm ("ESG_Filename","ESG waveform storage filename",
		PARM_STRING | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"3GPPFDD_DL\"")),
	create_parm ("ESG_AutoScaling","Activate auto scaling?",
		PARM_INT | PARM_NO_DISPLAY,
		"_n3GPPFDD_x5fBS_x5fTX_fESG_x5fAutoScalingSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fBS_x5fTX_fYES","YES")),
	create_parm ("ESG_ArbOn","Select waveform and turn ArbOn after download?",
		PARM_INT | PARM_NO_DISPLAY,
		"_n3GPPFDD_x5fBS_x5fTX_fESG_x5fArbOnSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fBS_x5fTX_fYES","YES")),
	create_parm ("ESG_RFPowOn","Turn RF ON after download?",
		PARM_INT | PARM_NO_DISPLAY,
		"_n3GPPFDD_x5fBS_x5fTX_fESG_x5fRFPowOnSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fBS_x5fTX_fYES","YES")),
	create_parm ("ESG_EventMarkerType","Event marker type",
		PARM_INT | PARM_NO_DISPLAY,
		"_n3GPPFDD_x5fBS_x5fTX_fESG_x5fEventMarkerTypeSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fBS_x5fTX_fEvent1","Event1")),
	create_parm ("ESG_MarkerLength","ESG marker length",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","10")));



create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_fRefLevel", 
	"RefLevel",
	0,
	"0",
	"RefLevel");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_fMaxLevel", 
	"MaxLevel",
	0,
	"1",
	"MaxLevel");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_fACS", 
	"ACS",
	0,
	"2",
	"ACS");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_fBlocking", 
	"Blocking",
	0,
	"3",
	"Blocking");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_fIntermod", 
	"Intermod",
	0,
	"4",
	"Intermod");


create_form_set("_n3GPPFDD_x5fUE_x5fRX_fMeasTypeSet",
	"_n3GPPFDD_x5fUE_x5fRX_fRefLevel",
	"_n3GPPFDD_x5fUE_x5fRX_fMaxLevel",
	"_n3GPPFDD_x5fUE_x5fRX_fACS",
	"_n3GPPFDD_x5fUE_x5fRX_fBlocking",
	"_n3GPPFDD_x5fUE_x5fRX_fIntermod",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_n3GPPFDD_x5fUE_x5fRX_fMirrorSourceSpectrumSet",
	"_n3GPPFDD_x5fUE_x5fRX_fNO",
	"_n3GPPFDD_x5fUE_x5fRX_fYES",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_n3GPPFDD_x5fUE_x5fRX_fMirrorMeasSpectrumSet",
	"_n3GPPFDD_x5fUE_x5fRX_fNO",
	"_n3GPPFDD_x5fUE_x5fRX_fYES",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_fVersion_x5f03_x5f00", 
	"Version 03_00",
	0,
	"0",
	"Version 03_00");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_fVersion_x5f12_x5f00", 
	"Version 12_00",
	0,
	"1",
	"Version 12_00");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_fVersion_x5f03_x5f02", 
	"Version 03_02",
	0,
	"2",
	"Version 03_02");


create_form_set("_n3GPPFDD_x5fUE_x5fRX_fSpecVersionSet",
	"_n3GPPFDD_x5fUE_x5fRX_fVersion_x5f03_x5f00",
	"_n3GPPFDD_x5fUE_x5fRX_fVersion_x5f12_x5f00",
	"_n3GPPFDD_x5fUE_x5fRX_fVersion_x5f03_x5f02",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_fBased_x5fon_x5fFSource_x5fRefLevel", 
	"Based on FSource RefLevel",
	0,
	"0",
	"0");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_f_x5fBand_x5fI_x5f_x5fdbmtow_x5f_x5f106_x5f7_x5f_x5fRefLevel", 
	"(Band I) dbmtow(-106.7) RefLevel",
	0,
	"dbmtow(-106.7)",
	"dbmtow(-106.7)");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_f_x5fBand_x5fII_x5f_x5fdbmtow_x5f_x5f104_x5f7_x5f_x5fRefLevel", 
	"(Band II) dbmtow(-104.7) RefLevel",
	0,
	"dbmtow(-104.7)",
	"dbmtow(-104.7)");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_f_x5fBand_x5fIII_x5f_x5fdbmtow_x5f_x5f103_x5f7_x5f_x5fRefLevel", 
	"(Band III) dbmtow(-103.7) RefLevel",
	0,
	"dbmtow(-103.7)",
	"dbmtow(-103.7)");


create_form_set("_n3GPPFDD_x5fUE_x5fRX_f_x5fRefLevel_x5fIor_x5fPowerSet",
	"_n3GPPFDD_x5fUE_x5fRX_fBased_x5fon_x5fFSource_x5fRefLevel",
	"_n3GPPFDD_x5fUE_x5fRX_f_x5fBand_x5fI_x5f_x5fdbmtow_x5f_x5f106_x5f7_x5f_x5fRefLevel",
	"_n3GPPFDD_x5fUE_x5fRX_f_x5fBand_x5fII_x5f_x5fdbmtow_x5f_x5f104_x5f7_x5f_x5fRefLevel",
	"_n3GPPFDD_x5fUE_x5fRX_f_x5fBand_x5fIII_x5f_x5fdbmtow_x5f_x5f103_x5f7_x5f_x5fRefLevel",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_f_x5f10_x5f3dB_x5fRefLevel", 
	"-10.3dB RefLevel",
	0,
	"-10.3 dB",
	"-10.3 dB");


create_form_set("_n3GPPFDD_x5fUE_x5fRX_f_x5fRefLevel_x5fDPCH_x5fEc_x5f2_x5fIorSet",
	"_n3GPPFDD_x5fUE_x5fRX_f_x5f10_x5f3dB_x5fRefLevel",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_fdbmtow_x5f_x5f25_x5f_x5fMaxLevel", 
	"dbmtow(-25) MaxLevel",
	0,
	"dbmtow(-25.0)",
	"dbmtow(-25.0)");


create_form_set("_n3GPPFDD_x5fUE_x5fRX_f_x5fMaxLevel_x5fIor_x5fPowerSet",
	"_n3GPPFDD_x5fUE_x5fRX_fdbmtow_x5f_x5f25_x5f_x5fMaxLevel",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_f_x5f19dB_x5fMaxLevel", 
	"-19dB MaxLevel",
	0,
	"-19.0 dB",
	"-19.0 dB");


create_form_set("_n3GPPFDD_x5fUE_x5fRX_f_x5fMaxLevel_x5fDPCH_x5fEc_x5f2_x5fIorSet",
	"_n3GPPFDD_x5fUE_x5fRX_f_x5f19dB_x5fMaxLevel",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_fdbmtow_x5f_x5f92_x5f7_x5f_x5fACS", 
	"dbmtow(-92.7) ACS",
	0,
	"dbmtow(-92.7)",
	"dbmtow(-92.7)");


create_form_set("_n3GPPFDD_x5fUE_x5fRX_f_x5fACS_x5fIor_x5fPowerSet",
	"_n3GPPFDD_x5fUE_x5fRX_fdbmtow_x5f_x5f92_x5f7_x5f_x5fACS",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_f_x5f10_x5f3dB_x5fACS", 
	"-10.3dB ACS",
	0,
	"-10.3 dB",
	"-10.3 dB");


create_form_set("_n3GPPFDD_x5fUE_x5fRX_f_x5fACS_x5fDPCH_x5fEc_x5f2_x5fIorSet",
	"_n3GPPFDD_x5fUE_x5fRX_f_x5f10_x5f3dB_x5fACS",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_fplus_x5f5MHz_x5fACS", 
	"plus 5MHz ACS",
	0,
	"+5 MHz",
	"+5 MHz");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_fminus_x5f5MHz_x5fACS", 
	"minus 5MHz ACS",
	0,
	"-5 MHz",
	"-5 MHz");


create_form_set("_n3GPPFDD_x5fUE_x5fRX_f_x5fACS_x5fModFreqOffsetSet",
	"_n3GPPFDD_x5fUE_x5fRX_fplus_x5f5MHz_x5fACS",
	"_n3GPPFDD_x5fUE_x5fRX_fminus_x5f5MHz_x5fACS",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_fdbmtow_x5f_x5f52_x5f_x5fACS", 
	"dbmtow(-52) ACS",
	0,
	"dbmtow(-52.0)",
	"dbmtow(-52.0)");


create_form_set("_n3GPPFDD_x5fUE_x5fRX_f_x5fACS_x5fModPowerSet",
	"_n3GPPFDD_x5fUE_x5fRX_fdbmtow_x5f_x5f52_x5f_x5fACS",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_fBased_x5fon_x5fFSource_x5fBlocking", 
	"Based on FSource Blocking",
	0,
	"0",
	"0");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_f_x5fBand_x5fI_x5f_x5fdbmtow_x5f_x5f103_x5f7_x5f_x5fBlocking", 
	"(Band I) dbmtow(-103.7) Blocking",
	0,
	"dbmtow(-103.7)",
	"dbmtow(-103.7)");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_f_x5fBand_x5fII_x5f_x5fdbmtow_x5f_x5f101_x5f7_x5f_x5fBlocking", 
	"(Band II) dbmtow(-101.7) Blocking",
	0,
	"dbmtow(-101.7)",
	"dbmtow(-101.7)");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_f_x5fBand_x5fIII_x5f_x5fdbmtow_x5f_x5f100_x5f7_x5f_x5fBlocking", 
	"(Band III) dbmtow(-100.7) Blocking",
	0,
	"dbmtow(-100.7)",
	"dbmtow(-100.7)");


create_form_set("_n3GPPFDD_x5fUE_x5fRX_f_x5fBlocking_x5fIor_x5fPowerSet",
	"_n3GPPFDD_x5fUE_x5fRX_fBased_x5fon_x5fFSource_x5fBlocking",
	"_n3GPPFDD_x5fUE_x5fRX_f_x5fBand_x5fI_x5f_x5fdbmtow_x5f_x5f103_x5f7_x5f_x5fBlocking",
	"_n3GPPFDD_x5fUE_x5fRX_f_x5fBand_x5fII_x5f_x5fdbmtow_x5f_x5f101_x5f7_x5f_x5fBlocking",
	"_n3GPPFDD_x5fUE_x5fRX_f_x5fBand_x5fIII_x5f_x5fdbmtow_x5f_x5f100_x5f7_x5f_x5fBlocking",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_f_x5f10_x5f3dB_x5fBlocking", 
	"-10.3dB Blocking",
	0,
	"-10.3 dB",
	"-10.3 dB");


create_form_set("_n3GPPFDD_x5fUE_x5fRX_f_x5fBlocking_x5fDPCH_x5fEc_x5f2_x5fIorSet",
	"_n3GPPFDD_x5fUE_x5fRX_f_x5f10_x5f3dB_x5fBlocking",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_fplus_x5f10MHz_x5fBlocking", 
	"plus 10MHz Blocking",
	0,
	"+10 MHz",
	"+10 MHz");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_fminus_x5f10MHz_x5fBlocking", 
	"minus 10MHz Blocking",
	0,
	"-10 MHz",
	"-10 MHz");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_fplus_x5f15MHz_x5fBlocking", 
	"plus 15MHz Blocking",
	0,
	"+15 MHz",
	"+15 MHz");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_fminus_x5f15MHz_x5fBlocking", 
	"minus 15MHz Blocking",
	0,
	"-15 MHz",
	"-15 MHz");


create_form_set("_n3GPPFDD_x5fUE_x5fRX_f_x5fBlocking_x5fModFreqOffsetSet",
	"_n3GPPFDD_x5fUE_x5fRX_fplus_x5f10MHz_x5fBlocking",
	"_n3GPPFDD_x5fUE_x5fRX_fminus_x5f10MHz_x5fBlocking",
	"_n3GPPFDD_x5fUE_x5fRX_fplus_x5f15MHz_x5fBlocking",
	"_n3GPPFDD_x5fUE_x5fRX_fminus_x5f15MHz_x5fBlocking",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_fdbmtow_x5f_x5f56_x5f_x5f10MHz_x5fBlocking", 
	"dbmtow(-56) 10MHz Blocking",
	0,
	"dbmtow(-56.0)",
	"dbmtow(-56.0)");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_fdbmtow_x5f_x5f44_x5f_x5f15MHz_x5fBlocking", 
	"dbmtow(-44) 15MHz Blocking",
	0,
	"dbmtow(-44.0)",
	"dbmtow(-44.0)");


create_form_set("_n3GPPFDD_x5fUE_x5fRX_f_x5fBlocking_x5fModPowerSet",
	"_n3GPPFDD_x5fUE_x5fRX_fdbmtow_x5f_x5f56_x5f_x5f10MHz_x5fBlocking",
	"_n3GPPFDD_x5fUE_x5fRX_fdbmtow_x5f_x5f44_x5f_x5f15MHz_x5fBlocking",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_fBased_x5fon_x5fFSource_x5fIntermod", 
	"Based on FSource Intermod",
	0,
	"0",
	"0");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_f_x5fBand_x5fI_x5f_x5f_x5f103_x5f7_x5fdBm_x5fIntermod", 
	"(Band I) -103.7 dBm Intermod",
	0,
	"dbmtow(-103.7)",
	"dbmtow(-103.7)");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_f_x5fBand_x5fII_x5f_x5f_x5f101_x5f7_x5fdBm_x5fIntermod", 
	"(Band II) -101.7 dBm Intermod",
	0,
	"dbmtow(-101.7)",
	"dbmtow(-101.7)");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_f_x5fBand_x5fIII_x5f_x5f_x5f100_x5f7_x5fdBm_x5fIntermod", 
	"(Band III) -100.7 dBm Intermod",
	0,
	"dbmtow(-100.7)",
	"dbmtow(-100.7)");


create_form_set("_n3GPPFDD_x5fUE_x5fRX_f_x5fIntermod_x5fIor_x5fPowerSet",
	"_n3GPPFDD_x5fUE_x5fRX_fBased_x5fon_x5fFSource_x5fIntermod",
	"_n3GPPFDD_x5fUE_x5fRX_f_x5fBand_x5fI_x5f_x5f_x5f103_x5f7_x5fdBm_x5fIntermod",
	"_n3GPPFDD_x5fUE_x5fRX_f_x5fBand_x5fII_x5f_x5f_x5f101_x5f7_x5fdBm_x5fIntermod",
	"_n3GPPFDD_x5fUE_x5fRX_f_x5fBand_x5fIII_x5f_x5f_x5f100_x5f7_x5fdBm_x5fIntermod",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_f_x5f10_x5f3dB_x5fIntermod", 
	"-10.3dB Intermod",
	0,
	"-10.3 dB",
	"-10.3 dB");


create_form_set("_n3GPPFDD_x5fUE_x5fRX_f_x5fIntermod_x5fDPCH_x5fEc_x5f2_x5fIorSet",
	"_n3GPPFDD_x5fUE_x5fRX_f_x5f10_x5f3dB_x5fIntermod",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_fplus_x5f10MHz_x5fIntermod_x5fCW", 
	"plus 10MHz Intermod_CW",
	0,
	"+10 MHz",
	"+10 MHz");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_fminus_x5f10MHz_x5fIntermod_x5fCW", 
	"minus 10MHz Intermod_CW",
	0,
	"-10 MHz",
	"-10 MHz");


create_form_set("_n3GPPFDD_x5fUE_x5fRX_f_x5fIntermod_x5fCW_x5fFreqOffsetSet",
	"_n3GPPFDD_x5fUE_x5fRX_fplus_x5f10MHz_x5fIntermod_x5fCW",
	"_n3GPPFDD_x5fUE_x5fRX_fminus_x5f10MHz_x5fIntermod_x5fCW",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_fdbmtow_x5f_x5f46_x5f_x5fIntermod_x5fCW", 
	"dbmtow(-46) Intermod_CW",
	0,
	"dbmtow(-46.0)",
	"dbmtow(-46.0)");


create_form_set("_n3GPPFDD_x5fUE_x5fRX_f_x5fIntermod_x5fCW_x5fPowerSet",
	"_n3GPPFDD_x5fUE_x5fRX_fdbmtow_x5f_x5f46_x5f_x5fIntermod_x5fCW",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_fplus_x5f20MHz_x5fIntermod_x5fMod", 
	"plus 20MHz Intermod_Mod",
	0,
	"+20 MHz",
	"+20 MHz");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_fminus_x5f20MHz_x5fIntermod_x5fMod", 
	"minus 20MHz Intermod_Mod",
	0,
	"-20 MHz",
	"-20 MHz");


create_form_set("_n3GPPFDD_x5fUE_x5fRX_f_x5fIntermod_x5fModFreqOffsetSet",
	"_n3GPPFDD_x5fUE_x5fRX_fplus_x5f20MHz_x5fIntermod_x5fMod",
	"_n3GPPFDD_x5fUE_x5fRX_fminus_x5f20MHz_x5fIntermod_x5fMod",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fRX_fdbmtow_x5f_x5f46_x5f_x5fIntermod_x5fMod", 
	"dbmtow(-46) Intermod_Mod",
	0,
	"dbmtow(-46.0)",
	"dbmtow(-46.0)");


create_form_set("_n3GPPFDD_x5fUE_x5fRX_f_x5fIntermod_x5fModPowerSet",
	"_n3GPPFDD_x5fUE_x5fRX_fdbmtow_x5f_x5f46_x5f_x5fIntermod_x5fMod",
	"StdForm");


create_item ("3GPPFDD_UE_RX","3GPP FDD UE RX BER",
	"3GPPFDD_UE_RX",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST | ITEM_UNIQUE,
	-1,
	"BMP_3GPPFDD_UE_RX",
	"Component Parameters",
	NULL,
	ARFWTBNetlistFmt,
	"3GPPFDD_UE_RX",
	SPDesignAnnotFmt,
	"SYM_DSN_3GPPFDD_UE_RX",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("RequiredParameters","Required Parameters",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("CE_TimeStep","Circuit envelope simulation time step",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","1/3.84 MHz/8")),
	create_parm ("WTB_TimeStep","Set CE_TimeStep <= 1/3.84e6/SamplesPerChip. <br> SamplesPerChip is in Signal Parameters tab.",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("FSource","Source carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","2140 MHz")),
	create_parm ("FMeasurement","Measurement carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","2140 MHz")),
	create_parm ("MeasurementInfo","Available Measurements <br> Each measurement has parameters on its tab/category below.",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("MeasType","Measurement type",
		PARM_INT,
		"_n3GPPFDD_x5fUE_x5fRX_fMeasTypeSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fRX_fRefLevel","RefLevel")),
	create_parm ("BasicParameters","Basic Parameters",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("SourceR","Source resistance",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50 Ohm")),
	create_parm ("SourceTemp","Source resistor temperature",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		TEMPERATURE_UNIT,
		prm("StdForm","16.85")),
	create_parm ("MeasR","Measurement resistance",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50 Ohm")),
	create_parm ("MirrorSourceSpectrum","Mirror source spectrum about carrier?",
		PARM_INT | PARM_NO_DISPLAY,
		"_n3GPPFDD_x5fUE_x5fRX_fMirrorSourceSpectrumSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fRX_fNO","NO")),
	create_parm ("MirrorMeasSpectrum","Mirror meas spectrum about carrier?",
		PARM_INT | PARM_NO_DISPLAY,
		"_n3GPPFDD_x5fUE_x5fRX_fMirrorMeasSpectrumSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fRX_fNO","NO")),
	create_parm ("DUT_DelayBound","DUT delay bound",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","10.0 usec")),
	create_parm ("TestBenchSeed","Random number generator seed",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1234567")),
	create_parm ("SignalParameters","Signal Parameters",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("GainImbalance","Gain imbalance, Q vs I",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0.0")),
	create_parm ("PhaseImbalance","Phase imbalance, Q vs I",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		ANGLE_UNIT,
		prm("StdForm","0.0")),
	create_parm ("I_OriginOffset","I origin offset (percent)",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("Q_OriginOffset","Q origin offset (percent)",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("IQ_Rotation","IQ rotation",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		ANGLE_UNIT,
		prm("StdForm","0.0")),
	create_parm ("SamplesPerChip","Samples per chip",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("RRC_FilterLength","RRC filter length (chips)",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")),
	create_parm ("SpecVersion","Secification version",
		PARM_INT | PARM_NO_DISPLAY,
		"_n3GPPFDD_x5fUE_x5fRX_fSpecVersionSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fRX_fVersion_x5f12_x5f00","Version_12_00")),
	create_parm ("RefLevelParameters","RefLevel Parameters",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("RefLevel_Ior_Power","Ior power",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"_n3GPPFDD_x5fUE_x5fRX_f_x5fRefLevel_x5fIor_x5fPowerSet",
		POWER_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fRX_fBased_x5fon_x5fFSource_x5fRefLevel","Based_on_FSource_RefLevel")),
	create_parm ("RefLevel_DPCH_Ec_2_Ior","DPCH_Ec to Ior value",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"_n3GPPFDD_x5fUE_x5fRX_f_x5fRefLevel_x5fDPCH_x5fEc_x5f2_x5fIorSet",
		DB_GAIN_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fRX_f_x5f10_x5f3dB_x5fRefLevel","_10_3dB_RefLevel")),
	create_parm ("MaxLevelParameters","MaxLevel Parameters",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("MaxLevel_Ior_Power","Ior power",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"_n3GPPFDD_x5fUE_x5fRX_f_x5fMaxLevel_x5fIor_x5fPowerSet",
		POWER_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fRX_fdbmtow_x5f_x5f25_x5f_x5fMaxLevel","dbmtow__25__MaxLevel")),
	create_parm ("MaxLevel_DPCH_Ec_2_Ior","DPCH_Ec to Ior value",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"_n3GPPFDD_x5fUE_x5fRX_f_x5fMaxLevel_x5fDPCH_x5fEc_x5f2_x5fIorSet",
		DB_GAIN_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fRX_f_x5f19dB_x5fMaxLevel","_19dB_MaxLevel")),
	create_parm ("ACS_Parameters","ACS Parameters",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("ACS_Ior_Power","Ior power",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"_n3GPPFDD_x5fUE_x5fRX_f_x5fACS_x5fIor_x5fPowerSet",
		POWER_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fRX_fdbmtow_x5f_x5f92_x5f7_x5f_x5fACS","dbmtow__92_7__ACS")),
	create_parm ("ACS_DPCH_Ec_2_Ior","DPCH_Ec to Ior value",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"_n3GPPFDD_x5fUE_x5fRX_f_x5fACS_x5fDPCH_x5fEc_x5f2_x5fIorSet",
		DB_GAIN_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fRX_f_x5f10_x5f3dB_x5fACS","_10_3dB_ACS")),
	create_parm ("ACS_ModFreqOffset","Modulated channel frequency offset",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"_n3GPPFDD_x5fUE_x5fRX_f_x5fACS_x5fModFreqOffsetSet",
		FREQUENCY_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fRX_fplus_x5f5MHz_x5fACS","plus_5MHz_ACS")),
	create_parm ("ACS_ModPower","Modulated channel power",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"_n3GPPFDD_x5fUE_x5fRX_f_x5fACS_x5fModPowerSet",
		POWER_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fRX_fdbmtow_x5f_x5f52_x5f_x5fACS","dbmtow__52__ACS")),
	create_parm ("BlockingParameters","Blocking Parameters",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("Blocking_Info","When Blocking_ModFreqOffset is +10 MHz / -10 MHz, the recommended SamplesPerChip (in Signal Parameters Tab) is 16.  Also, set CE_TimeStep equal to or less than the value 1/3.84e6/SamplesPerChip.",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("Blocking_Ior_Power","Ior power",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"_n3GPPFDD_x5fUE_x5fRX_f_x5fBlocking_x5fIor_x5fPowerSet",
		POWER_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fRX_fBased_x5fon_x5fFSource_x5fBlocking","Based_on_FSource_Blocking")),
	create_parm ("Blocking_DPCH_Ec_2_Ior","DPCH_Ec to Ior value",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"_n3GPPFDD_x5fUE_x5fRX_f_x5fBlocking_x5fDPCH_x5fEc_x5f2_x5fIorSet",
		DB_GAIN_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fRX_f_x5f10_x5f3dB_x5fBlocking","_10_3dB_Blocking")),
	create_parm ("Blocking_ModFreqOffset","Modulated channel frequency offset",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"_n3GPPFDD_x5fUE_x5fRX_f_x5fBlocking_x5fModFreqOffsetSet",
		FREQUENCY_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fRX_fplus_x5f10MHz_x5fBlocking","plus_10MHz_Blocking")),
	create_parm ("Blocking_ModPower","Modulated channel power",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"_n3GPPFDD_x5fUE_x5fRX_f_x5fBlocking_x5fModPowerSet",
		POWER_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fRX_fdbmtow_x5f_x5f56_x5f_x5f10MHz_x5fBlocking","dbmtow__56__10MHz_Blocking")),
	create_parm ("IntermodParameters","Intermod Parameters",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("Intermod_Info","When Intermod_ModFreqOffset is +20 MHz / -20 MHz, the recommended SamplesPerChip (in Signal Parameters Tab) is 32.  Also, set CE_TimeStep equal to or less than the value 1/3.84e6/SamplesPerChip.",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("Intermod_Ior_Power","Ior power",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"_n3GPPFDD_x5fUE_x5fRX_f_x5fIntermod_x5fIor_x5fPowerSet",
		POWER_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fRX_fBased_x5fon_x5fFSource_x5fIntermod","Based_on_FSource_Intermod")),
	create_parm ("Intermod_DPCH_Ec_2_Ior","DPCH_Ec to Ior value",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"_n3GPPFDD_x5fUE_x5fRX_f_x5fIntermod_x5fDPCH_x5fEc_x5f2_x5fIorSet",
		DB_GAIN_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fRX_f_x5f10_x5f3dB_x5fIntermod","_10_3dB_Intermod")),
	create_parm ("Intermod_CW_FreqOffset","Continuous wave frequency offset",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"_n3GPPFDD_x5fUE_x5fRX_f_x5fIntermod_x5fCW_x5fFreqOffsetSet",
		FREQUENCY_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fRX_fplus_x5f10MHz_x5fIntermod_x5fCW","plus_10MHz_Intermod_CW")),
	create_parm ("Intermod_CW_Power","Continuous wave power",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"_n3GPPFDD_x5fUE_x5fRX_f_x5fIntermod_x5fCW_x5fPowerSet",
		POWER_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fRX_fdbmtow_x5f_x5f46_x5f_x5fIntermod_x5fCW","dbmtow__46__Intermod_CW")),
	create_parm ("Intermod_ModFreqOffset","Modulated channel frequency offset",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"_n3GPPFDD_x5fUE_x5fRX_f_x5fIntermod_x5fModFreqOffsetSet",
		FREQUENCY_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fRX_fplus_x5f20MHz_x5fIntermod_x5fMod","plus_20MHz_Intermod_Mod")),
	create_parm ("Intermod_ModPower","Modulated channel power",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"_n3GPPFDD_x5fUE_x5fRX_f_x5fIntermod_x5fModPowerSet",
		POWER_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fRX_fdbmtow_x5f_x5f46_x5f_x5fIntermod_x5fMod","dbmtow__46__Intermod_Mod")),
	create_parm ("MeasurementParameters","Measurement",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("DisplayPages","RX measurement display pages: <br> 3GPPFDD_UE_RX Tables <br> 3GPPFDD_UE_RX Equations",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("FrameSetsMeasured","Sets of 4 frames measured",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","21")),
	create_parm ("RAKE_PathDelay","Path delay for RAKE (samples)",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")));



create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_n3GPPFDD_x5fUE_x5fTX_fRF_x5fEnvelopeMeasurementSet",
	"_n3GPPFDD_x5fUE_x5fTX_fNO",
	"_n3GPPFDD_x5fUE_x5fTX_fYES",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_n3GPPFDD_x5fUE_x5fTX_fPowerMeasurementSet",
	"_n3GPPFDD_x5fUE_x5fTX_fNO",
	"_n3GPPFDD_x5fUE_x5fTX_fYES",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_n3GPPFDD_x5fUE_x5fTX_fACLR_x5fMeasurementSet",
	"_n3GPPFDD_x5fUE_x5fTX_fNO",
	"_n3GPPFDD_x5fUE_x5fTX_fYES",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_n3GPPFDD_x5fUE_x5fTX_fACLR_x5fST_x5fMeasurementSet",
	"_n3GPPFDD_x5fUE_x5fTX_fNO",
	"_n3GPPFDD_x5fUE_x5fTX_fYES",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_n3GPPFDD_x5fUE_x5fTX_fOccupiedBW_x5fMeasurementSet",
	"_n3GPPFDD_x5fUE_x5fTX_fNO",
	"_n3GPPFDD_x5fUE_x5fTX_fYES",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_n3GPPFDD_x5fUE_x5fTX_fCDP_x5fMeasurementSet",
	"_n3GPPFDD_x5fUE_x5fTX_fNO",
	"_n3GPPFDD_x5fUE_x5fTX_fYES",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_n3GPPFDD_x5fUE_x5fTX_fPCDE_x5fMeasurementSet",
	"_n3GPPFDD_x5fUE_x5fTX_fNO",
	"_n3GPPFDD_x5fUE_x5fTX_fYES",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_n3GPPFDD_x5fUE_x5fTX_fEVM_x5fMeasurementSet",
	"_n3GPPFDD_x5fUE_x5fTX_fNO",
	"_n3GPPFDD_x5fUE_x5fTX_fYES",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_n3GPPFDD_x5fUE_x5fTX_fEnableSourceNoiseSet",
	"_n3GPPFDD_x5fUE_x5fTX_fNO",
	"_n3GPPFDD_x5fUE_x5fTX_fYES",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_n3GPPFDD_x5fUE_x5fTX_fMirrorSourceSpectrumSet",
	"_n3GPPFDD_x5fUE_x5fTX_fNO",
	"_n3GPPFDD_x5fUE_x5fTX_fYES",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_n3GPPFDD_x5fUE_x5fTX_fMirrorMeasSpectrumSet",
	"_n3GPPFDD_x5fUE_x5fTX_fNO",
	"_n3GPPFDD_x5fUE_x5fTX_fYES",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_n3GPPFDD_x5fUE_x5fTX_fRF_x5fMirrorFreqSet",
	"_n3GPPFDD_x5fUE_x5fTX_fNO",
	"_n3GPPFDD_x5fUE_x5fTX_fYES",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_n3GPPFDD_x5fUE_x5fTX_fMeasMirrorFreqSet",
	"_n3GPPFDD_x5fUE_x5fTX_fNO",
	"_n3GPPFDD_x5fUE_x5fTX_fYES",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fVersion_x5f03_x5f00", 
	"Version 03_00",
	0,
	"0",
	"Version 03_00");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fVersion_x5f12_x5f00", 
	"Version 12_00",
	0,
	"1",
	"Version 12_00");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fVersion_x5f03_x5f02", 
	"Version 03_02",
	0,
	"2",
	"Version 03_02");


create_form_set("_n3GPPFDD_x5fUE_x5fTX_fSpecVersionSet",
	"_n3GPPFDD_x5fUE_x5fTX_fVersion_x5f03_x5f00",
	"_n3GPPFDD_x5fUE_x5fTX_fVersion_x5f12_x5f00",
	"_n3GPPFDD_x5fUE_x5fTX_fVersion_x5f03_x5f02",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fUL_x5f12_x5f2", 
	"UL_12_2",
	0,
	"0",
	"UL_12_2");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fUL_x5f768", 
	"UL_768",
	0,
	"1",
	"UL_768");


create_form_set("_n3GPPFDD_x5fUE_x5fTX_fSourceTypeSet",
	"_n3GPPFDD_x5fUE_x5fTX_fUL_x5f12_x5f2",
	"_n3GPPFDD_x5fUE_x5fTX_fUL_x5f768",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fACLR_x5fnone", 
	"ACLR_none",
	0,
	"0",
	"ACLR_none");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fACLR_x5fHamming_x5f0_x5f54", 
	"ACLR_Hamming 0.54",
	0,
	"1",
	"ACLR_Hamming 0.54");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fACLR_x5fHanning_x5f0_x5f50", 
	"ACLR_Hanning 0.50",
	0,
	"2",
	"ACLR_Hanning 0.50");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fACLR_x5fGaussian_x5f0_x5f75", 
	"ACLR_Gaussian 0.75",
	0,
	"3",
	"ACLR_Gaussian 0.75");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fACLR_x5fKaiser_x5f7_x5f865", 
	"ACLR_Kaiser 7.865",
	0,
	"4",
	"ACLR_Kaiser 7.865");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fACLR_x5f8510_x5f6_x5f0", 
	"ACLR_8510 6.0",
	0,
	"5",
	"ACLR_8510 6.0");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fACLR_x5fBlackman", 
	"ACLR_Blackman",
	0,
	"6",
	"ACLR_Blackman");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fACLR_x5fBlackman_x5fHarris", 
	"ACLR_Blackman-Harris",
	0,
	"7",
	"ACLR_Blackman-Harris");


create_form_set("_n3GPPFDD_x5fUE_x5fTX_fACLR_x5fSpecMeasWindowSet",
	"_n3GPPFDD_x5fUE_x5fTX_fACLR_x5fnone",
	"_n3GPPFDD_x5fUE_x5fTX_fACLR_x5fHamming_x5f0_x5f54",
	"_n3GPPFDD_x5fUE_x5fTX_fACLR_x5fHanning_x5f0_x5f50",
	"_n3GPPFDD_x5fUE_x5fTX_fACLR_x5fGaussian_x5f0_x5f75",
	"_n3GPPFDD_x5fUE_x5fTX_fACLR_x5fKaiser_x5f7_x5f865",
	"_n3GPPFDD_x5fUE_x5fTX_fACLR_x5f8510_x5f6_x5f0",
	"_n3GPPFDD_x5fUE_x5fTX_fACLR_x5fBlackman",
	"_n3GPPFDD_x5fUE_x5fTX_fACLR_x5fBlackman_x5fHarris",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fOBW_x5fnone", 
	"OBW_none",
	0,
	"0",
	"OBW_none");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fOBW_x5fHamming_x5f0_x5f54", 
	"OBW_Hamming 0.54",
	0,
	"1",
	"OBW_Hamming 0.54");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fOBW_x5fHanning_x5f0_x5f50", 
	"OBW_Hanning 0.50",
	0,
	"2",
	"OBW_Hanning 0.50");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fOBW_x5fGaussian_x5f0_x5f75", 
	"OBW_Gaussian 0.75",
	0,
	"3",
	"OBW_Gaussian 0.75");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fOBW_x5fKaiser_x5f7_x5f865", 
	"OBW_Kaiser 7.865",
	0,
	"4",
	"OBW_Kaiser 7.865");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fOBW_x5f8510_x5f6_x5f0", 
	"OBW_8510 6.0",
	0,
	"5",
	"OBW_8510 6.0");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fOBW_x5fBlackman", 
	"OBW_Blackman",
	0,
	"6",
	"OBW_Blackman");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fOBW_x5fBlackman_x5fHarris", 
	"OBW_Blackman-Harris",
	0,
	"7",
	"OBW_Blackman-Harris");


create_form_set("_n3GPPFDD_x5fUE_x5fTX_fOBW_x5fSpecMeasWindowSet",
	"_n3GPPFDD_x5fUE_x5fTX_fOBW_x5fnone",
	"_n3GPPFDD_x5fUE_x5fTX_fOBW_x5fHamming_x5f0_x5f54",
	"_n3GPPFDD_x5fUE_x5fTX_fOBW_x5fHanning_x5f0_x5f50",
	"_n3GPPFDD_x5fUE_x5fTX_fOBW_x5fGaussian_x5f0_x5f75",
	"_n3GPPFDD_x5fUE_x5fTX_fOBW_x5fKaiser_x5f7_x5f865",
	"_n3GPPFDD_x5fUE_x5fTX_fOBW_x5f8510_x5f6_x5f0",
	"_n3GPPFDD_x5fUE_x5fTX_fOBW_x5fBlackman",
	"_n3GPPFDD_x5fUE_x5fTX_fOBW_x5fBlackman_x5fHarris",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_n3GPPFDD_x5fUE_x5fTX_fEnableESGSet",
	"_n3GPPFDD_x5fUE_x5fTX_fNO",
	"_n3GPPFDD_x5fUE_x5fTX_fYES",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fInternal", 
	"Internal",
	0,
	"0",
	"Internal");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fExternal", 
	"External",
	0,
	"1",
	"External");


create_form_set("_n3GPPFDD_x5fUE_x5fTX_fESG_x5fClkRefSet",
	"_n3GPPFDD_x5fUE_x5fTX_fInternal",
	"_n3GPPFDD_x5fUE_x5fTX_fExternal",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fthrough", 
	"through",
	0,
	"0",
	"through");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_ffilter_x5f2100kHz", 
	"filter_2100kHz",
	0,
	"1",
	"filter_2100kHz");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_ffilter_x5f40MHz", 
	"filter_40MHz",
	0,
	"2",
	"filter_40MHz");


create_form_set("_n3GPPFDD_x5fUE_x5fTX_fESG_x5fIQFilterSet",
	"_n3GPPFDD_x5fUE_x5fTX_fthrough",
	"_n3GPPFDD_x5fUE_x5fTX_ffilter_x5f2100kHz",
	"_n3GPPFDD_x5fUE_x5fTX_ffilter_x5f40MHz",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_n3GPPFDD_x5fUE_x5fTX_fESG_x5fAutoScalingSet",
	"_n3GPPFDD_x5fUE_x5fTX_fNO",
	"_n3GPPFDD_x5fUE_x5fTX_fYES",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_n3GPPFDD_x5fUE_x5fTX_fESG_x5fArbOnSet",
	"_n3GPPFDD_x5fUE_x5fTX_fNO",
	"_n3GPPFDD_x5fUE_x5fTX_fYES",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fNO", 
	"NO",
	0,
	"0",
	"NO");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fYES", 
	"YES",
	0,
	"1",
	"YES");


create_form_set("_n3GPPFDD_x5fUE_x5fTX_fESG_x5fRFPowOnSet",
	"_n3GPPFDD_x5fUE_x5fTX_fNO",
	"_n3GPPFDD_x5fUE_x5fTX_fYES",
	"StdForm");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fNeither", 
	"Neither",
	0,
	"0",
	"Neither");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fEvent1", 
	"Event1",
	0,
	"1",
	"Event1");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fEvent2", 
	"Event2",
	0,
	"2",
	"Event2");


create_constant_form ("_n3GPPFDD_x5fUE_x5fTX_fBoth", 
	"Both",
	0,
	"3",
	"Both");


create_form_set("_n3GPPFDD_x5fUE_x5fTX_fESG_x5fEventMarkerTypeSet",
	"_n3GPPFDD_x5fUE_x5fTX_fNeither",
	"_n3GPPFDD_x5fUE_x5fTX_fEvent1",
	"_n3GPPFDD_x5fUE_x5fTX_fEvent2",
	"_n3GPPFDD_x5fUE_x5fTX_fBoth",
	"StdForm");


create_item ("3GPPFDD_UE_TX","3GPP FDD UE Tx test",
	"3GPPFDD_UE_TX",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST | ITEM_UNIQUE,
	-1,
	"BMP_3GPPFDD_UE_TX",
	"Component Parameters",
	NULL,
	ARFWTBNetlistFmt,
	"3GPPFDD_UE_TX",
	SPDesignAnnotFmt,
	"SYM_DSN_3GPPFDD_UE_TX",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("RequiredParameters","Required Parameters",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("CE_TimeStep","Circuit envelope simulation time step",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","1/3.84 MHz/8")),
	create_parm ("WTB_TimeStep","Set CE_TimeStep <= 1/3.84e6/SamplesPerChip. <br> SamplesPerChip is in Signal Parameters tab.",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("FSource","Source carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","1950 MHz")),
	create_parm ("SourcePower","Source power",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-20.0)")),
	create_parm ("FMeasurement","Measurement carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","1950 MHz")),
	create_parm ("MeasurementInfo","Available Measurements <br> Each measurement has parameters on its tab/category below.",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("RF_EnvelopeMeasurement","Enable RF envelope measurement?",
		PARM_INT,
		"_n3GPPFDD_x5fUE_x5fTX_fRF_x5fEnvelopeMeasurementSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fTX_fYES","YES")),
	create_parm ("PowerMeasurement","Enable power measurement?",
		PARM_INT,
		"_n3GPPFDD_x5fUE_x5fTX_fPowerMeasurementSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fTX_fNO","NO")),
	create_parm ("ACLR_Measurement","Enable ACLR  measurement?",
		PARM_INT,
		"_n3GPPFDD_x5fUE_x5fTX_fACLR_x5fMeasurementSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fTX_fNO","NO")),
	create_parm ("ACLR_ST_Measurement","Enable ACLR switching transients  measurement?",
		PARM_INT,
		"_n3GPPFDD_x5fUE_x5fTX_fACLR_x5fST_x5fMeasurementSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fTX_fNO","NO")),
	create_parm ("OccupiedBW_Measurement","Enable occupied bandwidth  measurement?",
		PARM_INT,
		"_n3GPPFDD_x5fUE_x5fTX_fOccupiedBW_x5fMeasurementSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fTX_fNO","NO")),
	create_parm ("CDP_Measurement","Enable code domain power  measurement?",
		PARM_INT,
		"_n3GPPFDD_x5fUE_x5fTX_fCDP_x5fMeasurementSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fTX_fNO","NO")),
	create_parm ("PCDE_Measurement","Enable peak code domain error  measurement?",
		PARM_INT,
		"_n3GPPFDD_x5fUE_x5fTX_fPCDE_x5fMeasurementSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fTX_fNO","NO")),
	create_parm ("EVM_Measurement","Enable EVM  measurement?",
		PARM_INT,
		"_n3GPPFDD_x5fUE_x5fTX_fEVM_x5fMeasurementSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fTX_fNO","NO")),
	create_parm ("BasicParameters","Basic Parameters",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("SourceR","Source resistance",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50 Ohm")),
	create_parm ("SourceTemp","Source resistor temperature",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		TEMPERATURE_UNIT,
		prm("StdForm","-273.15")),
	create_parm ("EnableSourceNoise","Enable source thermal noise?",
		PARM_INT | PARM_NO_DISPLAY,
		"_n3GPPFDD_x5fUE_x5fTX_fEnableSourceNoiseSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fTX_fNO","NO")),
	create_parm ("MeasR","Measurement resistance",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50 Ohm")),
	create_parm ("MirrorSourceSpectrum","Mirror source spectrum about carrier?",
		PARM_INT | PARM_NO_DISPLAY,
		"_n3GPPFDD_x5fUE_x5fTX_fMirrorSourceSpectrumSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fTX_fNO","NO")),
	create_parm ("MirrorMeasSpectrum","Mirror meas spectrum about carrier?",
		PARM_INT | PARM_NO_DISPLAY,
		"_n3GPPFDD_x5fUE_x5fTX_fMirrorMeasSpectrumSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fTX_fNO","NO")),
	create_parm ("RF_MirrorFreq","Mirror source frequency for spectrum/envelope measurement?",
		PARM_INT | PARM_NO_DISPLAY,
		"_n3GPPFDD_x5fUE_x5fTX_fRF_x5fMirrorFreqSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fTX_fNO","NO")),
	create_parm ("MeasMirrorFreq","Mirror meas frequency for spectrum/envelope measurement?",
		PARM_INT | PARM_NO_DISPLAY,
		"_n3GPPFDD_x5fUE_x5fTX_fMeasMirrorFreqSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fTX_fNO","NO")),
	create_parm ("DUT_DelayBound","DUT delay bound",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","10.0 usec")),
	create_parm ("TestBenchSeed","Random number generator seed",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1234567")),
	create_parm ("SignalParameters","Signal Parameters",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("GainImbalance","Gain imbalance, Q vs I",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0.0")),
	create_parm ("PhaseImbalance","Phase imbalance, Q vs I",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		ANGLE_UNIT,
		prm("StdForm","0.0")),
	create_parm ("I_OriginOffset","I origin offset (percent)",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("Q_OriginOffset","Q origin offset (percent)",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("IQ_Rotation","IQ rotation",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		ANGLE_UNIT,
		prm("StdForm","0.0")),
	create_parm ("SamplesPerChip","Samples per chip",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("RRC_FilterLength","RRC filter length (chips)",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")),
	create_parm ("SpecVersion","Secification version",
		PARM_INT | PARM_NO_DISPLAY,
		"_n3GPPFDD_x5fUE_x5fTX_fSpecVersionSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fTX_fVersion_x5f12_x5f00","Version_12_00")),
	create_parm ("SourceType","Source type",
		PARM_INT | PARM_NO_DISPLAY,
		"_n3GPPFDD_x5fUE_x5fTX_fSourceTypeSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fTX_fUL_x5f12_x5f2","UL_12_2")),
	create_parm ("RF_EnvelopeMeasurementParameters","RF Envelope Measurement",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("RF_EnvelopeDisplayPages","RF envelope measurement display pages: <br> 3GPPFDD_UE_TX_Envelope Figures",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("RF_EnvelopeStart","RF envelope measurement start",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","0.0")),
	create_parm ("RF_EnvelopeStop","RF envelope measurement stop",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","(2560/3.84) usec")),
	create_parm ("RF_EnvelopeSlots","RF envelope measurement slots",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("PowerMeasurementParameters","Power Measurement",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("PowerDisplayPages","Power measurement display pages: <br> 3GPPFDD_UE_TX_Power Equations <br> 3GPPFDD_UE_TX_Power Table <br> 3GPPFDD_UE_TX_Power Figures",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("PowerStartSlot","Start slot",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("PowerSlotsMeasured","Slots measured",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("ACLR_MeasurementParameters","ACLR Measurement",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("ACLR_DisplayPages","ACLR measurement display pages: <br> 3GPPFDD_UE_TX_ACLR Equations <br> 3GPPFDD_UE_TX_ACLR Table <br> 3GPPFDD_UE_TX_ACLR Figures",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("ACLR_Start","Measurement start",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","0.0")),
	create_parm ("ACLR_Stop","Measurement stop",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","(2560/3.84) usec")),
	create_parm ("ACLR_Slots","Measurement slots",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("ACLR_SpecMeasResBW","Spectrum resolution bandwidth",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","0")),
	create_parm ("ACLR_SpecMeasWindow","Window type",
		PARM_INT | PARM_NO_DISPLAY,
		"_n3GPPFDD_x5fUE_x5fTX_fACLR_x5fSpecMeasWindowSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fTX_fACLR_x5fnone","ACLR_none")),
	create_parm ("ACLR_ST_MeasurementParameters","ACLR ST Measurement",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("ACLR_ST_DisplayPages","ACLR ST measurement display pages: <br> 3GPPFDD_UE_TX_ACLR_ST Table <br> 3GPPFDD_UE_TX_ACLR_ST Equations",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("ACLR_ST_Start","Measurement start",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","0.0")),
	create_parm ("ACLR_ST_Stop","Measurement stop",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","(2560/3.84) usec")),
	create_parm ("ACLR_ST_Slots","Measurement slots",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("OccupiedBW_MeasurementParameters","Occupied BW Measurement",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("OBW_DisplayPages","Occupied BW measurement display pages: <br> 3GPPFDD_UE_TX_OBW Equations <br> 3GPPFDD_UE_TX_OBW Table <br> 3GPPFDD_UE_TX_OBW Figures",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("OBW_Start","Measurement start",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","0.0")),
	create_parm ("OBW_Stop","Measurement stop",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","(2560/3.84) usec")),
	create_parm ("OBW_Slots","Measurement slots",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("OBW_SpecMeasResBW","Spectrum resolution bandwidth",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","0")),
	create_parm ("OBW_SpecMeasWindow","Window type",
		PARM_INT | PARM_NO_DISPLAY,
		"_n3GPPFDD_x5fUE_x5fTX_fOBW_x5fSpecMeasWindowSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fTX_fOBW_x5fnone","OBW_none")),
	create_parm ("CDP_MeasurementParameters","CDP Measurement",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("CDP_DisplayPages","CDP measurement display pages: <br> 3GPPFDD_UE_TX_CDP Figures",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("CDP_StartSlot","Start slot",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("PCDE_MeasurementParameters","PCDE Measurement",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("PCDE_DisplayPages","PCDE measurement display pages: <br> 3GPPFDD_UE_TX_PCDE Equations <br> 3GPPFDD_UE_TX_PCDE Table <br> 3GPPFDD_UE_TX_PCDE Figures",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("PCDE_StartSlot","Start slot",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("EVM_MeasurementParameters","EVM Measurement",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("EVM_DisplayPages","EVM measurement display pages: <br> 3GPPFDD_UE_TX_EVM Equations <br> 3GPPFDD_UE_TX_EVM Table",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("EVM_Start","Measurement start",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","0.0")),
	create_parm ("EVM_SlotsMeasured","Slots to measure",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("SignalToESG_Parameters","Signal to ESG",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("EnableESG","Enable signal to ESG?",
		PARM_INT | PARM_NO_DISPLAY,
		"_n3GPPFDD_x5fUE_x5fTX_fEnableESGSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fTX_fNO","NO")),
	create_parm ("ESG_Instrument","ESG instrument address",
		PARM_STRING | PARM_NO_DISPLAY,
		"InstrumentFormSet",
		UNITLESS_UNIT,
		prm("InstrumentForm","\"[GPIB0::19::INSTR][localhost][4790]\"")),
	create_parm ("ESG_Start","Signal start",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","0.0")),
	create_parm ("ESG_Stop","Signal stop",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","(2560/3.84) usec")),
	create_parm ("ESG_Slots","Slots to ESG",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","15")),
	create_parm ("ESG_Power","ESG RF ouput power (dBm)",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-20.0")),
	create_parm ("ESG_ClkRef","Waveform clock reference",
		PARM_INT | PARM_NO_DISPLAY,
		"_n3GPPFDD_x5fUE_x5fTX_fESG_x5fClkRefSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fTX_fInternal","Internal")),
	create_parm ("ESG_ExtClkRefFreq","External clock reference freq",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","10 MHz")),
	create_parm ("ESG_IQFilter","IQ filter",
		PARM_INT | PARM_NO_DISPLAY,
		"_n3GPPFDD_x5fUE_x5fTX_fESG_x5fIQFilterSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fTX_fthrough","through")),
	create_parm ("ESG_SampleClkRate","Sequencer sample clock rate",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","30.72 MHz")),
	create_parm ("ESG_Filename","ESG waveform storage filename",
		PARM_STRING | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"3GPPFDD_UL\"")),
	create_parm ("ESG_AutoScaling","Activate auto scaling?",
		PARM_INT | PARM_NO_DISPLAY,
		"_n3GPPFDD_x5fUE_x5fTX_fESG_x5fAutoScalingSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fTX_fYES","YES")),
	create_parm ("ESG_ArbOn","Select waveform and turn ArbOn after download?",
		PARM_INT | PARM_NO_DISPLAY,
		"_n3GPPFDD_x5fUE_x5fTX_fESG_x5fArbOnSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fTX_fYES","YES")),
	create_parm ("ESG_RFPowOn","Turn RF ON after download?",
		PARM_INT | PARM_NO_DISPLAY,
		"_n3GPPFDD_x5fUE_x5fTX_fESG_x5fRFPowOnSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fTX_fYES","YES")),
	create_parm ("ESG_EventMarkerType","Event marker type",
		PARM_INT | PARM_NO_DISPLAY,
		"_n3GPPFDD_x5fUE_x5fTX_fESG_x5fEventMarkerTypeSet",
		UNITLESS_UNIT,
		prm("_n3GPPFDD_x5fUE_x5fTX_fEvent1","Event1")),
	create_parm ("ESG_MarkerLength","ESG marker length",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","10")));
