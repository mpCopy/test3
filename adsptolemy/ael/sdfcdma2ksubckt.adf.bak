set_design_type( sigproc_net );
create_constant_form ("_nCDMA2K_x5fRF_x5fMod_fNormal", 
	"Normal",
	0,
	"0",
	"Normal");
create_constant_form ("_nCDMA2K_x5fRF_x5fMod_fInvert", 
	"Invert",
	0,
	"1",
	"Invert");
create_form_set("_nCDMA2K_x5fRF_x5fMod_fPhasePolaritySet",
	"_nCDMA2K_x5fRF_x5fMod_fNormal",
	"_nCDMA2K_x5fRF_x5fMod_fInvert",
	"StdForm");
create_item ("CDMA2K_RF_Mod","RF Modulator",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_RF_Mod",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_RF_Mod",
	SPDesignAnnotFmt,
	"SYM_DSN_CDMA2K_RF_Mod",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("FCarrier","carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","70e6")),
	create_parm ("Power","RF output power",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","0.01")),
	create_parm ("VRef","reference voltage for output power calibration",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		VOLTAGE_UNIT,
		prm("StdForm","1.0")),
	create_parm ("PhasePolarity","if set to Invert, Q channel signal is inverted",
		PARM_INT,
		"_nCDMA2K_x5fRF_x5fMod_fPhasePolaritySet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fRF_x5fMod_fNormal","Normal")),
	create_parm ("I_OriginOffset","I origin offset in percent with respect to output rms value",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("Q_OriginOffset","Q origin offset in percent with respect to output rms value",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("IQ_Rotation","IQ_Rotation in degrees",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("FrequencyError","frequency error",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","0.0")),
	create_parm ("GainImbalance","gain imbalance in dB; Q channel has the gain imbalance applied to it",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("PhaseImbalance","phase imbalance in degrees; Q channel has the phase imbalance applied to it",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("NDensity","additive noise density in dBm per Hz",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-173.975")),
	create_parm ("ROut","output resistance",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","DefaultROut")),
	create_parm ("TStep","time step",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","203.45e-9")));
library_group("cdma2000, RF Subsystems","cdma2000, RF Subsystems","CDMA2K_RF_Mod");
palette_group("cdma2000, RF Subsystems","cdma2000, RF Subsystems","CDMA2K_RF_Mod");

create_item ("CDMA2K_RF_Demod","RF Demodulator",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_RF_Demod",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_RF_Demod",
	SPDesignAnnotFmt,
	"SYM_DSN_CDMA2K_RF_Demod",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("FCarrier","carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","70e6")),
	create_parm ("Phase","demodulator reference phase in degrees",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		ANGLE_UNIT,
		prm("StdForm","0.0")),
	create_parm ("VRef","reference voltage for output calibration",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		VOLTAGE_UNIT,
		prm("StdForm","1.0")),
	create_parm ("RIn","input resistance",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","DefaultRIn")));
library_group("cdma2000, RF Subsystems","cdma2000, RF Subsystems","CDMA2K_RF_Demod");
palette_group("cdma2000, RF Subsystems","cdma2000, RF Subsystems","CDMA2K_RF_Demod");

create_constant_form ("_nCDMA2K_x5fRevVectorChannel_fkm_x5fhr", 
	"km/hr",
	0,
	"0",
	"km/hr");
create_constant_form ("_nCDMA2K_x5fRevVectorChannel_fmiles_x5fhr", 
	"miles/hr",
	0,
	"1",
	"miles/hr");
create_form_set("_nCDMA2K_x5fRevVectorChannel_fSpeedTypeSet",
	"_nCDMA2K_x5fRevVectorChannel_fkm_x5fhr",
	"_nCDMA2K_x5fRevVectorChannel_fmiles_x5fhr",
	"StdForm");
create_constant_form ("_nCDMA2K_x5fRevVectorChannel_fNoMultipath", 
	"NoMultipath",
	0,
	"0",
	"NoMultipath");
create_constant_form ("_nCDMA2K_x5fRevVectorChannel_fOnePath", 
	"OnePath",
	0,
	"1",
	"OnePath");
create_constant_form ("_nCDMA2K_x5fRevVectorChannel_fTwoPath", 
	"TwoPath",
	0,
	"2",
	"TwoPath");
create_constant_form ("_nCDMA2K_x5fRevVectorChannel_fThreePath", 
	"ThreePath",
	0,
	"3",
	"ThreePath");
create_form_set("_nCDMA2K_x5fRevVectorChannel_fTypeSet",
	"_nCDMA2K_x5fRevVectorChannel_fNoMultipath",
	"_nCDMA2K_x5fRevVectorChannel_fOnePath",
	"_nCDMA2K_x5fRevVectorChannel_fTwoPath",
	"_nCDMA2K_x5fRevVectorChannel_fThreePath",
	"StdForm");
create_constant_form ("_nCDMA2K_x5fRevVectorChannel_fNo", 
	"No",
	0,
	"0",
	"No");
create_constant_form ("_nCDMA2K_x5fRevVectorChannel_fYes", 
	"Yes",
	0,
	"1",
	"Yes");
create_form_set("_nCDMA2K_x5fRevVectorChannel_fPathlossSet",
	"_nCDMA2K_x5fRevVectorChannel_fNo",
	"_nCDMA2K_x5fRevVectorChannel_fYes",
	"StdForm");
create_item ("CDMA2K_RevVectorChannel","Vector Propagation channel model for cdma2000 reverse link",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_RevVectorChannel",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_RevVectorChannel",
	SPDesignAnnotFmt,
	"SYM_DSN_CDMA2K_RevVectorChannel",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Vx","X component of velocity vector",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("SpeedType","Velocity unit option",
		PARM_INT,
		"_nCDMA2K_x5fRevVectorChannel_fSpeedTypeSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fRevVectorChannel_fkm_x5fhr","km_hr")),
	create_parm ("Type","CDMA Type Options",
		PARM_INT,
		"_nCDMA2K_x5fRevVectorChannel_fTypeSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fRevVectorChannel_fNoMultipath","NoMultipath")),
	create_parm ("Pathloss","Option for inclusion of large scale pathloss",
		PARM_INT,
		"_nCDMA2K_x5fRevVectorChannel_fPathlossSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fRevVectorChannel_fNo","No")),
	create_parm ("Seed","integer number to randomize the channel output",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1234567")));
library_group("cdma2000, Channel","cdma2000, Channel","CDMA2K_RevVectorChannel");
palette_group("cdma2000, Channel","cdma2000, Channel","CDMA2K_RevVectorChannel");

create_constant_form ("_nCDMA2K_x5fPwrMeasure_fBaseband_x5fsignal", 
	"Baseband signal",
	0,
	"0",
	"Baseband signal");
create_constant_form ("_nCDMA2K_x5fPwrMeasure_fRF_x5fsignal", 
	"RF signal",
	0,
	"1",
	"RF signal");
create_form_set("_nCDMA2K_x5fPwrMeasure_fSignalTypeSet",
	"_nCDMA2K_x5fPwrMeasure_fBaseband_x5fsignal",
	"_nCDMA2K_x5fPwrMeasure_fRF_x5fsignal",
	"StdForm");
create_item ("CDMA2K_PwrMeasure","Average signal power measurement",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_PwrMeasure",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_PwrMeasure",
	SPDesignAnnotFmt,
	"SYM_DSN_CDMA2K_PwrMeasure",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("BlockSize","number of particles in a block",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")),
	create_parm ("SignalType","type of signal",
		PARM_INT,
		"_nCDMA2K_x5fPwrMeasure_fSignalTypeSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fPwrMeasure_fBaseband_x5fsignal","Baseband_signal")),
	create_parm ("RefR","reference resistance",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50.0")));
library_group("cdma2000, RF Subsystems","cdma2000, RF Subsystems","CDMA2K_PwrMeasure");
palette_group("cdma2000, RF Subsystems","cdma2000, RF Subsystems","CDMA2K_PwrMeasure");

create_constant_form ("_nCDMA2K_x5fFwdVectorChannel_fkm_x5fhr", 
	"km/hr",
	0,
	"0",
	"km/hr");
create_constant_form ("_nCDMA2K_x5fFwdVectorChannel_fmiles_x5fhr", 
	"miles/hr",
	0,
	"1",
	"miles/hr");
create_form_set("_nCDMA2K_x5fFwdVectorChannel_fSpeedTypeSet",
	"_nCDMA2K_x5fFwdVectorChannel_fkm_x5fhr",
	"_nCDMA2K_x5fFwdVectorChannel_fmiles_x5fhr",
	"StdForm");
create_constant_form ("_nCDMA2K_x5fFwdVectorChannel_fNoMultipath", 
	"NoMultipath",
	0,
	"0",
	"NoMultipath");
create_constant_form ("_nCDMA2K_x5fFwdVectorChannel_fOnePath", 
	"OnePath",
	0,
	"1",
	"OnePath");
create_constant_form ("_nCDMA2K_x5fFwdVectorChannel_fTwoPath", 
	"TwoPath",
	0,
	"2",
	"TwoPath");
create_constant_form ("_nCDMA2K_x5fFwdVectorChannel_fThreePath", 
	"ThreePath",
	0,
	"3",
	"ThreePath");
create_form_set("_nCDMA2K_x5fFwdVectorChannel_fTypeSet",
	"_nCDMA2K_x5fFwdVectorChannel_fNoMultipath",
	"_nCDMA2K_x5fFwdVectorChannel_fOnePath",
	"_nCDMA2K_x5fFwdVectorChannel_fTwoPath",
	"_nCDMA2K_x5fFwdVectorChannel_fThreePath",
	"StdForm");
create_constant_form ("_nCDMA2K_x5fFwdVectorChannel_fNo", 
	"No",
	0,
	"0",
	"No");
create_constant_form ("_nCDMA2K_x5fFwdVectorChannel_fYes", 
	"Yes",
	0,
	"1",
	"Yes");
create_form_set("_nCDMA2K_x5fFwdVectorChannel_fPathlossSet",
	"_nCDMA2K_x5fFwdVectorChannel_fNo",
	"_nCDMA2K_x5fFwdVectorChannel_fYes",
	"StdForm");
create_item ("CDMA2K_FwdVectorChannel","Vector Propagation channel model for cdma2000 forward link",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_FwdVectorChannel",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_FwdVectorChannel",
	SPDesignAnnotFmt,
	"SYM_DSN_CDMA2K_FwdVectorChannel",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Vx","X component of velocity vector",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("SpeedType","Velocity unit option",
		PARM_INT,
		"_nCDMA2K_x5fFwdVectorChannel_fSpeedTypeSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fFwdVectorChannel_fkm_x5fhr","km_hr")),
	create_parm ("Type","CDMA Type Options",
		PARM_INT,
		"_nCDMA2K_x5fFwdVectorChannel_fTypeSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fFwdVectorChannel_fNoMultipath","NoMultipath")),
	create_parm ("Pathloss","Option for inclusion of large scale pathloss",
		PARM_INT,
		"_nCDMA2K_x5fFwdVectorChannel_fPathlossSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fFwdVectorChannel_fNo","No")),
	create_parm ("Seed","integer number to randomize the channel output",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1234567")));
library_group("cdma2000, Channel","cdma2000, Channel","CDMA2K_FwdVectorChannel");
palette_group("cdma2000, Channel","cdma2000, Channel","CDMA2K_FwdVectorChannel");

create_item ("CDMA2K_RevRhoWithRef","Rho meter with reference input for reverse link",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_RevRhoWithRef",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_RevRhoWithRef",
	SPDesignAnnotFmt,
	"SYM_DSN_CDMA2K_RevRhoWithRef",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SampleRate","number of samples per chip",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")));
library_group("cdma2000, Test","cdma2000, Test","CDMA2K_RevRhoWithRef");
palette_group("cdma2000, Test","cdma2000, Test","CDMA2K_RevRhoWithRef");

create_constant_form ("_nCDMA2K_x5fRevRCsrc_fReverse_x5fRC3", 
	"Reverse RC3",
	0,
	"0",
	"Reverse RC3");
create_constant_form ("_nCDMA2K_x5fRevRCsrc_fReverse_x5fRC4", 
	"Reverse RC4",
	0,
	"1",
	"Reverse RC4");
create_form_set("_nCDMA2K_x5fRevRCsrc_fRadioConfigSet",
	"_nCDMA2K_x5fRevRCsrc_fReverse_x5fRC3",
	"_nCDMA2K_x5fRevRCsrc_fReverse_x5fRC4",
	"StdForm");
create_item ("CDMA2K_RevRCsrc","Reverse link channel signal source subnetwork for different radio configuration",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_RevRCsrc",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_RevRCsrc",
	SPDesignAnnotFmt,
	"SYM_DSN_CDMA2K_RevRCsrc",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("DataRate","data rate in kbps",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","9.6")),
	create_parm ("RadioConfig","radio configuration for  reverse link respectively",
		PARM_INT,
		"_nCDMA2K_x5fRevRCsrc_fRadioConfigSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fRevRCsrc_fReverse_x5fRC3","Reverse_RC3")));
library_group("cdma2000, Signal Sources","cdma2000, Signal Sources","CDMA2K_RevRCsrc");
palette_group("cdma2000, Signal Sources","cdma2000, Signal Sources","CDMA2K_RevRCsrc");

create_constant_form ("_nCDMA2K_x5fRevRCreceiver_fReverse_x5fRC3", 
	"Reverse RC3",
	0,
	"0",
	"Reverse RC3");
create_constant_form ("_nCDMA2K_x5fRevRCreceiver_fReverse_x5fRC4", 
	"Reverse RC4",
	0,
	"1",
	"Reverse RC4");
create_form_set("_nCDMA2K_x5fRevRCreceiver_fRadioConfigSet",
	"_nCDMA2K_x5fRevRCreceiver_fReverse_x5fRC3",
	"_nCDMA2K_x5fRevRCreceiver_fReverse_x5fRC4",
	"StdForm");
create_constant_form ("_nCDMA2K_x5fRevRCreceiver_fENABLE", 
	"ENABLE",
	0,
	"0",
	"ENABLE");
create_constant_form ("_nCDMA2K_x5fRevRCreceiver_fDISABLE", 
	"DISABLE",
	0,
	"1",
	"DISABLE");
create_form_set("_nCDMA2K_x5fRevRCreceiver_fOuterLoopSet",
	"_nCDMA2K_x5fRevRCreceiver_fENABLE",
	"_nCDMA2K_x5fRevRCreceiver_fDISABLE",
	"StdForm");
create_item ("CDMA2K_RevRCreceiver","Reverse link reciever subnetwork for different radio configuation",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_RevRCreceiver",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_RevRCreceiver",
	SPDesignAnnotFmt,
	"SYM_DSN_CDMA2K_RevRCreceiver",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("DataRate","data rate in kbps",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","9.6")),
	create_parm ("RadioConfig","radio configuration for  reverse link respectively",
		PARM_INT,
		"_nCDMA2K_x5fRevRCreceiver_fRadioConfigSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fRevRCreceiver_fReverse_x5fRC3","Reverse_RC3")),
	create_parm ("FingerNum","finger number of rake receiver",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("OuterLoop","outer loop power control enable",
		PARM_INT,
		"_nCDMA2K_x5fRevRCreceiver_fOuterLoopSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fRevRCreceiver_fDISABLE","DISABLE")),
	create_parm ("SIR_Threshold","signal-to-interference ratio required",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")));
library_group("cdma2000, Receivers","cdma2000, Receivers","CDMA2K_RevRCreceiver");
palette_group("cdma2000, Receivers","cdma2000, Receivers","CDMA2K_RevRCreceiver");

create_constant_form ("_nCDMA2K_x5fRevChannelDecoding_fReverse_x5fRC3", 
	"Reverse RC3",
	0,
	"0",
	"Reverse RC3");
create_constant_form ("_nCDMA2K_x5fRevChannelDecoding_fReverse_x5fRC4", 
	"Reverse RC4",
	0,
	"1",
	"Reverse RC4");
create_constant_form ("_nCDMA2K_x5fRevChannelDecoding_fReverse_x5fRC5", 
	"Reverse RC5",
	0,
	"2",
	"Reverse RC5");
create_constant_form ("_nCDMA2K_x5fRevChannelDecoding_fReverse_x5fRC6", 
	"Reverse RC6",
	0,
	"3",
	"Reverse RC6");
create_form_set("_nCDMA2K_x5fRevChannelDecoding_fRadioConfigSet",
	"_nCDMA2K_x5fRevChannelDecoding_fReverse_x5fRC3",
	"_nCDMA2K_x5fRevChannelDecoding_fReverse_x5fRC4",
	"_nCDMA2K_x5fRevChannelDecoding_fReverse_x5fRC5",
	"_nCDMA2K_x5fRevChannelDecoding_fReverse_x5fRC6",
	"StdForm");
create_item ("CDMA2K_RevChannelDecoding","reverse link channel decoding subnetwork",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_RevChannelDecoding",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_RevChannelDecoding",
	SPDesignAnnotFmt,
	"SYM_DSN_CDMA2K_RevChannelDecoding",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("DataRate","data rate in kbps",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","9.6")),
	create_parm ("RadioConfig","radio configuration for  reverse link respectively",
		PARM_INT,
		"_nCDMA2K_x5fRevChannelDecoding_fRadioConfigSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fRevChannelDecoding_fReverse_x5fRC3","Reverse_RC3")));
library_group("cdma2000, Channel Coding","cdma2000, Channel Coding","CDMA2K_RevChannelDecoding");
palette_group("cdma2000, Channel Coding","cdma2000, Channel Coding","CDMA2K_RevChannelDecoding");

create_constant_form ("_nCDMA2K_x5fRevChannelCoding_fReverse_x5fRC3", 
	"Reverse RC3",
	0,
	"0",
	"Reverse RC3");
create_constant_form ("_nCDMA2K_x5fRevChannelCoding_fReverse_x5fRC4", 
	"Reverse RC4",
	0,
	"1",
	"Reverse RC4");
create_constant_form ("_nCDMA2K_x5fRevChannelCoding_fReverse_x5fRC5", 
	"Reverse RC5",
	0,
	"2",
	"Reverse RC5");
create_constant_form ("_nCDMA2K_x5fRevChannelCoding_fReverse_x5fRC6", 
	"Reverse RC6",
	0,
	"3",
	"Reverse RC6");
create_form_set("_nCDMA2K_x5fRevChannelCoding_fRadioConfigSet",
	"_nCDMA2K_x5fRevChannelCoding_fReverse_x5fRC3",
	"_nCDMA2K_x5fRevChannelCoding_fReverse_x5fRC4",
	"_nCDMA2K_x5fRevChannelCoding_fReverse_x5fRC5",
	"_nCDMA2K_x5fRevChannelCoding_fReverse_x5fRC6",
	"StdForm");
create_item ("CDMA2K_RevChannelCoding","reverse link channel coding subnetwork",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_RevChannelCoding",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_RevChannelCoding",
	SPDesignAnnotFmt,
	"SYM_DSN_CDMA2K_RevChannelCoding",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("DataRate","data rate in kbps",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","9.6")),
	create_parm ("RadioConfig","radio configuration for  reverse link respectively",
		PARM_INT,
		"_nCDMA2K_x5fRevChannelCoding_fRadioConfigSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fRevChannelCoding_fReverse_x5fRC3","Reverse_RC3")));
library_group("cdma2000, Channel Coding","cdma2000, Channel Coding","CDMA2K_RevChannelCoding");
palette_group("cdma2000, Channel Coding","cdma2000, Channel Coding","CDMA2K_RevChannelCoding");

create_constant_form ("_nCDMA2K_x5fFwdTDpwrAlloc_fYes", 
	"Yes",
	0,
	"0",
	"Yes");
create_constant_form ("_nCDMA2K_x5fFwdTDpwrAlloc_fNo", 
	"No",
	0,
	"1",
	"No");
create_form_set("_nCDMA2K_x5fFwdTDpwrAlloc_fPowerControlSet",
	"_nCDMA2K_x5fFwdTDpwrAlloc_fYes",
	"_nCDMA2K_x5fFwdTDpwrAlloc_fNo",
	"StdForm");
create_item ("CDMA2K_FwdTDpwrAlloc","Power allocator for base station channels in transmit diversity mode",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_FwdTDpwrAlloc",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_FwdTDpwrAlloc",
	SPDesignAnnotFmt,
	"SYM_DSN_CDMA2K_FwdTDpwrAlloc",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PilotPowerRatio","pilot channel power to total power ratio",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.2")),
	create_parm ("SyncPowerRatio","sync channel power to total power ratio",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0471")),
	create_parm ("PagingPowerRatio","paging channel power to total power ratio",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.1882")),
	create_parm ("TDPilotPowerRatio","transmit diversity pilot channel power to total power ratio",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.2")),
	create_parm ("WalshLength","length of Walsh code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","64")),
	create_parm ("PermitdActiveUr","number of permitted active users in forward link",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","6")),
	create_parm ("OrthogonalChNum","number of the orthogonal channel to form the noise, in TD mode, it will be double of number of orthogonal users",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","10")),
	create_parm ("PowerControl","enable the power control",
		PARM_INT,
		"_nCDMA2K_x5fFwdTDpwrAlloc_fPowerControlSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fFwdTDpwrAlloc_fYes","Yes")),
	create_parm ("TrafficAdjustStep","traffic channel power adjust step",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1.0")));
library_group("cdma2000, Transmission","cdma2000, Transmission","CDMA2K_FwdTDpwrAlloc");
palette_group("cdma2000, Transmission","cdma2000, Transmission","CDMA2K_FwdTDpwrAlloc");

create_constant_form ("_nCDMA2K_x5fFwdSTSsrc_fForward_x5fRC3", 
	"Forward RC3",
	0,
	"0",
	"Forward RC3");
create_constant_form ("_nCDMA2K_x5fFwdSTSsrc_fForward_x5fRC4", 
	"Forward RC4",
	0,
	"1",
	"Forward RC4");
create_constant_form ("_nCDMA2K_x5fFwdSTSsrc_fForward_x5fRC5", 
	"Forward RC5",
	0,
	"2",
	"Forward RC5");
create_form_set("_nCDMA2K_x5fFwdSTSsrc_fRadioConfigSet",
	"_nCDMA2K_x5fFwdSTSsrc_fForward_x5fRC3",
	"_nCDMA2K_x5fFwdSTSsrc_fForward_x5fRC4",
	"_nCDMA2K_x5fFwdSTSsrc_fForward_x5fRC5",
	"StdForm");
create_constant_form ("_nCDMA2K_x5fFwdSTSsrc_fYes", 
	"Yes",
	0,
	"0",
	"Yes");
create_constant_form ("_nCDMA2K_x5fFwdSTSsrc_fNo", 
	"No",
	0,
	"1",
	"No");
create_form_set("_nCDMA2K_x5fFwdSTSsrc_fPowerControlSet",
	"_nCDMA2K_x5fFwdSTSsrc_fYes",
	"_nCDMA2K_x5fFwdSTSsrc_fNo",
	"StdForm");
create_item ("CDMA2K_FwdSTSsrc","foward link STS singal source subnetwork",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_FwdSTSsrc",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_FwdSTSsrc",
	SPDesignAnnotFmt,
	"SYM_DSN_CDMA2K_FwdSTSsrc",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("DataRate","data rate in kbps",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","9.6")),
	create_parm ("RadioConfig","radio configuration for forward link",
		PARM_INT,
		"_nCDMA2K_x5fFwdSTSsrc_fRadioConfigSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fFwdSTSsrc_fForward_x5fRC3","Forward_RC3")),
	create_parm ("PowerControl","enable the power control",
		PARM_INT,
		"_nCDMA2K_x5fFwdSTSsrc_fPowerControlSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fFwdSTSsrc_fNo","No")),
	create_parm ("User","total user number",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","21")),
	create_parm ("TrffcIndex1","traffic Walsh index for forward transmission from main antenna",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","61")),
	create_parm ("TrffcIndex2","traffic Walsh index for forward transmission from auxiliary antenna",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","62")));
library_group("cdma2000, Signal Sources","cdma2000, Signal Sources","CDMA2K_FwdSTSsrc");
palette_group("cdma2000, Signal Sources","cdma2000, Signal Sources","CDMA2K_FwdSTSsrc");

create_constant_form ("_nCDMA2K_x5fFwdSTSreceiver_fForward_x5fRC3", 
	"Forward RC3",
	0,
	"0",
	"Forward RC3");
create_constant_form ("_nCDMA2K_x5fFwdSTSreceiver_fForward_x5fRC4", 
	"Forward RC4",
	0,
	"1",
	"Forward RC4");
create_constant_form ("_nCDMA2K_x5fFwdSTSreceiver_fForward_x5fRC5", 
	"Forward RC5",
	0,
	"2",
	"Forward RC5");
create_form_set("_nCDMA2K_x5fFwdSTSreceiver_fRadioConfigSet",
	"_nCDMA2K_x5fFwdSTSreceiver_fForward_x5fRC3",
	"_nCDMA2K_x5fFwdSTSreceiver_fForward_x5fRC4",
	"_nCDMA2K_x5fFwdSTSreceiver_fForward_x5fRC5",
	"StdForm");
create_constant_form ("_nCDMA2K_x5fFwdSTSreceiver_fENABLE", 
	"ENABLE",
	0,
	"0",
	"ENABLE");
create_constant_form ("_nCDMA2K_x5fFwdSTSreceiver_fDISABLE", 
	"DISABLE",
	0,
	"1",
	"DISABLE");
create_form_set("_nCDMA2K_x5fFwdSTSreceiver_fOuterLoopSet",
	"_nCDMA2K_x5fFwdSTSreceiver_fENABLE",
	"_nCDMA2K_x5fFwdSTSreceiver_fDISABLE",
	"StdForm");
create_item ("CDMA2K_FwdSTSreceiver","Foward link STS receiver subnetwork",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_FwdSTSreceiver",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_FwdSTSreceiver",
	SPDesignAnnotFmt,
	"SYM_DSN_CDMA2K_FwdSTSreceiver",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("DataRate","data rate in kbps",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","9.6")),
	create_parm ("RadioConfig","radio configuration for forward link",
		PARM_INT,
		"_nCDMA2K_x5fFwdSTSreceiver_fRadioConfigSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fFwdSTSreceiver_fForward_x5fRC3","Forward_RC3")),
	create_parm ("TrffcIndex1","traffic Walsh index for forward main antenna transmission",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","61")),
	create_parm ("TrffcIndex2","traffic Walsh index for forward auxiliary antenna transmission",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","62")),
	create_parm ("FingerNum","finger number of rake receiver",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("OuterLoop","outer loop power control enable",
		PARM_INT,
		"_nCDMA2K_x5fFwdSTSreceiver_fOuterLoopSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fFwdSTSreceiver_fDISABLE","DISABLE")),
	create_parm ("SIR_Threshold","signal-to-interference ratio required",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")));
library_group("cdma2000, Receivers","cdma2000, Receivers","CDMA2K_FwdSTSreceiver");
palette_group("cdma2000, Receivers","cdma2000, Receivers","CDMA2K_FwdSTSreceiver");

create_item ("CDMA2K_FwdRho","Rho meter for forward link",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_FwdRho",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_FwdRho",
	SPDesignAnnotFmt,
	"SYM_DSN_CDMA2K_FwdRho",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("WalshLengthMax","maximum Walsh code length used for spreading",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","128")),
	create_parm ("TestLength","number of Walsh periods for measurement",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","48")),
	create_parm ("SampleRate","number of samples per chip",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")));
library_group("cdma2000, Test","cdma2000, Test","CDMA2K_FwdRho");
palette_group("cdma2000, Test","cdma2000, Test","CDMA2K_FwdRho");

create_constant_form ("_nCDMA2K_x5fFwdRCsrc_fForward_x5fRC3", 
	"Forward RC3",
	0,
	"0",
	"Forward RC3");
create_constant_form ("_nCDMA2K_x5fFwdRCsrc_fForward_x5fRC4", 
	"Forward RC4",
	0,
	"1",
	"Forward RC4");
create_constant_form ("_nCDMA2K_x5fFwdRCsrc_fForward_x5fRC5", 
	"Forward RC5",
	0,
	"2",
	"Forward RC5");
create_form_set("_nCDMA2K_x5fFwdRCsrc_fRadioConfigSet",
	"_nCDMA2K_x5fFwdRCsrc_fForward_x5fRC3",
	"_nCDMA2K_x5fFwdRCsrc_fForward_x5fRC4",
	"_nCDMA2K_x5fFwdRCsrc_fForward_x5fRC5",
	"StdForm");
create_constant_form ("_nCDMA2K_x5fFwdRCsrc_fYes", 
	"Yes",
	0,
	"0",
	"Yes");
create_constant_form ("_nCDMA2K_x5fFwdRCsrc_fNo", 
	"No",
	0,
	"1",
	"No");
create_form_set("_nCDMA2K_x5fFwdRCsrc_fPowerControlSet",
	"_nCDMA2K_x5fFwdRCsrc_fYes",
	"_nCDMA2K_x5fFwdRCsrc_fNo",
	"StdForm");
create_item ("CDMA2K_FwdRCsrc","Foward link singal source subnetwork for different radio configuration",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_FwdRCsrc",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_FwdRCsrc",
	SPDesignAnnotFmt,
	"SYM_DSN_CDMA2K_FwdRCsrc",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("DataRate","data rate in kbps",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","9.6")),
	create_parm ("RadioConfig","radio configuration for forward link",
		PARM_INT,
		"_nCDMA2K_x5fFwdRCsrc_fRadioConfigSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fFwdRCsrc_fForward_x5fRC3","Forward_RC3")),
	create_parm ("PowerControl","enable the power control",
		PARM_INT,
		"_nCDMA2K_x5fFwdRCsrc_fPowerControlSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fFwdRCsrc_fNo","No")),
	create_parm ("User","total user number",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","21")),
	create_parm ("TrffcIndex","traffic Walsh index",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","61")));
library_group("cdma2000, Signal Sources","cdma2000, Signal Sources","CDMA2K_FwdRCsrc");
palette_group("cdma2000, Signal Sources","cdma2000, Signal Sources","CDMA2K_FwdRCsrc");

create_constant_form ("_nCDMA2K_x5fFwdRCreceiver_fForward_x5fRC3", 
	"Forward RC3",
	0,
	"0",
	"Forward RC3");
create_constant_form ("_nCDMA2K_x5fFwdRCreceiver_fForward_x5fRC4", 
	"Forward RC4",
	0,
	"1",
	"Forward RC4");
create_constant_form ("_nCDMA2K_x5fFwdRCreceiver_fForward_x5fRC5", 
	"Forward RC5",
	0,
	"2",
	"Forward RC5");
create_form_set("_nCDMA2K_x5fFwdRCreceiver_fRadioConfigSet",
	"_nCDMA2K_x5fFwdRCreceiver_fForward_x5fRC3",
	"_nCDMA2K_x5fFwdRCreceiver_fForward_x5fRC4",
	"_nCDMA2K_x5fFwdRCreceiver_fForward_x5fRC5",
	"StdForm");
create_constant_form ("_nCDMA2K_x5fFwdRCreceiver_fENABLE", 
	"ENABLE",
	0,
	"0",
	"ENABLE");
create_constant_form ("_nCDMA2K_x5fFwdRCreceiver_fDISABLE", 
	"DISABLE",
	0,
	"1",
	"DISABLE");
create_form_set("_nCDMA2K_x5fFwdRCreceiver_fOuterLoopSet",
	"_nCDMA2K_x5fFwdRCreceiver_fENABLE",
	"_nCDMA2K_x5fFwdRCreceiver_fDISABLE",
	"StdForm");
create_item ("CDMA2K_FwdRCreceiver","Foward link receiver subnetwork for different radio configuration",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_FwdRCreceiver",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_FwdRCreceiver",
	SPDesignAnnotFmt,
	"SYM_DSN_CDMA2K_FwdRCreceiver",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("DataRate","data rate in kbps",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","9.6")),
	create_parm ("RadioConfig","radio configuration for forward link",
		PARM_INT,
		"_nCDMA2K_x5fFwdRCreceiver_fRadioConfigSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fFwdRCreceiver_fForward_x5fRC3","Forward_RC3")),
	create_parm ("TrffcIndex","traffic Walsh index",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","61")),
	create_parm ("FingerNum","finger number of rake receiver",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("OuterLoop","outer loop power control enable",
		PARM_INT,
		"_nCDMA2K_x5fFwdRCreceiver_fOuterLoopSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fFwdRCreceiver_fDISABLE","DISABLE")),
	create_parm ("SIR_Threshold","signal-to-interference ratio required",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")));
library_group("cdma2000, Receivers","cdma2000, Receivers","CDMA2K_FwdRCreceiver");
palette_group("cdma2000, Receivers","cdma2000, Receivers","CDMA2K_FwdRCreceiver");

create_constant_form ("_nCDMA2K_x5fFwdRake_x5fU_fSR1", 
	"SR1",
	0,
	"1",
	"SR1");
create_constant_form ("_nCDMA2K_x5fFwdRake_x5fU_fSR3", 
	"SR3",
	0,
	"3",
	"SR3");
create_form_set("_nCDMA2K_x5fFwdRake_x5fU_fSpreadRateSet",
	"_nCDMA2K_x5fFwdRake_x5fU_fSR1",
	"_nCDMA2K_x5fFwdRake_x5fU_fSR3",
	"StdForm");
create_item ("CDMA2K_FwdRake_U","Forward Rake receiver, spec",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_FwdRake_U",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_FwdRake_U",
	SPDesignAnnotFmt,
	"SYM_DSN_CDMA2K_FwdRake_U",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SpreadRate","PN chip rate, multiple of 1.2288 Mcps",
		PARM_INT,
		"_nCDMA2K_x5fFwdRake_x5fU_fSpreadRateSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fFwdRake_x5fU_fSR1","SR1")),
	create_parm ("PilotWalshLen","Walsh code length for pilot channel (longer than traffic channel))",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","128")),
	create_parm ("TrafficWalshLen","Walsh code length for traffic channel",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","64")),
	create_parm ("FrameLength","frame length of output complex signals",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","192")),
	create_parm ("FingerNum","number of fingers in Rake receiver",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")));
library_group("cdma2000, Receivers","cdma2000, Receivers","CDMA2K_FwdRake_U");
palette_group("cdma2000, Receivers","cdma2000, Receivers","CDMA2K_FwdRake_U");

create_item ("CDMA2K_FwdPilotSrc","foward link pilot signal source subnetwork",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_FwdPilotSrc",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_FwdPilotSrc",
	SPDesignAnnotFmt,
	"SYM_DSN_CDMA2K_FwdPilotSrc",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PilotGain","pilot gain",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","2.6")));
library_group("cdma2000, Signal Sources","cdma2000, Signal Sources","CDMA2K_FwdPilotSrc");
palette_group("cdma2000, Signal Sources","cdma2000, Signal Sources","CDMA2K_FwdPilotSrc");

create_constant_form ("_nCDMA2K_x5fFwdOTDsrc_fForward_x5fRC3", 
	"Forward RC3",
	0,
	"0",
	"Forward RC3");
create_constant_form ("_nCDMA2K_x5fFwdOTDsrc_fForward_x5fRC4", 
	"Forward RC4",
	0,
	"1",
	"Forward RC4");
create_constant_form ("_nCDMA2K_x5fFwdOTDsrc_fForward_x5fRC5", 
	"Forward RC5",
	0,
	"2",
	"Forward RC5");
create_form_set("_nCDMA2K_x5fFwdOTDsrc_fRadioConfigSet",
	"_nCDMA2K_x5fFwdOTDsrc_fForward_x5fRC3",
	"_nCDMA2K_x5fFwdOTDsrc_fForward_x5fRC4",
	"_nCDMA2K_x5fFwdOTDsrc_fForward_x5fRC5",
	"StdForm");
create_constant_form ("_nCDMA2K_x5fFwdOTDsrc_fYes", 
	"Yes",
	0,
	"0",
	"Yes");
create_constant_form ("_nCDMA2K_x5fFwdOTDsrc_fNo", 
	"No",
	0,
	"1",
	"No");
create_form_set("_nCDMA2K_x5fFwdOTDsrc_fPowerControlSet",
	"_nCDMA2K_x5fFwdOTDsrc_fYes",
	"_nCDMA2K_x5fFwdOTDsrc_fNo",
	"StdForm");
create_item ("CDMA2K_FwdOTDsrc","foward link OTD signal source subnetwork",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_FwdOTDsrc",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_FwdOTDsrc",
	SPDesignAnnotFmt,
	"SYM_DSN_CDMA2K_FwdOTDsrc",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("DataRate","data rate in kbps",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","9.6")),
	create_parm ("RadioConfig","radio configuration for forward link",
		PARM_INT,
		"_nCDMA2K_x5fFwdOTDsrc_fRadioConfigSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fFwdOTDsrc_fForward_x5fRC3","Forward_RC3")),
	create_parm ("PowerControl","enable the power control",
		PARM_INT,
		"_nCDMA2K_x5fFwdOTDsrc_fPowerControlSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fFwdOTDsrc_fNo","No")),
	create_parm ("User","total user number",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","21")),
	create_parm ("TrffcIndex1","traffic Walsh index for forward main antenna transmission",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","61")),
	create_parm ("TrffcIndex2","traffic Walsh index for forward auxiliary antenna transmission",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","62")));
library_group("cdma2000, Signal Sources","cdma2000, Signal Sources","CDMA2K_FwdOTDsrc");
palette_group("cdma2000, Signal Sources","cdma2000, Signal Sources","CDMA2K_FwdOTDsrc");

create_constant_form ("_nCDMA2K_x5fFwdOTDreceiver_fForward_x5fRC3", 
	"Forward RC3",
	0,
	"0",
	"Forward RC3");
create_constant_form ("_nCDMA2K_x5fFwdOTDreceiver_fForward_x5fRC4", 
	"Forward RC4",
	0,
	"1",
	"Forward RC4");
create_constant_form ("_nCDMA2K_x5fFwdOTDreceiver_fForward_x5fRC5", 
	"Forward RC5",
	0,
	"2",
	"Forward RC5");
create_form_set("_nCDMA2K_x5fFwdOTDreceiver_fRadioConfigSet",
	"_nCDMA2K_x5fFwdOTDreceiver_fForward_x5fRC3",
	"_nCDMA2K_x5fFwdOTDreceiver_fForward_x5fRC4",
	"_nCDMA2K_x5fFwdOTDreceiver_fForward_x5fRC5",
	"StdForm");
create_constant_form ("_nCDMA2K_x5fFwdOTDreceiver_fENABLE", 
	"ENABLE",
	0,
	"0",
	"ENABLE");
create_constant_form ("_nCDMA2K_x5fFwdOTDreceiver_fDISABLE", 
	"DISABLE",
	0,
	"1",
	"DISABLE");
create_form_set("_nCDMA2K_x5fFwdOTDreceiver_fOuterLoopSet",
	"_nCDMA2K_x5fFwdOTDreceiver_fENABLE",
	"_nCDMA2K_x5fFwdOTDreceiver_fDISABLE",
	"StdForm");
create_item ("CDMA2K_FwdOTDreceiver","foward link OTD receiver subnetwork",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_FwdOTDreceiver",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_FwdOTDreceiver",
	SPDesignAnnotFmt,
	"SYM_DSN_CDMA2K_FwdOTDreceiver",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("DataRate","data rate in kbps",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","9.6")),
	create_parm ("RadioConfig","radio configuration for forward link",
		PARM_INT,
		"_nCDMA2K_x5fFwdOTDreceiver_fRadioConfigSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fFwdOTDreceiver_fForward_x5fRC3","Forward_RC3")),
	create_parm ("TrffcIndex1","traffic Walsh index for forward main antenna transmission",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","61")),
	create_parm ("TrffcIndex2","traffic Walsh index for forward auxiliary antenna transmission",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","62")),
	create_parm ("FingerNum","finger number of rake receiver",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("OuterLoop","outer loop power control enable",
		PARM_INT,
		"_nCDMA2K_x5fFwdOTDreceiver_fOuterLoopSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fFwdOTDreceiver_fDISABLE","DISABLE")),
	create_parm ("SIR_Threshold","signal-to-interference ratio required",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")));
library_group("cdma2000, Receivers","cdma2000, Receivers","CDMA2K_FwdOTDreceiver");
palette_group("cdma2000, Receivers","cdma2000, Receivers","CDMA2K_FwdOTDreceiver");

create_constant_form ("_nCDMA2K_x5fFwdChannelDecoding_fForward_x5fRC3", 
	"Forward RC3",
	0,
	"0",
	"Forward RC3");
create_constant_form ("_nCDMA2K_x5fFwdChannelDecoding_fForward_x5fRC4", 
	"Forward RC4",
	0,
	"1",
	"Forward RC4");
create_constant_form ("_nCDMA2K_x5fFwdChannelDecoding_fForward_x5fRC5", 
	"Forward RC5",
	0,
	"2",
	"Forward RC5");
create_form_set("_nCDMA2K_x5fFwdChannelDecoding_fRadioConfigSet",
	"_nCDMA2K_x5fFwdChannelDecoding_fForward_x5fRC3",
	"_nCDMA2K_x5fFwdChannelDecoding_fForward_x5fRC4",
	"_nCDMA2K_x5fFwdChannelDecoding_fForward_x5fRC5",
	"StdForm");
create_item ("CDMA2K_FwdChannelDecoding","Forward link channel decoding subnetwork",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_FwdChannelDecoding",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_FwdChannelDecoding",
	SPDesignAnnotFmt,
	"SYM_DSN_CDMA2K_FwdChannelDecoding",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("DataRate","data rate in kbps",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","9.6")),
	create_parm ("RadioConfig","radio configuration for forward link",
		PARM_INT,
		"_nCDMA2K_x5fFwdChannelDecoding_fRadioConfigSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fFwdChannelDecoding_fForward_x5fRC3","Forward_RC3")));
library_group("cdma2000, Channel Coding","cdma2000, Channel Coding","CDMA2K_FwdChannelDecoding");
palette_group("cdma2000, Channel Coding","cdma2000, Channel Coding","CDMA2K_FwdChannelDecoding");

create_constant_form ("_nCDMA2K_x5fFwdChannelCoding_fForward_x5fRC3", 
	"Forward RC3",
	0,
	"0",
	"Forward RC3");
create_constant_form ("_nCDMA2K_x5fFwdChannelCoding_fForward_x5fRC4", 
	"Forward RC4",
	0,
	"1",
	"Forward RC4");
create_constant_form ("_nCDMA2K_x5fFwdChannelCoding_fForward_x5fRC5", 
	"Forward RC5",
	0,
	"2",
	"Forward RC5");
create_form_set("_nCDMA2K_x5fFwdChannelCoding_fRadioConfigSet",
	"_nCDMA2K_x5fFwdChannelCoding_fForward_x5fRC3",
	"_nCDMA2K_x5fFwdChannelCoding_fForward_x5fRC4",
	"_nCDMA2K_x5fFwdChannelCoding_fForward_x5fRC5",
	"StdForm");
create_item ("CDMA2K_FwdChannelCoding","Forward link channel coding subnetwork",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_FwdChannelCoding",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_FwdChannelCoding",
	SPDesignAnnotFmt,
	"SYM_DSN_CDMA2K_FwdChannelCoding",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("DataRate","data rate in kbps",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","9.6")),
	create_parm ("RadioConfig","radio configuration for forward  link respectively",
		PARM_INT,
		"_nCDMA2K_x5fFwdChannelCoding_fRadioConfigSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fFwdChannelCoding_fForward_x5fRC3","Forward_RC3")));
library_group("cdma2000, Channel Coding","cdma2000, Channel Coding","CDMA2K_FwdChannelCoding");
palette_group("cdma2000, Channel Coding","cdma2000, Channel Coding","CDMA2K_FwdChannelCoding");

create_constant_form ("_nCDMA2K_x5fCDP_fForward_x5flink", 
	"Forward link",
	0,
	"0",
	"Forward link");
create_constant_form ("_nCDMA2K_x5fCDP_fReverse_x5flink", 
	"Reverse link",
	0,
	"1",
	"Reverse link");
create_form_set("_nCDMA2K_x5fCDP_fLinkSet",
	"_nCDMA2K_x5fCDP_fForward_x5flink",
	"_nCDMA2K_x5fCDP_fReverse_x5flink",
	"StdForm");
create_item ("CDMA2K_CDP","Code domain power measurement",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_CDP",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_CDP",
	SPDesignAnnotFmt,
	"SYM_DSN_CDMA2K_CDP",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("WalshLength","Walsh code length used for spreading",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","128")),
	create_parm ("TestLength","number of Walsh periods for measurement",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","48")),
	create_parm ("SampleRate","number of samples per chip",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("Link","type of link",
		PARM_INT,
		"_nCDMA2K_x5fCDP_fLinkSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fCDP_fForward_x5flink","Forward_link")),
	create_parm ("CDP_GroupNum","number of output CDP groups",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));
library_group("cdma2000, Test","cdma2000, Test","CDMA2K_CDP");
palette_group("cdma2000, Test","cdma2000, Test","CDMA2K_CDP");

create_item ("CDMA2K_MC_UpConv","Up-Converter for Multi-Carrier Mode",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_MC_UpConv",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_MC_UpConv",
	SPDesignAnnotFmt,
	"SYM_CDMA2K_MC_UpConv",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("MiddleCF","middle carrier frequency of multi-carrier mode",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","825M")));
library_group("cdma2000, Test","cdma2000, Test","CDMA2K_MC_UpConv");
palette_group("cdma2000, Test","cdma2000, Test","CDMA2K_MC_UpConv");

create_item ("CDMA2K_MC_DownConv","Down-Converter for Multi-Carrier Mode",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_MC_DownConv",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_MC_DownConv",
	SPDesignAnnotFmt,
	"SYM_CDMA2K_MC_DownConv",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("MiddleCF","middle carrier frequency of multi-carrier mode",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","825M")));
library_group("cdma2000, Test","cdma2000, Test","CDMA2K_MC_DownConv");
palette_group("cdma2000, Test","cdma2000, Test","CDMA2K_MC_DownConv");

create_constant_form ("_nCDMA2K_x5fWalshRotateFunction_fRotate", 
	"Rotate",
	0,
	"0",
	"Rotate");
create_constant_form ("_nCDMA2K_x5fWalshRotateFunction_fDeRotate", 
	"DeRotate",
	0,
	"1",
	"DeRotate");
create_form_set("_nCDMA2K_x5fWalshRotateFunction_fRotateTypeSet",
	"_nCDMA2K_x5fWalshRotateFunction_fRotate",
	"_nCDMA2K_x5fWalshRotateFunction_fDeRotate",
	"StdForm");
create_item ("CDMA2K_WalshRotateFunction","Walsh Rotate Function",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_WalshRotateFunction",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_WalshRotateFunction",
	SPDesignAnnotFmt,
	"SYM_CDMA2K_WalshRotateFunction",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("WalshLength","length of Walsh code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","256")),
	create_parm ("WalshCodeIndex","index of Walsh code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("RotateType","type of rotate",
		PARM_INT,
		"_nCDMA2K_x5fWalshRotateFunction_fRotateTypeSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fWalshRotateFunction_fRotate","Rotate")));
library_group("cdma2000, Transmission","cdma2000, Transmission","CDMA2K_WalshRotateFunction");
palette_group("cdma2000, Transmission","cdma2000, Transmission","CDMA2K_WalshRotateFunction");

create_item ("CDMA2K_WalshModulator","Walsh Modulator",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_WalshModulator",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_WalshModulator",
	SPDesignAnnotFmt,
	"SYM_CDMA2K_WalshModulator",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("WalshLength","length of Walsh code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","64")),
	create_parm ("WalshCodeIndex","index of Walsh code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")));
library_group("cdma2000, Transmission","cdma2000, Transmission","CDMA2K_WalshModulator");
palette_group("cdma2000, Transmission","cdma2000, Transmission","CDMA2K_WalshModulator");

create_constant_form ("_nCDMA2K_x5fVR_x5fCoding_fFwd_x5fRC1", 
	"Fwd RC1",
	0,
	"0",
	"Fwd RC1");
create_constant_form ("_nCDMA2K_x5fVR_x5fCoding_fFwd_x5fRC2", 
	"Fwd RC2",
	0,
	"1",
	"Fwd RC2");
create_constant_form ("_nCDMA2K_x5fVR_x5fCoding_fFwd_x5fRC3", 
	"Fwd RC3",
	0,
	"2",
	"Fwd RC3");
create_constant_form ("_nCDMA2K_x5fVR_x5fCoding_fFwd_x5fRC4", 
	"Fwd RC4",
	0,
	"3",
	"Fwd RC4");
create_constant_form ("_nCDMA2K_x5fVR_x5fCoding_fFwd_x5fRC5", 
	"Fwd RC5",
	0,
	"4",
	"Fwd RC5");
create_constant_form ("_nCDMA2K_x5fVR_x5fCoding_fFwd_x5fRC6", 
	"Fwd RC6",
	0,
	"5",
	"Fwd RC6");
create_constant_form ("_nCDMA2K_x5fVR_x5fCoding_fFwd_x5fRC7", 
	"Fwd RC7",
	0,
	"6",
	"Fwd RC7");
create_constant_form ("_nCDMA2K_x5fVR_x5fCoding_fFwd_x5fRC8", 
	"Fwd RC8",
	0,
	"7",
	"Fwd RC8");
create_constant_form ("_nCDMA2K_x5fVR_x5fCoding_fFwd_x5fRC9", 
	"Fwd RC9",
	0,
	"8",
	"Fwd RC9");
create_constant_form ("_nCDMA2K_x5fVR_x5fCoding_fRev_x5fRC1", 
	"Rev RC1",
	0,
	"9",
	"Rev RC1");
create_constant_form ("_nCDMA2K_x5fVR_x5fCoding_fRev_x5fRC2", 
	"Rev RC2",
	0,
	"10",
	"Rev RC2");
create_constant_form ("_nCDMA2K_x5fVR_x5fCoding_fRev_x5fRC3", 
	"Rev RC3",
	0,
	"11",
	"Rev RC3");
create_constant_form ("_nCDMA2K_x5fVR_x5fCoding_fRev_x5fRC4", 
	"Rev RC4",
	0,
	"12",
	"Rev RC4");
create_constant_form ("_nCDMA2K_x5fVR_x5fCoding_fRev_x5fRC5", 
	"Rev RC5",
	0,
	"13",
	"Rev RC5");
create_constant_form ("_nCDMA2K_x5fVR_x5fCoding_fRev_x5fRC6", 
	"Rev RC6",
	0,
	"14",
	"Rev RC6");
create_form_set("_nCDMA2K_x5fVR_x5fCoding_fRadioConfigSet",
	"_nCDMA2K_x5fVR_x5fCoding_fFwd_x5fRC1",
	"_nCDMA2K_x5fVR_x5fCoding_fFwd_x5fRC2",
	"_nCDMA2K_x5fVR_x5fCoding_fFwd_x5fRC3",
	"_nCDMA2K_x5fVR_x5fCoding_fFwd_x5fRC4",
	"_nCDMA2K_x5fVR_x5fCoding_fFwd_x5fRC5",
	"_nCDMA2K_x5fVR_x5fCoding_fFwd_x5fRC6",
	"_nCDMA2K_x5fVR_x5fCoding_fFwd_x5fRC7",
	"_nCDMA2K_x5fVR_x5fCoding_fFwd_x5fRC8",
	"_nCDMA2K_x5fVR_x5fCoding_fFwd_x5fRC9",
	"_nCDMA2K_x5fVR_x5fCoding_fRev_x5fRC1",
	"_nCDMA2K_x5fVR_x5fCoding_fRev_x5fRC2",
	"_nCDMA2K_x5fVR_x5fCoding_fRev_x5fRC3",
	"_nCDMA2K_x5fVR_x5fCoding_fRev_x5fRC4",
	"_nCDMA2K_x5fVR_x5fCoding_fRev_x5fRC5",
	"_nCDMA2K_x5fVR_x5fCoding_fRev_x5fRC6",
	"StdForm");
create_item ("CDMA2K_VR_Coding","Variable Data Rate Coder",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_VR_Coding",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_VR_Coding",
	SPDesignAnnotFmt,
	"SYM_CDMA2K_VR_Coding",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("RadioConfig","radio configuration",
		PARM_INT,
		"_nCDMA2K_x5fVR_x5fCoding_fRadioConfigSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fVR_x5fCoding_fFwd_x5fRC1","Fwd_RC1")));
library_group("cdma2000, Channel Coding","cdma2000, Channel Coding","CDMA2K_VR_Coding");
palette_group("cdma2000, Channel Coding","cdma2000, Channel Coding","CDMA2K_VR_Coding");

create_constant_form ("_nCDMA2K_x5fVR_x5fAmpAdjust_fRC3_x5f4_x5f6_x5f7", 
	"RC3_4_6_7",
	0,
	"1",
	"RC3_4_6_7");
create_constant_form ("_nCDMA2K_x5fVR_x5fAmpAdjust_fotherRC", 
	"otherRC",
	0,
	"4",
	"otherRC");
create_form_set("_nCDMA2K_x5fVR_x5fAmpAdjust_fRadioConfigSet",
	"_nCDMA2K_x5fVR_x5fAmpAdjust_fRC3_x5f4_x5f6_x5f7",
	"_nCDMA2K_x5fVR_x5fAmpAdjust_fotherRC",
	"StdForm");
create_item ("CDMA2K_VR_AmpAdjust","Input Symbol Amplitude Adjuster for Data Rate in Forward Channel",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_VR_AmpAdjust",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_VR_AmpAdjust",
	SPDesignAnnotFmt,
	"SYM_CDMA2K_VR_AmpAdjust",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("RadioConfig","radio configuration",
		PARM_INT,
		"_nCDMA2K_x5fVR_x5fAmpAdjust_fRadioConfigSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fVR_x5fAmpAdjust_fRC3_x5f4_x5f6_x5f7","RC3_4_6_7")),
	create_parm ("InputFrameLen","input frame length",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","384")));
library_group("cdma2000, Channel Coding","cdma2000, Channel Coding","CDMA2K_VR_AmpAdjust");
palette_group("cdma2000, Channel Coding","cdma2000, Channel Coding","CDMA2K_VR_AmpAdjust");

create_item ("CDMA2K_TurboRSCEncoder","RSC Encoder",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_TurboRSCEncoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_TurboRSCEncoder",
	SPDesignAnnotFmt,
	"SYM_CDMA2K_TurboRSCEncoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("InputFrameLen","input frame length including 6 tail bits",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","384")));
library_group("cdma2000, Channel Coding","cdma2000, Channel Coding","CDMA2K_TurboRSCEncoder");
palette_group("cdma2000, Channel Coding","cdma2000, Channel Coding","CDMA2K_TurboRSCEncoder");

create_constant_form ("_nCDMA2K_x5fTurboMAPDecoder_frate_x5f1_x5f2", 
	"rate 1/2",
	0,
	"0",
	"rate 1/2");
create_constant_form ("_nCDMA2K_x5fTurboMAPDecoder_frate_x5f1_x5f3", 
	"rate 1/3",
	0,
	"1",
	"rate 1/3");
create_constant_form ("_nCDMA2K_x5fTurboMAPDecoder_frate_x5f1_x5f4", 
	"rate 1/4",
	0,
	"2",
	"rate 1/4");
create_form_set("_nCDMA2K_x5fTurboMAPDecoder_fCodeRateSet",
	"_nCDMA2K_x5fTurboMAPDecoder_frate_x5f1_x5f2",
	"_nCDMA2K_x5fTurboMAPDecoder_frate_x5f1_x5f3",
	"_nCDMA2K_x5fTurboMAPDecoder_frate_x5f1_x5f4",
	"StdForm");
create_item ("CDMA2K_TurboMAPDecoder","MAP Decoder for Turbo Decoder",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_TurboMAPDecoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_TurboMAPDecoder",
	SPDesignAnnotFmt,
	"SYM_CDMA2K_TurboMAPDecoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("OutputFrameLen","output frame length (not including 6 tail bits)",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","378")),
	create_parm ("CodeRate","code rate of turbo encoder",
		PARM_INT,
		"_nCDMA2K_x5fTurboMAPDecoder_fCodeRateSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fTurboMAPDecoder_frate_x5f1_x5f2","rate_1_2")));
library_group("cdma2000, Channel Coding","cdma2000, Channel Coding","CDMA2K_TurboMAPDecoder");
palette_group("cdma2000, Channel Coding","cdma2000, Channel Coding","CDMA2K_TurboMAPDecoder");

create_constant_form ("_nCDMA2K_x5fTurboEncoder_frate_x5f1_x5f2", 
	"rate 1/2",
	0,
	"0",
	"rate 1/2");
create_constant_form ("_nCDMA2K_x5fTurboEncoder_frate_x5f1_x5f3", 
	"rate 1/3",
	0,
	"1",
	"rate 1/3");
create_constant_form ("_nCDMA2K_x5fTurboEncoder_frate_x5f1_x5f4", 
	"rate 1/4",
	0,
	"2",
	"rate 1/4");
create_form_set("_nCDMA2K_x5fTurboEncoder_fCodeRateSet",
	"_nCDMA2K_x5fTurboEncoder_frate_x5f1_x5f2",
	"_nCDMA2K_x5fTurboEncoder_frate_x5f1_x5f3",
	"_nCDMA2K_x5fTurboEncoder_frate_x5f1_x5f4",
	"StdForm");
create_item ("CDMA2K_TurboEncoder","Turbo Encoder",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_TurboEncoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_TurboEncoder",
	SPDesignAnnotFmt,
	"SYM_CDMA2K_TurboEncoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("InputFrameLen","input frame length including 6 tail bits",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","384")),
	create_parm ("CodeRate","code rate of Turbo encoder",
		PARM_INT,
		"_nCDMA2K_x5fTurboEncoder_fCodeRateSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fTurboEncoder_frate_x5f1_x5f2","rate_1_2")));
library_group("cdma2000, Channel Coding","cdma2000, Channel Coding","CDMA2K_TurboEncoder");
palette_group("cdma2000, Channel Coding","cdma2000, Channel Coding","CDMA2K_TurboEncoder");

create_constant_form ("_nCDMA2K_x5fTurboDecoder_frate_x5f1_x5f2", 
	"rate 1/2",
	0,
	"0",
	"rate 1/2");
create_constant_form ("_nCDMA2K_x5fTurboDecoder_frate_x5f1_x5f3", 
	"rate 1/3",
	0,
	"1",
	"rate 1/3");
create_constant_form ("_nCDMA2K_x5fTurboDecoder_frate_x5f1_x5f4", 
	"rate 1/4",
	0,
	"2",
	"rate 1/4");
create_form_set("_nCDMA2K_x5fTurboDecoder_fCodeRateSet",
	"_nCDMA2K_x5fTurboDecoder_frate_x5f1_x5f2",
	"_nCDMA2K_x5fTurboDecoder_frate_x5f1_x5f3",
	"_nCDMA2K_x5fTurboDecoder_frate_x5f1_x5f4",
	"StdForm");
create_item ("CDMA2K_TurboDecoder","4-Level Turbo Decoder",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_TurboDecoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_TurboDecoder",
	SPDesignAnnotFmt,
	"SYM_CDMA2K_TurboDecoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("OutputFrameLen","output frame length (not including 6 tail bits)",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","378")),
	create_parm ("CodeRate","code rate of turbo encoder",
		PARM_INT,
		"_nCDMA2K_x5fTurboDecoder_fCodeRateSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fTurboDecoder_frate_x5f1_x5f2","rate_1_2")));
library_group("cdma2000, Channel Coding","cdma2000, Channel Coding","CDMA2K_TurboDecoder");
palette_group("cdma2000, Channel Coding","cdma2000, Channel Coding","CDMA2K_TurboDecoder");

create_constant_form ("_nCDMA2K_x5fSR3LongCode_fAccess_x5fChannel", 
	"Access Channel",
	0,
	"0",
	"Access Channel");
create_constant_form ("_nCDMA2K_x5fSR3LongCode_fReverse_x5fTraffic_x5fChannel_x5fRC1_x5fTo_x5fRC2", 
	"Reverse Traffic Channel RC1 To RC2",
	0,
	"1",
	"Reverse Traffic Channel RC1 To RC2");
create_constant_form ("_nCDMA2K_x5fSR3LongCode_fEnhanced_x5fAccess_x5fChannel_x5fHeader", 
	"Enhanced Access Channel Header",
	0,
	"2",
	"Enhanced Access Channel Header");
create_constant_form ("_nCDMA2K_x5fSR3LongCode_fReverse_x5fCommon_x5fControl_x5fChannel_x5fReservation", 
	"Reverse Common Control Channel Reservation",
	0,
	"3",
	"Reverse Common Control Channel Reservation");
create_constant_form ("_nCDMA2K_x5fSR3LongCode_fReverse_x5fTraffic_x5fChannel_x5fRC3_x5fTo_x5fRC6", 
	"Reverse Traffic Channel RC3 To RC6",
	0,
	"4",
	"Reverse Traffic Channel RC3 To RC6");
create_constant_form ("_nCDMA2K_x5fSR3LongCode_fPaging_x5fChannel", 
	"Paging Channel",
	0,
	"5",
	"Paging Channel");
create_constant_form ("_nCDMA2K_x5fSR3LongCode_fBroadcast_x5fChannel", 
	"Broadcast Channel",
	0,
	"6",
	"Broadcast Channel");
create_constant_form ("_nCDMA2K_x5fSR3LongCode_fCommon_x5fPower_x5fControl_x5fChannel", 
	"Common Power Control Channel",
	0,
	"7",
	"Common Power Control Channel");
create_constant_form ("_nCDMA2K_x5fSR3LongCode_fCommon_x5fAssignment_x5fChannel", 
	"Common Assignment Channel",
	0,
	"8",
	"Common Assignment Channel");
create_constant_form ("_nCDMA2K_x5fSR3LongCode_fForward_x5fCommon_x5fControl_x5fChannel", 
	"Forward Common Control Channel",
	0,
	"9",
	"Forward Common Control Channel");
create_constant_form ("_nCDMA2K_x5fSR3LongCode_fForward_x5fTraffic_x5fChannel", 
	"Forward Traffic Channel",
	0,
	"10",
	"Forward Traffic Channel");
create_form_set("_nCDMA2K_x5fSR3LongCode_fChannelTypeSet",
	"_nCDMA2K_x5fSR3LongCode_fAccess_x5fChannel",
	"_nCDMA2K_x5fSR3LongCode_fReverse_x5fTraffic_x5fChannel_x5fRC1_x5fTo_x5fRC2",
	"_nCDMA2K_x5fSR3LongCode_fEnhanced_x5fAccess_x5fChannel_x5fHeader",
	"_nCDMA2K_x5fSR3LongCode_fReverse_x5fCommon_x5fControl_x5fChannel_x5fReservation",
	"_nCDMA2K_x5fSR3LongCode_fReverse_x5fTraffic_x5fChannel_x5fRC3_x5fTo_x5fRC6",
	"_nCDMA2K_x5fSR3LongCode_fPaging_x5fChannel",
	"_nCDMA2K_x5fSR3LongCode_fBroadcast_x5fChannel",
	"_nCDMA2K_x5fSR3LongCode_fCommon_x5fPower_x5fControl_x5fChannel",
	"_nCDMA2K_x5fSR3LongCode_fCommon_x5fAssignment_x5fChannel",
	"_nCDMA2K_x5fSR3LongCode_fForward_x5fCommon_x5fControl_x5fChannel",
	"_nCDMA2K_x5fSR3LongCode_fForward_x5fTraffic_x5fChannel",
	"StdForm");
create_item ("CDMA2K_SR3LongCode","Long Code Generator for Spreading Rate 3",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_SR3LongCode",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_SR3LongCode",
	SPDesignAnnotFmt,
	"SYM_CDMA2K_SR3LongCode",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("ChannelType","type of channel",
		PARM_INT,
		"_nCDMA2K_x5fSR3LongCode_fChannelTypeSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fSR3LongCode_fAccess_x5fChannel","Access_Channel")),
	create_parm ("CodeChannelIndex","code channel index",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("ACN","access channel number",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("PCN","paging channel number",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("BASE_ID","base station identification",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("PILOT_PN","pilot PN code offset index for the forward channel",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("ESN1","first 16-bit electronic serial number",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("ESN2","last 16-bit electronic serial number",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("EACN","enhanced access channel number",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("FCCCN","forward common control channel number",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("RCCCN","reverse common control channel number",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("SLOT_OFFSET","slot offset for enhanced access channel",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("BCN","broadcast channel number",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("CPCCN","common power control channel number",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("CACN","common assignment channel number",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")));
library_group("cdma2000, Transmission","cdma2000, Transmission","CDMA2K_SR3LongCode");
palette_group("cdma2000, Transmission","cdma2000, Transmission","CDMA2K_SR3LongCode");

create_constant_form ("_nCDMA2K_x5fRevSIREstimate_fSR1", 
	"SR1",
	0,
	"1",
	"SR1");
create_constant_form ("_nCDMA2K_x5fRevSIREstimate_fSR3", 
	"SR3",
	0,
	"3",
	"SR3");
create_form_set("_nCDMA2K_x5fRevSIREstimate_fSpreadRateSet",
	"_nCDMA2K_x5fRevSIREstimate_fSR1",
	"_nCDMA2K_x5fRevSIREstimate_fSR3",
	"StdForm");
create_item ("CDMA2K_RevSIREstimate","SIR Estimator for Reverse Link",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_RevSIREstimate",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_RevSIREstimate",
	SPDesignAnnotFmt,
	"SYM_CDMA2K_RevSIREstimate",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SpreadRate","PN chip rate, multiple of 1.2288 Mcps",
		PARM_INT,
		"_nCDMA2K_x5fRevSIREstimate_fSpreadRateSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fRevSIREstimate_fSR1","SR1")),
	create_parm ("WalshLength","length of Walsh code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")));
library_group("cdma2000, Transmission","cdma2000, Transmission","CDMA2K_RevSIREstimate");
palette_group("cdma2000, Transmission","cdma2000, Transmission","CDMA2K_RevSIREstimate");

create_constant_form ("_nCDMA2K_x5fRevRake_fSR1", 
	"SR1",
	0,
	"1",
	"SR1");
create_constant_form ("_nCDMA2K_x5fRevRake_fSR3", 
	"SR3",
	0,
	"3",
	"SR3");
create_form_set("_nCDMA2K_x5fRevRake_fSpreadRateSet",
	"_nCDMA2K_x5fRevRake_fSR1",
	"_nCDMA2K_x5fRevRake_fSR3",
	"StdForm");
create_item ("CDMA2K_RevRake","Reverse Rake Receiver",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_RevRake",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_RevRake",
	SPDesignAnnotFmt,
	"SYM_CDMA2K_RevRake",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SpreadRate","PN chip rate, multiple of 1.2288 Mcps",
		PARM_INT,
		"_nCDMA2K_x5fRevRake_fSpreadRateSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fRevRake_fSR1","SR1")),
	create_parm ("TrafficWalshLen","Walsh code length for traffic channel",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")),
	create_parm ("FrameLength","frame length of output complex signals",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","384")),
	create_parm ("FingerNum","number of fingers in Rake receiver",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")));
library_group("cdma2000, Receivers","cdma2000, Receivers","CDMA2K_RevRake");
palette_group("cdma2000, Receivers","cdma2000, Receivers","CDMA2K_RevRake");

create_constant_form ("_nCDMA2K_x5fRevHPSK_fSR1_x5fI_x5fphase", 
	"SR1 I phase",
	0,
	"0",
	"SR1 I phase");
create_constant_form ("_nCDMA2K_x5fRevHPSK_fSR3_x5fI_x5fphase", 
	"SR3 I phase",
	0,
	"2",
	"SR3 I phase");
create_form_set("_nCDMA2K_x5fRevHPSK_fI_x5fPhaseCodeTypeSet",
	"_nCDMA2K_x5fRevHPSK_fSR1_x5fI_x5fphase",
	"_nCDMA2K_x5fRevHPSK_fSR3_x5fI_x5fphase",
	"StdForm");
create_constant_form ("_nCDMA2K_x5fRevHPSK_fSR1_x5fQ_x5fphase", 
	"SR1 Q phase",
	0,
	"1",
	"SR1 Q phase");
create_constant_form ("_nCDMA2K_x5fRevHPSK_fSR3_x5fQ_x5fphase", 
	"SR3 Q phase",
	0,
	"3",
	"SR3 Q phase");
create_form_set("_nCDMA2K_x5fRevHPSK_fQ_x5fPhaseCodeTypeSet",
	"_nCDMA2K_x5fRevHPSK_fSR1_x5fQ_x5fphase",
	"_nCDMA2K_x5fRevHPSK_fSR3_x5fQ_x5fphase",
	"StdForm");
create_constant_form ("_nCDMA2K_x5fRevHPSK_fSine", 
	"Sine",
	0,
	"0",
	"Sine");
create_constant_form ("_nCDMA2K_x5fRevHPSK_fMinus_x5fSine", 
	"Minus Sine",
	0,
	"1",
	"Minus Sine");
create_form_set("_nCDMA2K_x5fRevHPSK_fQ_x5fPhaseSet",
	"_nCDMA2K_x5fRevHPSK_fSine",
	"_nCDMA2K_x5fRevHPSK_fMinus_x5fSine",
	"StdForm");
create_item ("CDMA2K_RevHPSK","HPSK Modulation for Mobile Station Channels",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_RevHPSK",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_RevHPSK",
	SPDesignAnnotFmt,
	"SYM_CDMA2K_RevHPSK",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PN_Offset","offset of PN code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("I_PhaseCodeType","type of I-phase PN code",
		PARM_INT,
		"_nCDMA2K_x5fRevHPSK_fI_x5fPhaseCodeTypeSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fRevHPSK_fSR1_x5fI_x5fphase","SR1_I_phase")),
	create_parm ("Q_PhaseCodeType","type of Q-phase PN code",
		PARM_INT,
		"_nCDMA2K_x5fRevHPSK_fQ_x5fPhaseCodeTypeSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fRevHPSK_fSR1_x5fQ_x5fphase","SR1_Q_phase")),
	create_parm ("Q_Phase","sign of sine",
		PARM_INT,
		"_nCDMA2K_x5fRevHPSK_fQ_x5fPhaseSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fRevHPSK_fMinus_x5fSine","Minus_Sine")));
library_group("cdma2000, Transmission","cdma2000, Transmission","CDMA2K_RevHPSK");
palette_group("cdma2000, Transmission","cdma2000, Transmission","CDMA2K_RevHPSK");

create_constant_form ("_nCDMA2K_x5fRevDeHPSK_fSR1_x5fI_x5fphase", 
	"SR1 I phase",
	0,
	"0",
	"SR1 I phase");
create_constant_form ("_nCDMA2K_x5fRevDeHPSK_fSR3_x5fI_x5fphase", 
	"SR3 I phase",
	0,
	"2",
	"SR3 I phase");
create_form_set("_nCDMA2K_x5fRevDeHPSK_fI_x5fPhaseCodeTypeSet",
	"_nCDMA2K_x5fRevDeHPSK_fSR1_x5fI_x5fphase",
	"_nCDMA2K_x5fRevDeHPSK_fSR3_x5fI_x5fphase",
	"StdForm");
create_constant_form ("_nCDMA2K_x5fRevDeHPSK_fSR1_x5fQ_x5fphase", 
	"SR1 Q phase",
	0,
	"1",
	"SR1 Q phase");
create_constant_form ("_nCDMA2K_x5fRevDeHPSK_fSR3_x5fQ_x5fphase", 
	"SR3 Q phase",
	0,
	"3",
	"SR3 Q phase");
create_form_set("_nCDMA2K_x5fRevDeHPSK_fQ_x5fPhaseCodeTypeSet",
	"_nCDMA2K_x5fRevDeHPSK_fSR1_x5fQ_x5fphase",
	"_nCDMA2K_x5fRevDeHPSK_fSR3_x5fQ_x5fphase",
	"StdForm");
create_constant_form ("_nCDMA2K_x5fRevDeHPSK_fSine", 
	"Sine",
	0,
	"0",
	"Sine");
create_constant_form ("_nCDMA2K_x5fRevDeHPSK_fMinus_x5fSine", 
	"Minus Sine",
	0,
	"1",
	"Minus Sine");
create_form_set("_nCDMA2K_x5fRevDeHPSK_fQ_x5fPhaseSet",
	"_nCDMA2K_x5fRevDeHPSK_fSine",
	"_nCDMA2K_x5fRevDeHPSK_fMinus_x5fSine",
	"StdForm");
create_item ("CDMA2K_RevDeHPSK","HPSK demodulation for reverse link",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_RevDeHPSK",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_RevDeHPSK",
	SPDesignAnnotFmt,
	"SYM_CDMA2K_RevDeHPSK",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PN_Offset","offset of PN code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("TransDelay","used to delay long PN code to compensate filter delay",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")),
	create_parm ("I_PhaseCodeType","type of I-phase PN code",
		PARM_INT,
		"_nCDMA2K_x5fRevDeHPSK_fI_x5fPhaseCodeTypeSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fRevDeHPSK_fSR1_x5fI_x5fphase","SR1_I_phase")),
	create_parm ("Q_PhaseCodeType","type of Q-phase PN code",
		PARM_INT,
		"_nCDMA2K_x5fRevDeHPSK_fQ_x5fPhaseCodeTypeSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fRevDeHPSK_fSR1_x5fQ_x5fphase","SR1_Q_phase")),
	create_parm ("Q_Phase","sign of sine",
		PARM_INT,
		"_nCDMA2K_x5fRevDeHPSK_fQ_x5fPhaseSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fRevDeHPSK_fMinus_x5fSine","Minus_Sine")));
library_group("cdma2000, Receivers","cdma2000, Receivers","CDMA2K_RevDeHPSK");
palette_group("cdma2000, Receivers","cdma2000, Receivers","CDMA2K_RevDeHPSK");

create_item ("CDMA2K_PhaseDetector","Phase Detector",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_PhaseDetector",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_PhaseDetector",
	SPDesignAnnotFmt,
	"SYM_CDMA2K_PhaseDetector",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("cdma2000, Receivers","cdma2000, Receivers","CDMA2K_PhaseDetector");
palette_group("cdma2000, Receivers","cdma2000, Receivers","CDMA2K_PhaseDetector");

create_constant_form ("_nCDMA2K_x5fOnewayRevRC1_x5f2_fRev_x5fRC1", 
	"Rev RC1",
	0,
	"9",
	"Rev RC1");
create_constant_form ("_nCDMA2K_x5fOnewayRevRC1_x5f2_fRev_x5fRC2", 
	"Rev RC2",
	0,
	"10",
	"Rev RC2");
create_form_set("_nCDMA2K_x5fOnewayRevRC1_x5f2_fRadioConfigSet",
	"_nCDMA2K_x5fOnewayRevRC1_x5f2_fRev_x5fRC1",
	"_nCDMA2K_x5fOnewayRevRC1_x5f2_fRev_x5fRC2",
	"StdForm");
create_constant_form ("_nCDMA2K_x5fOnewayRevRC1_x5f2_fFull_x5fRate", 
	"Full Rate",
	0,
	"0",
	"Full Rate");
create_constant_form ("_nCDMA2K_x5fOnewayRevRC1_x5f2_fHalf_x5fRate", 
	"Half Rate",
	0,
	"1",
	"Half Rate");
create_constant_form ("_nCDMA2K_x5fOnewayRevRC1_x5f2_fRate1_x5f4", 
	"Rate1_4",
	0,
	"2",
	"Rate1_4");
create_constant_form ("_nCDMA2K_x5fOnewayRevRC1_x5f2_fRate1_x5f8", 
	"Rate1_8",
	0,
	"3",
	"Rate1_8");
create_form_set("_nCDMA2K_x5fOnewayRevRC1_x5f2_fDataRateSet",
	"_nCDMA2K_x5fOnewayRevRC1_x5f2_fFull_x5fRate",
	"_nCDMA2K_x5fOnewayRevRC1_x5f2_fHalf_x5fRate",
	"_nCDMA2K_x5fOnewayRevRC1_x5f2_fRate1_x5f4",
	"_nCDMA2K_x5fOnewayRevRC1_x5f2_fRate1_x5f8",
	"StdForm");
create_item ("CDMA2K_OnewayRevRC1_2","One Way Decoder for Blind Decoder in Reverse Link RC1, RC2",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_OnewayRevRC1_2",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_OnewayRevRC1_2",
	SPDesignAnnotFmt,
	"SYM_CDMA2K_OnewayRevRC1_2",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("RadioConfig","radio configuration",
		PARM_INT,
		"_nCDMA2K_x5fOnewayRevRC1_x5f2_fRadioConfigSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fOnewayRevRC1_x5f2_fRev_x5fRC1","Rev_RC1")),
	create_parm ("DataRate","data rate",
		PARM_INT,
		"_nCDMA2K_x5fOnewayRevRC1_x5f2_fDataRateSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fOnewayRevRC1_x5f2_fFull_x5fRate","Full_Rate")));
library_group("cdma2000, Channel Coding","cdma2000, Channel Coding","CDMA2K_OnewayRevRC1_2");
palette_group("cdma2000, Channel Coding","cdma2000, Channel Coding","CDMA2K_OnewayRevRC1_2");

create_constant_form ("_nCDMA2K_x5fOneWay_fFwd_x5fRC1", 
	"Fwd RC1",
	0,
	"0",
	"Fwd RC1");
create_constant_form ("_nCDMA2K_x5fOneWay_fFwd_x5fRC2", 
	"Fwd RC2",
	0,
	"1",
	"Fwd RC2");
create_constant_form ("_nCDMA2K_x5fOneWay_fFwd_x5fRC3", 
	"Fwd RC3",
	0,
	"2",
	"Fwd RC3");
create_constant_form ("_nCDMA2K_x5fOneWay_fFwd_x5fRC4", 
	"Fwd RC4",
	0,
	"3",
	"Fwd RC4");
create_constant_form ("_nCDMA2K_x5fOneWay_fFwd_x5fRC5", 
	"Fwd RC5",
	0,
	"4",
	"Fwd RC5");
create_constant_form ("_nCDMA2K_x5fOneWay_fFwd_x5fRC6", 
	"Fwd RC6",
	0,
	"5",
	"Fwd RC6");
create_constant_form ("_nCDMA2K_x5fOneWay_fFwd_x5fRC7", 
	"Fwd RC7",
	0,
	"6",
	"Fwd RC7");
create_constant_form ("_nCDMA2K_x5fOneWay_fFwd_x5fRC8", 
	"Fwd RC8",
	0,
	"7",
	"Fwd RC8");
create_constant_form ("_nCDMA2K_x5fOneWay_fFwd_x5fRC9", 
	"Fwd RC9",
	0,
	"8",
	"Fwd RC9");
create_constant_form ("_nCDMA2K_x5fOneWay_fRev_x5fRC3", 
	"Rev RC3",
	0,
	"11",
	"Rev RC3");
create_constant_form ("_nCDMA2K_x5fOneWay_fRev_x5fRC4", 
	"Rev RC4",
	0,
	"12",
	"Rev RC4");
create_constant_form ("_nCDMA2K_x5fOneWay_fRev_x5fRC5", 
	"Rev RC5",
	0,
	"13",
	"Rev RC5");
create_constant_form ("_nCDMA2K_x5fOneWay_fRev_x5fRC6", 
	"Rev RC6",
	0,
	"14",
	"Rev RC6");
create_form_set("_nCDMA2K_x5fOneWay_fRadioConfigSet",
	"_nCDMA2K_x5fOneWay_fFwd_x5fRC1",
	"_nCDMA2K_x5fOneWay_fFwd_x5fRC2",
	"_nCDMA2K_x5fOneWay_fFwd_x5fRC3",
	"_nCDMA2K_x5fOneWay_fFwd_x5fRC4",
	"_nCDMA2K_x5fOneWay_fFwd_x5fRC5",
	"_nCDMA2K_x5fOneWay_fFwd_x5fRC6",
	"_nCDMA2K_x5fOneWay_fFwd_x5fRC7",
	"_nCDMA2K_x5fOneWay_fFwd_x5fRC8",
	"_nCDMA2K_x5fOneWay_fFwd_x5fRC9",
	"_nCDMA2K_x5fOneWay_fRev_x5fRC3",
	"_nCDMA2K_x5fOneWay_fRev_x5fRC4",
	"_nCDMA2K_x5fOneWay_fRev_x5fRC5",
	"_nCDMA2K_x5fOneWay_fRev_x5fRC6",
	"StdForm");
create_constant_form ("_nCDMA2K_x5fOneWay_fFull_x5fRate", 
	"Full Rate",
	0,
	"0",
	"Full Rate");
create_constant_form ("_nCDMA2K_x5fOneWay_fHalf_x5fRate", 
	"Half Rate",
	0,
	"1",
	"Half Rate");
create_constant_form ("_nCDMA2K_x5fOneWay_fRate1_x5f4", 
	"Rate1-4",
	0,
	"2",
	"Rate1-4");
create_constant_form ("_nCDMA2K_x5fOneWay_fRate1_x5f8", 
	"Rate1-8",
	0,
	"3",
	"Rate1-8");
create_form_set("_nCDMA2K_x5fOneWay_fDataRateSet",
	"_nCDMA2K_x5fOneWay_fFull_x5fRate",
	"_nCDMA2K_x5fOneWay_fHalf_x5fRate",
	"_nCDMA2K_x5fOneWay_fRate1_x5f4",
	"_nCDMA2K_x5fOneWay_fRate1_x5f8",
	"StdForm");
create_item ("CDMA2K_OneWay","One Way Decoder with Constant Rate for Blind Detection",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_OneWay",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_OneWay",
	SPDesignAnnotFmt,
	"SYM_CDMA2K_OneWay",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("RadioConfig","radio configuration",
		PARM_INT,
		"_nCDMA2K_x5fOneWay_fRadioConfigSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fOneWay_fFwd_x5fRC1","Fwd_RC1")),
	create_parm ("DataRate","data rate",
		PARM_INT,
		"_nCDMA2K_x5fOneWay_fDataRateSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fOneWay_fFull_x5fRate","Full_Rate")));
library_group("cdma2000, Channel Coding","cdma2000, Channel Coding","CDMA2K_OneWay");
palette_group("cdma2000, Channel Coding","cdma2000, Channel Coding","CDMA2K_OneWay");

create_item ("CDMA2K_MCMode_Intlvr","Multi_Carrier Mode Interleaver",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_MCMode_Intlvr",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_MCMode_Intlvr",
	SPDesignAnnotFmt,
	"SYM_CDMA2K_MCMode_Intlvr",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("m","interleaver parameter 2m*J = (1/3) input block size",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("J","interleaver parameter 2m*J = (1/3) input block size",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")));
library_group("cdma2000, Channel Coding","cdma2000, Channel Coding","CDMA2K_MCMode_Intlvr");
palette_group("cdma2000, Channel Coding","cdma2000, Channel Coding","CDMA2K_MCMode_Intlvr");

create_item ("CDMA2K_MCMode_DeIntlvr","Multi_Carrier Mode De-Interleaver",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_MCMode_DeIntlvr",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_MCMode_DeIntlvr",
	SPDesignAnnotFmt,
	"SYM_CDMA2K_MCMode_DeIntlvr",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("m","interleaver parameter 2<sup>m</sup>*J = (1/3) input block size",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("J","interleaver parameter 2<sup>m</sup>*J = (1/3) input block size",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")));
library_group("cdma2000, Channel Coding","cdma2000, Channel Coding","CDMA2K_MCMode_DeIntlvr");
palette_group("cdma2000, Channel Coding","cdma2000, Channel Coding","CDMA2K_MCMode_DeIntlvr");

create_constant_form ("_nCDMA2K_x5fFwdSIREstimate_fSR1", 
	"SR1",
	0,
	"1",
	"SR1");
create_constant_form ("_nCDMA2K_x5fFwdSIREstimate_fSR3", 
	"SR3",
	0,
	"3",
	"SR3");
create_form_set("_nCDMA2K_x5fFwdSIREstimate_fSpreadRateSet",
	"_nCDMA2K_x5fFwdSIREstimate_fSR1",
	"_nCDMA2K_x5fFwdSIREstimate_fSR3",
	"StdForm");
create_item ("CDMA2K_FwdSIREstimate","SIR Estimator for Forward Link",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_FwdSIREstimate",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_FwdSIREstimate",
	SPDesignAnnotFmt,
	"SYM_CDMA2K_FwdSIREstimate",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SpreadRate","PN chip rate, multiple of 1.2288 Mcps",
		PARM_INT,
		"_nCDMA2K_x5fFwdSIREstimate_fSpreadRateSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fFwdSIREstimate_fSR1","SR1")),
	create_parm ("WalshLength","length of Walsh code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","64")),
	create_parm ("PilotGain","pilot gain",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1.0")));
library_group("cdma2000, Transmission","cdma2000, Transmission","CDMA2K_FwdSIREstimate");
palette_group("cdma2000, Transmission","cdma2000, Transmission","CDMA2K_FwdSIREstimate");

create_constant_form ("_nCDMA2K_x5fFwdRake_fSR1", 
	"SR1",
	0,
	"1",
	"SR1");
create_constant_form ("_nCDMA2K_x5fFwdRake_fSR3", 
	"SR3",
	0,
	"3",
	"SR3");
create_form_set("_nCDMA2K_x5fFwdRake_fSpreadRateSet",
	"_nCDMA2K_x5fFwdRake_fSR1",
	"_nCDMA2K_x5fFwdRake_fSR3",
	"StdForm");
create_item ("CDMA2K_FwdRake","Forward Rake Receiver",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_FwdRake",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_FwdRake",
	SPDesignAnnotFmt,
	"SYM_CDMA2K_FwdRake",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SpreadRate","PN chip rate, multiple of 1.2288 Mcps",
		PARM_INT,
		"_nCDMA2K_x5fFwdRake_fSpreadRateSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fFwdRake_fSR1","SR1")),
	create_parm ("PilotWalshLen","Walsh code length for pilot channel (longer than traffic channel))",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","128")),
	create_parm ("TrafficWalshLen","Walsh code length for traffic channel",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","64")),
	create_parm ("FrameLength","frame length of output complex signals",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","192")),
	create_parm ("FingerNum","number of fingers in Rake receiver",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")));
library_group("cdma2000, Receivers","cdma2000, Receivers","CDMA2K_FwdRake");
palette_group("cdma2000, Receivers","cdma2000, Receivers","CDMA2K_FwdRake");

create_constant_form ("_nCDMA2K_x5fFwdQPSK_fSR1_x5fI_x5fphase", 
	"SR1 I phase",
	0,
	"0",
	"SR1 I phase");
create_constant_form ("_nCDMA2K_x5fFwdQPSK_fSR3_x5fI_x5fphase", 
	"SR3 I phase",
	0,
	"2",
	"SR3 I phase");
create_form_set("_nCDMA2K_x5fFwdQPSK_fI_x5fPhaseCodeTypeSet",
	"_nCDMA2K_x5fFwdQPSK_fSR1_x5fI_x5fphase",
	"_nCDMA2K_x5fFwdQPSK_fSR3_x5fI_x5fphase",
	"StdForm");
create_constant_form ("_nCDMA2K_x5fFwdQPSK_fSR1_x5fQ_x5fphase", 
	"SR1 Q phase",
	0,
	"1",
	"SR1 Q phase");
create_constant_form ("_nCDMA2K_x5fFwdQPSK_fSR3_x5fQ_x5fphase", 
	"SR3 Q phase",
	0,
	"3",
	"SR3 Q phase");
create_form_set("_nCDMA2K_x5fFwdQPSK_fQ_x5fPhaseCodeTypeSet",
	"_nCDMA2K_x5fFwdQPSK_fSR1_x5fQ_x5fphase",
	"_nCDMA2K_x5fFwdQPSK_fSR3_x5fQ_x5fphase",
	"StdForm");
create_constant_form ("_nCDMA2K_x5fFwdQPSK_fSine", 
	"Sine",
	0,
	"0",
	"Sine");
create_constant_form ("_nCDMA2K_x5fFwdQPSK_fMinus_x5fSine", 
	"Minus Sine",
	0,
	"1",
	"Minus Sine");
create_form_set("_nCDMA2K_x5fFwdQPSK_fQ_x5fPhaseSet",
	"_nCDMA2K_x5fFwdQPSK_fSine",
	"_nCDMA2K_x5fFwdQPSK_fMinus_x5fSine",
	"StdForm");
create_item ("CDMA2K_FwdQPSK","QPSK Modulator for Base Station Channels",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_FwdQPSK",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_FwdQPSK",
	SPDesignAnnotFmt,
	"SYM_CDMA2K_FwdQPSK",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PN_Offset","offset of PN code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("I_PhaseCodeType","type of I-phase PN code",
		PARM_INT,
		"_nCDMA2K_x5fFwdQPSK_fI_x5fPhaseCodeTypeSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fFwdQPSK_fSR1_x5fI_x5fphase","SR1_I_phase")),
	create_parm ("Q_PhaseCodeType","type of Q-phase PN code",
		PARM_INT,
		"_nCDMA2K_x5fFwdQPSK_fQ_x5fPhaseCodeTypeSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fFwdQPSK_fSR1_x5fQ_x5fphase","SR1_Q_phase")),
	create_parm ("Q_Phase","sign of sine",
		PARM_INT,
		"_nCDMA2K_x5fFwdQPSK_fQ_x5fPhaseSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fFwdQPSK_fMinus_x5fSine","Minus_Sine")));
library_group("cdma2000, Transmission","cdma2000, Transmission","CDMA2K_FwdQPSK");
palette_group("cdma2000, Transmission","cdma2000, Transmission","CDMA2K_FwdQPSK");

create_item ("CDMA2K_FlatSpec","Flat Spectrum Generator",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_FlatSpec",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_FlatSpec",
	SPDesignAnnotFmt,
	"SYM_CDMA2K_FlatSpec",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("cdma2000, Channel","cdma2000, Channel","CDMA2K_FlatSpec");
palette_group("cdma2000, Channel","cdma2000, Channel","CDMA2K_FlatSpec");

create_item ("CDMA2K_FlatChannel","Multi-Path Fading Channel with Flat Spectrum",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_FlatChannel",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_FlatChannel",
	SPDesignAnnotFmt,
	"SYM_CDMA2K_FlatChannel",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SamplingRate","sampling rate",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4915200")),
	create_parm ("Dpath2","time delay of second tap relative to the first tap",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","310n")),
	create_parm ("Dpath3","time delay of third tap relative to the first tap",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","710n")),
	create_parm ("Dpath4","time delay of fourth tap relative to the first tap",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","1090n")),
	create_parm ("Dpath5","time delay of fifth tap relative to the first tap",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","1730n")),
	create_parm ("Dpath6","time delay of sixth tap relative to the first tap",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","2510n")),
	create_parm ("Gpath1_dB","average power of first tap relative to the strongest tap in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("Gpath2_dB","average power of second tap relative to the strongest tap in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-1.0")),
	create_parm ("Gpath3_dB","average power of third tap relative to the strongest tap in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-9.0")),
	create_parm ("Gpath4_dB","average power of fourth tap relative to the strongest tap in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-10.0")),
	create_parm ("Gpath5_dB","average power of fifth tap relative to the strongest tap in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-15.0")),
	create_parm ("Gpath6_dB","average power of sixth tap relative to the strongest tap in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-20.0")),
	create_parm ("Velocity","velocity of mobile station, km/hour",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","120")),
	create_parm ("CarrierFrequency","carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","825M")));
library_group("cdma2000, Channel","cdma2000, Channel","CDMA2K_FlatChannel");
palette_group("cdma2000, Channel","cdma2000, Channel","CDMA2K_FlatChannel");

create_item ("CDMA2K_ClassicSpec","Classic Spectrum Generator",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_ClassicSpec",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_ClassicSpec",
	SPDesignAnnotFmt,
	"SYM_CDMA2K_ClassicSpec",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("cdma2000, Channel","cdma2000, Channel","CDMA2K_ClassicSpec");
palette_group("cdma2000, Channel","cdma2000, Channel","CDMA2K_ClassicSpec");

create_item ("CDMA2K_ClassicChannel","Multi-Path Fading Channel with Classic Spectrum",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_ClassicChannel",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_ClassicChannel",
	SPDesignAnnotFmt,
	"SYM_CDMA2K_ClassicChannel",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SamplingRate","sampling rate",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4915200")),
	create_parm ("Dpath2","time delay of second tap relative to the first tap",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","310n")),
	create_parm ("Dpath3","time delay of third tap relative to the first tap",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","710n")),
	create_parm ("Dpath4","time delay of fourth tap relative to the first tap",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","1090n")),
	create_parm ("Dpath5","time delay of fifth tap relative to the first tap",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","1730n")),
	create_parm ("Dpath6","time delay of sixth tap relative to the first tap",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","2510n")),
	create_parm ("Gpath1_dB","average power of first tap relative to the strongest tap in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("Gpath2_dB","average power of second tap relative to the strongest tap in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-1.0")),
	create_parm ("Gpath3_dB","average power of third tap relative to the strongest tap in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-9.0")),
	create_parm ("Gpath4_dB","average power of fourth tap relative to the strongest tap in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-10.0")),
	create_parm ("Gpath5_dB","average power of fifth tap relative to the strongest tap in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-15.0")),
	create_parm ("Gpath6_dB","average power of sixth tap relative to the strongest tap in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-20.0")),
	create_parm ("Velocity","velocity of mobile station,km/hour",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","120")),
	create_parm ("CarrierFrequency","carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","825M")));
library_group("cdma2000, Channel","cdma2000, Channel","CDMA2K_ClassicChannel");
palette_group("cdma2000, Channel","cdma2000, Channel","CDMA2K_ClassicChannel");

create_constant_form ("_nCDMA2K_x5fCarrierFreqEstimate_fForward_x5flink", 
	"Forward link",
	0,
	"0",
	"Forward link");
create_constant_form ("_nCDMA2K_x5fCarrierFreqEstimate_fReverse_x5flink", 
	"Reverse link",
	0,
	"1",
	"Reverse link");
create_form_set("_nCDMA2K_x5fCarrierFreqEstimate_fLinkSet",
	"_nCDMA2K_x5fCarrierFreqEstimate_fForward_x5flink",
	"_nCDMA2K_x5fCarrierFreqEstimate_fReverse_x5flink",
	"StdForm");
create_constant_form ("_nCDMA2K_x5fCarrierFreqEstimate_fPD3200", 
	"PD3200",
	0,
	"0",
	"PD3200");
create_constant_form ("_nCDMA2K_x5fCarrierFreqEstimate_fPD6400", 
	"PD6400",
	0,
	"1",
	"PD6400");
create_constant_form ("_nCDMA2K_x5fCarrierFreqEstimate_fPD9600", 
	"PD9600",
	0,
	"2",
	"PD9600");
create_constant_form ("_nCDMA2K_x5fCarrierFreqEstimate_fPD12800", 
	"PD12800",
	0,
	"3",
	"PD12800");
create_form_set("_nCDMA2K_x5fCarrierFreqEstimate_fPhaseDetectRateSet",
	"_nCDMA2K_x5fCarrierFreqEstimate_fPD3200",
	"_nCDMA2K_x5fCarrierFreqEstimate_fPD6400",
	"_nCDMA2K_x5fCarrierFreqEstimate_fPD9600",
	"_nCDMA2K_x5fCarrierFreqEstimate_fPD12800",
	"StdForm");
create_constant_form ("_nCDMA2K_x5fCarrierFreqEstimate_fSR1", 
	"SR1",
	0,
	"1",
	"SR1");
create_constant_form ("_nCDMA2K_x5fCarrierFreqEstimate_fSR3", 
	"SR3",
	0,
	"3",
	"SR3");
create_form_set("_nCDMA2K_x5fCarrierFreqEstimate_fSpreadRateSet",
	"_nCDMA2K_x5fCarrierFreqEstimate_fSR1",
	"_nCDMA2K_x5fCarrierFreqEstimate_fSR3",
	"StdForm");
create_item ("CDMA2K_CarrierFreqEstimate","Phase Estimator for Carrier Frequency",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_CarrierFreqEstimate",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_CarrierFreqEstimate",
	SPDesignAnnotFmt,
	"SYM_CDMA2K_CarrierFreqEstimate",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Link","type of link",
		PARM_INT,
		"_nCDMA2K_x5fCarrierFreqEstimate_fLinkSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fCarrierFreqEstimate_fForward_x5flink","Forward_link")),
	create_parm ("PhaseDetectRate","phase detection rate",
		PARM_INT,
		"_nCDMA2K_x5fCarrierFreqEstimate_fPhaseDetectRateSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fCarrierFreqEstimate_fPD3200","PD3200")),
	create_parm ("SpreadRate","PN chip rate, multiple of 1.2288Mcps",
		PARM_INT,
		"_nCDMA2K_x5fCarrierFreqEstimate_fSpreadRateSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fCarrierFreqEstimate_fSR1","SR1")),
	create_parm ("SampleRate","number of samples per chip",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("G1","parameter to determine first lowpass filter gain",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.00036")),
	create_parm ("G2","parameter to determine second lowpass filter gain",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.000025")),
	create_parm ("EstimateWindow","window size for estimating channel coefficients in terms of symbol (used when Link=Forward link)",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","6")),
	create_parm ("WalshLength","Walsh code length  used for spreading (used when Link=Forward link)",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","64")));
library_group("cdma2000, Receivers","cdma2000, Receivers","CDMA2K_CarrierFreqEstimate");
palette_group("cdma2000, Receivers","cdma2000, Receivers","CDMA2K_CarrierFreqEstimate");

create_constant_form ("_nCDMA2K_x5fBlindRevRC1_x5f2_fRev_x5fRC1", 
	"Rev RC1",
	0,
	"9",
	"Rev RC1");
create_constant_form ("_nCDMA2K_x5fBlindRevRC1_x5f2_fRev_x5fRC2", 
	"Rev RC2",
	0,
	"10",
	"Rev RC2");
create_form_set("_nCDMA2K_x5fBlindRevRC1_x5f2_fRadioConfigSet",
	"_nCDMA2K_x5fBlindRevRC1_x5f2_fRev_x5fRC1",
	"_nCDMA2K_x5fBlindRevRC1_x5f2_fRev_x5fRC2",
	"StdForm");
create_item ("CDMA2K_BlindRevRC1_2","Blind Decoder for Reverse Link RC1 or RC2",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_BlindRevRC1_2",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_BlindRevRC1_2",
	SPDesignAnnotFmt,
	"SYM_CDMA2K_BlindRevRC1_2",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("RadioConfig","radio configuration",
		PARM_INT,
		"_nCDMA2K_x5fBlindRevRC1_x5f2_fRadioConfigSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fBlindRevRC1_x5f2_fRev_x5fRC1","Rev_RC1")));
library_group("cdma2000, Channel Coding","cdma2000, Channel Coding","CDMA2K_BlindRevRC1_2");
palette_group("cdma2000, Channel Coding","cdma2000, Channel Coding","CDMA2K_BlindRevRC1_2");

create_constant_form ("_nCDMA2K_x5fBlindDecoder_fFwd_x5fRC1", 
	"Fwd RC1",
	0,
	"0",
	"Fwd RC1");
create_constant_form ("_nCDMA2K_x5fBlindDecoder_fFwd_x5fRC2", 
	"Fwd RC2",
	0,
	"1",
	"Fwd RC2");
create_constant_form ("_nCDMA2K_x5fBlindDecoder_fFwd_x5fRC3", 
	"Fwd RC3",
	0,
	"2",
	"Fwd RC3");
create_constant_form ("_nCDMA2K_x5fBlindDecoder_fFwd_x5fRC4", 
	"Fwd RC4",
	0,
	"3",
	"Fwd RC4");
create_constant_form ("_nCDMA2K_x5fBlindDecoder_fFwd_x5fRC5", 
	"Fwd RC5",
	0,
	"4",
	"Fwd RC5");
create_constant_form ("_nCDMA2K_x5fBlindDecoder_fFwd_x5fRC6", 
	"Fwd RC6",
	0,
	"5",
	"Fwd RC6");
create_constant_form ("_nCDMA2K_x5fBlindDecoder_fFwd_x5fRC7", 
	"Fwd RC7",
	0,
	"6",
	"Fwd RC7");
create_constant_form ("_nCDMA2K_x5fBlindDecoder_fFwd_x5fRC8", 
	"Fwd RC8",
	0,
	"7",
	"Fwd RC8");
create_constant_form ("_nCDMA2K_x5fBlindDecoder_fFwd_x5fRC9", 
	"Fwd RC9",
	0,
	"8",
	"Fwd RC9");
create_constant_form ("_nCDMA2K_x5fBlindDecoder_fRev_x5fRC3", 
	"Rev RC3",
	0,
	"11",
	"Rev RC3");
create_constant_form ("_nCDMA2K_x5fBlindDecoder_fRev_x5fRC4", 
	"Rev RC4",
	0,
	"12",
	"Rev RC4");
create_constant_form ("_nCDMA2K_x5fBlindDecoder_fRev_x5fRC5", 
	"Rev RC5",
	0,
	"13",
	"Rev RC5");
create_constant_form ("_nCDMA2K_x5fBlindDecoder_fRev_x5fRC6", 
	"Rev RC6",
	0,
	"14",
	"Rev RC6");
create_form_set("_nCDMA2K_x5fBlindDecoder_fRadioConfigSet",
	"_nCDMA2K_x5fBlindDecoder_fFwd_x5fRC1",
	"_nCDMA2K_x5fBlindDecoder_fFwd_x5fRC2",
	"_nCDMA2K_x5fBlindDecoder_fFwd_x5fRC3",
	"_nCDMA2K_x5fBlindDecoder_fFwd_x5fRC4",
	"_nCDMA2K_x5fBlindDecoder_fFwd_x5fRC5",
	"_nCDMA2K_x5fBlindDecoder_fFwd_x5fRC6",
	"_nCDMA2K_x5fBlindDecoder_fFwd_x5fRC7",
	"_nCDMA2K_x5fBlindDecoder_fFwd_x5fRC8",
	"_nCDMA2K_x5fBlindDecoder_fFwd_x5fRC9",
	"_nCDMA2K_x5fBlindDecoder_fRev_x5fRC3",
	"_nCDMA2K_x5fBlindDecoder_fRev_x5fRC4",
	"_nCDMA2K_x5fBlindDecoder_fRev_x5fRC5",
	"_nCDMA2K_x5fBlindDecoder_fRev_x5fRC6",
	"StdForm");
create_item ("CDMA2K_BlindDecoder","Blind Decoder with BER Comparison",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_BlindDecoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_BlindDecoder",
	SPDesignAnnotFmt,
	"SYM_CDMA2K_BlindDecoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("RadioConfig","radio configuration",
		PARM_INT,
		"_nCDMA2K_x5fBlindDecoder_fRadioConfigSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fBlindDecoder_fFwd_x5fRC1","Fwd_RC1")));
library_group("cdma2000, Channel Coding","cdma2000, Channel Coding","CDMA2K_BlindDecoder");
palette_group("cdma2000, Channel Coding","cdma2000, Channel Coding","CDMA2K_BlindDecoder");

create_constant_form ("_nCDMA2K_x5fBlindCRC_fFwd_x5fRC2", 
	"Fwd RC2",
	0,
	"1",
	"Fwd RC2");
create_constant_form ("_nCDMA2K_x5fBlindCRC_fFwd_x5fRC3", 
	"Fwd RC3",
	0,
	"2",
	"Fwd RC3");
create_constant_form ("_nCDMA2K_x5fBlindCRC_fFwd_x5fRC4", 
	"Fwd RC4",
	0,
	"3",
	"Fwd RC4");
create_constant_form ("_nCDMA2K_x5fBlindCRC_fFwd_x5fRC5", 
	"Fwd RC5",
	0,
	"4",
	"Fwd RC5");
create_constant_form ("_nCDMA2K_x5fBlindCRC_fFwd_x5fRC6", 
	"Fwd RC6",
	0,
	"5",
	"Fwd RC6");
create_constant_form ("_nCDMA2K_x5fBlindCRC_fFwd_x5fRC7", 
	"Fwd RC7",
	0,
	"6",
	"Fwd RC7");
create_constant_form ("_nCDMA2K_x5fBlindCRC_fFwd_x5fRC8", 
	"Fwd RC8",
	0,
	"7",
	"Fwd RC8");
create_constant_form ("_nCDMA2K_x5fBlindCRC_fFwd_x5fRC9", 
	"Fwd RC9",
	0,
	"8",
	"Fwd RC9");
create_constant_form ("_nCDMA2K_x5fBlindCRC_fRev_x5fRC3", 
	"Rev RC3",
	0,
	"11",
	"Rev RC3");
create_constant_form ("_nCDMA2K_x5fBlindCRC_fRev_x5fRC4", 
	"Rev RC4",
	0,
	"12",
	"Rev RC4");
create_constant_form ("_nCDMA2K_x5fBlindCRC_fRev_x5fRC5", 
	"Rev RC5",
	0,
	"13",
	"Rev RC5");
create_constant_form ("_nCDMA2K_x5fBlindCRC_fRev_x5fRC6", 
	"Rev RC6",
	0,
	"14",
	"Rev RC6");
create_form_set("_nCDMA2K_x5fBlindCRC_fRadioConfigSet",
	"_nCDMA2K_x5fBlindCRC_fFwd_x5fRC2",
	"_nCDMA2K_x5fBlindCRC_fFwd_x5fRC3",
	"_nCDMA2K_x5fBlindCRC_fFwd_x5fRC4",
	"_nCDMA2K_x5fBlindCRC_fFwd_x5fRC5",
	"_nCDMA2K_x5fBlindCRC_fFwd_x5fRC6",
	"_nCDMA2K_x5fBlindCRC_fFwd_x5fRC7",
	"_nCDMA2K_x5fBlindCRC_fFwd_x5fRC8",
	"_nCDMA2K_x5fBlindCRC_fFwd_x5fRC9",
	"_nCDMA2K_x5fBlindCRC_fRev_x5fRC3",
	"_nCDMA2K_x5fBlindCRC_fRev_x5fRC4",
	"_nCDMA2K_x5fBlindCRC_fRev_x5fRC5",
	"_nCDMA2K_x5fBlindCRC_fRev_x5fRC6",
	"StdForm");
create_item ("CDMA2K_BlindCRC","Blind Decoder with CRC Check",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_BlindCRC",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_BlindCRC",
	SPDesignAnnotFmt,
	"SYM_CDMA2K_BlindCRC",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("RadioConfig","radio configuration",
		PARM_INT,
		"_nCDMA2K_x5fBlindCRC_fRadioConfigSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fBlindCRC_fFwd_x5fRC2","Fwd_RC2")));
library_group("cdma2000, Channel Coding","cdma2000, Channel Coding","CDMA2K_BlindCRC");
palette_group("cdma2000, Channel Coding","cdma2000, Channel Coding","CDMA2K_BlindCRC");

create_constant_form ("_nCDMA2K_x5fBaseFilter_fSR1", 
	"SR1",
	0,
	"0",
	"SR1");
create_constant_form ("_nCDMA2K_x5fBaseFilter_fSR3", 
	"SR3",
	0,
	"1",
	"SR3");
create_form_set("_nCDMA2K_x5fBaseFilter_fSpreadRateSet",
	"_nCDMA2K_x5fBaseFilter_fSR1",
	"_nCDMA2K_x5fBaseFilter_fSR3",
	"StdForm");
create_item ("CDMA2K_BaseFilter","Complex FIR Baseband Filter",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_BaseFilter",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_BaseFilter",
	SPDesignAnnotFmt,
	"SYM_CDMA2K_BaseFilter",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SpreadRate","PN chip rate,multiple of 1.2288 Mcps",
		PARM_INT,
		"_nCDMA2K_x5fBaseFilter_fSpreadRateSet",
		UNITLESS_UNIT,
		prm("_nCDMA2K_x5fBaseFilter_fSR1","SR1")));
library_group("cdma2000, Transmission","cdma2000, Transmission","CDMA2K_BaseFilter");
palette_group("cdma2000, Transmission","cdma2000, Transmission","CDMA2K_BaseFilter");

create_item ("CDMA2K_BFER","BER and FER Measurement",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CDMA2K_BFER",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CDMA2K_BFER",
	SPDesignAnnotFmt,
	"SYM_CDMA2K_BFER",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("IgnoreNum","number of initially ignored firings",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("InputFrameLen","input frame length",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","172")));
library_group("cdma2000, Test","cdma2000, Test","CDMA2K_BFER");
palette_group("cdma2000, Test","cdma2000, Test","CDMA2K_BFER");

