set_design_type( sigproc_net );
create_constant_form ("_nHSPA_x5fChannel_x5fITU_fPedestrian_x5fA", 
	"Pedestrian_A",
	0,
	"0",
	"Pedestrian_A");
create_constant_form ("_nHSPA_x5fChannel_x5fITU_fPedestrian_x5fB", 
	"Pedestrian_B",
	0,
	"1",
	"Pedestrian_B");
create_constant_form ("_nHSPA_x5fChannel_x5fITU_fVehicular_x5fA", 
	"Vehicular_A",
	0,
	"2",
	"Vehicular_A");
create_constant_form ("_nHSPA_x5fChannel_x5fITU_fVehicular_x5fB", 
	"Vehicular_B",
	0,
	"3",
	"Vehicular_B");
create_constant_form ("_nHSPA_x5fChannel_x5fITU_fUserDefined", 
	"UserDefined",
	0,
	"4",
	"UserDefined");
create_form_set("_nHSPA_x5fChannel_x5fITU_fModelTypeSet",
	"_nHSPA_x5fChannel_x5fITU_fPedestrian_x5fA",
	"_nHSPA_x5fChannel_x5fITU_fPedestrian_x5fB",
	"_nHSPA_x5fChannel_x5fITU_fVehicular_x5fA",
	"_nHSPA_x5fChannel_x5fITU_fVehicular_x5fB",
	"_nHSPA_x5fChannel_x5fITU_fUserDefined",
	"StdForm");
create_constant_form ("_nHSPA_x5fChannel_x5fITU_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nHSPA_x5fChannel_x5fITU_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nHSPA_x5fChannel_x5fITU_fPathLossSet",
	"_nHSPA_x5fChannel_x5fITU_fNO",
	"_nHSPA_x5fChannel_x5fITU_fYES",
	"StdForm");
create_constant_form ("_nHSPA_x5fChannel_x5fITU_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nHSPA_x5fChannel_x5fITU_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nHSPA_x5fChannel_x5fITU_fPwrNormalSet",
	"_nHSPA_x5fChannel_x5fITU_fNO",
	"_nHSPA_x5fChannel_x5fITU_fYES",
	"StdForm");
create_item ("HSPA_Channel_ITU","ITU channel model",
	"H",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_HSPA_Channel_ITU",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"HSPA_Channel_ITU",
	SPDesignAnnotFmt,
	"SYM_DSN_HSPA_Channel_ITU",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("RIn","Input resistance",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50 Ohm")),
	create_parm ("ROut","Output resistance",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50 Ohm")),
	create_parm ("ModelType","the ITU-R M.1225 Channel number or User defined Channel",
		PARM_INT,
		"_nHSPA_x5fChannel_x5fITU_fModelTypeSet",
		UNITLESS_UNIT,
		prm("_nHSPA_x5fChannel_x5fITU_fVehicular_x5fA","Vehicular_A")),
	create_parm ("Delay","the delay of each tap in usec, effective only when ModelType is set as UserDefined",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		TIME_UNIT,
		prm("StringAndReference","{0.0 , 0.31 , 0.71 , 1.09 , 1.73 , 2.51 }")),
	create_parm ("Power","the power in each tap in dB, effective only when ModelType is set as UserDefined",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0.0 dB, -1.0 dB, -9.0 dB, -10.0 dB, -15.0 dB, -20.0 dB}")),
	create_parm ("Ricean_factor","the Ricean K-factor in linear scale of each tap, effective only when ModelType is set as UserDefined",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0.0, 0.0, 0.0, 0.0, 0.0, 0.0}")),
	create_parm ("Velocity","the velocity of mobile station",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","120")),
	create_parm ("PathLoss","option for inclusion of large-scale pathloss",
		PARM_INT,
		"_nHSPA_x5fChannel_x5fITU_fPathLossSet",
		UNITLESS_UNIT,
		prm("_nHSPA_x5fChannel_x5fITU_fNO","NO")),
	create_parm ("PropDistance","the distance of BS and UE in meter, effective only when PassLoss is set as YES",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DISTANCE_UNIT,
		prm("StdForm","1000")),
	create_parm ("PwrNormal","option for normalization of the output power",
		PARM_INT,
		"_nHSPA_x5fChannel_x5fITU_fPwrNormalSet",
		UNITLESS_UNIT,
		prm("_nHSPA_x5fChannel_x5fITU_fNO","NO")),
	create_parm ("PwrMeasPeriod","The period of power measurement in order to normalize the output power",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","1 msec")));
library_group("HSDPA, Channel","HSDPA, Channel","HSPA_Channel_ITU");
palette_group("HSDPA, Channel","HSDPA, Channel","HSPA_Channel_ITU");

create_constant_form ("_nHSDPA_x5fDL_x5fEqualizer_fNo_x5fDiversity", 
	"No_Diversity",
	0,
	"0",
	"No_Diversity");
create_constant_form ("_nHSDPA_x5fDL_x5fEqualizer_fDL_x5fSTTD", 
	"DL_STTD",
	0,
	"1",
	"STTD");
create_form_set("_nHSDPA_x5fDL_x5fEqualizer_fTXDiversitySet",
	"_nHSDPA_x5fDL_x5fEqualizer_fNo_x5fDiversity",
	"_nHSDPA_x5fDL_x5fEqualizer_fDL_x5fSTTD",
	"StdForm");
create_constant_form ("_nHSDPA_x5fDL_x5fEqualizer_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nHSDPA_x5fDL_x5fEqualizer_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nHSDPA_x5fDL_x5fEqualizer_fOutputSTTDSet",
	"_nHSDPA_x5fDL_x5fEqualizer_fNO",
	"_nHSDPA_x5fDL_x5fEqualizer_fYES",
	"StdForm");
create_constant_form ("_nHSDPA_x5fDL_x5fEqualizer_fReal", 
	"Real",
	0,
	"0",
	"Real");
create_constant_form ("_nHSDPA_x5fDL_x5fEqualizer_fIdeal", 
	"Ideal",
	0,
	"1",
	"Ideal");
create_form_set("_nHSDPA_x5fDL_x5fEqualizer_fEqualizer_x5fSelectSet",
	"_nHSDPA_x5fDL_x5fEqualizer_fReal",
	"_nHSDPA_x5fDL_x5fEqualizer_fIdeal",
	"StdForm");
create_item ("HSDPA_DL_Equalizer","HSDPA receiver type 2",
	"H",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_HSDPA_DL_Equalizer",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"HSDPA_DL_Equalizer",
	SPDesignAnnotFmt,
	"SYM_DSN_HSDPA_DL_Equalizer",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Power","RF output power",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","0.01")),
	create_parm ("TXDiversity","transmit diversity in downlink",
		PARM_INT,
		"_nHSDPA_x5fDL_x5fEqualizer_fTXDiversitySet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fDL_x5fEqualizer_fNo_x5fDiversity","No_Diversity")),
	create_parm ("SamplesPerChip","number of samples per chip",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("PathNum","number of paths or fingers for ideal channel estimation",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","6")),
	create_parm ("Est_PathNum","number of paths or fingers for real channel estimation",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","6")),
	create_parm ("MaxDelaySample","maximum path delay in terms of samples",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","40")),
	create_parm ("MaxDelaySpread","the maximal multi-paths delay spread, to decide the length of channal implus response",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","80")),
	create_parm ("ScrambleCode","Index of scramble code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("NumHSPDSCH","number of DPCHs",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","5")),
	create_parm ("HS_PDSCH_CodeOffset","Spread code offset",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("EqualizerLength","the coefficients length of the equalizer",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","64")),
	create_parm ("sigma2","the variance of the AWGN noise",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0001")),
	create_parm ("FilterLength","RRC filter length (chips)",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")),
	create_parm ("ExcessBW","Excess bandwidth of raised cosine filters",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.22")),
	create_parm ("OutputSTTD","Whether or not export STTD",
		PARM_INT,
		"_nHSDPA_x5fDL_x5fEqualizer_fOutputSTTDSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fDL_x5fEqualizer_fNO","NO")),
	create_parm ("SCH_EcToIor","SCH power gain in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","-15")),
	create_parm ("PCPICH_EcToIor","Primary CPICH power gain in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","-10.0")),
	create_parm ("Equalizer_Select","channel estimator type select",
		PARM_INT,
		"_nHSDPA_x5fDL_x5fEqualizer_fEqualizer_x5fSelectSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fDL_x5fEqualizer_fReal","Real")));
library_group("HSDPA, Receiver","HSDPA, Receiver","HSDPA_DL_Equalizer");
palette_group("HSDPA, Receiver","HSDPA, Receiver","HSDPA_DL_Equalizer");

create_item ("HSDPA_DL_Receiver_CQI","HSDPA receiver",
	"H",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_HSDPA_DL_Receiver_CQI",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"HSDPA_DL_Receiver_CQI",
	SPDesignAnnotFmt,
	"SYM_DSN_HSDPA_DL_Receiver_CQI",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("CQI","value of CQI",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("SamplesPerChip","number of samples per chip",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("PathNum","number of paths or fingers of Rake",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","6")),
	create_parm ("MaxDelaySample","maximum path delay in terms of chips",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","40")),
	create_parm ("HS_PDSCH_CodeOffset","Spread code offset of HS_PDSCH",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("TC_Iteration","Turbo code decoder iteration number",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")));
library_group("HSDPA, Receiver","HSDPA, Receiver","HSDPA_DL_Receiver_CQI");
palette_group("HSDPA, Receiver","HSDPA, Receiver","HSDPA_DL_Receiver_CQI");

create_constant_form ("_nHSDPA_x5fDL_x5fSourceRF_x5fCQI_fDL_x5fNormal", 
	"DL_Normal",
	0,
	"0",
	"Normal");
create_constant_form ("_nHSDPA_x5fDL_x5fSourceRF_x5fCQI_fDL_x5fInvert", 
	"DL_Invert",
	0,
	"1",
	"Invert");
create_form_set("_nHSDPA_x5fDL_x5fSourceRF_x5fCQI_fPhasePolaritySet",
	"_nHSDPA_x5fDL_x5fSourceRF_x5fCQI_fDL_x5fNormal",
	"_nHSDPA_x5fDL_x5fSourceRF_x5fCQI_fDL_x5fInvert",
	"StdForm");
create_item ("HSDPA_DL_SourceRF_CQI","HSDPA downlink RF signal source",
	"H",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_HSDPA_DL_SourceRF_CQI",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"HSDPA_DL_SourceRF_CQI",
	SPDesignAnnotFmt,
	"SYM_DSN_HSDPA_DL_SourceRF_CQI",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("ROut","Output resistance",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","DefaultROut")),
	create_parm ("FCarrier","Carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","2140 MHz")),
	create_parm ("PhasePolarity","If set to Invert, Q channel signal is inverted",
		PARM_INT | PARM_NO_DISPLAY,
		"_nHSDPA_x5fDL_x5fSourceRF_x5fCQI_fPhasePolaritySet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fDL_x5fSourceRF_x5fCQI_fDL_x5fNormal","DL_Normal")),
	create_parm ("GainImbalance","Gain imbalance, I to Q channel, in dB",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("PhaseImbalance","Phase imbalance, I to Q channel, in degrees",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("I_OriginOffset","I origin offset in percent with respect to output rms voltage",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("Q_OriginOffset","Q origin offset in percent with respect to output rms voltage",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("IQ_Rotation","IQ rotation in degress",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("NDensity","Additive noise density in dBm per Hz",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-10000")),
	create_parm ("Power_PCPICH","RF output power of PCPICH",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","0.01")),
	create_parm ("Power_PCCPCH","RF output power of PCCPCH",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","0.01")),
	create_parm ("Power_PSCH","RF output power of PSCH",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","0.01")),
	create_parm ("Power_SSCH","RF output power of SSCH",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","0.01")),
	create_parm ("Power_PICH","RF output power of PICH",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","0.01")),
	create_parm ("Power_PDSCH","RF output power of PDSCH",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","0.01")),
	create_parm ("Power_SCCH","RF output power of SCCH",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","0.01")),
	create_parm ("SamplesPerChip","Samples per chip",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("ExcessBW","Excess bandwidth of raised cosine filters",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.22")),
	create_parm ("RRC_FilterLength","Length of raised cosine filters in number of symbols",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")),
	create_parm ("UE_Category","UE category of HS-PDSCH",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("UEIdentity","UE identity",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0xAAAA")),
	create_parm ("HS_PDSCH_CodeOffset","Spread code offset of HS-PDSCH",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("HS_SCCH_SpreadCode","Spread code of HS-SCCH",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));
library_group("HSDPA, Signal Sources","HSDPA, Signal Sources","HSDPA_DL_SourceRF_CQI");
palette_group("HSDPA, Signal Sources","HSDPA, Signal Sources","HSDPA_DL_SourceRF_CQI");

create_constant_form ("_nHSDPA_x5fDL_x5fReceiverRF_x5fCQI_fCategory_x5f1", 
	"Category_1",
	0,
	"0",
	"Category_1");
create_constant_form ("_nHSDPA_x5fDL_x5fReceiverRF_x5fCQI_fCategory_x5f2", 
	"Category_2",
	0,
	"1",
	"Category_2");
create_constant_form ("_nHSDPA_x5fDL_x5fReceiverRF_x5fCQI_fCategory_x5f3", 
	"Category_3",
	0,
	"2",
	"Category_3");
create_constant_form ("_nHSDPA_x5fDL_x5fReceiverRF_x5fCQI_fCategory_x5f4", 
	"Category_4",
	0,
	"3",
	"Category_4");
create_constant_form ("_nHSDPA_x5fDL_x5fReceiverRF_x5fCQI_fCategory_x5f5", 
	"Category_5",
	0,
	"4",
	"Category_5");
create_constant_form ("_nHSDPA_x5fDL_x5fReceiverRF_x5fCQI_fCategory_x5f6", 
	"Category_6",
	0,
	"5",
	"Category_6");
create_constant_form ("_nHSDPA_x5fDL_x5fReceiverRF_x5fCQI_fCategory_x5f7", 
	"Category_7",
	0,
	"6",
	"Category_7");
create_constant_form ("_nHSDPA_x5fDL_x5fReceiverRF_x5fCQI_fCategory_x5f8", 
	"Category_8",
	0,
	"7",
	"Category_8");
create_constant_form ("_nHSDPA_x5fDL_x5fReceiverRF_x5fCQI_fCategory_x5f9", 
	"Category_9",
	0,
	"8",
	"Category_9");
create_constant_form ("_nHSDPA_x5fDL_x5fReceiverRF_x5fCQI_fCategory_x5f10", 
	"Category_10",
	0,
	"9",
	"Category_10");
create_constant_form ("_nHSDPA_x5fDL_x5fReceiverRF_x5fCQI_fCategory_x5f11", 
	"Category_11",
	0,
	"10",
	"Category_11");
create_constant_form ("_nHSDPA_x5fDL_x5fReceiverRF_x5fCQI_fCategory_x5f12", 
	"Category_12",
	0,
	"11",
	"Category_12");
create_form_set("_nHSDPA_x5fDL_x5fReceiverRF_x5fCQI_fUE_x5fCategorySet",
	"_nHSDPA_x5fDL_x5fReceiverRF_x5fCQI_fCategory_x5f1",
	"_nHSDPA_x5fDL_x5fReceiverRF_x5fCQI_fCategory_x5f2",
	"_nHSDPA_x5fDL_x5fReceiverRF_x5fCQI_fCategory_x5f3",
	"_nHSDPA_x5fDL_x5fReceiverRF_x5fCQI_fCategory_x5f4",
	"_nHSDPA_x5fDL_x5fReceiverRF_x5fCQI_fCategory_x5f5",
	"_nHSDPA_x5fDL_x5fReceiverRF_x5fCQI_fCategory_x5f6",
	"_nHSDPA_x5fDL_x5fReceiverRF_x5fCQI_fCategory_x5f7",
	"_nHSDPA_x5fDL_x5fReceiverRF_x5fCQI_fCategory_x5f8",
	"_nHSDPA_x5fDL_x5fReceiverRF_x5fCQI_fCategory_x5f9",
	"_nHSDPA_x5fDL_x5fReceiverRF_x5fCQI_fCategory_x5f10",
	"_nHSDPA_x5fDL_x5fReceiverRF_x5fCQI_fCategory_x5f11",
	"_nHSDPA_x5fDL_x5fReceiverRF_x5fCQI_fCategory_x5f12",
	"StdForm");
create_item ("HSDPA_DL_ReceiverRF_CQI","HSDPA downlink RF receiver",
	"H",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_HSDPA_DL_ReceiverRF_CQI",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"HSDPA_DL_ReceiverRF_CQI",
	SPDesignAnnotFmt,
	"SYM_DSN_HSDPA_DL_ReceiverRF_CQI",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("FCarrier","Carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","2140 MHz")),
	create_parm ("RIn","Input resistance",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50")),
	create_parm ("Phase","Reference phase in degrees",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		ANGLE_UNIT,
		prm("StdForm","0.0")),
	create_parm ("RRC_FilterLength","RRC filter length (chips)",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")),
	create_parm ("ExcessBW","Excess bandwidth of raised cosine filters",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.22")),
	create_parm ("UE_Category","",
		PARM_INT,
		"_nHSDPA_x5fDL_x5fReceiverRF_x5fCQI_fUE_x5fCategorySet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fDL_x5fReceiverRF_x5fCQI_fCategory_x5f1","Category_1")),
	create_parm ("CQI","value of CQI",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("HS_PDSCH_CodeOffset","Spread code offset",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("SamplesPerChip","number of samples per chip",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("PathNum","number of paths or fingers of Rake",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","6")),
	create_parm ("MaxDelaySample","maximum path delay in terms of chips",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","40")),
	create_parm ("TC_Iteration","Turbo code decoder iteration number",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")));
library_group("HSDPA, Receiver","HSDPA, Receiver","HSDPA_DL_ReceiverRF_CQI");
palette_group("HSDPA, Receiver","HSDPA, Receiver","HSDPA_DL_ReceiverRF_CQI");

create_item ("HSDPA_BS_Tx_VSAInfo","BS_Tx_VSA Information",
	"H",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_HSDPA_BS_Tx_VSAInfo",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"HSDPA_BS_Tx_VSAInfo",
	SPDesignAnnotFmt,
	"SYM_HSDPA_Information",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("InformationComponent","InformationComponent","HSDPA_BS_Tx_VSAInfo");
palette_group("InformationComponent","InformationComponent","HSDPA_BS_Tx_VSAInfo");

create_item ("HSDPA_BS_Tx_Pk_Code_ErrorInfo","BS_Tx_Pk_Code_Error Information",
	"H",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_HSDPA_BS_Tx_Pk_Code_ErrorInfo",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"HSDPA_BS_Tx_Pk_Code_ErrorInfo",
	SPDesignAnnotFmt,
	"SYM_HSDPA_Information",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("InformationComponent","InformationComponent","HSDPA_BS_Tx_Pk_Code_ErrorInfo");
palette_group("InformationComponent","InformationComponent","HSDPA_BS_Tx_Pk_Code_ErrorInfo");

create_item ("HSDPA_BS_Tx_OccupiedBWInfo","BS_Tx_OccupiedBW Information",
	"H",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_HSDPA_BS_Tx_OccupiedBWInfo",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"HSDPA_BS_Tx_OccupiedBWInfo",
	SPDesignAnnotFmt,
	"SYM_HSDPA_Information",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("InformationComponent","InformationComponent","HSDPA_BS_Tx_OccupiedBWInfo");
palette_group("InformationComponent","InformationComponent","HSDPA_BS_Tx_OccupiedBWInfo");

create_item ("HSDPA_BS_Tx_MaxPowerInfo","BS_Tx_MaxPower Information",
	"H",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_HSDPA_BS_Tx_MaxPowerInfo",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"HSDPA_BS_Tx_MaxPowerInfo",
	SPDesignAnnotFmt,
	"SYM_HSDPA_Information",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("InformationComponent","InformationComponent","HSDPA_BS_Tx_MaxPowerInfo");
palette_group("InformationComponent","InformationComponent","HSDPA_BS_Tx_MaxPowerInfo");

create_item ("HSDPA_BS_Tx_EVMInfo","BS_Tx_EVM Information",
	"H",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_HSDPA_BS_Tx_EVMInfo",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"HSDPA_BS_Tx_EVMInfo",
	SPDesignAnnotFmt,
	"SYM_HSDPA_Information",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("InformationComponent","InformationComponent","HSDPA_BS_Tx_EVMInfo");
palette_group("InformationComponent","InformationComponent","HSDPA_BS_Tx_EVMInfo");

create_item ("HSDPA_BS_Tx_CCDFInfo","BS_Tx_CCDF Information",
	"H",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_HSDPA_BS_Tx_CCDFInfo",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"HSDPA_BS_Tx_CCDFInfo",
	SPDesignAnnotFmt,
	"SYM_HSDPA_Information",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("InformationComponent","InformationComponent","HSDPA_BS_Tx_CCDFInfo");
palette_group("InformationComponent","InformationComponent","HSDPA_BS_Tx_CCDFInfo");

create_item ("HSDPA_BS_Tx_ACLRInfo","BS_Tx_ACLR Information",
	"H",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_HSDPA_BS_Tx_ACLRInfo",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"HSDPA_BS_Tx_ACLRInfo",
	SPDesignAnnotFmt,
	"SYM_HSDPA_Information",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("InformationComponent","InformationComponent","HSDPA_BS_Tx_ACLRInfo");
palette_group("InformationComponent","InformationComponent","HSDPA_BS_Tx_ACLRInfo");

create_item ("HSDPA_BS_Tx_Spec_EmissionInfo","BS_Tx_Spec_Emission Information",
	"H",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_HSDPA_BS_Tx_Spec_EmissionInfo",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"HSDPA_BS_Tx_Spec_EmissionInfo",
	SPDesignAnnotFmt,
	"SYM_HSDPA_Information",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("InformationComponent","InformationComponent","HSDPA_BS_Tx_Spec_EmissionInfo");
palette_group("InformationComponent","InformationComponent","HSDPA_BS_Tx_Spec_EmissionInfo");

create_item ("HSDPA_UE_Rx_MaxLevelInfo","UE_Rx_MaxLevel Information",
	"H",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_HSDPA_UE_Rx_MaxLevelInfo",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"HSDPA_UE_Rx_MaxLevelInfo",
	SPDesignAnnotFmt,
	"SYM_HSDPA_Information",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("InformationComponent","InformationComponent","HSDPA_UE_Rx_MaxLevelInfo");
palette_group("InformationComponent","InformationComponent","HSDPA_UE_Rx_MaxLevelInfo");

create_item ("HSDPA_UE_Rx_HSSCCH_DetectionInfo","UE_Rx_HSSCCH_Detection Information",
	"H",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_HSDPA_UE_Rx_HSSCCH_DetectionInfo",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"HSDPA_UE_Rx_HSSCCH_DetectionInfo",
	SPDesignAnnotFmt,
	"SYM_HSDPA_Information",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("InformationComponent","InformationComponent","HSDPA_UE_Rx_HSSCCH_DetectionInfo");
palette_group("InformationComponent","InformationComponent","HSDPA_UE_Rx_HSSCCH_DetectionInfo");

create_item ("HSDPA_UE_LMMSE_Rx_DemodulationInfo","UE_Rx_Demodulation Information",
	"H",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_HSDPA_UE_LMMSE_Rx_DemodulationInfo",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"HSDPA_UE_LMMSE_Rx_DemodulationInfo",
	SPDesignAnnotFmt,
	"SYM_HSDPA_Information",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("InformationComponent","InformationComponent","HSDPA_UE_LMMSE_Rx_DemodulationInfo");
palette_group("InformationComponent","InformationComponent","HSDPA_UE_LMMSE_Rx_DemodulationInfo");

create_item ("HSDPA_UE_Rx_DemodulationInfo","UE_Rx_Demodulation Information",
	"H",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_HSDPA_UE_Rx_DemodulationInfo",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"HSDPA_UE_Rx_DemodulationInfo",
	SPDesignAnnotFmt,
	"SYM_HSDPA_Information",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("InformationComponent","InformationComponent","HSDPA_UE_Rx_DemodulationInfo");
palette_group("InformationComponent","InformationComponent","HSDPA_UE_Rx_DemodulationInfo");

create_constant_form ("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_fH_x5fSet_x5f1", 
	"H-Set_1",
	0,
	"0",
	"H-Set_1");
create_constant_form ("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_fH_x5fSet_x5f2", 
	"H-Set_2",
	0,
	"1",
	"H-Set_2");
create_constant_form ("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_fH_x5fSet_x5f3", 
	"H-Set_3",
	0,
	"2",
	"H-Set_3");
create_constant_form ("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_fH_x5fSet_x5f4", 
	"H-Set_4",
	0,
	"3",
	"H-Set_4");
create_constant_form ("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_fH_x5fSet_x5f5", 
	"H-Set_5",
	0,
	"4",
	"H-Set_5");
create_constant_form ("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_fH_x5fSet_x5f6", 
	"H-Set_6",
	0,
	"5",
	"H-Set_6");
create_constant_form ("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_fH_x5fSet_x5f7", 
	"H-Set_7",
	0,
	"6",
	"H-Set_7");
create_constant_form ("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_fH_x5fSet_x5f8", 
	"H-Set_8",
	0,
	"7",
	"H-Set_8");
create_form_set("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_fHS_x5fPDSCH_x5fFRCSet",
	"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_fH_x5fSet_x5f1",
	"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_fH_x5fSet_x5f2",
	"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_fH_x5fSet_x5f3",
	"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_fH_x5fSet_x5f4",
	"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_fH_x5fSet_x5f5",
	"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_fH_x5fSet_x5f6",
	"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_fH_x5fSet_x5f7",
	"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_fH_x5fSet_x5f8",
	"StdForm");
create_constant_form ("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_fSCCH", 
	"SCCH",
	0,
	"0",
	"SCCH");
create_constant_form ("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_fExternal", 
	"External",
	0,
	"1",
	"External");
create_form_set("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_fSignalingSourceSet",
	"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_fSCCH",
	"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_fExternal",
	"StdForm");
create_constant_form ("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_f_x5fQPSK", 
	"_QPSK",
	0,
	"0",
	"_QPSK");
create_constant_form ("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_f_x5f16QAM", 
	"_16QAM",
	0,
	"1",
	"_16QAM");
create_constant_form ("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_f_x5f64QAM", 
	"_64QAM",
	0,
	"2",
	"_64QAM");
create_form_set("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_fMSSet",
	"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_f_x5fQPSK",
	"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_f_x5f16QAM",
	"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_f_x5f64QAM",
	"StdForm");
create_constant_form ("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_fOutputSTTDSet",
	"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_fNO",
	"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_fYES",
	"StdForm");
create_constant_form ("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_fReal", 
	"Real",
	0,
	"0",
	"Real");
create_constant_form ("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_fIdeal", 
	"Ideal",
	0,
	"1",
	"Ideal");
create_form_set("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_fEqualizer_x5fSelectSet",
	"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_fReal",
	"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_fIdeal",
	"StdForm");
create_item ("HSDPA_DL_LMMSE_ReceiverRF","HSDPA receiver",
	"H",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_HSDPA_DL_LMMSE_ReceiverRF",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"HSDPA_DL_LMMSE_ReceiverRF",
	SPDesignAnnotFmt,
	"SYM_DSN_HSDPA_DL_LMMSE_ReceiverRF",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("FCarrier","Carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","2140 MHz")),
	create_parm ("Power","RF output power",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","0.01")),
	create_parm ("RIn","Input resistance",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50")),
	create_parm ("Phase","Reference phase in degrees",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		ANGLE_UNIT,
		prm("StdForm","0.0")),
	create_parm ("RRC_FilterLength","RRC filter length (chips)",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")),
	create_parm ("ExcessBW","Excess bandwidth of raised cosine filters",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.22")),
	create_parm ("SamplesPerChip","number of samples per chip",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("PathNum","number of paths or fingers for ideal channel estimation",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","6")),
	create_parm ("Est_PathNum","number of paths or fingers for real channel estimation",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","6")),
	create_parm ("MaxDelaySample","maximum path delay in terms of samples",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","40")),
	create_parm ("MaxDelaySpread","the maximal multi-paths delay spread, to decide the length of channal implus response",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","80")),
	create_parm ("HS_PDSCH_FRC","Fixed reference channel",
		PARM_INT,
		"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_fHS_x5fPDSCH_x5fFRCSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_fH_x5fSet_x5f1","H_Set_1")),
	create_parm ("UEIdentity","UE identity (16 bits)",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0xAAAA")),
	create_parm ("SignalingSource","",
		PARM_INT,
		"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_fSignalingSourceSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_fExternal","External")),
	create_parm ("MS","Modulation scheme",
		PARM_INT,
		"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_fMSSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_f_x5fQPSK","_QPSK")),
	create_parm ("HS_PDSCH_CodeOffset","Spread code offset",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("EqualizerLength","the coefficients length of the equalizer",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","64")),
	create_parm ("sigma2","the variance of the AWGN noise",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0001")),
	create_parm ("TC_Iteration","Turbo code decoder iteration number",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("TTIPattern","inter-TTI pattern",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1, 0, 0, 1, 0, 0}")),
	create_parm ("OutputSTTD","Whether or not export STTD",
		PARM_INT,
		"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_fOutputSTTDSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_fNO","NO")),
	create_parm ("SCH_EcToIor","SCH power gain in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","-15")),
	create_parm ("PCPICH_EcToIor","Primary CPICH power gain in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","-10.0")),
	create_parm ("Equalizer_Select","channel estimator type select",
		PARM_INT,
		"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_fEqualizer_x5fSelectSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiverRF_fReal","Real")));
library_group("HSDPA, Receiver","HSDPA, Receiver","HSDPA_DL_LMMSE_ReceiverRF");
palette_group("HSDPA, Receiver","HSDPA, Receiver","HSDPA_DL_LMMSE_ReceiverRF");

create_constant_form ("_nHSDPA_x5fDL_x5fReceiverRF_fH_x5fSet_x5f1", 
	"H-Set_1",
	0,
	"0",
	"H-Set_1");
create_constant_form ("_nHSDPA_x5fDL_x5fReceiverRF_fH_x5fSet_x5f2", 
	"H-Set_2",
	0,
	"1",
	"H-Set_2");
create_constant_form ("_nHSDPA_x5fDL_x5fReceiverRF_fH_x5fSet_x5f3", 
	"H-Set_3",
	0,
	"2",
	"H-Set_3");
create_constant_form ("_nHSDPA_x5fDL_x5fReceiverRF_fH_x5fSet_x5f4", 
	"H-Set_4",
	0,
	"3",
	"H-Set_4");
create_constant_form ("_nHSDPA_x5fDL_x5fReceiverRF_fH_x5fSet_x5f5", 
	"H-Set_5",
	0,
	"4",
	"H-Set_5");
create_constant_form ("_nHSDPA_x5fDL_x5fReceiverRF_fH_x5fSet_x5f6", 
	"H-Set_6",
	0,
	"5",
	"H-Set_6");
create_constant_form ("_nHSDPA_x5fDL_x5fReceiverRF_fH_x5fSet_x5f7", 
	"H-Set_7",
	0,
	"6",
	"H-Set_7");
create_constant_form ("_nHSDPA_x5fDL_x5fReceiverRF_fH_x5fSet_x5f8", 
	"H-Set_8",
	0,
	"7",
	"H-Set_8");
create_constant_form ("_nHSDPA_x5fDL_x5fReceiverRF_fH_x5fSet_x5f9", 
	"H-Set_9",
	0,
	"8",
	"H-Set_9");
create_constant_form ("_nHSDPA_x5fDL_x5fReceiverRF_fH_x5fSet_x5f10", 
	"H-Set_10",
	0,
	"9",
	"H-Set_10");
create_constant_form ("_nHSDPA_x5fDL_x5fReceiverRF_fH_x5fSet_x5f11", 
	"H-Set_11",
	0,
	"10",
	"H-Set_11");
create_constant_form ("_nHSDPA_x5fDL_x5fReceiverRF_fH_x5fSet_x5f12", 
	"H-Set_12",
	0,
	"11",
	"H-Set_12");
create_form_set("_nHSDPA_x5fDL_x5fReceiverRF_fHS_x5fPDSCH_x5fFRCSet",
	"_nHSDPA_x5fDL_x5fReceiverRF_fH_x5fSet_x5f1",
	"_nHSDPA_x5fDL_x5fReceiverRF_fH_x5fSet_x5f2",
	"_nHSDPA_x5fDL_x5fReceiverRF_fH_x5fSet_x5f3",
	"_nHSDPA_x5fDL_x5fReceiverRF_fH_x5fSet_x5f4",
	"_nHSDPA_x5fDL_x5fReceiverRF_fH_x5fSet_x5f5",
	"_nHSDPA_x5fDL_x5fReceiverRF_fH_x5fSet_x5f6",
	"_nHSDPA_x5fDL_x5fReceiverRF_fH_x5fSet_x5f7",
	"_nHSDPA_x5fDL_x5fReceiverRF_fH_x5fSet_x5f8",
	"_nHSDPA_x5fDL_x5fReceiverRF_fH_x5fSet_x5f9",
	"_nHSDPA_x5fDL_x5fReceiverRF_fH_x5fSet_x5f10",
	"_nHSDPA_x5fDL_x5fReceiverRF_fH_x5fSet_x5f11",
	"_nHSDPA_x5fDL_x5fReceiverRF_fH_x5fSet_x5f12",
	"StdForm");
create_constant_form ("_nHSDPA_x5fDL_x5fReceiverRF_fSCCH", 
	"SCCH",
	0,
	"0",
	"SCCH");
create_constant_form ("_nHSDPA_x5fDL_x5fReceiverRF_fExternal", 
	"External",
	0,
	"1",
	"External");
create_form_set("_nHSDPA_x5fDL_x5fReceiverRF_fSignalingSourceSet",
	"_nHSDPA_x5fDL_x5fReceiverRF_fSCCH",
	"_nHSDPA_x5fDL_x5fReceiverRF_fExternal",
	"StdForm");
create_constant_form ("_nHSDPA_x5fDL_x5fReceiverRF_f_x5fQPSK", 
	"_QPSK",
	0,
	"0",
	"_QPSK");
create_constant_form ("_nHSDPA_x5fDL_x5fReceiverRF_f_x5f16QAM", 
	"_16QAM",
	0,
	"1",
	"_16QAM");
create_constant_form ("_nHSDPA_x5fDL_x5fReceiverRF_f_x5f64QAM", 
	"_64QAM",
	0,
	"2",
	"_64QAM");
create_form_set("_nHSDPA_x5fDL_x5fReceiverRF_fMSSet",
	"_nHSDPA_x5fDL_x5fReceiverRF_f_x5fQPSK",
	"_nHSDPA_x5fDL_x5fReceiverRF_f_x5f16QAM",
	"_nHSDPA_x5fDL_x5fReceiverRF_f_x5f64QAM",
	"StdForm");
create_item ("HSDPA_DL_ReceiverRF","HSDPA receiver",
	"H",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_HSDPA_DL_ReceiverRF",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"HSDPA_DL_ReceiverRF",
	SPDesignAnnotFmt,
	"SYM_DSN_HSDPA_DL_ReceiverRF",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("FCarrier","Carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","2140 MHz")),
	create_parm ("RIn","Input resistance",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50")),
	create_parm ("Phase","Reference phase in degrees",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		ANGLE_UNIT,
		prm("StdForm","0.0")),
	create_parm ("RRC_FilterLength","RRC filter length (chips)",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")),
	create_parm ("ExcessBW","Excess bandwidth of raised cosine filters",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.22")),
	create_parm ("SamplesPerChip","number of samples per chip",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("PathNum","number of paths or fingers of Rake",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","6")),
	create_parm ("MaxDelaySample","maximum path delay in terms of samples",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","40")),
	create_parm ("HS_PDSCH_FRC","Fixed reference channel",
		PARM_INT,
		"_nHSDPA_x5fDL_x5fReceiverRF_fHS_x5fPDSCH_x5fFRCSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fDL_x5fReceiverRF_fH_x5fSet_x5f1","H_Set_1")),
	create_parm ("UEIdentity","UE identity (16 bits)",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0xAAAA")),
	create_parm ("SignalingSource","",
		PARM_INT,
		"_nHSDPA_x5fDL_x5fReceiverRF_fSignalingSourceSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fDL_x5fReceiverRF_fExternal","External")),
	create_parm ("MS","Modulation scheme",
		PARM_INT,
		"_nHSDPA_x5fDL_x5fReceiverRF_fMSSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fDL_x5fReceiverRF_f_x5fQPSK","_QPSK")),
	create_parm ("HS_PDSCH_CodeOffset","Spread code offset",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("TC_Iteration","Turbo code decoder iteration number",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("TTIPattern","inter-TTI pattern",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1, 0, 0, 1, 0, 0}")));
library_group("HSDPA, Receiver","HSDPA, Receiver","HSDPA_DL_ReceiverRF");
palette_group("HSDPA, Receiver","HSDPA, Receiver","HSDPA_DL_ReceiverRF");

create_constant_form ("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_fH_x5fSet_x5f1", 
	"H-Set_1",
	0,
	"0",
	"H-Set_1");
create_constant_form ("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_fH_x5fSet_x5f2", 
	"H-Set_2",
	0,
	"1",
	"H-Set_2");
create_constant_form ("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_fH_x5fSet_x5f3", 
	"H-Set_3",
	0,
	"2",
	"H-Set_3");
create_constant_form ("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_fH_x5fSet_x5f4", 
	"H-Set_4",
	0,
	"3",
	"H-Set_4");
create_constant_form ("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_fH_x5fSet_x5f5", 
	"H-Set_5",
	0,
	"4",
	"H-Set_5");
create_constant_form ("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_fH_x5fSet_x5f6", 
	"H-Set_6",
	0,
	"5",
	"H-Set_6");
create_constant_form ("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_fH_x5fSet_x5f7", 
	"H-Set_7",
	0,
	"6",
	"H-Set_7");
create_constant_form ("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_fH_x5fSet_x5f8", 
	"H-Set_8",
	0,
	"7",
	"H-Set_8");
create_form_set("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_fHS_x5fPDSCH_x5fFRCSet",
	"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_fH_x5fSet_x5f1",
	"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_fH_x5fSet_x5f2",
	"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_fH_x5fSet_x5f3",
	"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_fH_x5fSet_x5f4",
	"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_fH_x5fSet_x5f5",
	"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_fH_x5fSet_x5f6",
	"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_fH_x5fSet_x5f7",
	"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_fH_x5fSet_x5f8",
	"StdForm");
create_constant_form ("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_fSCCH", 
	"SCCH",
	0,
	"0",
	"SCCH");
create_constant_form ("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_fExternal", 
	"External",
	0,
	"1",
	"External");
create_form_set("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_fSignalingSourceSet",
	"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_fSCCH",
	"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_fExternal",
	"StdForm");
create_constant_form ("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_f_x5fQPSK", 
	"_QPSK",
	0,
	"0",
	"_QPSK");
create_constant_form ("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_f_x5f16QAM", 
	"_16QAM",
	0,
	"1",
	"_16QAM");
create_constant_form ("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_f_x5f64QAM", 
	"_64QAM",
	0,
	"2",
	"_64QAM");
create_form_set("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_fMSSet",
	"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_f_x5fQPSK",
	"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_f_x5f16QAM",
	"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_f_x5f64QAM",
	"StdForm");
create_constant_form ("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_fOutputSTTDSet",
	"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_fNO",
	"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_fYES",
	"StdForm");
create_constant_form ("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_fReal", 
	"Real",
	0,
	"0",
	"Real");
create_constant_form ("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_fIdeal", 
	"Ideal",
	0,
	"1",
	"Ideal");
create_form_set("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_fEqualizer_x5fSelectSet",
	"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_fReal",
	"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_fIdeal",
	"StdForm");
create_item ("HSDPA_DL_LMMSE_Receiver","HSDPA receiver",
	"H",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_HSDPA_DL_LMMSE_Receiver",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"HSDPA_DL_LMMSE_Receiver",
	SPDesignAnnotFmt,
	"SYM_DSN_HSDPA_DL_LMMSE_Receiver",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Power","RF output power",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","0.01")),
	create_parm ("SamplesPerChip","number of samples per chip",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("PathNum","number of paths or fingers for ideal channel estimation",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","6")),
	create_parm ("Est_PathNum","number of paths or fingers for real channel estimation",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","6")),
	create_parm ("MaxDelaySample","maximum path delay in terms of samples",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","40")),
	create_parm ("MaxDelaySpread","the maximal multi-paths delay spread, to decide the length of channal implus response",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","80")),
	create_parm ("HS_PDSCH_FRC","Fixed reference channel",
		PARM_INT,
		"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_fHS_x5fPDSCH_x5fFRCSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_fH_x5fSet_x5f1","H_Set_1")),
	create_parm ("UEIdentity","UE identity (16 bits)",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0xAAAA")),
	create_parm ("SignalingSource","",
		PARM_INT,
		"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_fSignalingSourceSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_fExternal","External")),
	create_parm ("MS","Modulation scheme",
		PARM_INT,
		"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_fMSSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_f_x5fQPSK","_QPSK")),
	create_parm ("HS_PDSCH_CodeOffset","Spread code offset",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("EqualizerLength","the coefficients length of the equalizer",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","64")),
	create_parm ("sigma2","the variance of the AWGN noise",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0001")),
	create_parm ("FilterLength","RRC filter length (chips)",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")),
	create_parm ("ExcessBW","Excess bandwidth of raised cosine filters",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.22")),
	create_parm ("TC_Iteration","Turbo code decoder iteration number",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("TTIPattern","inter-TTI pattern",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1, 0, 0, 1, 0, 0}")),
	create_parm ("OutputSTTD","Whether or not export STTD",
		PARM_INT,
		"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_fOutputSTTDSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_fNO","NO")),
	create_parm ("SCH_EcToIor","SCH power gain in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","-15")),
	create_parm ("PCPICH_EcToIor","Primary CPICH power gain in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","-10.0")),
	create_parm ("Equalizer_Select","channel estimator type select",
		PARM_INT,
		"_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_fEqualizer_x5fSelectSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fDL_x5fLMMSE_x5fReceiver_fReal","Real")));
library_group("HSDPA, Receiver","HSDPA, Receiver","HSDPA_DL_LMMSE_Receiver");
palette_group("HSDPA, Receiver","HSDPA, Receiver","HSDPA_DL_LMMSE_Receiver");

create_constant_form ("_nHSDPA_x5fDL_x5fReceiver_fH_x5fSet_x5f1", 
	"H-Set_1",
	0,
	"0",
	"H-Set_1");
create_constant_form ("_nHSDPA_x5fDL_x5fReceiver_fH_x5fSet_x5f2", 
	"H-Set_2",
	0,
	"1",
	"H-Set_2");
create_constant_form ("_nHSDPA_x5fDL_x5fReceiver_fH_x5fSet_x5f3", 
	"H-Set_3",
	0,
	"2",
	"H-Set_3");
create_constant_form ("_nHSDPA_x5fDL_x5fReceiver_fH_x5fSet_x5f4", 
	"H-Set_4",
	0,
	"3",
	"H-Set_4");
create_constant_form ("_nHSDPA_x5fDL_x5fReceiver_fH_x5fSet_x5f5", 
	"H-Set_5",
	0,
	"4",
	"H-Set_5");
create_constant_form ("_nHSDPA_x5fDL_x5fReceiver_fH_x5fSet_x5f6", 
	"H-Set_6",
	0,
	"5",
	"H-Set_6");
create_constant_form ("_nHSDPA_x5fDL_x5fReceiver_fH_x5fSet_x5f7", 
	"H-Set_7",
	0,
	"6",
	"H-Set_7");
create_constant_form ("_nHSDPA_x5fDL_x5fReceiver_fH_x5fSet_x5f8", 
	"H-Set_8",
	0,
	"7",
	"H-Set_8");
create_constant_form ("_nHSDPA_x5fDL_x5fReceiver_fH_x5fSet_x5f9", 
	"H-Set_9",
	0,
	"8",
	"H-Set_9");
create_constant_form ("_nHSDPA_x5fDL_x5fReceiver_fH_x5fSet_x5f10", 
	"H-Set_10",
	0,
	"9",
	"H-Set_10");
create_constant_form ("_nHSDPA_x5fDL_x5fReceiver_fH_x5fSet_x5f11", 
	"H-Set_11",
	0,
	"10",
	"H-Set_11");
create_constant_form ("_nHSDPA_x5fDL_x5fReceiver_fH_x5fSet_x5f12", 
	"H-Set_12",
	0,
	"11",
	"H-Set_12");
create_form_set("_nHSDPA_x5fDL_x5fReceiver_fHS_x5fPDSCH_x5fFRCSet",
	"_nHSDPA_x5fDL_x5fReceiver_fH_x5fSet_x5f1",
	"_nHSDPA_x5fDL_x5fReceiver_fH_x5fSet_x5f2",
	"_nHSDPA_x5fDL_x5fReceiver_fH_x5fSet_x5f3",
	"_nHSDPA_x5fDL_x5fReceiver_fH_x5fSet_x5f4",
	"_nHSDPA_x5fDL_x5fReceiver_fH_x5fSet_x5f5",
	"_nHSDPA_x5fDL_x5fReceiver_fH_x5fSet_x5f6",
	"_nHSDPA_x5fDL_x5fReceiver_fH_x5fSet_x5f7",
	"_nHSDPA_x5fDL_x5fReceiver_fH_x5fSet_x5f8",
	"_nHSDPA_x5fDL_x5fReceiver_fH_x5fSet_x5f9",
	"_nHSDPA_x5fDL_x5fReceiver_fH_x5fSet_x5f10",
	"_nHSDPA_x5fDL_x5fReceiver_fH_x5fSet_x5f11",
	"_nHSDPA_x5fDL_x5fReceiver_fH_x5fSet_x5f12",
	"StdForm");
create_constant_form ("_nHSDPA_x5fDL_x5fReceiver_fSCCH", 
	"SCCH",
	0,
	"0",
	"SCCH");
create_constant_form ("_nHSDPA_x5fDL_x5fReceiver_fExternal", 
	"External",
	0,
	"1",
	"External");
create_form_set("_nHSDPA_x5fDL_x5fReceiver_fSignalingSourceSet",
	"_nHSDPA_x5fDL_x5fReceiver_fSCCH",
	"_nHSDPA_x5fDL_x5fReceiver_fExternal",
	"StdForm");
create_constant_form ("_nHSDPA_x5fDL_x5fReceiver_f_x5fQPSK", 
	"_QPSK",
	0,
	"0",
	"_QPSK");
create_constant_form ("_nHSDPA_x5fDL_x5fReceiver_f_x5f16QAM", 
	"_16QAM",
	0,
	"1",
	"_16QAM");
create_constant_form ("_nHSDPA_x5fDL_x5fReceiver_f_x5f64QAM", 
	"_64QAM",
	0,
	"2",
	"_64QAM");
create_form_set("_nHSDPA_x5fDL_x5fReceiver_fMSSet",
	"_nHSDPA_x5fDL_x5fReceiver_f_x5fQPSK",
	"_nHSDPA_x5fDL_x5fReceiver_f_x5f16QAM",
	"_nHSDPA_x5fDL_x5fReceiver_f_x5f64QAM",
	"StdForm");
create_item ("HSDPA_DL_Receiver","HSDPA receiver",
	"H",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_HSDPA_DL_Receiver",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"HSDPA_DL_Receiver",
	SPDesignAnnotFmt,
	"SYM_DSN_HSDPA_DL_Receiver",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SamplesPerChip","number of samples per chip",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("PathNum","number of paths or fingers of Rake",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","6")),
	create_parm ("MaxDelaySample","maximum path delay in terms of samples",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","40")),
	create_parm ("HS_PDSCH_FRC","Fixed reference channel",
		PARM_INT,
		"_nHSDPA_x5fDL_x5fReceiver_fHS_x5fPDSCH_x5fFRCSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fDL_x5fReceiver_fH_x5fSet_x5f1","H_Set_1")),
	create_parm ("UEIdentity","UE identity (16 bits)",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0xAAAA")),
	create_parm ("SignalingSource","",
		PARM_INT,
		"_nHSDPA_x5fDL_x5fReceiver_fSignalingSourceSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fDL_x5fReceiver_fExternal","External")),
	create_parm ("MS","Modulation scheme",
		PARM_INT,
		"_nHSDPA_x5fDL_x5fReceiver_fMSSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fDL_x5fReceiver_f_x5fQPSK","_QPSK")),
	create_parm ("HS_PDSCH_CodeOffset","Spread code offset",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("TC_Iteration","Turbo code decoder iteration number",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("TTIPattern","inter-TTI pattern",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1, 0, 0, 1, 0, 0}")));
library_group("HSDPA, Receiver","HSDPA, Receiver","HSDPA_DL_Receiver");
palette_group("HSDPA, Receiver","HSDPA, Receiver","HSDPA_DL_Receiver");

create_constant_form ("_nHSDPA_x5fPDSCH_x5fDecoder_f_x5fQPSK", 
	"_QPSK",
	0,
	"0",
	"_QPSK");
create_constant_form ("_nHSDPA_x5fPDSCH_x5fDecoder_f_x5f16QAM", 
	"_16QAM",
	0,
	"1",
	"_16QAM");
create_constant_form ("_nHSDPA_x5fPDSCH_x5fDecoder_f_x5f64QAM", 
	"_64QAM",
	0,
	"2",
	"_64QAM");
create_form_set("_nHSDPA_x5fPDSCH_x5fDecoder_fMSSet",
	"_nHSDPA_x5fPDSCH_x5fDecoder_f_x5fQPSK",
	"_nHSDPA_x5fPDSCH_x5fDecoder_f_x5f16QAM",
	"_nHSDPA_x5fPDSCH_x5fDecoder_f_x5f64QAM",
	"StdForm");
create_item ("HSDPA_PDSCH_Decoder","",
	"H",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_HSDPA_PDSCH_Decoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"HSDPA_PDSCH_Decoder",
	SPDesignAnnotFmt,
	"SYM_DSN_HSDPA_PDSCH_Decoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("TransBlockSize","Transport block size",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3202")),
	create_parm ("MS","Modulation scheme",
		PARM_INT,
		"_nHSDPA_x5fPDSCH_x5fDecoder_fMSSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fPDSCH_x5fDecoder_f_x5fQPSK","_QPSK")),
	create_parm ("NIR","",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","9600")),
	create_parm ("TC_Iteration","Turbo code decoder iteration number",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("NumHSPDSCH","Number of HS_PDSCH",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","5")),
	create_parm ("NumHARQ","Number of HARQ processes",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("TTIPattern","inter-TTI pattern",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1, 1, 1, 1, 1, 1}")));
library_group("HSDPA, Demultiplexers & Decoders","HSDPA, Demultiplexers & Decoders","HSDPA_PDSCH_Decoder");
palette_group("HSDPA, Demultiplexers & Decoders","HSDPA, Demultiplexers & Decoders","HSDPA_PDSCH_Decoder");

create_constant_form ("_nHSDPA_x5fDL_x5fRake_fNo_x5fDiversity", 
	"No_Diversity",
	0,
	"0",
	"No_Diversity");
create_constant_form ("_nHSDPA_x5fDL_x5fRake_fDL_x5fSTTD", 
	"DL_STTD",
	0,
	"1",
	"STTD");
create_form_set("_nHSDPA_x5fDL_x5fRake_fTXDiversitySet",
	"_nHSDPA_x5fDL_x5fRake_fNo_x5fDiversity",
	"_nHSDPA_x5fDL_x5fRake_fDL_x5fSTTD",
	"StdForm");
create_item ("HSDPA_DL_Rake","Rake receiver",
	"H",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_HSDPA_DL_Rake",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"HSDPA_DL_Rake",
	SPDesignAnnotFmt,
	"SYM_DSN_HSDPA_DL_Rake",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("TXDiversity","transmit diversity in downlink",
		PARM_INT,
		"_nHSDPA_x5fDL_x5fRake_fTXDiversitySet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fDL_x5fRake_fNo_x5fDiversity","No_Diversity")),
	create_parm ("SampleRate","number of samples per chip",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("PathNum","number of paths or fingers of Rake",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","6")),
	create_parm ("MaxDelay","maximum path delay in terms of samples",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","40")),
	create_parm ("ScrambleCode","Index of scramble code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("NumHSPDSCH","number of DPCHs",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","5")),
	create_parm ("HS_PDSCH_CodeOffset","Spread code offset",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));
library_group("HSDPA, Receiver","HSDPA, Receiver","HSDPA_DL_Rake");
palette_group("HSDPA, Receiver","HSDPA, Receiver","HSDPA_DL_Rake");

create_item ("HSDPA_SCCH_Decoder","HS-SCCH decoder",
	"H",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_HSDPA_SCCH_Decoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"HSDPA_SCCH_Decoder",
	SPDesignAnnotFmt,
	"SYM_DSN_HSDPA_SCCH_Decoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("UEIdentity","UE identity (16 bits)",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0xAAAA")));
library_group("HSDPA, Demultiplexers & Decoders","HSDPA, Demultiplexers & Decoders","HSDPA_SCCH_Decoder");
palette_group("HSDPA, Demultiplexers & Decoders","HSDPA, Demultiplexers & Decoders","HSDPA_SCCH_Decoder");

create_constant_form ("_nHSDPA_x5fDL_x5fSourceRF_fDL_x5fNormal", 
	"DL_Normal",
	0,
	"0",
	"Normal");
create_constant_form ("_nHSDPA_x5fDL_x5fSourceRF_fDL_x5fInvert", 
	"DL_Invert",
	0,
	"1",
	"Invert");
create_form_set("_nHSDPA_x5fDL_x5fSourceRF_fPhasePolaritySet",
	"_nHSDPA_x5fDL_x5fSourceRF_fDL_x5fNormal",
	"_nHSDPA_x5fDL_x5fSourceRF_fDL_x5fInvert",
	"StdForm");
create_constant_form ("_nHSDPA_x5fDL_x5fSourceRF_fHSDPA", 
	"HSDPA",
	0,
	"0",
	"HSDPA");
create_constant_form ("_nHSDPA_x5fDL_x5fSourceRF_fTestModel1_x5f16DPCHs", 
	"TestModel1_16DPCHs",
	0,
	"1",
	"TestModel1_16DPCHs");
create_constant_form ("_nHSDPA_x5fDL_x5fSourceRF_fTestModel1_x5f32DPCHs", 
	"TestModel1_32DPCHs",
	0,
	"2",
	"TestModel1_32DPCHs");
create_constant_form ("_nHSDPA_x5fDL_x5fSourceRF_fTestModel1_x5f64DPCHs", 
	"TestModel1_64DPCHs",
	0,
	"3",
	"TestModel1_64DPCHs");
create_constant_form ("_nHSDPA_x5fDL_x5fSourceRF_fTestModel2", 
	"TestModel2",
	0,
	"4",
	"TestModel2");
create_constant_form ("_nHSDPA_x5fDL_x5fSourceRF_fTestModel3_x5f16DPCHs", 
	"TestModel3_16DPCHs",
	0,
	"5",
	"TestModel3_16DPCHs");
create_constant_form ("_nHSDPA_x5fDL_x5fSourceRF_fTestModel3_x5f32DPCHs", 
	"TestModel3_32DPCHs",
	0,
	"6",
	"TestModel3_32DPCHs");
create_constant_form ("_nHSDPA_x5fDL_x5fSourceRF_fTestModel4", 
	"TestModel4",
	0,
	"7",
	"TestModel4");
create_constant_form ("_nHSDPA_x5fDL_x5fSourceRF_fTestModel5_x5f6DPCHs", 
	"TestModel5_6DPCHs",
	0,
	"8",
	"TestModel5_6DPCHs");
create_constant_form ("_nHSDPA_x5fDL_x5fSourceRF_fTestModel5_x5f14DPCHs", 
	"TestModel5_14DPCHs",
	0,
	"9",
	"TestModel5_14DPCHs");
create_constant_form ("_nHSDPA_x5fDL_x5fSourceRF_fTestModel5_x5f30DPCHs", 
	"TestModel5_30DPCHs",
	0,
	"10",
	"TestModel5_30DPCHs");
create_constant_form ("_nHSDPA_x5fDL_x5fSourceRF_fTestModel6", 
	"TestModel6",
	0,
	"11",
	"TestModel6");
create_form_set("_nHSDPA_x5fDL_x5fSourceRF_fSourceTypeSet",
	"_nHSDPA_x5fDL_x5fSourceRF_fHSDPA",
	"_nHSDPA_x5fDL_x5fSourceRF_fTestModel1_x5f16DPCHs",
	"_nHSDPA_x5fDL_x5fSourceRF_fTestModel1_x5f32DPCHs",
	"_nHSDPA_x5fDL_x5fSourceRF_fTestModel1_x5f64DPCHs",
	"_nHSDPA_x5fDL_x5fSourceRF_fTestModel2",
	"_nHSDPA_x5fDL_x5fSourceRF_fTestModel3_x5f16DPCHs",
	"_nHSDPA_x5fDL_x5fSourceRF_fTestModel3_x5f32DPCHs",
	"_nHSDPA_x5fDL_x5fSourceRF_fTestModel4",
	"_nHSDPA_x5fDL_x5fSourceRF_fTestModel5_x5f6DPCHs",
	"_nHSDPA_x5fDL_x5fSourceRF_fTestModel5_x5f14DPCHs",
	"_nHSDPA_x5fDL_x5fSourceRF_fTestModel5_x5f30DPCHs",
	"_nHSDPA_x5fDL_x5fSourceRF_fTestModel6",
	"StdForm");
create_constant_form ("_nHSDPA_x5fDL_x5fSourceRF_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nHSDPA_x5fDL_x5fSourceRF_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nHSDPA_x5fDL_x5fSourceRF_fOutputSTTDSet",
	"_nHSDPA_x5fDL_x5fSourceRF_fNO",
	"_nHSDPA_x5fDL_x5fSourceRF_fYES",
	"StdForm");
create_constant_form ("_nHSDPA_x5fDL_x5fSourceRF_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nHSDPA_x5fDL_x5fSourceRF_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nHSDPA_x5fDL_x5fSourceRF_fDPCH_x5fConfiguredSet",
	"_nHSDPA_x5fDL_x5fSourceRF_fNO",
	"_nHSDPA_x5fDL_x5fSourceRF_fYES",
	"StdForm");
create_constant_form ("_nHSDPA_x5fDL_x5fSourceRF_fH_x5fSet_x5f1", 
	"H-Set_1",
	0,
	"0",
	"H-Set_1");
create_constant_form ("_nHSDPA_x5fDL_x5fSourceRF_fH_x5fSet_x5f2", 
	"H-Set_2",
	0,
	"1",
	"H-Set_2");
create_constant_form ("_nHSDPA_x5fDL_x5fSourceRF_fH_x5fSet_x5f3", 
	"H-Set_3",
	0,
	"2",
	"H-Set_3");
create_constant_form ("_nHSDPA_x5fDL_x5fSourceRF_fH_x5fSet_x5f4", 
	"H-Set_4",
	0,
	"3",
	"H-Set_4");
create_constant_form ("_nHSDPA_x5fDL_x5fSourceRF_fH_x5fSet_x5f5", 
	"H-Set_5",
	0,
	"4",
	"H-Set_5");
create_constant_form ("_nHSDPA_x5fDL_x5fSourceRF_fH_x5fSet_x5f6", 
	"H-Set_6",
	0,
	"5",
	"H-Set_6");
create_constant_form ("_nHSDPA_x5fDL_x5fSourceRF_fH_x5fSet_x5f7", 
	"H-Set_7",
	0,
	"6",
	"H-Set_7");
create_constant_form ("_nHSDPA_x5fDL_x5fSourceRF_fH_x5fSet_x5f8", 
	"H-Set_8",
	0,
	"7",
	"H-Set_8");
create_constant_form ("_nHSDPA_x5fDL_x5fSourceRF_fH_x5fSet_x5f9", 
	"H-Set_9",
	0,
	"8",
	"H-Set_9");
create_constant_form ("_nHSDPA_x5fDL_x5fSourceRF_fH_x5fSet_x5f10", 
	"H-Set_10",
	0,
	"9",
	"H-Set_10");
create_constant_form ("_nHSDPA_x5fDL_x5fSourceRF_fH_x5fSet_x5f11", 
	"H-Set_11",
	0,
	"10",
	"H-Set_11");
create_constant_form ("_nHSDPA_x5fDL_x5fSourceRF_fH_x5fSet_x5f12", 
	"H-Set_12",
	0,
	"11",
	"H-Set_12");
create_form_set("_nHSDPA_x5fDL_x5fSourceRF_fHS_x5fPDSCH_x5f1_x5fFRCSet",
	"_nHSDPA_x5fDL_x5fSourceRF_fH_x5fSet_x5f1",
	"_nHSDPA_x5fDL_x5fSourceRF_fH_x5fSet_x5f2",
	"_nHSDPA_x5fDL_x5fSourceRF_fH_x5fSet_x5f3",
	"_nHSDPA_x5fDL_x5fSourceRF_fH_x5fSet_x5f4",
	"_nHSDPA_x5fDL_x5fSourceRF_fH_x5fSet_x5f5",
	"_nHSDPA_x5fDL_x5fSourceRF_fH_x5fSet_x5f6",
	"_nHSDPA_x5fDL_x5fSourceRF_fH_x5fSet_x5f7",
	"_nHSDPA_x5fDL_x5fSourceRF_fH_x5fSet_x5f8",
	"_nHSDPA_x5fDL_x5fSourceRF_fH_x5fSet_x5f9",
	"_nHSDPA_x5fDL_x5fSourceRF_fH_x5fSet_x5f10",
	"_nHSDPA_x5fDL_x5fSourceRF_fH_x5fSet_x5f11",
	"_nHSDPA_x5fDL_x5fSourceRF_fH_x5fSet_x5f12",
	"StdForm");
create_constant_form ("_nHSDPA_x5fDL_x5fSourceRF_fRandom", 
	"Random",
	0,
	"0",
	"Random");
create_constant_form ("_nHSDPA_x5fDL_x5fSourceRF_fPN9", 
	"PN9",
	0,
	"1",
	"PN9");
create_constant_form ("_nHSDPA_x5fDL_x5fSourceRF_fPN15", 
	"PN15",
	0,
	"2",
	"PN15");
create_constant_form ("_nHSDPA_x5fDL_x5fSourceRF_fRepeat_x5fBits", 
	"Repeat Bits",
	0,
	"3",
	"Repeat Bits");
create_form_set("_nHSDPA_x5fDL_x5fSourceRF_fHS_x5fPDSCH_x5f1_x5fDataPatternSet",
	"_nHSDPA_x5fDL_x5fSourceRF_fRandom",
	"_nHSDPA_x5fDL_x5fSourceRF_fPN9",
	"_nHSDPA_x5fDL_x5fSourceRF_fPN15",
	"_nHSDPA_x5fDL_x5fSourceRF_fRepeat_x5fBits",
	"StdForm");
create_constant_form ("_nHSDPA_x5fDL_x5fSourceRF_fRamp", 
	"Ramp",
	0,
	"0",
	"Ramp");
create_constant_form ("_nHSDPA_x5fDL_x5fSourceRF_fStable", 
	"Stable",
	0,
	"1",
	"Stable");
create_form_set("_nHSDPA_x5fDL_x5fSourceRF_fTM_x5fOutputModeSet",
	"_nHSDPA_x5fDL_x5fSourceRF_fRamp",
	"_nHSDPA_x5fDL_x5fSourceRF_fStable",
	"StdForm");
create_constant_form ("_nHSDPA_x5fDL_x5fSourceRF_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nHSDPA_x5fDL_x5fSourceRF_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nHSDPA_x5fDL_x5fSourceRF_fTM4_x5fEnableP_x5fCPICHSet",
	"_nHSDPA_x5fDL_x5fSourceRF_fNO",
	"_nHSDPA_x5fDL_x5fSourceRF_fYES",
	"StdForm");
create_constant_form ("_nHSDPA_x5fDL_x5fSourceRF_fnormal", 
	"normal",
	0,
	"0",
	"Normal");
create_constant_form ("_nHSDPA_x5fDL_x5fSourceRF_fright", 
	"right",
	0,
	"1",
	"Right Alternate");
create_constant_form ("_nHSDPA_x5fDL_x5fSourceRF_fleft", 
	"left",
	0,
	"2",
	"Left Alternate");
create_form_set("_nHSDPA_x5fDL_x5fSourceRF_fOCNS_x5fScrambleTypeSet",
	"_nHSDPA_x5fDL_x5fSourceRF_fnormal",
	"_nHSDPA_x5fDL_x5fSourceRF_fright",
	"_nHSDPA_x5fDL_x5fSourceRF_fleft",
	"StdForm");
create_item ("HSDPA_DL_SourceRF","HSDPA downlink RF signal source",
	"H",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_HSDPA_DL_SourceRF",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"HSDPA_DL_SourceRF",
	SPDesignAnnotFmt,
	"SYM_DSN_HSDPA_DL_SourceRF",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("ROut","Output resistance",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","DefaultROut")),
	create_parm ("FCarrier","Carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","2140 MHz")),
	create_parm ("Power","RF output power",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","0.01")),
	create_parm ("PhasePolarity","If set to Invert, Q channel signal is inverted",
		PARM_INT | PARM_NO_DISPLAY,
		"_nHSDPA_x5fDL_x5fSourceRF_fPhasePolaritySet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fDL_x5fSourceRF_fDL_x5fNormal","DL_Normal")),
	create_parm ("GainImbalance","Gain imbalance, I to Q channel, in dB",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("PhaseImbalance","Phase imbalance, I to Q channel, in degrees",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("I_OriginOffset","I origin offset in percent with respect to output rms voltage",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("Q_OriginOffset","Q origin offset in percent with respect to output rms voltage",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("IQ_Rotation","IQ rotation in degress",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("NDensity","Additive noise density in dBm per Hz",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-10000")),
	create_parm ("SamplesPerChip","Samples per chip",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("ExcessBW","Excess bandwidth of raised cosine filters",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.22")),
	create_parm ("RRC_FilterLength","Length of raised cosine filters in number of symbols",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")),
	create_parm ("SourceType","Signal source type",
		PARM_INT,
		"_nHSDPA_x5fDL_x5fSourceRF_fSourceTypeSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fDL_x5fSourceRF_fHSDPA","HSDPA")),
	create_parm ("OutputSTTD","Whether or not export STTD",
		PARM_INT,
		"_nHSDPA_x5fDL_x5fSourceRF_fOutputSTTDSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fDL_x5fSourceRF_fNO","NO")),
	create_parm ("DPCH_Configured","Setting to YES if DPCH is configured, otherwise NO",
		PARM_INT,
		"_nHSDPA_x5fDL_x5fSourceRF_fDPCH_x5fConfiguredSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fDL_x5fSourceRF_fNO","NO")),
	create_parm ("DPCH_EcToIor","DPCH power gain factor",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","-15")),
	create_parm ("PCPICH_EcToIor","Primary CPICH power gain in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","-10.0")),
	create_parm ("PCCPCH_EcToIor","PCCPCH power gain in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","-12")),
	create_parm ("SCH_EcToIor","SCH power gain in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","-15")),
	create_parm ("PICH_EcToIor","PICH power gain in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","-15")),
	create_parm ("HS_SCCH_Configured","Whether or not SCCH 1 to 4 configured",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1, 0, 0, 0}")),
	create_parm ("HS_SCCH_EcToIor","Power gain factor of HS-SCCH 1 to 4 in dB",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		DB_GAIN_UNIT,
		prm("StringAndReference","{-10, -10, -10, -10}")),
	create_parm ("HS_PDSCH_Configured","Whether or not HS-PDSCH 1 to 4 configured",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1, 0, 0, 0}")),
	create_parm ("HS_PDSCH_EcToIor","Power gain factor of HS-PDSCH 1 to 4 in dB",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		DB_GAIN_UNIT,
		prm("StringAndReference","{-6, -6, -6, -6}")),
	create_parm ("HS_PDSCH_UE_Category","UE category of HS-PDSCH 1 to 4",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1, 1, 1, 1}")),
	create_parm ("HS_PDSCH_UEIdentity","UE identity of HS-PDSCH 1 to 4",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0xAAAA, 0x12AA, 0x1AAA, 0x1FAA}")),
	create_parm ("HS_PDSCH_MS","Modulation scheme of HS-PDSCH 1 to 4",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0, 0, 0, 0}")),
	create_parm ("HS_PDSCH_CodeOffset","Spread code offset of HS-PDSCH 1 to 4",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1, 13, 14, 15}")),
	create_parm ("HS_PDSCH_1_FRC","Fixed reference channel of HS-PDSCH 1",
		PARM_INT,
		"_nHSDPA_x5fDL_x5fSourceRF_fHS_x5fPDSCH_x5f1_x5fFRCSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fDL_x5fSourceRF_fH_x5fSet_x5f1","H_Set_1")),
	create_parm ("HS_PDSCH_1_RVSeq","RV coding sequence of HS-PDSCH 1",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0, 2, 5, 6}")),
	create_parm ("HS_PDSCH_1_DataPattern","Data pattern of HS-PDSCH 1",
		PARM_INT,
		"_nHSDPA_x5fDL_x5fSourceRF_fHS_x5fPDSCH_x5f1_x5fDataPatternSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fDL_x5fSourceRF_fRandom","Random")),
	create_parm ("HS_PDSCH_1_RepeatBitValue","Repeating data value of HS-PDSCH 1",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0x0001")),
	create_parm ("HS_PDSCH_1_RepeatBitPeriod","Repeating data period of HS-PDSCH 1",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","2")),
	create_parm ("HS_PDSCH_1_TTIPattern","Inter-TTI pattern of HS-PDSCH 1",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1, 0, 0, 1, 0, 0}")),
	create_parm ("HS_PDSCH_2_TTIPattern","Inter-TTI pattern of HS-PDSCH 2",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1, 0, 0, 1, 0, 0}")),
	create_parm ("HS_PDSCH_3_TTIPattern","Inter-TTI pattern of HS-PDSCH 3",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1, 0, 0, 1, 0, 0}")),
	create_parm ("HS_PDSCH_4_TTIPattern","Inter-TTI pattern of HS-PDSCH 4",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1, 0, 0, 1, 0, 0}")),
	create_parm ("HS_PDSCH_2_NumPhyCH","Number of physical channels of HS-PDSCH 2",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("HS_PDSCH_3_NumPhyCH","Number of physical channels of HS-PDSCH 3",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("HS_PDSCH_4_NumPhyCH","Number of physical channels of HS-PDSCH 4",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("TM_OutputMode","output mode of test model",
		PARM_INT | PARM_NO_DISPLAY,
		"_nHSDPA_x5fDL_x5fSourceRF_fTM_x5fOutputModeSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fDL_x5fSourceRF_fRamp","Ramp")),
	create_parm ("TM4_EnableP_CPICH","Test Model 4 enable primary CPICH?",
		PARM_INT | PARM_NO_DISPLAY,
		"_nHSDPA_x5fDL_x5fSourceRF_fTM4_x5fEnableP_x5fCPICHSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fDL_x5fSourceRF_fYES","YES")),
	create_parm ("TM4_PCCPCH_SCH_Gain","Test Model 4 PCCPCH_SCH level setting",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","-6")),
	create_parm ("TM4_P_CPICH_Gain","Test Model 4 P_CPICH level setting",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","-6")),
	create_parm ("OCNS_DPCHNum","downlink DPCH number",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","6")),
	create_parm ("OCNS_ScrambleCode","index of scramble code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("OCNS_ScrambleOffset","scramble code offset",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("OCNS_ScrambleType","scramble code type",
		PARM_INT,
		"_nHSDPA_x5fDL_x5fSourceRF_fOCNS_x5fScrambleTypeSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fDL_x5fSourceRF_fnormal","normal")),
	create_parm ("OCNS_SpreadCodeArray","index array of spread codes",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{122, 123, 124, 125, 126, 127}")),
	create_parm ("OCNS_DataPatternArray","data pattern array: 0-random, 1-PN9, 2-PN15, 3-Repeat Bits",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0, 0, 0, 0, 0, 0}")),
	create_parm ("OCNS_RepBitValueArray","bits value array to be filled in data sequence",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0, 0, 0, 0, 0, 0}")),
	create_parm ("OCNS_PowerArray","channel power array in decibels",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0, -2, -2, -4, -1, -3}")),
	create_parm ("OCNS_tDPCHOffsetArray","DPCH channel offset array",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0, 0, 0, 0, 0, 0}")),
	create_parm ("OCNS_SpreadFactorArray","orthogonal channel spread factor array",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{128, 128, 128, 128, 128, 128}")));
library_group("HSDPA, Signal Sources","HSDPA, Signal Sources","HSDPA_DL_SourceRF");
palette_group("HSDPA, Signal Sources","HSDPA, Signal Sources","HSDPA_DL_SourceRF");

create_constant_form ("_nHSDPA_x5fPDSCH_x5f1_x5f4_fRandom_x5f1", 
	"Random_1",
	0,
	"0",
	"Random");
create_constant_form ("_nHSDPA_x5fPDSCH_x5f1_x5f4_fPN9_x5f1", 
	"PN9_1",
	0,
	"1",
	"PN9");
create_constant_form ("_nHSDPA_x5fPDSCH_x5f1_x5f4_fPN15_x5f1", 
	"PN15_1",
	0,
	"2",
	"PN15");
create_constant_form ("_nHSDPA_x5fPDSCH_x5f1_x5f4_fRepeat_x5fBits_x5f1", 
	"Repeat Bits_1",
	0,
	"3",
	"Repeat Bits");
create_form_set("_nHSDPA_x5fPDSCH_x5f1_x5f4_fHS_x5fPDSCH_x5f1_x5fDataPatternSet",
	"_nHSDPA_x5fPDSCH_x5f1_x5f4_fRandom_x5f1",
	"_nHSDPA_x5fPDSCH_x5f1_x5f4_fPN9_x5f1",
	"_nHSDPA_x5fPDSCH_x5f1_x5f4_fPN15_x5f1",
	"_nHSDPA_x5fPDSCH_x5f1_x5f4_fRepeat_x5fBits_x5f1",
	"StdForm");
create_constant_form ("_nHSDPA_x5fPDSCH_x5f1_x5f4_fPN9_x5f2", 
	"PN9_2",
	0,
	"0",
	"PN9");
create_constant_form ("_nHSDPA_x5fPDSCH_x5f1_x5f4_fPN15_x5f2", 
	"PN15_2",
	0,
	"1",
	"PN15");
create_constant_form ("_nHSDPA_x5fPDSCH_x5f1_x5f4_fFIX4_x5f2", 
	"FIX4_2",
	0,
	"2",
	"FIX4");
create_constant_form ("_nHSDPA_x5fPDSCH_x5f1_x5f4_f_x5f4_x5f1_x5f4_x5f0_x5f2", 
	"_4_1_4_0_2",
	0,
	"3",
	"4_1_4_0");
create_constant_form ("_nHSDPA_x5fPDSCH_x5f1_x5f4_f_x5f8_x5f1_x5f8_x5f0_x5f2", 
	"_8_1_8_0_2",
	0,
	"4",
	"8_1_8_0");
create_constant_form ("_nHSDPA_x5fPDSCH_x5f1_x5f4_f_x5f16_x5f1_x5f16_x5f0_x5f2", 
	"_16_1_16_0_2",
	0,
	"5",
	"16_1_16_0");
create_constant_form ("_nHSDPA_x5fPDSCH_x5f1_x5f4_f_x5f32_x5f1_x5f32_x5f0_x5f2", 
	"_32_1_32_0_2",
	0,
	"6",
	"32_1_32_0");
create_constant_form ("_nHSDPA_x5fPDSCH_x5f1_x5f4_f_x5f64_x5f1_x5f64_x5f0_x5f2", 
	"_64_1_64_0_2",
	0,
	"7",
	"64_1_64_0");
create_form_set("_nHSDPA_x5fPDSCH_x5f1_x5f4_fHS_x5fPDSCH_x5f2_x5fDataPatternSet",
	"_nHSDPA_x5fPDSCH_x5f1_x5f4_fPN9_x5f2",
	"_nHSDPA_x5fPDSCH_x5f1_x5f4_fPN15_x5f2",
	"_nHSDPA_x5fPDSCH_x5f1_x5f4_fFIX4_x5f2",
	"_nHSDPA_x5fPDSCH_x5f1_x5f4_f_x5f4_x5f1_x5f4_x5f0_x5f2",
	"_nHSDPA_x5fPDSCH_x5f1_x5f4_f_x5f8_x5f1_x5f8_x5f0_x5f2",
	"_nHSDPA_x5fPDSCH_x5f1_x5f4_f_x5f16_x5f1_x5f16_x5f0_x5f2",
	"_nHSDPA_x5fPDSCH_x5f1_x5f4_f_x5f32_x5f1_x5f32_x5f0_x5f2",
	"_nHSDPA_x5fPDSCH_x5f1_x5f4_f_x5f64_x5f1_x5f64_x5f0_x5f2",
	"StdForm");
create_constant_form ("_nHSDPA_x5fPDSCH_x5f1_x5f4_fPN9_x5f3", 
	"PN9_3",
	0,
	"0",
	"PN9");
create_constant_form ("_nHSDPA_x5fPDSCH_x5f1_x5f4_fPN15_x5f3", 
	"PN15_3",
	0,
	"1",
	"PN15");
create_constant_form ("_nHSDPA_x5fPDSCH_x5f1_x5f4_fFIX4_x5f3", 
	"FIX4_3",
	0,
	"2",
	"FIX4");
create_constant_form ("_nHSDPA_x5fPDSCH_x5f1_x5f4_f_x5f4_x5f1_x5f4_x5f0_x5f3", 
	"_4_1_4_0_3",
	0,
	"3",
	"4_1_4_0");
create_constant_form ("_nHSDPA_x5fPDSCH_x5f1_x5f4_f_x5f8_x5f1_x5f8_x5f0_x5f3", 
	"_8_1_8_0_3",
	0,
	"4",
	"8_1_8_0");
create_constant_form ("_nHSDPA_x5fPDSCH_x5f1_x5f4_f_x5f16_x5f1_x5f16_x5f0_x5f3", 
	"_16_1_16_0_3",
	0,
	"5",
	"16_1_16_0");
create_constant_form ("_nHSDPA_x5fPDSCH_x5f1_x5f4_f_x5f32_x5f1_x5f32_x5f0_x5f3", 
	"_32_1_32_0_3",
	0,
	"6",
	"32_1_32_0");
create_constant_form ("_nHSDPA_x5fPDSCH_x5f1_x5f4_f_x5f64_x5f1_x5f64_x5f0_x5f3", 
	"_64_1_64_0_3",
	0,
	"7",
	"64_1_64_0");
create_form_set("_nHSDPA_x5fPDSCH_x5f1_x5f4_fHS_x5fPDSCH_x5f3_x5fDataPatternSet",
	"_nHSDPA_x5fPDSCH_x5f1_x5f4_fPN9_x5f3",
	"_nHSDPA_x5fPDSCH_x5f1_x5f4_fPN15_x5f3",
	"_nHSDPA_x5fPDSCH_x5f1_x5f4_fFIX4_x5f3",
	"_nHSDPA_x5fPDSCH_x5f1_x5f4_f_x5f4_x5f1_x5f4_x5f0_x5f3",
	"_nHSDPA_x5fPDSCH_x5f1_x5f4_f_x5f8_x5f1_x5f8_x5f0_x5f3",
	"_nHSDPA_x5fPDSCH_x5f1_x5f4_f_x5f16_x5f1_x5f16_x5f0_x5f3",
	"_nHSDPA_x5fPDSCH_x5f1_x5f4_f_x5f32_x5f1_x5f32_x5f0_x5f3",
	"_nHSDPA_x5fPDSCH_x5f1_x5f4_f_x5f64_x5f1_x5f64_x5f0_x5f3",
	"StdForm");
create_constant_form ("_nHSDPA_x5fPDSCH_x5f1_x5f4_fPN9_x5f4", 
	"PN9_4",
	0,
	"0",
	"PN9");
create_constant_form ("_nHSDPA_x5fPDSCH_x5f1_x5f4_fPN15_x5f4", 
	"PN15_4",
	0,
	"1",
	"PN15");
create_constant_form ("_nHSDPA_x5fPDSCH_x5f1_x5f4_fFIX4_x5f4", 
	"FIX4_4",
	0,
	"2",
	"FIX4");
create_constant_form ("_nHSDPA_x5fPDSCH_x5f1_x5f4_f_x5f4_x5f1_x5f4_x5f0_x5f4", 
	"_4_1_4_0_4",
	0,
	"3",
	"4_1_4_0");
create_constant_form ("_nHSDPA_x5fPDSCH_x5f1_x5f4_f_x5f8_x5f1_x5f8_x5f0_x5f4", 
	"_8_1_8_0_4",
	0,
	"4",
	"8_1_8_0");
create_constant_form ("_nHSDPA_x5fPDSCH_x5f1_x5f4_f_x5f16_x5f1_x5f16_x5f0_x5f4", 
	"_16_1_16_0_4",
	0,
	"5",
	"16_1_16_0");
create_constant_form ("_nHSDPA_x5fPDSCH_x5f1_x5f4_f_x5f32_x5f1_x5f32_x5f0_x5f4", 
	"_32_1_32_0_4",
	0,
	"6",
	"32_1_32_0");
create_constant_form ("_nHSDPA_x5fPDSCH_x5f1_x5f4_f_x5f64_x5f1_x5f64_x5f0_x5f4", 
	"_64_1_64_0_4",
	0,
	"7",
	"64_1_64_0");
create_form_set("_nHSDPA_x5fPDSCH_x5f1_x5f4_fHS_x5fPDSCH_x5f4_x5fDataPatternSet",
	"_nHSDPA_x5fPDSCH_x5f1_x5f4_fPN9_x5f4",
	"_nHSDPA_x5fPDSCH_x5f1_x5f4_fPN15_x5f4",
	"_nHSDPA_x5fPDSCH_x5f1_x5f4_fFIX4_x5f4",
	"_nHSDPA_x5fPDSCH_x5f1_x5f4_f_x5f4_x5f1_x5f4_x5f0_x5f4",
	"_nHSDPA_x5fPDSCH_x5f1_x5f4_f_x5f8_x5f1_x5f8_x5f0_x5f4",
	"_nHSDPA_x5fPDSCH_x5f1_x5f4_f_x5f16_x5f1_x5f16_x5f0_x5f4",
	"_nHSDPA_x5fPDSCH_x5f1_x5f4_f_x5f32_x5f1_x5f32_x5f0_x5f4",
	"_nHSDPA_x5fPDSCH_x5f1_x5f4_f_x5f64_x5f1_x5f64_x5f0_x5f4",
	"StdForm");
create_item ("HSDPA_PDSCH_1_4","HSDPA HS-PDSCH Source",
	"H",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_HSDPA_PDSCH_1_4",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"HSDPA_PDSCH_1_4",
	SPDesignAnnotFmt,
	"SYM_DSN_HSDPA_PDSCH_1_4",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("ScrambleCode","Index of scramble code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("HS_PDSCH_Configured","Whether or not HS-PDSCH 1 to 4 configured",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1, 1, 1, 1}")),
	create_parm ("HS_PDSCH_EcToIor","Power gain factor of of HS-PDSCH 1 to 4 in dB",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		DB_GAIN_UNIT,
		prm("StringAndReference","{-10, -10, -10, -10}")),
	create_parm ("HS_PDSCH_UE_Category","UE category of of HS-PDSCH 1 to 4",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1, 1, 1, 1}")),
	create_parm ("HS_PDSCH_MS","Modulation scheme of HS-PDSCH 1 to 4",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0, 0, 0, 0}")),
	create_parm ("HS_PDSCH_NumPhyCH","Number of physical channels HS PDSCH 1 to 4",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{5, 1, 1, 1}")),
	create_parm ("HS_PDSCH_CodeOffset","HS-PDSCH spread code offset",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1, 13, 14, 15}")),
	create_parm ("HS_PDSCH_1_TTIPattern","Inter-TTI pattern of HS-PDSCH 1",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1, 0, 0, 1, 0, 0}")),
	create_parm ("HS_PDSCH_1_DataPattern","HS-PDSCH1 data pattern",
		PARM_INT,
		"_nHSDPA_x5fPDSCH_x5f1_x5f4_fHS_x5fPDSCH_x5f1_x5fDataPatternSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fPDSCH_x5f1_x5f4_fRandom_x5f1","Random_1")),
	create_parm ("HS_PDSCH_1_RepeatBitValue","HS-PDSCH1 repeating bit value",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0x0001")),
	create_parm ("HS_PDSCH_1_RepeatBitPeriod","HS-PDSCH1 repeating bit period",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","2")),
	create_parm ("HS_PDSCH_1_TBSize","HS-PDSCH1 transport block size",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3202")),
	create_parm ("HS_PDSCH_1_NumHARQ","Number of HARQ processes of HS-PDSCH1",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("HS_PDSCH_1_RVSeq","HS-PDSCH1 redundancy version coding sequence",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0, 2, 5, 6}")),
	create_parm ("HS_PDSCH_1_NIR","HS-PDSCH1 Inremental Redundancy Register Buffer Size",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","9600")),
	create_parm ("HS_PDSCH_2_TTIPattern","Inter-TTI pattern of HS-PDSCH 2",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1, 0, 0, 1, 0, 0}")),
	create_parm ("HS_PDSCH_2_DataPattern","HS-PDSCH2 data pattern",
		PARM_INT,
		"_nHSDPA_x5fPDSCH_x5f1_x5f4_fHS_x5fPDSCH_x5f2_x5fDataPatternSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fPDSCH_x5f1_x5f4_fPN9_x5f2","PN9_2")),
	create_parm ("HS_PDSCH_3_TTIPattern","Inter-TTI pattern of HS-PDSCH 3",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1, 0, 0, 1, 0, 0}")),
	create_parm ("HS_PDSCH_3_DataPattern","HS-PDSCH3 data pattern",
		PARM_INT,
		"_nHSDPA_x5fPDSCH_x5f1_x5f4_fHS_x5fPDSCH_x5f3_x5fDataPatternSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fPDSCH_x5f1_x5f4_fPN9_x5f3","PN9_3")),
	create_parm ("HS_PDSCH_4_TTIPattern","Inter-TTI pattern of HS-PDSCH 4",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1, 0, 0, 1, 0, 0}")),
	create_parm ("HS_PDSCH_4_DataPattern","HS-PDSCH4 data pattern",
		PARM_INT,
		"_nHSDPA_x5fPDSCH_x5f1_x5f4_fHS_x5fPDSCH_x5f4_x5fDataPatternSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fPDSCH_x5f1_x5f4_fPN9_x5f4","PN9_4")));
library_group("HSDPA, Signal Sources","HSDPA, Signal Sources","HSDPA_PDSCH_1_4");
palette_group("HSDPA, Signal Sources","HSDPA, Signal Sources","HSDPA_PDSCH_1_4");

create_constant_form ("_nHSDPA_x5fDL_x5fSource_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nHSDPA_x5fDL_x5fSource_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nHSDPA_x5fDL_x5fSource_fOutputSTTDSet",
	"_nHSDPA_x5fDL_x5fSource_fNO",
	"_nHSDPA_x5fDL_x5fSource_fYES",
	"StdForm");
create_constant_form ("_nHSDPA_x5fDL_x5fSource_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nHSDPA_x5fDL_x5fSource_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nHSDPA_x5fDL_x5fSource_fDPCH_x5fConfiguredSet",
	"_nHSDPA_x5fDL_x5fSource_fNO",
	"_nHSDPA_x5fDL_x5fSource_fYES",
	"StdForm");
create_constant_form ("_nHSDPA_x5fDL_x5fSource_fH_x5fSet_x5f1", 
	"H-Set_1",
	0,
	"0",
	"H-Set_1");
create_constant_form ("_nHSDPA_x5fDL_x5fSource_fH_x5fSet_x5f2", 
	"H-Set_2",
	0,
	"1",
	"H-Set_2");
create_constant_form ("_nHSDPA_x5fDL_x5fSource_fH_x5fSet_x5f3", 
	"H-Set_3",
	0,
	"2",
	"H-Set_3");
create_constant_form ("_nHSDPA_x5fDL_x5fSource_fH_x5fSet_x5f4", 
	"H-Set_4",
	0,
	"3",
	"H-Set_4");
create_constant_form ("_nHSDPA_x5fDL_x5fSource_fH_x5fSet_x5f5", 
	"H-Set_5",
	0,
	"4",
	"H-Set_5");
create_constant_form ("_nHSDPA_x5fDL_x5fSource_fH_x5fSet_x5f6", 
	"H-Set_6",
	0,
	"5",
	"H-Set_6");
create_constant_form ("_nHSDPA_x5fDL_x5fSource_fH_x5fSet_x5f7", 
	"H-Set_7",
	0,
	"6",
	"H-Set_7");
create_constant_form ("_nHSDPA_x5fDL_x5fSource_fH_x5fSet_x5f8", 
	"H-Set_8",
	0,
	"7",
	"H-Set_8");
create_constant_form ("_nHSDPA_x5fDL_x5fSource_fH_x5fSet_x5f9", 
	"H-Set_9",
	0,
	"8",
	"H-Set_9");
create_constant_form ("_nHSDPA_x5fDL_x5fSource_fH_x5fSet_x5f10", 
	"H-Set_10",
	0,
	"9",
	"H-Set_10");
create_constant_form ("_nHSDPA_x5fDL_x5fSource_fH_x5fSet_x5f11", 
	"H-Set_11",
	0,
	"10",
	"H-Set_11");
create_constant_form ("_nHSDPA_x5fDL_x5fSource_fH_x5fSet_x5f12", 
	"H-Set_12",
	0,
	"11",
	"H-Set_12");
create_form_set("_nHSDPA_x5fDL_x5fSource_fHS_x5fPDSCH_x5f1_x5fFRCSet",
	"_nHSDPA_x5fDL_x5fSource_fH_x5fSet_x5f1",
	"_nHSDPA_x5fDL_x5fSource_fH_x5fSet_x5f2",
	"_nHSDPA_x5fDL_x5fSource_fH_x5fSet_x5f3",
	"_nHSDPA_x5fDL_x5fSource_fH_x5fSet_x5f4",
	"_nHSDPA_x5fDL_x5fSource_fH_x5fSet_x5f5",
	"_nHSDPA_x5fDL_x5fSource_fH_x5fSet_x5f6",
	"_nHSDPA_x5fDL_x5fSource_fH_x5fSet_x5f7",
	"_nHSDPA_x5fDL_x5fSource_fH_x5fSet_x5f8",
	"_nHSDPA_x5fDL_x5fSource_fH_x5fSet_x5f9",
	"_nHSDPA_x5fDL_x5fSource_fH_x5fSet_x5f10",
	"_nHSDPA_x5fDL_x5fSource_fH_x5fSet_x5f11",
	"_nHSDPA_x5fDL_x5fSource_fH_x5fSet_x5f12",
	"StdForm");
create_constant_form ("_nHSDPA_x5fDL_x5fSource_fRandom", 
	"Random",
	0,
	"0",
	"Random");
create_constant_form ("_nHSDPA_x5fDL_x5fSource_fPN9", 
	"PN9",
	0,
	"1",
	"PN9");
create_constant_form ("_nHSDPA_x5fDL_x5fSource_fPN15", 
	"PN15",
	0,
	"2",
	"PN15");
create_constant_form ("_nHSDPA_x5fDL_x5fSource_fRepeat_x5fBits", 
	"Repeat Bits",
	0,
	"3",
	"Repeat Bits");
create_form_set("_nHSDPA_x5fDL_x5fSource_fHS_x5fPDSCH_x5f1_x5fDataPatternSet",
	"_nHSDPA_x5fDL_x5fSource_fRandom",
	"_nHSDPA_x5fDL_x5fSource_fPN9",
	"_nHSDPA_x5fDL_x5fSource_fPN15",
	"_nHSDPA_x5fDL_x5fSource_fRepeat_x5fBits",
	"StdForm");
create_constant_form ("_nHSDPA_x5fDL_x5fSource_fnormal", 
	"normal",
	0,
	"0",
	"Normal");
create_constant_form ("_nHSDPA_x5fDL_x5fSource_fright", 
	"right",
	0,
	"1",
	"Right Alternate");
create_constant_form ("_nHSDPA_x5fDL_x5fSource_fleft", 
	"left",
	0,
	"2",
	"Left Alternate");
create_form_set("_nHSDPA_x5fDL_x5fSource_fOCNS_x5fScrambleTypeSet",
	"_nHSDPA_x5fDL_x5fSource_fnormal",
	"_nHSDPA_x5fDL_x5fSource_fright",
	"_nHSDPA_x5fDL_x5fSource_fleft",
	"StdForm");
create_item ("HSDPA_DL_Source","HSDPA downlink source",
	"H",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_HSDPA_DL_Source",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"HSDPA_DL_Source",
	SPDesignAnnotFmt,
	"SYM_DSN_HSDPA_DL_Source",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("OutputSTTD","Whether or not export STTD",
		PARM_INT,
		"_nHSDPA_x5fDL_x5fSource_fOutputSTTDSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fDL_x5fSource_fNO","NO")),
	create_parm ("DPCH_Configured","Setting to YES if DPCH is configured, otherwise NO",
		PARM_INT,
		"_nHSDPA_x5fDL_x5fSource_fDPCH_x5fConfiguredSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fDL_x5fSource_fNO","NO")),
	create_parm ("DPCH_EcToIor","DPCH power gain factor",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","-15")),
	create_parm ("PCPICH_EcToIor","Primary CPICH power gain in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","-10.0")),
	create_parm ("PCCPCH_EcToIor","PCCPCH power gain in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","-12")),
	create_parm ("SCH_EcToIor","SCH power gain in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","-15")),
	create_parm ("PICH_EcToIor","PICH power gain in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","-15")),
	create_parm ("HS_SCCH_Configured","Whether or not SCCH 1 to 4 configured",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1, 0, 0, 0}")),
	create_parm ("HS_SCCH_EcToIor","Power gain factor of HS-SCCH 1 to 4 in dB",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		DB_GAIN_UNIT,
		prm("StringAndReference","{-10, -10, -10, -10}")),
	create_parm ("HS_PDSCH_Configured","Whether or not HS-PDSCH 1 to 4 configured",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1, 0, 0, 0}")),
	create_parm ("HS_PDSCH_EcToIor","Power gain factor of HS-PDSCH 1 to 4 in dB",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		DB_GAIN_UNIT,
		prm("StringAndReference","{-6, -6, -6, -6}")),
	create_parm ("HS_PDSCH_UE_Category","UE category of HS-PDSCH 1 to 4",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0, 0, 0, 0}")),
	create_parm ("HS_PDSCH_UEIdentity","UE identity of HS-PDSCH 1 to 4",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0xAAAA, 0x12AA, 0x1AAA, 0x1FAA}")),
	create_parm ("HS_PDSCH_MS","Modulation scheme of HS-PDSCH 1 to 4",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0, 0, 0, 0}")),
	create_parm ("HS_PDSCH_CodeOffset","Spread code offset of HS-PDSCH 1 to 4",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1, 13, 14, 15}")),
	create_parm ("HS_PDSCH_1_FRC","Fixed reference channel of HS-PDSCH 1",
		PARM_INT,
		"_nHSDPA_x5fDL_x5fSource_fHS_x5fPDSCH_x5f1_x5fFRCSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fDL_x5fSource_fH_x5fSet_x5f1","H_Set_1")),
	create_parm ("HS_PDSCH_1_RVSeq","RV coding sequence of HS-PDSCH 1",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0, 2, 5, 6}")),
	create_parm ("HS_PDSCH_1_DataPattern","Data pattern of HS-PDSCH 1",
		PARM_INT,
		"_nHSDPA_x5fDL_x5fSource_fHS_x5fPDSCH_x5f1_x5fDataPatternSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fDL_x5fSource_fRandom","Random")),
	create_parm ("HS_PDSCH_1_RepeatBitValue","Repeating data value of HS-PDSCH 1",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0x0001")),
	create_parm ("HS_PDSCH_1_RepeatBitPeriod","Repeating data period of HS-PDSCH 1",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","2")),
	create_parm ("HS_PDSCH_1_TTIPattern","Inter-TTI pattern of HS-PDSCH 1",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1, 0, 0, 1, 0, 0}")),
	create_parm ("HS_PDSCH_2_TTIPattern","Inter-TTI pattern of HS-PDSCH 2",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1, 0, 0, 1, 0, 0}")),
	create_parm ("HS_PDSCH_3_TTIPattern","Inter-TTI pattern of HS-PDSCH 3",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1, 0, 0, 1, 0, 0}")),
	create_parm ("HS_PDSCH_4_TTIPattern","Inter-TTI pattern of HS-PDSCH 4",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1, 0, 0, 1, 0, 0}")),
	create_parm ("HS_PDSCH_2_NumPhyCH","Number of physical channels of HS-PDSCH 2",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("HS_PDSCH_3_NumPhyCH","Number of physical channels of HS-PDSCH 3",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("HS_PDSCH_4_NumPhyCH","Number of physical channels of HS-PDSCH 4",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("OCNS_DPCHNum","downlink DPCH number",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","6")),
	create_parm ("OCNS_ScrambleCode","index of scramble code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("OCNS_ScrambleOffset","scramble code offset",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("OCNS_ScrambleType","scramble code type",
		PARM_INT,
		"_nHSDPA_x5fDL_x5fSource_fOCNS_x5fScrambleTypeSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fDL_x5fSource_fnormal","normal")),
	create_parm ("OCNS_SpreadCodeArray","index array of spread codes",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{122, 123, 124, 125, 126, 127}")),
	create_parm ("OCNS_DataPatternArray","data pattern array: 0-random, 1-PN9, 2-PN15, 3-Repeat Bits",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0, 0, 0, 0, 0, 0}")),
	create_parm ("OCNS_RepBitValueArray","bits value array to be filled in data sequence",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0, 0, 0, 0, 0, 0}")),
	create_parm ("OCNS_PowerArray","channel power array in decibels",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0, -2, -2, -4, -1, -3}")),
	create_parm ("OCNS_tDPCHOffsetArray","DPCH channel offset array",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0, 0, 0, 0, 0, 0}")),
	create_parm ("OCNS_SpreadFactorArray","orthogonal channel spread factor array",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{128, 128, 128, 128, 128, 128}")));
library_group("HSDPA, Signal Sources","HSDPA, Signal Sources","HSDPA_DL_Source");
palette_group("HSDPA, Signal Sources","HSDPA, Signal Sources","HSDPA_DL_Source");

create_constant_form ("_nHSDPA_x5fPDSCH_x5fWithoutFEC_fPN9", 
	"PN9",
	0,
	"0",
	"PN9");
create_constant_form ("_nHSDPA_x5fPDSCH_x5fWithoutFEC_fPN15", 
	"PN15",
	0,
	"1",
	"PN15");
create_constant_form ("_nHSDPA_x5fPDSCH_x5fWithoutFEC_fFIX4", 
	"FIX4",
	0,
	"2",
	"FIX4");
create_constant_form ("_nHSDPA_x5fPDSCH_x5fWithoutFEC_f_x5f4_x5f1_x5f4_x5f0", 
	"_4_1_4_0",
	0,
	"3",
	"_4_1_4_0");
create_constant_form ("_nHSDPA_x5fPDSCH_x5fWithoutFEC_f_x5f8_x5f1_x5f8_x5f0", 
	"_8_1_8_0",
	0,
	"4",
	"_8_1_8_0");
create_constant_form ("_nHSDPA_x5fPDSCH_x5fWithoutFEC_f_x5f16_x5f1_x5f16_x5f0", 
	"_16_1_16_0",
	0,
	"5",
	"_16_1_16_0");
create_constant_form ("_nHSDPA_x5fPDSCH_x5fWithoutFEC_f_x5f32_x5f1_x5f32_x5f0", 
	"_32_1_32_0",
	0,
	"6",
	"_32_1_32_0");
create_constant_form ("_nHSDPA_x5fPDSCH_x5fWithoutFEC_f_x5f64_x5f1_x5f64_x5f0", 
	"_64_1_64_0",
	0,
	"7",
	"_64_1_64_0");
create_form_set("_nHSDPA_x5fPDSCH_x5fWithoutFEC_fDataPatternSet",
	"_nHSDPA_x5fPDSCH_x5fWithoutFEC_fPN9",
	"_nHSDPA_x5fPDSCH_x5fWithoutFEC_fPN15",
	"_nHSDPA_x5fPDSCH_x5fWithoutFEC_fFIX4",
	"_nHSDPA_x5fPDSCH_x5fWithoutFEC_f_x5f4_x5f1_x5f4_x5f0",
	"_nHSDPA_x5fPDSCH_x5fWithoutFEC_f_x5f8_x5f1_x5f8_x5f0",
	"_nHSDPA_x5fPDSCH_x5fWithoutFEC_f_x5f16_x5f1_x5f16_x5f0",
	"_nHSDPA_x5fPDSCH_x5fWithoutFEC_f_x5f32_x5f1_x5f32_x5f0",
	"_nHSDPA_x5fPDSCH_x5fWithoutFEC_f_x5f64_x5f1_x5f64_x5f0",
	"StdForm");
create_constant_form ("_nHSDPA_x5fPDSCH_x5fWithoutFEC_f_x5fQPSK", 
	"_QPSK",
	0,
	"0",
	"_QPSK");
create_constant_form ("_nHSDPA_x5fPDSCH_x5fWithoutFEC_f_x5f16QAM", 
	"_16QAM",
	0,
	"1",
	"_16QAM");
create_constant_form ("_nHSDPA_x5fPDSCH_x5fWithoutFEC_f_x5f64QAM", 
	"_64QAM",
	0,
	"2",
	"_64QAM");
create_form_set("_nHSDPA_x5fPDSCH_x5fWithoutFEC_fMSSet",
	"_nHSDPA_x5fPDSCH_x5fWithoutFEC_f_x5fQPSK",
	"_nHSDPA_x5fPDSCH_x5fWithoutFEC_f_x5f16QAM",
	"_nHSDPA_x5fPDSCH_x5fWithoutFEC_f_x5f64QAM",
	"StdForm");
create_item ("HSDPA_PDSCH_WithoutFEC","HSDPA PDSCH without coding",
	"H",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_HSDPA_PDSCH_WithoutFEC",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"HSDPA_PDSCH_WithoutFEC",
	SPDesignAnnotFmt,
	"SYM_DSN_HSDPA_PDSCH_WithoutFEC",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("TTIPattern","inter-TTI pattern",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1, 0, 1, 0, 1, 0}")),
	create_parm ("DataPattern","",
		PARM_INT,
		"_nHSDPA_x5fPDSCH_x5fWithoutFEC_fDataPatternSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fPDSCH_x5fWithoutFEC_fPN9","PN9")),
	create_parm ("MS","Modulation scheme",
		PARM_INT,
		"_nHSDPA_x5fPDSCH_x5fWithoutFEC_fMSSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fPDSCH_x5fWithoutFEC_f_x5fQPSK","_QPSK")),
	create_parm ("NumHSPDSCH","number of physical channels",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("SpreadCodeOffset","",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","13")),
	create_parm ("Power_GainFactor","Power gain factor",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-10.0")));
library_group("HSDPA, Signal Sources","HSDPA, Signal Sources","HSDPA_PDSCH_WithoutFEC");
palette_group("HSDPA, Signal Sources","HSDPA, Signal Sources","HSDPA_PDSCH_WithoutFEC");

create_constant_form ("_nHSDPA_x5fPDSCH_x5fWithFEC_fCategory_x5f1", 
	"Category_1",
	0,
	"0",
	"Category_1");
create_constant_form ("_nHSDPA_x5fPDSCH_x5fWithFEC_fCategory_x5f2", 
	"Category_2",
	0,
	"1",
	"Category_2");
create_constant_form ("_nHSDPA_x5fPDSCH_x5fWithFEC_fCategory_x5f3", 
	"Category_3",
	0,
	"2",
	"Category_3");
create_constant_form ("_nHSDPA_x5fPDSCH_x5fWithFEC_fCategory_x5f4", 
	"Category_4",
	0,
	"3",
	"Category_4");
create_constant_form ("_nHSDPA_x5fPDSCH_x5fWithFEC_fCategory_x5f5", 
	"Category_5",
	0,
	"4",
	"Category_5");
create_constant_form ("_nHSDPA_x5fPDSCH_x5fWithFEC_fCategory_x5f6", 
	"Category_6",
	0,
	"5",
	"Category_6");
create_constant_form ("_nHSDPA_x5fPDSCH_x5fWithFEC_fCategory_x5f7", 
	"Category_7",
	0,
	"6",
	"Category_7");
create_constant_form ("_nHSDPA_x5fPDSCH_x5fWithFEC_fCategory_x5f8", 
	"Category_8",
	0,
	"7",
	"Category_8");
create_constant_form ("_nHSDPA_x5fPDSCH_x5fWithFEC_fCategory_x5f9", 
	"Category_9",
	0,
	"8",
	"Category_9");
create_constant_form ("_nHSDPA_x5fPDSCH_x5fWithFEC_fCategory_x5f10", 
	"Category_10",
	0,
	"9",
	"Category_10");
create_constant_form ("_nHSDPA_x5fPDSCH_x5fWithFEC_fCategory_x5f11", 
	"Category_11",
	0,
	"10",
	"Category_11");
create_constant_form ("_nHSDPA_x5fPDSCH_x5fWithFEC_fCategory_x5f12", 
	"Category_12",
	0,
	"11",
	"Category_12");
create_constant_form ("_nHSDPA_x5fPDSCH_x5fWithFEC_fCategory_x5f13", 
	"Category_13",
	0,
	"12",
	"Category_13");
create_constant_form ("_nHSDPA_x5fPDSCH_x5fWithFEC_fCategory_x5f14", 
	"Category_14",
	0,
	"13",
	"Category_14");
create_constant_form ("_nHSDPA_x5fPDSCH_x5fWithFEC_fCategory_x5f15", 
	"Category_15",
	0,
	"14",
	"Category_15");
create_constant_form ("_nHSDPA_x5fPDSCH_x5fWithFEC_fCategory_x5f16", 
	"Category_16",
	0,
	"15",
	"Category_16");
create_constant_form ("_nHSDPA_x5fPDSCH_x5fWithFEC_fCategory_x5f17", 
	"Category_17",
	0,
	"16",
	"Category_17");
create_constant_form ("_nHSDPA_x5fPDSCH_x5fWithFEC_fCategory_x5f18", 
	"Category_18",
	0,
	"17",
	"Category_18");
create_form_set("_nHSDPA_x5fPDSCH_x5fWithFEC_fUE_x5fCategorySet",
	"_nHSDPA_x5fPDSCH_x5fWithFEC_fCategory_x5f1",
	"_nHSDPA_x5fPDSCH_x5fWithFEC_fCategory_x5f2",
	"_nHSDPA_x5fPDSCH_x5fWithFEC_fCategory_x5f3",
	"_nHSDPA_x5fPDSCH_x5fWithFEC_fCategory_x5f4",
	"_nHSDPA_x5fPDSCH_x5fWithFEC_fCategory_x5f5",
	"_nHSDPA_x5fPDSCH_x5fWithFEC_fCategory_x5f6",
	"_nHSDPA_x5fPDSCH_x5fWithFEC_fCategory_x5f7",
	"_nHSDPA_x5fPDSCH_x5fWithFEC_fCategory_x5f8",
	"_nHSDPA_x5fPDSCH_x5fWithFEC_fCategory_x5f9",
	"_nHSDPA_x5fPDSCH_x5fWithFEC_fCategory_x5f10",
	"_nHSDPA_x5fPDSCH_x5fWithFEC_fCategory_x5f11",
	"_nHSDPA_x5fPDSCH_x5fWithFEC_fCategory_x5f12",
	"_nHSDPA_x5fPDSCH_x5fWithFEC_fCategory_x5f13",
	"_nHSDPA_x5fPDSCH_x5fWithFEC_fCategory_x5f14",
	"_nHSDPA_x5fPDSCH_x5fWithFEC_fCategory_x5f15",
	"_nHSDPA_x5fPDSCH_x5fWithFEC_fCategory_x5f16",
	"_nHSDPA_x5fPDSCH_x5fWithFEC_fCategory_x5f17",
	"_nHSDPA_x5fPDSCH_x5fWithFEC_fCategory_x5f18",
	"StdForm");
create_constant_form ("_nHSDPA_x5fPDSCH_x5fWithFEC_fRandom", 
	"Random",
	0,
	"0",
	"Random");
create_constant_form ("_nHSDPA_x5fPDSCH_x5fWithFEC_fPN9", 
	"PN9",
	0,
	"1",
	"PN9");
create_constant_form ("_nHSDPA_x5fPDSCH_x5fWithFEC_fPN15", 
	"PN15",
	0,
	"2",
	"PN15");
create_constant_form ("_nHSDPA_x5fPDSCH_x5fWithFEC_fRepeat_x5fBits", 
	"Repeat Bits",
	0,
	"3",
	"Repeat Bits");
create_form_set("_nHSDPA_x5fPDSCH_x5fWithFEC_fDataPatternSet",
	"_nHSDPA_x5fPDSCH_x5fWithFEC_fRandom",
	"_nHSDPA_x5fPDSCH_x5fWithFEC_fPN9",
	"_nHSDPA_x5fPDSCH_x5fWithFEC_fPN15",
	"_nHSDPA_x5fPDSCH_x5fWithFEC_fRepeat_x5fBits",
	"StdForm");
create_constant_form ("_nHSDPA_x5fPDSCH_x5fWithFEC_f_x5fQPSK", 
	"_QPSK",
	0,
	"0",
	"_QPSK");
create_constant_form ("_nHSDPA_x5fPDSCH_x5fWithFEC_f_x5f16QAM", 
	"_16QAM",
	0,
	"1",
	"_16QAM");
create_constant_form ("_nHSDPA_x5fPDSCH_x5fWithFEC_f_x5f64QAM", 
	"_64QAM",
	0,
	"2",
	"_64QAM");
create_form_set("_nHSDPA_x5fPDSCH_x5fWithFEC_fMSSet",
	"_nHSDPA_x5fPDSCH_x5fWithFEC_f_x5fQPSK",
	"_nHSDPA_x5fPDSCH_x5fWithFEC_f_x5f16QAM",
	"_nHSDPA_x5fPDSCH_x5fWithFEC_f_x5f64QAM",
	"StdForm");
create_item ("HSDPA_PDSCH_WithFEC","HSDPA PDSCH with coding",
	"H",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_HSDPA_PDSCH_WithFEC",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"HSDPA_PDSCH_WithFEC",
	SPDesignAnnotFmt,
	"SYM_DSN_HSDPA_PDSCH_WithFEC",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("UE_Category","",
		PARM_INT,
		"_nHSDPA_x5fPDSCH_x5fWithFEC_fUE_x5fCategorySet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fPDSCH_x5fWithFEC_fCategory_x5f1","Category_1")),
	create_parm ("TTIPattern","inter-TTI pattern",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1, 0, 1, 0, 1, 0}")),
	create_parm ("TransBlockSize","Transport block size",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3202")),
	create_parm ("NumHARQ","Number of HARQ processes",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("RVSeq","Redundancy and constellation version coding sequence",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0, 2, 5, 6}")),
	create_parm ("DataPattern","Source data pattern",
		PARM_INT,
		"_nHSDPA_x5fPDSCH_x5fWithFEC_fDataPatternSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fPDSCH_x5fWithFEC_fRandom","Random")),
	create_parm ("RepeatBitValue","Repeating data value",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0x0001")),
	create_parm ("RepeatBitPeriod","Repeating data period",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","2")),
	create_parm ("MS","Modulation scheme",
		PARM_INT,
		"_nHSDPA_x5fPDSCH_x5fWithFEC_fMSSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fPDSCH_x5fWithFEC_f_x5fQPSK","_QPSK")),
	create_parm ("NIR","",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","9600")),
	create_parm ("NumHSPDSCH","number of physical channels",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","5")),
	create_parm ("SpreadCodeOffset","Spread code offset",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("Power_GainFactor","Power gain factor",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-10.0")));
library_group("HSDPA, Signal Sources","HSDPA, Signal Sources","HSDPA_PDSCH_WithFEC");
palette_group("HSDPA, Signal Sources","HSDPA, Signal Sources","HSDPA_PDSCH_WithFEC");

create_constant_form ("_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f1_x5f1", 
	"H-Set 1_1",
	0,
	"0",
	"H-Set 1");
create_constant_form ("_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f2_x5f1", 
	"H-Set 2_1",
	0,
	"1",
	"H-Set 2");
create_constant_form ("_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f3_x5f1", 
	"H-Set 3_1",
	0,
	"2",
	"H-Set 3");
create_constant_form ("_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f4_x5f1", 
	"H-Set 4_1",
	0,
	"3",
	"H-Set 4");
create_constant_form ("_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f5_x5f1", 
	"H-Set 5_1",
	0,
	"4",
	"H-Set 5");
create_constant_form ("_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f6_x5f1", 
	"H-Set 6_1",
	0,
	"5",
	"H-Set 6");
create_constant_form ("_nHSDPA_x5fSCCH_x5f1_x5f4_fUserDefined_x5f1", 
	"UserDefined_1",
	0,
	"6",
	"UserDefined");
create_form_set("_nHSDPA_x5fSCCH_x5f1_x5f4_fHSDPA_x5fFRC_x5f1Set",
	"_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f1_x5f1",
	"_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f2_x5f1",
	"_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f3_x5f1",
	"_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f4_x5f1",
	"_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f5_x5f1",
	"_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f6_x5f1",
	"_nHSDPA_x5fSCCH_x5f1_x5f4_fUserDefined_x5f1",
	"StdForm");
create_constant_form ("_nHSDPA_x5fSCCH_x5f1_x5f4_fnormal_x5f1", 
	"normal_1",
	0,
	"0",
	"Normal");
create_constant_form ("_nHSDPA_x5fSCCH_x5f1_x5f4_fright_x5f1", 
	"right_1",
	0,
	"1",
	"Right Alternate");
create_constant_form ("_nHSDPA_x5fSCCH_x5f1_x5f4_fleft_x5f1", 
	"left_1",
	0,
	"2",
	"Left Alternate");
create_form_set("_nHSDPA_x5fSCCH_x5f1_x5f4_fHS_x5fSCCH_x5f1_x5fScrambleTypeSet",
	"_nHSDPA_x5fSCCH_x5f1_x5f4_fnormal_x5f1",
	"_nHSDPA_x5fSCCH_x5f1_x5f4_fright_x5f1",
	"_nHSDPA_x5fSCCH_x5f1_x5f4_fleft_x5f1",
	"StdForm");
create_constant_form ("_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f1_x5f2", 
	"H-Set 1_2",
	0,
	"0",
	"H-Set 1");
create_constant_form ("_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f2_x5f2", 
	"H-Set 2_2",
	0,
	"1",
	"H-Set 2");
create_constant_form ("_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f3_x5f2", 
	"H-Set 3_2",
	0,
	"2",
	"H-Set 3");
create_constant_form ("_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f4_x5f2", 
	"H-Set 4_2",
	0,
	"3",
	"H-Set 4");
create_constant_form ("_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f5_x5f2", 
	"H-Set 5_2",
	0,
	"4",
	"H-Set 5");
create_constant_form ("_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f6_x5f2", 
	"H-Set 6_2",
	0,
	"5",
	"H-Set 6");
create_constant_form ("_nHSDPA_x5fSCCH_x5f1_x5f4_fUserDefined_x5f2", 
	"UserDefined_2",
	0,
	"6",
	"UserDefined");
create_form_set("_nHSDPA_x5fSCCH_x5f1_x5f4_fHSDPA_x5fFRC_x5f2Set",
	"_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f1_x5f2",
	"_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f2_x5f2",
	"_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f3_x5f2",
	"_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f4_x5f2",
	"_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f5_x5f2",
	"_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f6_x5f2",
	"_nHSDPA_x5fSCCH_x5f1_x5f4_fUserDefined_x5f2",
	"StdForm");
create_constant_form ("_nHSDPA_x5fSCCH_x5f1_x5f4_fnormal_x5f2", 
	"normal_2",
	0,
	"0",
	"Normal");
create_constant_form ("_nHSDPA_x5fSCCH_x5f1_x5f4_fright_x5f2", 
	"right_2",
	0,
	"1",
	"Right Alternate");
create_constant_form ("_nHSDPA_x5fSCCH_x5f1_x5f4_fleft_x5f2", 
	"left_2",
	0,
	"2",
	"Left Alternate");
create_form_set("_nHSDPA_x5fSCCH_x5f1_x5f4_fHS_x5fSCCH_x5f2_x5fScrambleTypeSet",
	"_nHSDPA_x5fSCCH_x5f1_x5f4_fnormal_x5f2",
	"_nHSDPA_x5fSCCH_x5f1_x5f4_fright_x5f2",
	"_nHSDPA_x5fSCCH_x5f1_x5f4_fleft_x5f2",
	"StdForm");
create_constant_form ("_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f1_x5f3", 
	"H-Set 1_3",
	0,
	"0",
	"H-Set 1");
create_constant_form ("_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f2_x5f3", 
	"H-Set 2_3",
	0,
	"1",
	"H-Set 2");
create_constant_form ("_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f3_x5f3", 
	"H-Set 3_3",
	0,
	"2",
	"H-Set 3");
create_constant_form ("_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f4_x5f3", 
	"H-Set 4_3",
	0,
	"3",
	"H-Set 4");
create_constant_form ("_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f5_x5f3", 
	"H-Set 5_3",
	0,
	"4",
	"H-Set 5");
create_constant_form ("_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f6_x5f3", 
	"H-Set 6_3",
	0,
	"5",
	"H-Set 6");
create_constant_form ("_nHSDPA_x5fSCCH_x5f1_x5f4_fUserDefined_x5f3", 
	"UserDefined_3",
	0,
	"6",
	"UserDefined");
create_form_set("_nHSDPA_x5fSCCH_x5f1_x5f4_fHSDPA_x5fFRC_x5f3Set",
	"_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f1_x5f3",
	"_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f2_x5f3",
	"_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f3_x5f3",
	"_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f4_x5f3",
	"_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f5_x5f3",
	"_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f6_x5f3",
	"_nHSDPA_x5fSCCH_x5f1_x5f4_fUserDefined_x5f3",
	"StdForm");
create_constant_form ("_nHSDPA_x5fSCCH_x5f1_x5f4_fnormal_x5f3", 
	"normal_3",
	0,
	"0",
	"Normal");
create_constant_form ("_nHSDPA_x5fSCCH_x5f1_x5f4_fright_x5f3", 
	"right_3",
	0,
	"1",
	"Right Alternate");
create_constant_form ("_nHSDPA_x5fSCCH_x5f1_x5f4_fleft_x5f3", 
	"left_3",
	0,
	"2",
	"Left Alternate");
create_form_set("_nHSDPA_x5fSCCH_x5f1_x5f4_fHS_x5fSCCH_x5f3_x5fScrambleTypeSet",
	"_nHSDPA_x5fSCCH_x5f1_x5f4_fnormal_x5f3",
	"_nHSDPA_x5fSCCH_x5f1_x5f4_fright_x5f3",
	"_nHSDPA_x5fSCCH_x5f1_x5f4_fleft_x5f3",
	"StdForm");
create_constant_form ("_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f1_x5f4", 
	"H-Set 1_4",
	0,
	"0",
	"H-Set 1");
create_constant_form ("_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f2_x5f4", 
	"H-Set 2_4",
	0,
	"1",
	"H-Set 2");
create_constant_form ("_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f3_x5f4", 
	"H-Set 3_4",
	0,
	"2",
	"H-Set 3");
create_constant_form ("_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f4_x5f4", 
	"H-Set 4_4",
	0,
	"3",
	"H-Set 4");
create_constant_form ("_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f5_x5f4", 
	"H-Set 5_4",
	0,
	"4",
	"H-Set 5");
create_constant_form ("_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f6_x5f4", 
	"H-Set 6_4",
	0,
	"5",
	"H-Set 6");
create_constant_form ("_nHSDPA_x5fSCCH_x5f1_x5f4_fUserDefined_x5f4", 
	"UserDefined_4",
	0,
	"6",
	"UserDefined");
create_form_set("_nHSDPA_x5fSCCH_x5f1_x5f4_fHSDPA_x5fFRC_x5f4Set",
	"_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f1_x5f4",
	"_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f2_x5f4",
	"_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f3_x5f4",
	"_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f4_x5f4",
	"_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f5_x5f4",
	"_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f6_x5f4",
	"_nHSDPA_x5fSCCH_x5f1_x5f4_fUserDefined_x5f4",
	"StdForm");
create_constant_form ("_nHSDPA_x5fSCCH_x5f1_x5f4_fnormal_x5f4", 
	"normal_4",
	0,
	"0",
	"Normal");
create_constant_form ("_nHSDPA_x5fSCCH_x5f1_x5f4_fright_x5f4", 
	"right_4",
	0,
	"1",
	"Right Alternate");
create_constant_form ("_nHSDPA_x5fSCCH_x5f1_x5f4_fleft_x5f4", 
	"left_4",
	0,
	"2",
	"Left Alternate");
create_form_set("_nHSDPA_x5fSCCH_x5f1_x5f4_fHS_x5fSCCH_x5f4_x5fScrambleTypeSet",
	"_nHSDPA_x5fSCCH_x5f1_x5f4_fnormal_x5f4",
	"_nHSDPA_x5fSCCH_x5f1_x5f4_fright_x5f4",
	"_nHSDPA_x5fSCCH_x5f1_x5f4_fleft_x5f4",
	"StdForm");
create_item ("HSDPA_SCCH_1_4","HS-SCCH",
	"H",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_HSDPA_SCCH_1_4",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"HSDPA_SCCH_1_4",
	SPDesignAnnotFmt,
	"SYM_DSN_HSDPA_SCCH_1_4",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("HS_SCCH_Configured","",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1, 0, 0, 0}")),
	create_parm ("UE_Category","UE category",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1, 1, 1, 1}")),
	create_parm ("UEIdentity","UE identity (16 bits)",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0xAAAA, 0x12AA, 0x1AAA, 0x1FAA}")),
	create_parm ("HS_PDSCH_MS","Modulation scheme",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0, 0, 0, 0}")),
	create_parm ("NumHARQ","Number of HARQ processes",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1, 1, 1, 1}")),
	create_parm ("HS_PDSCH_CodeOffset","Spread code offset",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1, 13, 14, 15}")),
	create_parm ("HS_SCCH_EcToIor","Power gain factor",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		DB_GAIN_UNIT,
		prm("StringAndReference","{-9, -9, -9, -9}")),
	create_parm ("HS_SCCH_SpreadCode","spread code for HS-SCCH",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{4, 5, 6, 7}")),
	create_parm ("HS_SCCH_ScrambleCode","index of scramble code",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0, 0, 0, 0}")),
	create_parm ("HS_SCCH_ScrambleOffset","scramble code offset",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0, 0, 0, 0}")),
	create_parm ("HSDPA_FRC_1","Fixed reference channel",
		PARM_INT,
		"_nHSDPA_x5fSCCH_x5f1_x5f4_fHSDPA_x5fFRC_x5f1Set",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f1_x5f1","H_Set_1_1")),
	create_parm ("HS_SCCH_1_TTIPattern","inter-TTI pattern",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1, 0, 0, 1, 0, 0}")),
	create_parm ("HS_SCCH_1_ScrambleType","scramble code type",
		PARM_INT,
		"_nHSDPA_x5fSCCH_x5f1_x5f4_fHS_x5fSCCH_x5f1_x5fScrambleTypeSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fSCCH_x5f1_x5f4_fnormal_x5f1","normal_1")),
	create_parm ("HSDPA_FRC_2","Fixed reference channel",
		PARM_INT,
		"_nHSDPA_x5fSCCH_x5f1_x5f4_fHSDPA_x5fFRC_x5f2Set",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f1_x5f2","H_Set_1_2")),
	create_parm ("HS_SCCH_2_TTIPattern","inter-TTI pattern",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1, 0, 0, 1, 0, 0}")),
	create_parm ("HS_SCCH_2_ScrambleType","scramble code type",
		PARM_INT,
		"_nHSDPA_x5fSCCH_x5f1_x5f4_fHS_x5fSCCH_x5f2_x5fScrambleTypeSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fSCCH_x5f1_x5f4_fnormal_x5f2","normal_2")),
	create_parm ("HSDPA_FRC_3","Fixed reference channel",
		PARM_INT,
		"_nHSDPA_x5fSCCH_x5f1_x5f4_fHSDPA_x5fFRC_x5f3Set",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f1_x5f3","H_Set_1_3")),
	create_parm ("HS_SCCH_3_TTIPattern","inter-TTI pattern",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1, 0, 0, 1, 0, 0}")),
	create_parm ("HS_SCCH_3_ScrambleType","scramble code type",
		PARM_INT,
		"_nHSDPA_x5fSCCH_x5f1_x5f4_fHS_x5fSCCH_x5f3_x5fScrambleTypeSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fSCCH_x5f1_x5f4_fnormal_x5f3","normal_3")),
	create_parm ("HSDPA_FRC_4","Fixed reference channel",
		PARM_INT,
		"_nHSDPA_x5fSCCH_x5f1_x5f4_fHSDPA_x5fFRC_x5f4Set",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fSCCH_x5f1_x5f4_fH_x5fSet_x5f1_x5f4","H_Set_1_4")),
	create_parm ("HS_SCCH_4_TTIPattern","inter-TTI pattern",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1, 0, 0, 1, 0, 0}")),
	create_parm ("HS_SCCH_4_ScrambleType","scramble code type",
		PARM_INT,
		"_nHSDPA_x5fSCCH_x5f1_x5f4_fHS_x5fSCCH_x5f4_x5fScrambleTypeSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fSCCH_x5f1_x5f4_fnormal_x5f4","normal_4")),
	create_parm ("HS_PDSCH_NumCh","number of physical channels for HS-DSCHs, valid when the corresponding HSDPA_FRC = UserDefined",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{1, 1, 1, 1}")));
library_group("HSDPA, Signal Sources","HSDPA, Signal Sources","HSDPA_SCCH_1_4");
palette_group("HSDPA, Signal Sources","HSDPA, Signal Sources","HSDPA_SCCH_1_4");

create_constant_form ("_nHSDPA_x5fSCCH_fH_x5fSet_x5f1", 
	"H-Set 1",
	0,
	"0",
	"H-Set 1");
create_constant_form ("_nHSDPA_x5fSCCH_fH_x5fSet_x5f2", 
	"H-Set 2",
	0,
	"1",
	"H-Set 2");
create_constant_form ("_nHSDPA_x5fSCCH_fH_x5fSet_x5f3", 
	"H-Set 3",
	0,
	"2",
	"H-Set 3");
create_constant_form ("_nHSDPA_x5fSCCH_fH_x5fSet_x5f4", 
	"H-Set 4",
	0,
	"3",
	"H-Set 4");
create_constant_form ("_nHSDPA_x5fSCCH_fH_x5fSet_x5f5", 
	"H-Set 5",
	0,
	"4",
	"H-Set 5");
create_constant_form ("_nHSDPA_x5fSCCH_fH_x5fSet_x5f6", 
	"H-Set 6",
	0,
	"5",
	"H-Set 6");
create_constant_form ("_nHSDPA_x5fSCCH_fUserDefined", 
	"UserDefined",
	0,
	"6",
	"UserDefined");
create_form_set("_nHSDPA_x5fSCCH_fHSDPA_x5fFRCSet",
	"_nHSDPA_x5fSCCH_fH_x5fSet_x5f1",
	"_nHSDPA_x5fSCCH_fH_x5fSet_x5f2",
	"_nHSDPA_x5fSCCH_fH_x5fSet_x5f3",
	"_nHSDPA_x5fSCCH_fH_x5fSet_x5f4",
	"_nHSDPA_x5fSCCH_fH_x5fSet_x5f5",
	"_nHSDPA_x5fSCCH_fH_x5fSet_x5f6",
	"_nHSDPA_x5fSCCH_fUserDefined",
	"StdForm");
create_constant_form ("_nHSDPA_x5fSCCH_f_x5fQPSK", 
	"_QPSK",
	0,
	"0",
	"_QPSK");
create_constant_form ("_nHSDPA_x5fSCCH_f_x5f16QAM", 
	"_16QAM",
	0,
	"1",
	"_16QAM");
create_constant_form ("_nHSDPA_x5fSCCH_f_x5f64QAM", 
	"_64QAM",
	0,
	"2",
	"_64QAM");
create_form_set("_nHSDPA_x5fSCCH_fMSSet",
	"_nHSDPA_x5fSCCH_f_x5fQPSK",
	"_nHSDPA_x5fSCCH_f_x5f16QAM",
	"_nHSDPA_x5fSCCH_f_x5f64QAM",
	"StdForm");
create_constant_form ("_nHSDPA_x5fSCCH_fnormal", 
	"normal",
	0,
	"0",
	"Normal");
create_constant_form ("_nHSDPA_x5fSCCH_fright", 
	"right",
	0,
	"1",
	"Right Alternate");
create_constant_form ("_nHSDPA_x5fSCCH_fleft", 
	"left",
	0,
	"2",
	"Left Alternate");
create_form_set("_nHSDPA_x5fSCCH_fScrambleTypeSet",
	"_nHSDPA_x5fSCCH_fnormal",
	"_nHSDPA_x5fSCCH_fright",
	"_nHSDPA_x5fSCCH_fleft",
	"StdForm");
create_item ("HSDPA_SCCH","HS-SCCH",
	"H",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_HSDPA_SCCH",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"HSDPA_SCCH",
	SPDesignAnnotFmt,
	"SYM_DSN_HSDPA_SCCH",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("UE_Category","UE category",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("UEIdentity","UE identity (16 bits)",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0B1010101010101010")),
	create_parm ("HSDPA_FRC","Fixed reference channel",
		PARM_INT,
		"_nHSDPA_x5fSCCH_fHSDPA_x5fFRCSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fSCCH_fH_x5fSet_x5f1","H_Set_1")),
	create_parm ("TTIPattern","inter-TTI pattern",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"1 0 0 1 0 0\"")),
	create_parm ("MS","Modulation scheme",
		PARM_INT,
		"_nHSDPA_x5fSCCH_fMSSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fSCCH_f_x5fQPSK","_QPSK")),
	create_parm ("NumHARQ","Number of HARQ processes",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("HS_PDSCH_CodeOffset","Spread code offset",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("HSSCCH_EcToIor","HS-SCCH power gain in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","-10.0")),
	create_parm ("HSSCCH_SpreadCode","spread code for HS-SCCH",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("ScrambleCode","index of scramble code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("ScrambleOffset","scramble code offset",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("ScrambleType","scramble code type",
		PARM_INT,
		"_nHSDPA_x5fSCCH_fScrambleTypeSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fSCCH_fnormal","normal")),
	create_parm ("HS_PDSCH_NumCh","number of HS-PDSCH channels, valid when HSDPA_FRC = UserDefined",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));
library_group("HSDPA, Signal Sources","HSDPA, Signal Sources","HSDPA_SCCH");
palette_group("HSDPA, Signal Sources","HSDPA, Signal Sources","HSDPA_SCCH");

