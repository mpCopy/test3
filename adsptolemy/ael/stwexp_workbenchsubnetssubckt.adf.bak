set_design_type( sigproc_net );
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fTX_x5fGenericTestNet_fInstrumentEnabledSet",
	"_nSTW_x5fTX_x5fGenericTestNet_fOFF",
	"_nSTW_x5fTX_x5fGenericTestNet_fON",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fInternal", 
	"Internal",
	0,
	"0",
	"Internal");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fExternal", 
	"External",
	0,
	"1",
	"External");
create_form_set("_nSTW_x5fTX_x5fGenericTestNet_fESG_x5fClkRefSet",
	"_nSTW_x5fTX_x5fGenericTestNet_fInternal",
	"_nSTW_x5fTX_x5fGenericTestNet_fExternal",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fthrough", 
	"through",
	0,
	"0",
	"through");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_ffilter_x5f2100kHz", 
	"filter_2100kHz",
	0,
	"1",
	"filter_2100kHz");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_ffilter_x5f40MHz", 
	"filter_40MHz",
	0,
	"2",
	"filter_40MHz");
create_form_set("_nSTW_x5fTX_x5fGenericTestNet_fESG_x5fIQFilterSet",
	"_nSTW_x5fTX_x5fGenericTestNet_fthrough",
	"_nSTW_x5fTX_x5fGenericTestNet_ffilter_x5f2100kHz",
	"_nSTW_x5fTX_x5fGenericTestNet_ffilter_x5f40MHz",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fTX_x5fGenericTestNet_fESG_x5fAutoScalingSet",
	"_nSTW_x5fTX_x5fGenericTestNet_fNO",
	"_nSTW_x5fTX_x5fGenericTestNet_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fTX_x5fGenericTestNet_fESG_x5fArbOnSet",
	"_nSTW_x5fTX_x5fGenericTestNet_fNO",
	"_nSTW_x5fTX_x5fGenericTestNet_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fTX_x5fGenericTestNet_fESG_x5fRFPowOnSet",
	"_nSTW_x5fTX_x5fGenericTestNet_fNO",
	"_nSTW_x5fTX_x5fGenericTestNet_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fNeither", 
	"Neither",
	0,
	"0",
	"Neither");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fEvent1", 
	"Event1",
	0,
	"1",
	"Event1");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fEvent2", 
	"Event2",
	0,
	"2",
	"Event2");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fBoth", 
	"Both",
	0,
	"3",
	"Both");
create_form_set("_nSTW_x5fTX_x5fGenericTestNet_fESG_x5fEventMarkerTypeSet",
	"_nSTW_x5fTX_x5fGenericTestNet_fNeither",
	"_nSTW_x5fTX_x5fGenericTestNet_fEvent1",
	"_nSTW_x5fTX_x5fGenericTestNet_fEvent2",
	"_nSTW_x5fTX_x5fGenericTestNet_fBoth",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fTX_x5fGenericTestNet_fVSA_x5fDisplayModeSet",
	"_nSTW_x5fTX_x5fGenericTestNet_fNO",
	"_nSTW_x5fTX_x5fGenericTestNet_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fVSA_x5fA", 
	"VSA_A",
	0,
	"0",
	"VSA_A");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fVSA_x5fB", 
	"VSA_B",
	0,
	"1",
	"VSA_B");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fVSA_x5fC", 
	"VSA_C",
	0,
	"2",
	"VSA_C");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fVSA_x5fD", 
	"VSA_D",
	0,
	"3",
	"VSA_D");
create_form_set("_nSTW_x5fTX_x5fGenericTestNet_fVSA_x5fTraceSet",
	"_nSTW_x5fTX_x5fGenericTestNet_fVSA_x5fA",
	"_nSTW_x5fTX_x5fGenericTestNet_fVSA_x5fB",
	"_nSTW_x5fTX_x5fGenericTestNet_fVSA_x5fC",
	"_nSTW_x5fTX_x5fGenericTestNet_fVSA_x5fD",
	"StdForm");
create_text_form ("_nSTW_x5fTX_x5fGenericTestNet_fset_x5ffile", 
	"File with set extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "set"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fTX_x5fGenericTestNet_fVSA_x5fSetupFile_x5fFileSet",
	"_nSTW_x5fTX_x5fGenericTestNet_fset_x5ffile");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fTX_x5fGenericTestNet_fDUT_x5fMirrorSpectrumSet",
	"_nSTW_x5fTX_x5fGenericTestNet_fNO",
	"_nSTW_x5fTX_x5fGenericTestNet_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fTX_x5fGenericTestNet_fMirrorModSpectrumSet",
	"_nSTW_x5fTX_x5fGenericTestNet_fNO",
	"_nSTW_x5fTX_x5fGenericTestNet_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fTX_x5fGenericTestNet_fRF_x5fImpairmentsEnabledSet",
	"_nSTW_x5fTX_x5fGenericTestNet_fOFF",
	"_nSTW_x5fTX_x5fGenericTestNet_fON",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fTX_x5fGenericTestNet_fMultipathFadingEnabledSet",
	"_nSTW_x5fTX_x5fGenericTestNet_fOFF",
	"_nSTW_x5fTX_x5fGenericTestNet_fON",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fTX_x5fGenericTestNet_fCommonFadingModelEnabledSet",
	"_nSTW_x5fTX_x5fGenericTestNet_fOFF",
	"_nSTW_x5fTX_x5fGenericTestNet_fON",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fJakes", 
	"Jakes",
	0,
	"0",
	"Jakes");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fNoiseFilter", 
	"NoiseFilter",
	0,
	"1",
	"NoiseFilter");
create_form_set("_nSTW_x5fTX_x5fGenericTestNet_fFadingAlgorithmSet",
	"_nSTW_x5fTX_x5fGenericTestNet_fJakes",
	"_nSTW_x5fTX_x5fGenericTestNet_fNoiseFilter",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fRayleigh", 
	"Rayleigh",
	0,
	"0",
	"Rayleigh");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fRicean", 
	"Ricean",
	0,
	"1",
	"Ricean");
create_form_set("_nSTW_x5fTX_x5fGenericTestNet_fFadingUserTypeSet",
	"_nSTW_x5fTX_x5fGenericTestNet_fRayleigh",
	"_nSTW_x5fTX_x5fGenericTestNet_fRicean",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fTX_x5fGenericTestNet_fRF_x5fInterferersEnabledSet",
	"_nSTW_x5fTX_x5fGenericTestNet_fOFF",
	"_nSTW_x5fTX_x5fGenericTestNet_fON",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fAfter_x5fmultipath_x5ffading", 
	"After multipath fading",
	0,
	"0",
	"After multipath fading");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fBefore_x5fmultipath_x5ffading", 
	"Before multipath fading",
	0,
	"1",
	"Before multipath fading");
create_form_set("_nSTW_x5fTX_x5fGenericTestNet_fLocationRF_x5fInterferersSet",
	"_nSTW_x5fTX_x5fGenericTestNet_fAfter_x5fmultipath_x5ffading",
	"_nSTW_x5fTX_x5fGenericTestNet_fBefore_x5fmultipath_x5ffading",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fTX_x5fGenericTestNet_fAWGN_x5fEnabledSet",
	"_nSTW_x5fTX_x5fGenericTestNet_fOFF",
	"_nSTW_x5fTX_x5fGenericTestNet_fON",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fNoise_x5f_x5fdBm_x5f_x5fat_x5fESG_x5foutput", 
	"Noise (dBm) at ESG output",
	0,
	"0",
	"Noise (dBm) at ESG output");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fNoise_x5f_x5fdBm_x5fHz_x5f_x5fat_x5fESG_x5foutput", 
	"Noise (dBm/Hz) at ESG output",
	0,
	"1",
	"Noise (dBm/Hz) at ESG output");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fLocal_x5fEb_x5fNo_x5f_x5fdB_x5f_x5fat_x5fESG_x5foutput", 
	"Local Eb/No (dB) at ESG output",
	0,
	"2",
	"Local Eb/No (dB) at ESG output");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fNoise_x5f_x5fdBm_x5f_x5fat_x5fDUT_x5finput", 
	"Noise (dBm) at DUT input",
	0,
	"3",
	"Noise (dBm) at DUT input");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fNoise_x5f_x5fdBm_x5fHz_x5f_x5fat_x5fDUT_x5finput", 
	"Noise (dBm/Hz) at DUT input",
	0,
	"4",
	"Noise (dBm/Hz) at DUT input");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fLocal_x5fEb_x5fNo_x5f_x5fdB_x5f_x5fat_x5fDUT_x5finput", 
	"Local Eb/No (dB) at DUT input",
	0,
	"5",
	"Local Eb/No (dB) at DUT input");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fSystem_x5fEb_x5fNo_x5f_x5fdB_x5f", 
	"System Eb/No (dB)",
	0,
	"6",
	"System Eb/No (dB)");
create_form_set("_nSTW_x5fTX_x5fGenericTestNet_fAWGN_x5fTypeSet",
	"_nSTW_x5fTX_x5fGenericTestNet_fNoise_x5f_x5fdBm_x5f_x5fat_x5fESG_x5foutput",
	"_nSTW_x5fTX_x5fGenericTestNet_fNoise_x5f_x5fdBm_x5fHz_x5f_x5fat_x5fESG_x5foutput",
	"_nSTW_x5fTX_x5fGenericTestNet_fLocal_x5fEb_x5fNo_x5f_x5fdB_x5f_x5fat_x5fESG_x5foutput",
	"_nSTW_x5fTX_x5fGenericTestNet_fNoise_x5f_x5fdBm_x5f_x5fat_x5fDUT_x5finput",
	"_nSTW_x5fTX_x5fGenericTestNet_fNoise_x5f_x5fdBm_x5fHz_x5f_x5fat_x5fDUT_x5finput",
	"_nSTW_x5fTX_x5fGenericTestNet_fLocal_x5fEb_x5fNo_x5f_x5fdB_x5f_x5fat_x5fDUT_x5finput",
	"_nSTW_x5fTX_x5fGenericTestNet_fSystem_x5fEb_x5fNo_x5f_x5fdB_x5f",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fTX_x5fGenericTestNet_fDUT_x5fOutFreqEnabledSet",
	"_nSTW_x5fTX_x5fGenericTestNet_fOFF",
	"_nSTW_x5fTX_x5fGenericTestNet_fON",
	"StdForm");
create_text_form ("_nSTW_x5fTX_x5fGenericTestNet_fdds_x5ffile", 
	"File with dds extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "dds"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fTX_x5fGenericTestNet_fDDSFileName_x5fFileSet",
	"_nSTW_x5fTX_x5fGenericTestNet_fdds_x5ffile");
create_text_form ("_nSTW_x5fTX_x5fGenericTestNet_fds_x5ffile", 
	"File with ds extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "ds"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fTX_x5fGenericTestNet_fDSFileName_x5fFileSet",
	"_nSTW_x5fTX_x5fGenericTestNet_fds_x5ffile");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fTX_x5fGenericTestNet_fDisableSourceDataDisplaySet",
	"_nSTW_x5fTX_x5fGenericTestNet_fNO",
	"_nSTW_x5fTX_x5fGenericTestNet_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fRF_x5fDUT_x5finput", 
	"RF DUT input",
	0,
	"0",
	"RF DUT input");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fESG_x5foutput", 
	"ESG output",
	0,
	"1",
	"ESG output");
create_form_set("_nSTW_x5fTX_x5fGenericTestNet_fSourceDisplayRefPointSet",
	"_nSTW_x5fTX_x5fGenericTestNet_fRF_x5fDUT_x5finput",
	"_nSTW_x5fTX_x5fGenericTestNet_fESG_x5foutput",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fRF_x5fDUT_x5foutput", 
	"RF DUT output",
	0,
	"0",
	"RF DUT output");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fVSA_x5finput", 
	"VSA input",
	0,
	"1",
	"VSA input");
create_form_set("_nSTW_x5fTX_x5fGenericTestNet_fDUT_x5fMeasDisplayRefPointSet",
	"_nSTW_x5fTX_x5fGenericTestNet_fRF_x5fDUT_x5foutput",
	"_nSTW_x5fTX_x5fGenericTestNet_fVSA_x5finput",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fnone", 
	"none",
	0,
	"0",
	"none");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fHamming_x5f0_x5f54", 
	"Hamming 0.54",
	0,
	"1",
	"Hamming 0.54");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fHanning_x5f0_x5f50", 
	"Hanning 0.50",
	0,
	"2",
	"Hanning 0.50");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fGaussian_x5f0_x5f75", 
	"Gaussian 0.75",
	0,
	"3",
	"Gaussian 0.75");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fKaiser_x5f7_x5f865", 
	"Kaiser 7.865",
	0,
	"4",
	"Kaiser 7.865");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_f_x5f8510_x5f6_x5f0", 
	"_8510 6.0",
	0,
	"5",
	"8510 6.0");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fBlackman", 
	"Blackman",
	0,
	"6",
	"Blackman");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fBlackman_x5fHarris", 
	"Blackman-Harris",
	0,
	"7",
	"Blackman-Harris");
create_form_set("_nSTW_x5fTX_x5fGenericTestNet_fSpecWindowSet",
	"_nSTW_x5fTX_x5fGenericTestNet_fnone",
	"_nSTW_x5fTX_x5fGenericTestNet_fHamming_x5f0_x5f54",
	"_nSTW_x5fTX_x5fGenericTestNet_fHanning_x5f0_x5f50",
	"_nSTW_x5fTX_x5fGenericTestNet_fGaussian_x5f0_x5f75",
	"_nSTW_x5fTX_x5fGenericTestNet_fKaiser_x5f7_x5f865",
	"_nSTW_x5fTX_x5fGenericTestNet_f_x5f8510_x5f6_x5f0",
	"_nSTW_x5fTX_x5fGenericTestNet_fBlackman",
	"_nSTW_x5fTX_x5fGenericTestNet_fBlackman_x5fHarris",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fTX_x5fGenericTestNet_fSpecMirrorFreqSet",
	"_nSTW_x5fTX_x5fGenericTestNet_fNO",
	"_nSTW_x5fTX_x5fGenericTestNet_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fTX_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fTX_x5fGenericTestNet_fSpecMeasMirrorFreqSet",
	"_nSTW_x5fTX_x5fGenericTestNet_fNO",
	"_nSTW_x5fTX_x5fGenericTestNet_fYES",
	"StdForm");
create_item ("STW_TX_GenericTestNet","Transmission Generic Test Workbench",
	"S",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_STW_TX_GenericTestNet",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"STW_TX_GenericTestNet",
	SPDesignAnnotFmt,
	"SYM_DSN_STW_TX_GenericTestNet",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("InstrumentSetup","Instrument Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category_nc\"")),
	create_parm ("InstrumentEnabled","Enable Instrument Connectivity",
		PARM_INT,
		"_nSTW_x5fTX_x5fGenericTestNet_fInstrumentEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTestNet_fOFF","OFF")),
	create_parm ("ESG_Setup","ESG Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("ESG_Instrument","ESG Instrument Address",
		PARM_STRING | PARM_NO_DISPLAY,
		"InstrumentFormSet",
		UNITLESS_UNIT,
		prm("InstrumentForm","\"[GPIB0::19::INSTR][localhost][4790]\"")),
	create_parm ("ESG_MinOutputPower","ESG Minimum Output Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-116.0)")),
	create_parm ("ESG_MaxOutputPower","ESG Maximum Output Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(10.0)")),
	create_parm ("AdvancedESG_Setup","Advanced ESG Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category2\"")),
	create_parm ("ESG_ExportFilename","Export Waveform Filename",
		PARM_STRING | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Tx_waveform.wfm\"")),
	create_parm ("ESG_ClkRef","Waveform Clock Reference",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fTX_x5fGenericTestNet_fESG_x5fClkRefSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTestNet_fInternal","Internal")),
	create_parm ("ESG_ExtClkRefFreq","External Clock Reference Frequency",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","10 MHz")),
	create_parm ("ESG_IQFilter","IQ Filter",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fTX_x5fGenericTestNet_fESG_x5fIQFilterSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTestNet_fthrough","through")),
	create_parm ("ESG_AutoScaling","Activate Auto-Scaling",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fTX_x5fGenericTestNet_fESG_x5fAutoScalingSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTestNet_fYES","YES")),
	create_parm ("ESG_ArbOn","Select Waveform and Activate ESG ARB After Download",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fTX_x5fGenericTestNet_fESG_x5fArbOnSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTestNet_fYES","YES")),
	create_parm ("ESG_RFPowOn","Activate RF Power After Download",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fTX_x5fGenericTestNet_fESG_x5fRFPowOnSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTestNet_fYES","YES")),
	create_parm ("ESG_EventMarkerType","Event Marker Type",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fTX_x5fGenericTestNet_fESG_x5fEventMarkerTypeSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTestNet_fEvent1","Event1")),
	create_parm ("ESG_MarkerLength","Event Marker Length",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","10")),
	create_parm ("VSA_Setup","VSA Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("VSA_MinInputPower","VSA Minimum Input Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-45.0)")),
	create_parm ("VSA_MaxInputPower","VSA Maximum Input Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(20.0)")),
	create_parm ("AdvancedVSA_Setup","Advanced VSA Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category2\"")),
	create_parm ("VSA_DisplayMode","Activate VSA Display",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fTX_x5fGenericTestNet_fVSA_x5fDisplayModeSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTestNet_fNO","NO")),
	create_parm ("VSA_Trace","VSA Data Trace",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fTX_x5fGenericTestNet_fVSA_x5fTraceSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTestNet_fVSA_x5fB","VSA_B")),
	create_parm ("VSA_SetupFile","VSA Setup Filename",
		PARM_STRING | PARM_NO_DISPLAY,
		"_nSTW_x5fTX_x5fGenericTestNet_fVSA_x5fSetupFile_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTestNet_fset_x5ffile","\"$HPEESOF_DIR/stw/Tx_waveform.set\"")),
	create_parm ("VSA_Title","VSA Display Title",
		PARM_STRING | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"IEEE 802.11ag Measurement\"")),
	create_parm ("DUT_ModelSetup","DUT Model Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("DUT_PreAmpGain","DUT Pre-Amplifier Gain",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_PreAmpNoiseFigure","DUT Pre-Amplifier Noise Figure",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_Gain","DUT Gain",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_NoiseFigure","DUT Noise Figure",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_MirrorSpectrum","Mirror DUT Output Spectrum",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fTX_x5fGenericTestNet_fDUT_x5fMirrorSpectrumSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTestNet_fNO","NO")),
	create_parm ("DUT_PostAmpGain","DUT Post-Amplifier Gain",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_PostAmpNoiseFigure","DUT Post-Amplifier Noise Figure",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("SignalSetup","Signal Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("AdvancedSignalSetup","Advanced Signal Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("RandomSeed","Random Number Generator Seed",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1234567")),
	create_parm ("RF_Modulator","RF Modulator",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category_nc\"")),
	create_parm ("ModulatorFreq","Modulator Carrier Frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","2400.0MHz")),
	create_parm ("MirrorModSpectrum","Mirror Modulator Spectrum",
		PARM_INT,
		"_nSTW_x5fTX_x5fGenericTestNet_fMirrorModSpectrumSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTestNet_fNO","NO")),
	create_parm ("RF_Impairments","RF Impairments",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("RF_ImpairmentsEnabled","Enable RF Impairments",
		PARM_INT,
		"_nSTW_x5fTX_x5fGenericTestNet_fRF_x5fImpairmentsEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTestNet_fOFF","OFF")),
	create_parm ("GainImbalance","Gain Imbalance, Q vs I",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("PhaseImbalance","Phase Imbalance, Q vs I",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		ANGLE_UNIT,
		prm("StdForm","0")),
	create_parm ("I_OriginOffset","I Origin Offset (% of output RMS voltage)",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("Q_OriginOffset","Q Origin Offset (% of output RMS voltage)",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("IQ_Rotation","IQ Rotation",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		ANGLE_UNIT,
		prm("StdForm","0")),
	create_parm ("MultipathFading","Multipath Fading",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("MultipathFadingEnabled","Enable Multipath Fading",
		PARM_INT,
		"_nSTW_x5fTX_x5fGenericTestNet_fMultipathFadingEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTestNet_fOFF","OFF")),
	create_parm ("CommonFadingModel","Common Fading Model",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("CommonFadingModelEnabled","Enable Common Fading Model",
		PARM_INT,
		"_nSTW_x5fTX_x5fGenericTestNet_fCommonFadingModelEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTestNet_fOFF","OFF")),
	create_parm ("FadingAlgorithm","Fading Algorithm",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fTX_x5fGenericTestNet_fFadingAlgorithmSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTestNet_fNoiseFilter","NoiseFilter")),
	create_parm ("FadingSeed","Jakes Algorithm Random Seed",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1234567")),
	create_parm ("FadingPathNumber","Number of Multipaths",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("FadingPowerArray","Path Average Relative Power Array in dB",
		PARM_REALARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0.0,  -14,  -18,  -20}")),
	create_parm ("FadingDelayArray","Path Delay Array in nsec",
		PARM_REALARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0.0,  56,  106,  185}")),
	create_parm ("FadingUserType","First Path Fading Type",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fTX_x5fGenericTestNet_fFadingUserTypeSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTestNet_fRicean","Ricean")),
	create_parm ("FadingRiceanFactor","Factor for Ricean Fading Type",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","10")),
	create_parm ("FadingJakesOscNum","Number of Jakes Algorithm Oscillators",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","10")),
	create_parm ("RF_Interferers","RF Interferers",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("RF_InterferersEnabled","Enable RF Interferers",
		PARM_INT,
		"_nSTW_x5fTX_x5fGenericTestNet_fRF_x5fInterferersEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTestNet_fOFF","OFF")),
	create_parm ("LocationRF_Interferers","Location of RF Interferers",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fTX_x5fGenericTestNet_fLocationRF_x5fInterferersSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTestNet_fAfter_x5fmultipath_x5ffading","After_multipath_fading")),
	create_parm ("ModFreqOffset","Modulated Interferer Frequency Offset",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","0")),
	create_parm ("ModPower","Modulated Interferer Power",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-200.0)")),
	create_parm ("CW_FreqOffset","CW Interferer Frequency Offset",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","0")),
	create_parm ("CW_Power","CW Interferer Power",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-200.0)")),
	create_parm ("AWGN_Noise","Additive White Gaussian Noise (AWGN)",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("AWGN_Enabled","Enable AWGN",
		PARM_INT,
		"_nSTW_x5fTX_x5fGenericTestNet_fAWGN_x5fEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTestNet_fOFF","OFF")),
	create_parm ("AWGN_Type","AWGN Specification Type",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fTX_x5fGenericTestNet_fAWGN_x5fTypeSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTestNet_fNoise_x5f_x5fdBm_x5f_x5fat_x5fDUT_x5finput","Noise__dBm__at_DUT_input")),
	create_parm ("AWGN_Value","AWGN Specification Value",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-80")),
	create_parm ("MeasurementSetup","Measurement Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category_nc\"")),
	create_parm ("NumberSegments","Number of Signal Segments Measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")),
	create_parm ("DUT_InputPowerStart","DUT Input RF Start Power",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-20.0)")),
	create_parm ("DUT_InputPowerStep","DUT Input Power Step in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","10")),
	create_parm ("DUT_InputPowerNumSteps","DUT Input Number of Power Steps",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("DUT_OutFreq","DUT Output Frequency",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("DUT_OutFreqEnabled","Enable DUT Output Frequency Override",
		PARM_INT,
		"_nSTW_x5fTX_x5fGenericTestNet_fDUT_x5fOutFreqEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTestNet_fOFF","OFF")),
	create_parm ("DUT_OutputFreq","DUT Output Frequency",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","2412.0 MHz")),
	create_parm ("DataDisplaySetup","Data Display Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("DDSFileName","Data Display Filename (Leave Blank for Default Display)",
		PARM_STRING,
		"_nSTW_x5fTX_x5fGenericTestNet_fDDSFileName_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTestNet_fdds_x5ffile","\"\"")),
	create_parm ("DSFileName","Dataset Filename (Leave Blank for Default Name)",
		PARM_STRING,
		"_nSTW_x5fTX_x5fGenericTestNet_fDSFileName_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTestNet_fds_x5ffile","\"\"")),
	create_parm ("DisableSourceDataDisplay","Disable Source Signal Data Display",
		PARM_INT,
		"_nSTW_x5fTX_x5fGenericTestNet_fDisableSourceDataDisplaySet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTestNet_fNO","NO")),
	create_parm ("SourceDisplayRefPoint","Source Signal Display Reference Point",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fTX_x5fGenericTestNet_fSourceDisplayRefPointSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTestNet_fRF_x5fDUT_x5finput","RF_DUT_input")),
	create_parm ("DUT_MeasDisplayRefPoint","DUT Measurement Display Reference Point",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fTX_x5fGenericTestNet_fDUT_x5fMeasDisplayRefPointSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTestNet_fRF_x5fDUT_x5foutput","RF_DUT_output")),
	create_parm ("SpecResBW","Spectrum Resolution Bandwidth",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","100 kHz")),
	create_parm ("SpecWindow","Spectrum Window Type",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fTX_x5fGenericTestNet_fSpecWindowSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTestNet_fKaiser_x5f7_x5f865","Kaiser_7_865")),
	create_parm ("SpecMirrorFreq","Mirror Frequency of Source Spectrum/Envelope",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fTX_x5fGenericTestNet_fSpecMirrorFreqSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTestNet_fNO","NO")),
	create_parm ("SpecMeasMirrorFreq","Mirror Frequency of Measurement Spectrum/Envelope",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fTX_x5fGenericTestNet_fSpecMeasMirrorFreqSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTestNet_fNO","NO")));
library_group("Testing (for development use only)","Testing (for development use only)","STW_TX_GenericTestNet");
palette_group("Testing (for development use only)","Testing (for development use only)","STW_TX_GenericTestNet");

create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fTX_x5fGenericTest_fInstrumentEnabledSet",
	"_nSTW_x5fTX_x5fGenericTest_fOFF",
	"_nSTW_x5fTX_x5fGenericTest_fON",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fInternal", 
	"Internal",
	0,
	"0",
	"Internal");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fExternal", 
	"External",
	0,
	"1",
	"External");
create_form_set("_nSTW_x5fTX_x5fGenericTest_fESG_x5fClkRefSet",
	"_nSTW_x5fTX_x5fGenericTest_fInternal",
	"_nSTW_x5fTX_x5fGenericTest_fExternal",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fthrough", 
	"through",
	0,
	"0",
	"through");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_ffilter_x5f2100kHz", 
	"filter_2100kHz",
	0,
	"1",
	"filter_2100kHz");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_ffilter_x5f40MHz", 
	"filter_40MHz",
	0,
	"2",
	"filter_40MHz");
create_form_set("_nSTW_x5fTX_x5fGenericTest_fESG_x5fIQFilterSet",
	"_nSTW_x5fTX_x5fGenericTest_fthrough",
	"_nSTW_x5fTX_x5fGenericTest_ffilter_x5f2100kHz",
	"_nSTW_x5fTX_x5fGenericTest_ffilter_x5f40MHz",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fTX_x5fGenericTest_fESG_x5fAutoScalingSet",
	"_nSTW_x5fTX_x5fGenericTest_fNO",
	"_nSTW_x5fTX_x5fGenericTest_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fTX_x5fGenericTest_fESG_x5fArbOnSet",
	"_nSTW_x5fTX_x5fGenericTest_fNO",
	"_nSTW_x5fTX_x5fGenericTest_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fTX_x5fGenericTest_fESG_x5fRFPowOnSet",
	"_nSTW_x5fTX_x5fGenericTest_fNO",
	"_nSTW_x5fTX_x5fGenericTest_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fNeither", 
	"Neither",
	0,
	"0",
	"Neither");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fEvent1", 
	"Event1",
	0,
	"1",
	"Event1");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fEvent2", 
	"Event2",
	0,
	"2",
	"Event2");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fBoth", 
	"Both",
	0,
	"3",
	"Both");
create_form_set("_nSTW_x5fTX_x5fGenericTest_fESG_x5fEventMarkerTypeSet",
	"_nSTW_x5fTX_x5fGenericTest_fNeither",
	"_nSTW_x5fTX_x5fGenericTest_fEvent1",
	"_nSTW_x5fTX_x5fGenericTest_fEvent2",
	"_nSTW_x5fTX_x5fGenericTest_fBoth",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fTX_x5fGenericTest_fVSA_x5fDisplayModeSet",
	"_nSTW_x5fTX_x5fGenericTest_fNO",
	"_nSTW_x5fTX_x5fGenericTest_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fVSA_x5fA", 
	"VSA_A",
	0,
	"0",
	"VSA_A");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fVSA_x5fB", 
	"VSA_B",
	0,
	"1",
	"VSA_B");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fVSA_x5fC", 
	"VSA_C",
	0,
	"2",
	"VSA_C");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fVSA_x5fD", 
	"VSA_D",
	0,
	"3",
	"VSA_D");
create_form_set("_nSTW_x5fTX_x5fGenericTest_fVSA_x5fTraceSet",
	"_nSTW_x5fTX_x5fGenericTest_fVSA_x5fA",
	"_nSTW_x5fTX_x5fGenericTest_fVSA_x5fB",
	"_nSTW_x5fTX_x5fGenericTest_fVSA_x5fC",
	"_nSTW_x5fTX_x5fGenericTest_fVSA_x5fD",
	"StdForm");
create_text_form ("_nSTW_x5fTX_x5fGenericTest_fset_x5ffile", 
	"File with set extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "set"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fTX_x5fGenericTest_fVSA_x5fSetupFile_x5fFileSet",
	"_nSTW_x5fTX_x5fGenericTest_fset_x5ffile");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fTX_x5fGenericTest_fDUT_x5fMirrorSpectrumSet",
	"_nSTW_x5fTX_x5fGenericTest_fNO",
	"_nSTW_x5fTX_x5fGenericTest_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fTX_x5fGenericTest_fMirrorModSpectrumSet",
	"_nSTW_x5fTX_x5fGenericTest_fNO",
	"_nSTW_x5fTX_x5fGenericTest_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fTX_x5fGenericTest_fRF_x5fImpairmentsEnabledSet",
	"_nSTW_x5fTX_x5fGenericTest_fOFF",
	"_nSTW_x5fTX_x5fGenericTest_fON",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fTX_x5fGenericTest_fMultipathFadingEnabledSet",
	"_nSTW_x5fTX_x5fGenericTest_fOFF",
	"_nSTW_x5fTX_x5fGenericTest_fON",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fTX_x5fGenericTest_fCommonFadingModelEnabledSet",
	"_nSTW_x5fTX_x5fGenericTest_fOFF",
	"_nSTW_x5fTX_x5fGenericTest_fON",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fJakes", 
	"Jakes",
	0,
	"0",
	"Jakes");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fNoiseFilter", 
	"NoiseFilter",
	0,
	"1",
	"NoiseFilter");
create_form_set("_nSTW_x5fTX_x5fGenericTest_fFadingAlgorithmSet",
	"_nSTW_x5fTX_x5fGenericTest_fJakes",
	"_nSTW_x5fTX_x5fGenericTest_fNoiseFilter",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fRayleigh", 
	"Rayleigh",
	0,
	"0",
	"Rayleigh");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fRicean", 
	"Ricean",
	0,
	"1",
	"Ricean");
create_form_set("_nSTW_x5fTX_x5fGenericTest_fFadingUserTypeSet",
	"_nSTW_x5fTX_x5fGenericTest_fRayleigh",
	"_nSTW_x5fTX_x5fGenericTest_fRicean",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fTX_x5fGenericTest_fRF_x5fInterferersEnabledSet",
	"_nSTW_x5fTX_x5fGenericTest_fOFF",
	"_nSTW_x5fTX_x5fGenericTest_fON",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fAfter_x5fmultipath_x5ffading", 
	"After multipath fading",
	0,
	"0",
	"After multipath fading");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fBefore_x5fmultipath_x5ffading", 
	"Before multipath fading",
	0,
	"1",
	"Before multipath fading");
create_form_set("_nSTW_x5fTX_x5fGenericTest_fLocationRF_x5fInterferersSet",
	"_nSTW_x5fTX_x5fGenericTest_fAfter_x5fmultipath_x5ffading",
	"_nSTW_x5fTX_x5fGenericTest_fBefore_x5fmultipath_x5ffading",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fTX_x5fGenericTest_fAWGN_x5fEnabledSet",
	"_nSTW_x5fTX_x5fGenericTest_fOFF",
	"_nSTW_x5fTX_x5fGenericTest_fON",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fNoise_x5f_x5fdBm_x5f_x5fat_x5fESG_x5foutput", 
	"Noise (dBm) at ESG output",
	0,
	"0",
	"Noise (dBm) at ESG output");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fNoise_x5f_x5fdBm_x5fHz_x5f_x5fat_x5fESG_x5foutput", 
	"Noise (dBm/Hz) at ESG output",
	0,
	"1",
	"Noise (dBm/Hz) at ESG output");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fLocal_x5fEb_x5fNo_x5f_x5fdB_x5f_x5fat_x5fESG_x5foutput", 
	"Local Eb/No (dB) at ESG output",
	0,
	"2",
	"Local Eb/No (dB) at ESG output");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fNoise_x5f_x5fdBm_x5f_x5fat_x5fDUT_x5finput", 
	"Noise (dBm) at DUT input",
	0,
	"3",
	"Noise (dBm) at DUT input");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fNoise_x5f_x5fdBm_x5fHz_x5f_x5fat_x5fDUT_x5finput", 
	"Noise (dBm/Hz) at DUT input",
	0,
	"4",
	"Noise (dBm/Hz) at DUT input");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fLocal_x5fEb_x5fNo_x5f_x5fdB_x5f_x5fat_x5fDUT_x5finput", 
	"Local Eb/No (dB) at DUT input",
	0,
	"5",
	"Local Eb/No (dB) at DUT input");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fSystem_x5fEb_x5fNo_x5f_x5fdB_x5f", 
	"System Eb/No (dB)",
	0,
	"6",
	"System Eb/No (dB)");
create_form_set("_nSTW_x5fTX_x5fGenericTest_fAWGN_x5fTypeSet",
	"_nSTW_x5fTX_x5fGenericTest_fNoise_x5f_x5fdBm_x5f_x5fat_x5fESG_x5foutput",
	"_nSTW_x5fTX_x5fGenericTest_fNoise_x5f_x5fdBm_x5fHz_x5f_x5fat_x5fESG_x5foutput",
	"_nSTW_x5fTX_x5fGenericTest_fLocal_x5fEb_x5fNo_x5f_x5fdB_x5f_x5fat_x5fESG_x5foutput",
	"_nSTW_x5fTX_x5fGenericTest_fNoise_x5f_x5fdBm_x5f_x5fat_x5fDUT_x5finput",
	"_nSTW_x5fTX_x5fGenericTest_fNoise_x5f_x5fdBm_x5fHz_x5f_x5fat_x5fDUT_x5finput",
	"_nSTW_x5fTX_x5fGenericTest_fLocal_x5fEb_x5fNo_x5f_x5fdB_x5f_x5fat_x5fDUT_x5finput",
	"_nSTW_x5fTX_x5fGenericTest_fSystem_x5fEb_x5fNo_x5f_x5fdB_x5f",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fTX_x5fGenericTest_fDUT_x5fOutFreqEnabledSet",
	"_nSTW_x5fTX_x5fGenericTest_fOFF",
	"_nSTW_x5fTX_x5fGenericTest_fON",
	"StdForm");
create_text_form ("_nSTW_x5fTX_x5fGenericTest_fdds_x5ffile", 
	"File with dds extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "dds"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fTX_x5fGenericTest_fDDSFileName_x5fFileSet",
	"_nSTW_x5fTX_x5fGenericTest_fdds_x5ffile");
create_text_form ("_nSTW_x5fTX_x5fGenericTest_fds_x5ffile", 
	"File with ds extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "ds"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fTX_x5fGenericTest_fDSFileName_x5fFileSet",
	"_nSTW_x5fTX_x5fGenericTest_fds_x5ffile");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fTX_x5fGenericTest_fDisableSourceDataDisplaySet",
	"_nSTW_x5fTX_x5fGenericTest_fNO",
	"_nSTW_x5fTX_x5fGenericTest_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fRF_x5fDUT_x5finput", 
	"RF DUT input",
	0,
	"0",
	"RF DUT input");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fESG_x5foutput", 
	"ESG output",
	0,
	"1",
	"ESG output");
create_form_set("_nSTW_x5fTX_x5fGenericTest_fSourceDisplayRefPointSet",
	"_nSTW_x5fTX_x5fGenericTest_fRF_x5fDUT_x5finput",
	"_nSTW_x5fTX_x5fGenericTest_fESG_x5foutput",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fRF_x5fDUT_x5foutput", 
	"RF DUT output",
	0,
	"0",
	"RF DUT output");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fVSA_x5finput", 
	"VSA input",
	0,
	"1",
	"VSA input");
create_form_set("_nSTW_x5fTX_x5fGenericTest_fDUT_x5fMeasDisplayRefPointSet",
	"_nSTW_x5fTX_x5fGenericTest_fRF_x5fDUT_x5foutput",
	"_nSTW_x5fTX_x5fGenericTest_fVSA_x5finput",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fnone", 
	"none",
	0,
	"0",
	"none");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fHamming_x5f0_x5f54", 
	"Hamming 0.54",
	0,
	"1",
	"Hamming 0.54");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fHanning_x5f0_x5f50", 
	"Hanning 0.50",
	0,
	"2",
	"Hanning 0.50");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fGaussian_x5f0_x5f75", 
	"Gaussian 0.75",
	0,
	"3",
	"Gaussian 0.75");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fKaiser_x5f7_x5f865", 
	"Kaiser 7.865",
	0,
	"4",
	"Kaiser 7.865");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_f_x5f8510_x5f6_x5f0", 
	"_8510 6.0",
	0,
	"5",
	"8510 6.0");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fBlackman", 
	"Blackman",
	0,
	"6",
	"Blackman");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fBlackman_x5fHarris", 
	"Blackman-Harris",
	0,
	"7",
	"Blackman-Harris");
create_form_set("_nSTW_x5fTX_x5fGenericTest_fSpecWindowSet",
	"_nSTW_x5fTX_x5fGenericTest_fnone",
	"_nSTW_x5fTX_x5fGenericTest_fHamming_x5f0_x5f54",
	"_nSTW_x5fTX_x5fGenericTest_fHanning_x5f0_x5f50",
	"_nSTW_x5fTX_x5fGenericTest_fGaussian_x5f0_x5f75",
	"_nSTW_x5fTX_x5fGenericTest_fKaiser_x5f7_x5f865",
	"_nSTW_x5fTX_x5fGenericTest_f_x5f8510_x5f6_x5f0",
	"_nSTW_x5fTX_x5fGenericTest_fBlackman",
	"_nSTW_x5fTX_x5fGenericTest_fBlackman_x5fHarris",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fTX_x5fGenericTest_fSpecMirrorFreqSet",
	"_nSTW_x5fTX_x5fGenericTest_fNO",
	"_nSTW_x5fTX_x5fGenericTest_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fTX_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fTX_x5fGenericTest_fSpecMeasMirrorFreqSet",
	"_nSTW_x5fTX_x5fGenericTest_fNO",
	"_nSTW_x5fTX_x5fGenericTest_fYES",
	"StdForm");
create_item ("STW_TX_GenericTest","Transmission Generic Test Workbench",
	"S",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_STW_TX_GenericTest",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"STW_TX_GenericTest",
	SPDesignAnnotFmt,
	"SYM_DSN_STW_TX_GenericTest",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("InstrumentSetup","Instrument Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category_nc\"")),
	create_parm ("InstrumentEnabled","Enable Instrument Connectivity",
		PARM_INT,
		"_nSTW_x5fTX_x5fGenericTest_fInstrumentEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTest_fOFF","OFF")),
	create_parm ("ESG_Setup","ESG Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("ESG_Instrument","ESG Instrument Address",
		PARM_STRING | PARM_NO_DISPLAY,
		"InstrumentFormSet",
		UNITLESS_UNIT,
		prm("InstrumentForm","\"[GPIB0::19::INSTR][localhost][4790]\"")),
	create_parm ("ESG_MinOutputPower","ESG Minimum Output Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-116.0)")),
	create_parm ("ESG_MaxOutputPower","ESG Maximum Output Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(10.0)")),
	create_parm ("AdvancedESG_Setup","Advanced ESG Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category2\"")),
	create_parm ("ESG_ExportFilename","Export Waveform Filename",
		PARM_STRING | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Tx_waveform.wfm\"")),
	create_parm ("ESG_ClkRef","Waveform Clock Reference",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fTX_x5fGenericTest_fESG_x5fClkRefSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTest_fInternal","Internal")),
	create_parm ("ESG_ExtClkRefFreq","External Clock Reference Frequency",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","10 MHz")),
	create_parm ("ESG_IQFilter","IQ Filter",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fTX_x5fGenericTest_fESG_x5fIQFilterSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTest_fthrough","through")),
	create_parm ("ESG_AutoScaling","Activate Auto-Scaling",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fTX_x5fGenericTest_fESG_x5fAutoScalingSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTest_fYES","YES")),
	create_parm ("ESG_ArbOn","Select Waveform and Activate ESG ARB After Download",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fTX_x5fGenericTest_fESG_x5fArbOnSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTest_fYES","YES")),
	create_parm ("ESG_RFPowOn","Activate RF Power After Download",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fTX_x5fGenericTest_fESG_x5fRFPowOnSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTest_fYES","YES")),
	create_parm ("ESG_EventMarkerType","Event Marker Type",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fTX_x5fGenericTest_fESG_x5fEventMarkerTypeSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTest_fEvent1","Event1")),
	create_parm ("ESG_MarkerLength","Event Marker Length",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","10")),
	create_parm ("VSA_Setup","VSA Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("VSA_MinInputPower","VSA Minimum Input Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-45.0)")),
	create_parm ("VSA_MaxInputPower","VSA Maximum Input Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(20.0)")),
	create_parm ("AdvancedVSA_Setup","Advanced VSA Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category2\"")),
	create_parm ("VSA_DisplayMode","Activate VSA Display",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fTX_x5fGenericTest_fVSA_x5fDisplayModeSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTest_fNO","NO")),
	create_parm ("VSA_Trace","VSA Data Trace",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fTX_x5fGenericTest_fVSA_x5fTraceSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTest_fVSA_x5fB","VSA_B")),
	create_parm ("VSA_SetupFile","VSA Setup Filename",
		PARM_STRING | PARM_NO_DISPLAY,
		"_nSTW_x5fTX_x5fGenericTest_fVSA_x5fSetupFile_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTest_fset_x5ffile","\"$HPEESOF_DIR/stw/Tx_waveform.set\"")),
	create_parm ("VSA_Title","VSA Display Title",
		PARM_STRING | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"IEEE 802.11ag Measurement\"")),
	create_parm ("DUT_ModelSetup","DUT Model Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("DUT_PreAmpGain","DUT Pre-Amplifier Gain",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_PreAmpNoiseFigure","DUT Pre-Amplifier Noise Figure",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_Gain","DUT Gain",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_NoiseFigure","DUT Noise Figure",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_MirrorSpectrum","Mirror DUT Output Spectrum",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fTX_x5fGenericTest_fDUT_x5fMirrorSpectrumSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTest_fNO","NO")),
	create_parm ("DUT_PostAmpGain","DUT Post-Amplifier Gain",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_PostAmpNoiseFigure","DUT Post-Amplifier Noise Figure",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("SignalSetup","Signal Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("AdvancedSignalSetup","Advanced Signal Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("RandomSeed","Random Number Generator Seed",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1234567")),
	create_parm ("RF_Modulator","RF Modulator",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category_nc\"")),
	create_parm ("ModulatorFreq","Modulator Carrier Frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","2400.0MHz")),
	create_parm ("MirrorModSpectrum","Mirror Modulator Spectrum",
		PARM_INT,
		"_nSTW_x5fTX_x5fGenericTest_fMirrorModSpectrumSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTest_fNO","NO")),
	create_parm ("RF_Impairments","RF Impairments",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("RF_ImpairmentsEnabled","Enable RF Impairments",
		PARM_INT,
		"_nSTW_x5fTX_x5fGenericTest_fRF_x5fImpairmentsEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTest_fOFF","OFF")),
	create_parm ("GainImbalance","Gain Imbalance, Q vs I",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("PhaseImbalance","Phase Imbalance, Q vs I",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		ANGLE_UNIT,
		prm("StdForm","0")),
	create_parm ("I_OriginOffset","I Origin Offset (% of output RMS voltage)",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("Q_OriginOffset","Q Origin Offset (% of output RMS voltage)",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("IQ_Rotation","IQ Rotation",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		ANGLE_UNIT,
		prm("StdForm","0")),
	create_parm ("MultipathFading","Multipath Fading",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("MultipathFadingEnabled","Enable Multipath Fading",
		PARM_INT,
		"_nSTW_x5fTX_x5fGenericTest_fMultipathFadingEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTest_fOFF","OFF")),
	create_parm ("CommonFadingModel","Common Fading Model",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("CommonFadingModelEnabled","Enable Common Fading Model",
		PARM_INT,
		"_nSTW_x5fTX_x5fGenericTest_fCommonFadingModelEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTest_fOFF","OFF")),
	create_parm ("FadingAlgorithm","Fading Algorithm",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fTX_x5fGenericTest_fFadingAlgorithmSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTest_fNoiseFilter","NoiseFilter")),
	create_parm ("FadingSeed","Jakes Algorithm Random Seed",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1234567")),
	create_parm ("FadingPathNumber","Number of Multipaths",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("FadingPowerArray","Path Average Relative Power Array in dB",
		PARM_REALARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0.0,  -14,  -18,  -20}")),
	create_parm ("FadingDelayArray","Path Delay Array in nsec",
		PARM_REALARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0.0,  56,  106,  185}")),
	create_parm ("FadingUserType","First Path Fading Type",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fTX_x5fGenericTest_fFadingUserTypeSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTest_fRicean","Ricean")),
	create_parm ("FadingRiceanFactor","Factor for Ricean Fading Type",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","10")),
	create_parm ("FadingJakesOscNum","Number of Jakes Algorithm Oscillators",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","10")),
	create_parm ("RF_Interferers","RF Interferers",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("RF_InterferersEnabled","Enable RF Interferers",
		PARM_INT,
		"_nSTW_x5fTX_x5fGenericTest_fRF_x5fInterferersEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTest_fOFF","OFF")),
	create_parm ("LocationRF_Interferers","Location of RF Interferers",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fTX_x5fGenericTest_fLocationRF_x5fInterferersSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTest_fAfter_x5fmultipath_x5ffading","After_multipath_fading")),
	create_parm ("ModFreqOffset","Modulated Interferer Frequency Offset",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","0")),
	create_parm ("ModPower","Modulated Interferer Power",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-200.0)")),
	create_parm ("CW_FreqOffset","CW Interferer Frequency Offset",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","0")),
	create_parm ("CW_Power","CW Interferer Power",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-200.0)")),
	create_parm ("AWGN_Noise","Additive White Gaussian Noise (AWGN)",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("AWGN_Enabled","Enable AWGN",
		PARM_INT,
		"_nSTW_x5fTX_x5fGenericTest_fAWGN_x5fEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTest_fOFF","OFF")),
	create_parm ("AWGN_Type","AWGN Specification Type",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fTX_x5fGenericTest_fAWGN_x5fTypeSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTest_fNoise_x5f_x5fdBm_x5f_x5fat_x5fDUT_x5finput","Noise__dBm__at_DUT_input")),
	create_parm ("AWGN_Value","AWGN Specification Value",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-80")),
	create_parm ("MeasurementSetup","Measurement Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category_nc\"")),
	create_parm ("NumberSegments","Number of Signal Segments Measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")),
	create_parm ("DUT_InputPowerStart","DUT Input RF Start Power",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-20.0)")),
	create_parm ("DUT_InputPowerStep","DUT Input Power Step in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","10")),
	create_parm ("DUT_InputPowerNumSteps","DUT Input Number of Power Steps",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("DUT_OutFreq","DUT Output Frequency",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("DUT_OutFreqEnabled","Enable DUT Output Frequency Override",
		PARM_INT,
		"_nSTW_x5fTX_x5fGenericTest_fDUT_x5fOutFreqEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTest_fOFF","OFF")),
	create_parm ("DUT_OutputFreq","DUT Output Frequency",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","2412.0 MHz")),
	create_parm ("DataDisplaySetup","Data Display Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("DDSFileName","Data Display Filename (Leave Blank for Default Display)",
		PARM_STRING,
		"_nSTW_x5fTX_x5fGenericTest_fDDSFileName_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTest_fdds_x5ffile","\"\"")),
	create_parm ("DSFileName","Dataset Filename (Leave Blank for Default Name)",
		PARM_STRING,
		"_nSTW_x5fTX_x5fGenericTest_fDSFileName_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTest_fds_x5ffile","\"\"")),
	create_parm ("DisableSourceDataDisplay","Disable Source Signal Data Display",
		PARM_INT,
		"_nSTW_x5fTX_x5fGenericTest_fDisableSourceDataDisplaySet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTest_fNO","NO")),
	create_parm ("SourceDisplayRefPoint","Source Signal Display Reference Point",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fTX_x5fGenericTest_fSourceDisplayRefPointSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTest_fRF_x5fDUT_x5finput","RF_DUT_input")),
	create_parm ("DUT_MeasDisplayRefPoint","DUT Measurement Display Reference Point",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fTX_x5fGenericTest_fDUT_x5fMeasDisplayRefPointSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTest_fRF_x5fDUT_x5foutput","RF_DUT_output")),
	create_parm ("SpecResBW","Spectrum Resolution Bandwidth",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","100 kHz")),
	create_parm ("SpecWindow","Spectrum Window Type",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fTX_x5fGenericTest_fSpecWindowSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTest_fKaiser_x5f7_x5f865","Kaiser_7_865")),
	create_parm ("SpecMirrorFreq","Mirror Frequency of Source Spectrum/Envelope",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fTX_x5fGenericTest_fSpecMirrorFreqSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTest_fNO","NO")),
	create_parm ("SpecMeasMirrorFreq","Mirror Frequency of Measurement Spectrum/Envelope",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fTX_x5fGenericTest_fSpecMeasMirrorFreqSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fTX_x5fGenericTest_fNO","NO")));
library_group("Testing (for development use only)","Testing (for development use only)","STW_TX_GenericTest");
palette_group("Testing (for development use only)","Testing (for development use only)","STW_TX_GenericTest");

create_constant_form ("_nSTW_x5fSourceSwitch_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fSourceSwitch_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fSourceSwitch_fExternalDUT_x5fPathEnabledSet",
	"_nSTW_x5fSourceSwitch_fOFF",
	"_nSTW_x5fSourceSwitch_fON",
	"StdForm");
create_constant_form ("_nSTW_x5fSourceSwitch_fRF_x5fDUT_x5foutput", 
	"RF DUT output",
	0,
	"0",
	"RF DUT output");
create_constant_form ("_nSTW_x5fSourceSwitch_fVSA_x5finput", 
	"VSA input",
	0,
	"1",
	"VSA input");
create_form_set("_nSTW_x5fSourceSwitch_fDUT_x5fMeasDisplayRefPointSet",
	"_nSTW_x5fSourceSwitch_fRF_x5fDUT_x5foutput",
	"_nSTW_x5fSourceSwitch_fVSA_x5finput",
	"StdForm");
create_constant_form ("_nSTW_x5fSourceSwitch_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fSourceSwitch_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fSourceSwitch_fDUT_x5fMirrorSpectrumSet",
	"_nSTW_x5fSourceSwitch_fNO",
	"_nSTW_x5fSourceSwitch_fYES",
	"StdForm");
create_item ("STW_SourceSwitch","STW switch between Simulation and Test",
	"S",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_STW_SourceSwitch",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"STW_SourceSwitch",
	SPDesignAnnotFmt,
	"SYM_DSN_STW_SourceSwitch",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("R","Reference resistance",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50")),
	create_parm ("ExternalDUT_PathEnabled","Instrument connectivity enabled",
		PARM_INT,
		"_nSTW_x5fSourceSwitch_fExternalDUT_x5fPathEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSourceSwitch_fOFF","OFF")),
	create_parm ("DUT_PreAmpGain","DUT pre-amplifier gain",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_PreAmpNoiseFigure","DUT pre-amplifier noise figure",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_Gain","DUT gain",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_NoiseFigure","DUT noise figure",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_PostAmpGain","DUT post-amplifier gain",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_PostAmpNoiseFigure","DUT post-amplifier noise figure",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_MeasDisplayRefPoint","DUT measurement signal display reference point",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fSourceSwitch_fDUT_x5fMeasDisplayRefPointSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSourceSwitch_fRF_x5fDUT_x5foutput","RF_DUT_output")),
	create_parm ("DUT_InputFreq","DUT input frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_OutputFreq","DUT output frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_MirrorSpectrum","DUT mirror spectrum",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fSourceSwitch_fDUT_x5fMirrorSpectrumSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSourceSwitch_fNO","NO")));
library_group("Testing (for development use only)","Testing (for development use only)","STW_SourceSwitch");
palette_group("Testing (for development use only)","Testing (for development use only)","STW_SourceSwitch");

create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fInstrumentEnabledSet",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fOFF",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fON",
	"StdForm");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fInternal", 
	"Internal",
	0,
	"0",
	"Internal");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fExternal", 
	"External",
	0,
	"1",
	"External");
create_form_set("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fESG_x5fClkRefSet",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fInternal",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fExternal",
	"StdForm");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fthrough", 
	"through",
	0,
	"0",
	"through");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_ffilter_x5f2100kHz", 
	"filter_2100kHz",
	0,
	"1",
	"filter_2100kHz");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_ffilter_x5f40MHz", 
	"filter_40MHz",
	0,
	"2",
	"filter_40MHz");
create_form_set("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fESG_x5fIQFilterSet",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fthrough",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_ffilter_x5f2100kHz",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_ffilter_x5f40MHz",
	"StdForm");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fESG_x5fAutoScalingSet",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fNO",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fESG_x5fArbOnSet",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fNO",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fESG_x5fRFPowOnSet",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fNO",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fNeither", 
	"Neither",
	0,
	"0",
	"Neither");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fEvent1", 
	"Event1",
	0,
	"1",
	"Event1");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fEvent2", 
	"Event2",
	0,
	"2",
	"Event2");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fBoth", 
	"Both",
	0,
	"3",
	"Both");
create_form_set("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fESG_x5fEventMarkerTypeSet",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fNeither",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fEvent1",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fEvent2",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fBoth",
	"StdForm");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fVSA_x5fDisplayModeSet",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fNO",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fVSA_x5fA", 
	"VSA_A",
	0,
	"0",
	"VSA_A");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fVSA_x5fB", 
	"VSA_B",
	0,
	"1",
	"VSA_B");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fVSA_x5fC", 
	"VSA_C",
	0,
	"2",
	"VSA_C");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fVSA_x5fD", 
	"VSA_D",
	0,
	"3",
	"VSA_D");
create_form_set("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fVSA_x5fTraceSet",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fVSA_x5fA",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fVSA_x5fB",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fVSA_x5fC",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fVSA_x5fD",
	"StdForm");
create_text_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fset_x5ffile", 
	"File with set extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "set"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fVSA_x5fSetupFile_x5fFileSet",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fset_x5ffile");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fDUT_x5fMirrorSpectrumSet",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fNO",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fMirrorModSpectrumSet",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fNO",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fDUT_x5fOutFreqEnabledSet",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fOFF",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fON",
	"StdForm");
create_text_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fdds_x5ffile", 
	"File with dds extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "dds"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fDDSFileName_x5fFileSet",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fdds_x5ffile");
create_text_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fds_x5ffile", 
	"File with ds extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "ds"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fDSFileName_x5fFileSet",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fds_x5ffile");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fnone", 
	"none",
	0,
	"0",
	"none");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fHamming_x5f0_x5f54", 
	"Hamming 0.54",
	0,
	"1",
	"Hamming 0.54");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fHanning_x5f0_x5f50", 
	"Hanning 0.50",
	0,
	"2",
	"Hanning 0.50");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fGaussian_x5f0_x5f75", 
	"Gaussian 0.75",
	0,
	"3",
	"Gaussian 0.75");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fKaiser_x5f7_x5f865", 
	"Kaiser 7.865",
	0,
	"4",
	"Kaiser 7.865");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_f_x5f8510_x5f6_x5f0", 
	"_8510 6.0",
	0,
	"5",
	"8510 6.0");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fBlackman", 
	"Blackman",
	0,
	"6",
	"Blackman");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fBlackman_x5fHarris", 
	"Blackman-Harris",
	0,
	"7",
	"Blackman-Harris");
create_form_set("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fSpecWindowSet",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fnone",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fHamming_x5f0_x5f54",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fHanning_x5f0_x5f50",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fGaussian_x5f0_x5f75",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fKaiser_x5f7_x5f865",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_f_x5f8510_x5f6_x5f0",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fBlackman",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fBlackman_x5fHarris",
	"StdForm");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fSpecMeasMirrorFreqSet",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fNO",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fYES",
	"StdForm");
create_item ("STW_Simplified_TX_GenericTestNet","Transmission Simplified Generic Test Workbench",
	"S",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_STW_Simplified_TX_GenericTestNet",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"STW_Simplified_TX_GenericTestNet",
	SPDesignAnnotFmt,
	"SYM_DSN_STW_Simplified_TX_GenericTestNet",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("InstrumentSetup","Instrument Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category_nc\"")),
	create_parm ("InstrumentEnabled","Enable Instrument Connectivity",
		PARM_INT,
		"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fInstrumentEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fOFF","OFF")),
	create_parm ("ESG_Setup","ESG Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("ESG_Instrument","ESG Instrument Address",
		PARM_STRING | PARM_NO_DISPLAY,
		"InstrumentFormSet",
		UNITLESS_UNIT,
		prm("InstrumentForm","\"[GPIB0::19::INSTR][localhost][4790]\"")),
	create_parm ("ESG_MinOutputPower","ESG Minimum Output Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-116.0)")),
	create_parm ("ESG_MaxOutputPower","ESG Maximum Output Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(10.0)")),
	create_parm ("AdvancedESG_Setup","Advanced ESG Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category2\"")),
	create_parm ("ESG_ExportFilename","Export Waveform Filename",
		PARM_STRING | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Tx_waveform.wfm\"")),
	create_parm ("ESG_ClkRef","Waveform Clock Reference",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fESG_x5fClkRefSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fInternal","Internal")),
	create_parm ("ESG_ExtClkRefFreq","External Clock Reference Frequency",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","10 MHz")),
	create_parm ("ESG_IQFilter","IQ Filter",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fESG_x5fIQFilterSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fthrough","through")),
	create_parm ("ESG_AutoScaling","Activate Auto-Scaling",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fESG_x5fAutoScalingSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fYES","YES")),
	create_parm ("ESG_ArbOn","Select Waveform and Activate ESG ARB After Download",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fESG_x5fArbOnSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fYES","YES")),
	create_parm ("ESG_RFPowOn","Activate RF Power After Download",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fESG_x5fRFPowOnSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fYES","YES")),
	create_parm ("ESG_EventMarkerType","Event Marker Type",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fESG_x5fEventMarkerTypeSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fEvent1","Event1")),
	create_parm ("ESG_MarkerLength","Event Marker Length",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","10")),
	create_parm ("VSA_Setup","VSA Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("VSA_MinInputPower","VSA Minimum Input Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-45.0)")),
	create_parm ("VSA_MaxInputPower","VSA Maximum Input Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(20.0)")),
	create_parm ("AdvancedVSA_Setup","Advanced VSA Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category2\"")),
	create_parm ("VSA_DisplayMode","Activate VSA Display",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fVSA_x5fDisplayModeSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fNO","NO")),
	create_parm ("VSA_Trace","VSA Data Trace",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fVSA_x5fTraceSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fVSA_x5fB","VSA_B")),
	create_parm ("VSA_SetupFile","VSA Setup Filename",
		PARM_STRING | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fVSA_x5fSetupFile_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fset_x5ffile","\"$HPEESOF_DIR/adsptolemy/templates/Tx_waveform.set\"")),
	create_parm ("VSA_Title","VSA Display Title",
		PARM_STRING | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"IEEE 802.11ag Measurement\"")),
	create_parm ("DUT_ModelSetup","DUT Model Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("DUT_Gain","DUT Gain",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_MirrorSpectrum","Mirror DUT Output Spectrum",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fDUT_x5fMirrorSpectrumSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fNO","NO")),
	create_parm ("DUT_PostAmpGain","DUT Post-Amplifier Gain",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("SignalSetup","Signal Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("AdvancedSignalSetup","Advanced Signal Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("RandomSeed","Random Number Generator Seed",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1234567")),
	create_parm ("RF_Modulator","RF Modulator",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category_nc\"")),
	create_parm ("ModulatorFreq","Modulator Carrier Frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","2400.0MHz")),
	create_parm ("MirrorModSpectrum","Mirror Modulator Spectrum",
		PARM_INT,
		"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fMirrorModSpectrumSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fNO","NO")),
	create_parm ("MeasurementSetup","Measurement Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category_nc\"")),
	create_parm ("NumberSegments","Number of Signal Segments Measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")),
	create_parm ("DUT_InputPowerStart","DUT Input RF Start Power",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-20.0)")),
	create_parm ("DUT_InputPowerStep","DUT Input Power Step in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","10")),
	create_parm ("DUT_InputPowerNumSteps","DUT Input Number of Power Steps",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("DUT_OutFreq","DUT Output Frequency",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("DUT_OutFreqEnabled","Enable DUT Output Frequency Override",
		PARM_INT,
		"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fDUT_x5fOutFreqEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fOFF","OFF")),
	create_parm ("DUT_OutputFreq","DUT Output Frequency",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","2412.0 MHz")),
	create_parm ("DataDisplaySetup","Data Display Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("DDSFileName","Data Display Filename (Leave Blank for Default Display)",
		PARM_STRING,
		"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fDDSFileName_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fdds_x5ffile","\"\"")),
	create_parm ("DSFileName","Dataset Filename (Leave Blank for Default Name)",
		PARM_STRING,
		"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fDSFileName_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fds_x5ffile","\"\"")),
	create_parm ("SpecResBW","Spectrum Resolution Bandwidth",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","100 kHz")),
	create_parm ("SpecWindow","Spectrum Window Type",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fSpecWindowSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fKaiser_x5f7_x5f865","Kaiser_7_865")),
	create_parm ("SpecMeasMirrorFreq","Mirror Frequency of Measurement Spectrum/Envelope",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fSpecMeasMirrorFreqSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fTX_x5fGenericTestNet_fNO","NO")));
library_group("Testing (for development use only)","Testing (for development use only)","STW_Simplified_TX_GenericTestNet");
palette_group("Testing (for development use only)","Testing (for development use only)","STW_Simplified_TX_GenericTestNet");

create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fInstrumentEnabledSet",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fOFF",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fON",
	"StdForm");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fInternal", 
	"Internal",
	0,
	"0",
	"Internal");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fExternal", 
	"External",
	0,
	"1",
	"External");
create_form_set("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fESG_x5fClkRefSet",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fInternal",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fExternal",
	"StdForm");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fthrough", 
	"through",
	0,
	"0",
	"through");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_ffilter_x5f2100kHz", 
	"filter_2100kHz",
	0,
	"1",
	"filter_2100kHz");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_ffilter_x5f40MHz", 
	"filter_40MHz",
	0,
	"2",
	"filter_40MHz");
create_form_set("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fESG_x5fIQFilterSet",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fthrough",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_ffilter_x5f2100kHz",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_ffilter_x5f40MHz",
	"StdForm");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fESG_x5fAutoScalingSet",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fNO",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fESG_x5fArbOnSet",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fNO",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fESG_x5fRFPowOnSet",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fNO",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fNeither", 
	"Neither",
	0,
	"0",
	"Neither");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fEvent1", 
	"Event1",
	0,
	"1",
	"Event1");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fEvent2", 
	"Event2",
	0,
	"2",
	"Event2");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fBoth", 
	"Both",
	0,
	"3",
	"Both");
create_form_set("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fESG_x5fEventMarkerTypeSet",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fNeither",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fEvent1",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fEvent2",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fBoth",
	"StdForm");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fVSA_x5fDisplayModeSet",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fNO",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fVSA_x5fA", 
	"VSA_A",
	0,
	"0",
	"VSA_A");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fVSA_x5fB", 
	"VSA_B",
	0,
	"1",
	"VSA_B");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fVSA_x5fC", 
	"VSA_C",
	0,
	"2",
	"VSA_C");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fVSA_x5fD", 
	"VSA_D",
	0,
	"3",
	"VSA_D");
create_form_set("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fVSA_x5fTraceSet",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fVSA_x5fA",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fVSA_x5fB",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fVSA_x5fC",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fVSA_x5fD",
	"StdForm");
create_text_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fset_x5ffile", 
	"File with set extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "set"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fVSA_x5fSetupFile_x5fFileSet",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fset_x5ffile");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fDUT_x5fMirrorSpectrumSet",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fNO",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fMirrorModSpectrumSet",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fNO",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fDUT_x5fOutFreqEnabledSet",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fOFF",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fON",
	"StdForm");
create_text_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fdds_x5ffile", 
	"File with dds extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "dds"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fDDSFileName_x5fFileSet",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fdds_x5ffile");
create_text_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fds_x5ffile", 
	"File with ds extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "ds"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fDSFileName_x5fFileSet",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fds_x5ffile");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fnone", 
	"none",
	0,
	"0",
	"none");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fHamming_x5f0_x5f54", 
	"Hamming 0.54",
	0,
	"1",
	"Hamming 0.54");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fHanning_x5f0_x5f50", 
	"Hanning 0.50",
	0,
	"2",
	"Hanning 0.50");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fGaussian_x5f0_x5f75", 
	"Gaussian 0.75",
	0,
	"3",
	"Gaussian 0.75");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fKaiser_x5f7_x5f865", 
	"Kaiser 7.865",
	0,
	"4",
	"Kaiser 7.865");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_f_x5f8510_x5f6_x5f0", 
	"_8510 6.0",
	0,
	"5",
	"8510 6.0");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fBlackman", 
	"Blackman",
	0,
	"6",
	"Blackman");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fBlackman_x5fHarris", 
	"Blackman-Harris",
	0,
	"7",
	"Blackman-Harris");
create_form_set("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fSpecWindowSet",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fnone",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fHamming_x5f0_x5f54",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fHanning_x5f0_x5f50",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fGaussian_x5f0_x5f75",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fKaiser_x5f7_x5f865",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_f_x5f8510_x5f6_x5f0",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fBlackman",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fBlackman_x5fHarris",
	"StdForm");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fSpecMeasMirrorFreqSet",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fNO",
	"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fYES",
	"StdForm");
create_item ("STW_Simplified_TX_GenericTest","Transmission Simplified Generic Test Workbench",
	"S",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_STW_Simplified_TX_GenericTest",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"STW_Simplified_TX_GenericTest",
	SPDesignAnnotFmt,
	"SYM_DSN_STW_Simplified_TX_GenericTest",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("InstrumentSetup","Instrument Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category_nc\"")),
	create_parm ("InstrumentEnabled","Enable Instrument Connectivity",
		PARM_INT,
		"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fInstrumentEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fOFF","OFF")),
	create_parm ("ESG_Setup","ESG Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("ESG_Instrument","ESG Instrument Address",
		PARM_STRING | PARM_NO_DISPLAY,
		"InstrumentFormSet",
		UNITLESS_UNIT,
		prm("InstrumentForm","\"[GPIB0::19::INSTR][localhost][4790]\"")),
	create_parm ("ESG_MinOutputPower","ESG Minimum Output Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-116.0)")),
	create_parm ("ESG_MaxOutputPower","ESG Maximum Output Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(10.0)")),
	create_parm ("AdvancedESG_Setup","Advanced ESG Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category2\"")),
	create_parm ("ESG_ExportFilename","Export Waveform Filename",
		PARM_STRING | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Tx_waveform.wfm\"")),
	create_parm ("ESG_ClkRef","Waveform Clock Reference",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fESG_x5fClkRefSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fInternal","Internal")),
	create_parm ("ESG_ExtClkRefFreq","External Clock Reference Frequency",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","10 MHz")),
	create_parm ("ESG_IQFilter","IQ Filter",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fESG_x5fIQFilterSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fthrough","through")),
	create_parm ("ESG_AutoScaling","Activate Auto-Scaling",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fESG_x5fAutoScalingSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fYES","YES")),
	create_parm ("ESG_ArbOn","Select Waveform and Activate ESG ARB After Download",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fESG_x5fArbOnSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fYES","YES")),
	create_parm ("ESG_RFPowOn","Activate RF Power After Download",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fESG_x5fRFPowOnSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fYES","YES")),
	create_parm ("ESG_EventMarkerType","Event Marker Type",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fESG_x5fEventMarkerTypeSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fEvent1","Event1")),
	create_parm ("ESG_MarkerLength","Event Marker Length",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","10")),
	create_parm ("VSA_Setup","VSA Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("VSA_MinInputPower","VSA Minimum Input Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-45.0)")),
	create_parm ("VSA_MaxInputPower","VSA Maximum Input Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(20.0)")),
	create_parm ("AdvancedVSA_Setup","Advanced VSA Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category2\"")),
	create_parm ("VSA_DisplayMode","Activate VSA Display",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fVSA_x5fDisplayModeSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fNO","NO")),
	create_parm ("VSA_Trace","VSA Data Trace",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fVSA_x5fTraceSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fVSA_x5fB","VSA_B")),
	create_parm ("VSA_SetupFile","VSA Setup Filename",
		PARM_STRING | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fVSA_x5fSetupFile_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fset_x5ffile","\"$HPEESOF_DIR/adsptolemy/templates/Tx_waveform.set\"")),
	create_parm ("VSA_Title","VSA Display Title",
		PARM_STRING | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"IEEE 802.11ag Measurement\"")),
	create_parm ("DUT_ModelSetup","DUT Model Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("DUT_Gain","DUT Gain",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_MirrorSpectrum","Mirror DUT Output Spectrum",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fDUT_x5fMirrorSpectrumSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fNO","NO")),
	create_parm ("DUT_PostAmpGain","DUT Post-Amplifier Gain",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("SignalSetup","Signal Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("AdvancedSignalSetup","Advanced Signal Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("RandomSeed","Random Number Generator Seed",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1234567")),
	create_parm ("RF_Modulator","RF Modulator",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category_nc\"")),
	create_parm ("ModulatorFreq","Modulator Carrier Frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","2400.0MHz")),
	create_parm ("MirrorModSpectrum","Mirror Modulator Spectrum",
		PARM_INT,
		"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fMirrorModSpectrumSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fNO","NO")),
	create_parm ("MeasurementSetup","Measurement Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category_nc\"")),
	create_parm ("NumberSegments","Number of Signal Segments Measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")),
	create_parm ("DUT_InputPowerStart","DUT Input RF Start Power",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-20.0)")),
	create_parm ("DUT_InputPowerStep","DUT Input Power Step in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","10")),
	create_parm ("DUT_InputPowerNumSteps","DUT Input Number of Power Steps",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("DUT_OutFreq","DUT Output Frequency",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("DUT_OutFreqEnabled","Enable DUT Output Frequency Override",
		PARM_INT,
		"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fDUT_x5fOutFreqEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fOFF","OFF")),
	create_parm ("DUT_OutputFreq","DUT Output Frequency",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","2412.0 MHz")),
	create_parm ("DataDisplaySetup","Data Display Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("DDSFileName","Data Display Filename (Leave Blank for Default Display)",
		PARM_STRING,
		"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fDDSFileName_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fdds_x5ffile","\"\"")),
	create_parm ("DSFileName","Dataset Filename (Leave Blank for Default Name)",
		PARM_STRING,
		"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fDSFileName_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fds_x5ffile","\"\"")),
	create_parm ("SpecResBW","Spectrum Resolution Bandwidth",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","100 kHz")),
	create_parm ("SpecWindow","Spectrum Window Type",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fSpecWindowSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fKaiser_x5f7_x5f865","Kaiser_7_865")),
	create_parm ("SpecMeasMirrorFreq","Mirror Frequency of Measurement Spectrum/Envelope",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fSpecMeasMirrorFreqSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fTX_x5fGenericTest_fNO","NO")));
library_group("Testing (for development use only)","Testing (for development use only)","STW_Simplified_TX_GenericTest");
palette_group("Testing (for development use only)","Testing (for development use only)","STW_Simplified_TX_GenericTest");

create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fInstrumentEnabledSet",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fOFF",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fON",
	"StdForm");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fInternal", 
	"Internal",
	0,
	"0",
	"Internal");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fExternal", 
	"External",
	0,
	"1",
	"External");
create_form_set("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fESG_x5fClkRefSet",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fInternal",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fExternal",
	"StdForm");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fthrough", 
	"through",
	0,
	"0",
	"through");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_ffilter_x5f2100kHz", 
	"filter_2100kHz",
	0,
	"1",
	"filter_2100kHz");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_ffilter_x5f40MHz", 
	"filter_40MHz",
	0,
	"2",
	"filter_40MHz");
create_form_set("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fESG_x5fIQFilterSet",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fthrough",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_ffilter_x5f2100kHz",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_ffilter_x5f40MHz",
	"StdForm");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fESG_x5fAutoScalingSet",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fNO",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fESG_x5fArbOnSet",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fNO",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fESG_x5fRFPowOnSet",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fNO",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fNeither", 
	"Neither",
	0,
	"0",
	"Neither");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fEvent1", 
	"Event1",
	0,
	"1",
	"Event1");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fEvent2", 
	"Event2",
	0,
	"2",
	"Event2");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fBoth", 
	"Both",
	0,
	"3",
	"Both");
create_form_set("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fESG_x5fEventMarkerTypeSet",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fNeither",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fEvent1",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fEvent2",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fBoth",
	"StdForm");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fVSA_x5fDisplayModeSet",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fNO",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fVSA_x5fA", 
	"VSA_A",
	0,
	"0",
	"VSA_A");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fVSA_x5fB", 
	"VSA_B",
	0,
	"1",
	"VSA_B");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fVSA_x5fC", 
	"VSA_C",
	0,
	"2",
	"VSA_C");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fVSA_x5fD", 
	"VSA_D",
	0,
	"3",
	"VSA_D");
create_form_set("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fVSA_x5fTraceSet",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fVSA_x5fA",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fVSA_x5fB",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fVSA_x5fC",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fVSA_x5fD",
	"StdForm");
create_text_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fset_x5ffile", 
	"File with set extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "set"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fVSA_x5fSetupFile_x5fFileSet",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fset_x5ffile");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fDUT_x5fMirrorSpectrumSet",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fNO",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fMirrorModSpectrumSet",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fNO",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fDUT_x5fOutFreqEnabledSet",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fOFF",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fON",
	"StdForm");
create_text_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fdds_x5ffile", 
	"File with dds extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "dds"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fDDSFileName_x5fFileSet",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fdds_x5ffile");
create_text_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fds_x5ffile", 
	"File with ds extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "ds"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fDSFileName_x5fFileSet",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fds_x5ffile");
create_item ("STW_Simplified_RX_GenericTestNet","Receiver Simplified Generic Test Workbench",
	"S",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_STW_Simplified_RX_GenericTestNet",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"STW_Simplified_RX_GenericTestNet",
	SPDesignAnnotFmt,
	"SYM_DSN_STW_Simplified_RX_GenericTestNet",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("InstrumentSetup","Instrument Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category_nc\"")),
	create_parm ("InstrumentEnabled","Enable Instrument Connectivity",
		PARM_INT,
		"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fInstrumentEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fOFF","OFF")),
	create_parm ("ESG_Setup","ESG Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("ESG_Instrument","ESG Instrument Address",
		PARM_STRING | PARM_NO_DISPLAY,
		"InstrumentFormSet",
		UNITLESS_UNIT,
		prm("InstrumentForm","\"[GPIB0::19::INSTR][localhost][4790]\"")),
	create_parm ("ESG_MinOutputPower","ESG Minimum Output Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-116.0)")),
	create_parm ("ESG_MaxOutputPower","ESG Maximum Output Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(10.0)")),
	create_parm ("AdvancedESG_Setup","Advanced ESG Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category2\"")),
	create_parm ("ESG_ExportFilename","Export Waveform Filename",
		PARM_STRING | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"WLAN_802_11ag.wfm\"")),
	create_parm ("ESG_ClkRef","Waveform Clock Reference",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fESG_x5fClkRefSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fInternal","Internal")),
	create_parm ("ESG_ExtClkRefFreq","External Clock Reference Frequency",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","10 MHz")),
	create_parm ("ESG_IQFilter","IQ Filter",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fESG_x5fIQFilterSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fthrough","through")),
	create_parm ("ESG_AutoScaling","Activate Auto-Scaling",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fESG_x5fAutoScalingSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fYES","YES")),
	create_parm ("ESG_ArbOn","Select Waveform and Activate ESG ARB After Download",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fESG_x5fArbOnSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fYES","YES")),
	create_parm ("ESG_RFPowOn","Activate RF Power After Download",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fESG_x5fRFPowOnSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fYES","YES")),
	create_parm ("ESG_EventMarkerType","Event Marker Type",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fESG_x5fEventMarkerTypeSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fEvent1","Event1")),
	create_parm ("ESG_MarkerLength","Event Marker Length",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","10")),
	create_parm ("VSA_Setup","VSA Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("VSA_MinInputPower","VSA Minimum Input Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-45.0)")),
	create_parm ("VSA_MaxInputPower","VSA Maximum Input Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(20.0)")),
	create_parm ("AdvancedVSA_Setup","Advanced VSA Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category2\"")),
	create_parm ("VSA_DisplayMode","Activate VSA Display",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fVSA_x5fDisplayModeSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fNO","NO")),
	create_parm ("VSA_Trace","VSA Data Trace",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fVSA_x5fTraceSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fVSA_x5fB","VSA_B")),
	create_parm ("VSA_SetupFile","VSA Setup Filename",
		PARM_STRING | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fVSA_x5fSetupFile_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fset_x5ffile","\"$HPEESOF_DIR/adsptolemy/templates/Reacquire_802_11ag_BER_Meas.set\"")),
	create_parm ("VSA_Title","VSA Display Title",
		PARM_STRING | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"IEEE 802.11ag Measurement\"")),
	create_parm ("DUT_ModelSetup","DUT Model Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("DUT_Gain","DUT Gain",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_MirrorSpectrum","Mirror DUT Output Spectrum",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fDUT_x5fMirrorSpectrumSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fNO","NO")),
	create_parm ("DUT_PostAmpGain","DUT Post-Amplifier Gain",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("SignalSetup","Signal Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("AdvancedSignalSetup","Advanced Signal Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("RandomSeed","Random Number Generator Seed",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1234567")),
	create_parm ("RF_Modulator","RF Modulator",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category_nc\"")),
	create_parm ("ModulatorFreq","Modulator Carrier Frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","2400.0MHz")),
	create_parm ("MirrorModSpectrum","Mirror Modulator Spectrum",
		PARM_INT,
		"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fMirrorModSpectrumSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fNO","NO")),
	create_parm ("MeasurementSetup","Measurement Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category_nc\"")),
	create_parm ("NumberSegments","Number of Signal Segments Measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")),
	create_parm ("DUT_InputPowerStart","DUT Input RF Start Power",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-20.0)")),
	create_parm ("DUT_InputPowerStep","DUT Input Power Step in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","10")),
	create_parm ("DUT_InputPowerNumSteps","DUT Input Number of Power Steps",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("DUT_OutFreq","DUT Output Frequency",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("DUT_OutFreqEnabled","Enable DUT Output Frequency Override",
		PARM_INT,
		"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fDUT_x5fOutFreqEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fOFF","OFF")),
	create_parm ("DUT_OutputFreq","DUT Output Frequency",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","2412.0 MHz")),
	create_parm ("DataDisplaySetup","Data Display Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("DDSFileName","Data Display Filename (Leave Blank for Default Display)",
		PARM_STRING,
		"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fDDSFileName_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fdds_x5ffile","\"\"")),
	create_parm ("DSFileName","Dataset Filename (Leave Blank for Default Name)",
		PARM_STRING,
		"_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fDSFileName_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fRX_x5fGenericTestNet_fds_x5ffile","\"\"")));
library_group("Testing (for development use only)","Testing (for development use only)","STW_Simplified_RX_GenericTestNet");
palette_group("Testing (for development use only)","Testing (for development use only)","STW_Simplified_RX_GenericTestNet");

create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fInstrumentEnabledSet",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fOFF",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fON",
	"StdForm");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fInternal", 
	"Internal",
	0,
	"0",
	"Internal");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fExternal", 
	"External",
	0,
	"1",
	"External");
create_form_set("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fESG_x5fClkRefSet",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fInternal",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fExternal",
	"StdForm");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fthrough", 
	"through",
	0,
	"0",
	"through");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_ffilter_x5f2100kHz", 
	"filter_2100kHz",
	0,
	"1",
	"filter_2100kHz");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_ffilter_x5f40MHz", 
	"filter_40MHz",
	0,
	"2",
	"filter_40MHz");
create_form_set("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fESG_x5fIQFilterSet",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fthrough",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_ffilter_x5f2100kHz",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_ffilter_x5f40MHz",
	"StdForm");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fESG_x5fAutoScalingSet",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fNO",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fESG_x5fArbOnSet",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fNO",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fESG_x5fRFPowOnSet",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fNO",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fNeither", 
	"Neither",
	0,
	"0",
	"Neither");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fEvent1", 
	"Event1",
	0,
	"1",
	"Event1");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fEvent2", 
	"Event2",
	0,
	"2",
	"Event2");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fBoth", 
	"Both",
	0,
	"3",
	"Both");
create_form_set("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fESG_x5fEventMarkerTypeSet",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fNeither",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fEvent1",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fEvent2",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fBoth",
	"StdForm");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fVSA_x5fDisplayModeSet",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fNO",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fVSA_x5fA", 
	"VSA_A",
	0,
	"0",
	"VSA_A");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fVSA_x5fB", 
	"VSA_B",
	0,
	"1",
	"VSA_B");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fVSA_x5fC", 
	"VSA_C",
	0,
	"2",
	"VSA_C");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fVSA_x5fD", 
	"VSA_D",
	0,
	"3",
	"VSA_D");
create_form_set("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fVSA_x5fTraceSet",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fVSA_x5fA",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fVSA_x5fB",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fVSA_x5fC",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fVSA_x5fD",
	"StdForm");
create_text_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fset_x5ffile", 
	"File with set extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "set"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fVSA_x5fSetupFile_x5fFileSet",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fset_x5ffile");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fDUT_x5fMirrorSpectrumSet",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fNO",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fMirrorModSpectrumSet",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fNO",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fDUT_x5fOutFreqEnabledSet",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fOFF",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fON",
	"StdForm");
create_text_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fdds_x5ffile", 
	"File with dds extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "dds"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fDDSFileName_x5fFileSet",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fdds_x5ffile");
create_text_form ("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fds_x5ffile", 
	"File with ds extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "ds"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fDSFileName_x5fFileSet",
	"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fds_x5ffile");
create_item ("STW_Simplified_RX_GenericTest","Receiver Simplified Generic Test Workbench",
	"S",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_STW_Simplified_RX_GenericTest",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"STW_Simplified_RX_GenericTest",
	SPDesignAnnotFmt,
	"SYM_DSN_STW_Simplified_RX_GenericTest",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("InstrumentSetup","Instrument Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category_nc\"")),
	create_parm ("InstrumentEnabled","Enable Instrument Connectivity",
		PARM_INT,
		"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fInstrumentEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fOFF","OFF")),
	create_parm ("ESG_Setup","ESG Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("ESG_Instrument","ESG Instrument Address",
		PARM_STRING | PARM_NO_DISPLAY,
		"InstrumentFormSet",
		UNITLESS_UNIT,
		prm("InstrumentForm","\"[GPIB0::19::INSTR][localhost][4790]\"")),
	create_parm ("ESG_MinOutputPower","ESG Minimum Output Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-116.0)")),
	create_parm ("ESG_MaxOutputPower","ESG Maximum Output Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(10.0)")),
	create_parm ("AdvancedESG_Setup","Advanced ESG Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category2\"")),
	create_parm ("ESG_ExportFilename","Export Waveform Filename",
		PARM_STRING | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"WLAN_802_11ag.wfm\"")),
	create_parm ("ESG_ClkRef","Waveform Clock Reference",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fESG_x5fClkRefSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fInternal","Internal")),
	create_parm ("ESG_ExtClkRefFreq","External Clock Reference Frequency",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","10 MHz")),
	create_parm ("ESG_IQFilter","IQ Filter",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fESG_x5fIQFilterSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fthrough","through")),
	create_parm ("ESG_AutoScaling","Activate Auto-Scaling",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fESG_x5fAutoScalingSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fYES","YES")),
	create_parm ("ESG_ArbOn","Select Waveform and Activate ESG ARB After Download",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fESG_x5fArbOnSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fYES","YES")),
	create_parm ("ESG_RFPowOn","Activate RF Power After Download",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fESG_x5fRFPowOnSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fYES","YES")),
	create_parm ("ESG_EventMarkerType","Event Marker Type",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fESG_x5fEventMarkerTypeSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fEvent1","Event1")),
	create_parm ("ESG_MarkerLength","Event Marker Length",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","10")),
	create_parm ("VSA_Setup","VSA Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("VSA_MinInputPower","VSA Minimum Input Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-45.0)")),
	create_parm ("VSA_MaxInputPower","VSA Maximum Input Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(20.0)")),
	create_parm ("AdvancedVSA_Setup","Advanced VSA Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category2\"")),
	create_parm ("VSA_DisplayMode","Activate VSA Display",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fVSA_x5fDisplayModeSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fNO","NO")),
	create_parm ("VSA_Trace","VSA Data Trace",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fVSA_x5fTraceSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fVSA_x5fB","VSA_B")),
	create_parm ("VSA_SetupFile","VSA Setup Filename",
		PARM_STRING | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fVSA_x5fSetupFile_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fset_x5ffile","\"$HPEESOF_DIR/adsptolemy/templates/Reacquire_802_11ag_BER_Meas.set\"")),
	create_parm ("VSA_Title","VSA Display Title",
		PARM_STRING | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"IEEE 802.11ag Measurement\"")),
	create_parm ("DUT_ModelSetup","DUT Model Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("DUT_Gain","DUT Gain",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_MirrorSpectrum","Mirror DUT Output Spectrum",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fDUT_x5fMirrorSpectrumSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fNO","NO")),
	create_parm ("DUT_PostAmpGain","DUT Post-Amplifier Gain",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("SignalSetup","Signal Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("AdvancedSignalSetup","Advanced Signal Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("RandomSeed","Random Number Generator Seed",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1234567")),
	create_parm ("RF_Modulator","RF Modulator",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category_nc\"")),
	create_parm ("ModulatorFreq","Modulator Carrier Frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","2400.0MHz")),
	create_parm ("MirrorModSpectrum","Mirror Modulator Spectrum",
		PARM_INT,
		"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fMirrorModSpectrumSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fNO","NO")),
	create_parm ("MeasurementSetup","Measurement Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category_nc\"")),
	create_parm ("NumberSegments","Number of Signal Segments Measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")),
	create_parm ("DUT_InputPowerStart","DUT Input RF Start Power",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-20.0)")),
	create_parm ("DUT_InputPowerStep","DUT Input Power Step in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","10")),
	create_parm ("DUT_InputPowerNumSteps","DUT Input Number of Power Steps",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("DUT_OutFreq","DUT Output Frequency",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("DUT_OutFreqEnabled","Enable DUT Output Frequency Override",
		PARM_INT,
		"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fDUT_x5fOutFreqEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fOFF","OFF")),
	create_parm ("DUT_OutputFreq","DUT Output Frequency",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","2412.0 MHz")),
	create_parm ("DataDisplaySetup","Data Display Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("DDSFileName","Data Display Filename (Leave Blank for Default Display)",
		PARM_STRING,
		"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fDDSFileName_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fdds_x5ffile","\"\"")),
	create_parm ("DSFileName","Dataset Filename (Leave Blank for Default Name)",
		PARM_STRING,
		"_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fDSFileName_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fSimplified_x5fRX_x5fGenericTest_fds_x5ffile","\"\"")));
library_group("Testing (for development use only)","Testing (for development use only)","STW_Simplified_RX_GenericTest");
palette_group("Testing (for development use only)","Testing (for development use only)","STW_Simplified_RX_GenericTest");

create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fRX_x5fGenericTestNet_fInstrumentEnabledSet",
	"_nSTW_x5fRX_x5fGenericTestNet_fOFF",
	"_nSTW_x5fRX_x5fGenericTestNet_fON",
	"StdForm");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fInternal", 
	"Internal",
	0,
	"0",
	"Internal");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fExternal", 
	"External",
	0,
	"1",
	"External");
create_form_set("_nSTW_x5fRX_x5fGenericTestNet_fESG_x5fClkRefSet",
	"_nSTW_x5fRX_x5fGenericTestNet_fInternal",
	"_nSTW_x5fRX_x5fGenericTestNet_fExternal",
	"StdForm");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fthrough", 
	"through",
	0,
	"0",
	"through");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_ffilter_x5f2100kHz", 
	"filter_2100kHz",
	0,
	"1",
	"filter_2100kHz");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_ffilter_x5f40MHz", 
	"filter_40MHz",
	0,
	"2",
	"filter_40MHz");
create_form_set("_nSTW_x5fRX_x5fGenericTestNet_fESG_x5fIQFilterSet",
	"_nSTW_x5fRX_x5fGenericTestNet_fthrough",
	"_nSTW_x5fRX_x5fGenericTestNet_ffilter_x5f2100kHz",
	"_nSTW_x5fRX_x5fGenericTestNet_ffilter_x5f40MHz",
	"StdForm");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fRX_x5fGenericTestNet_fESG_x5fAutoScalingSet",
	"_nSTW_x5fRX_x5fGenericTestNet_fNO",
	"_nSTW_x5fRX_x5fGenericTestNet_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fRX_x5fGenericTestNet_fESG_x5fArbOnSet",
	"_nSTW_x5fRX_x5fGenericTestNet_fNO",
	"_nSTW_x5fRX_x5fGenericTestNet_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fRX_x5fGenericTestNet_fESG_x5fRFPowOnSet",
	"_nSTW_x5fRX_x5fGenericTestNet_fNO",
	"_nSTW_x5fRX_x5fGenericTestNet_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fNeither", 
	"Neither",
	0,
	"0",
	"Neither");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fEvent1", 
	"Event1",
	0,
	"1",
	"Event1");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fEvent2", 
	"Event2",
	0,
	"2",
	"Event2");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fBoth", 
	"Both",
	0,
	"3",
	"Both");
create_form_set("_nSTW_x5fRX_x5fGenericTestNet_fESG_x5fEventMarkerTypeSet",
	"_nSTW_x5fRX_x5fGenericTestNet_fNeither",
	"_nSTW_x5fRX_x5fGenericTestNet_fEvent1",
	"_nSTW_x5fRX_x5fGenericTestNet_fEvent2",
	"_nSTW_x5fRX_x5fGenericTestNet_fBoth",
	"StdForm");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fRX_x5fGenericTestNet_fVSA_x5fDisplayModeSet",
	"_nSTW_x5fRX_x5fGenericTestNet_fNO",
	"_nSTW_x5fRX_x5fGenericTestNet_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fVSA_x5fA", 
	"VSA_A",
	0,
	"0",
	"VSA_A");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fVSA_x5fB", 
	"VSA_B",
	0,
	"1",
	"VSA_B");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fVSA_x5fC", 
	"VSA_C",
	0,
	"2",
	"VSA_C");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fVSA_x5fD", 
	"VSA_D",
	0,
	"3",
	"VSA_D");
create_form_set("_nSTW_x5fRX_x5fGenericTestNet_fVSA_x5fTraceSet",
	"_nSTW_x5fRX_x5fGenericTestNet_fVSA_x5fA",
	"_nSTW_x5fRX_x5fGenericTestNet_fVSA_x5fB",
	"_nSTW_x5fRX_x5fGenericTestNet_fVSA_x5fC",
	"_nSTW_x5fRX_x5fGenericTestNet_fVSA_x5fD",
	"StdForm");
create_text_form ("_nSTW_x5fRX_x5fGenericTestNet_fset_x5ffile", 
	"File with set extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "set"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fRX_x5fGenericTestNet_fVSA_x5fSetupFile_x5fFileSet",
	"_nSTW_x5fRX_x5fGenericTestNet_fset_x5ffile");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fRX_x5fGenericTestNet_fVSA_x5fDigital_x5fIF_x5fOptionEnabledSet",
	"_nSTW_x5fRX_x5fGenericTestNet_fOFF",
	"_nSTW_x5fRX_x5fGenericTestNet_fON",
	"StdForm");
create_text_form ("_nSTW_x5fRX_x5fGenericTestNet_fset_x5ffile", 
	"File with set extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "set"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fRX_x5fGenericTestNet_fVSA_x5fDigital_x5fIF_x5fSetupFile_x5fFileSet",
	"_nSTW_x5fRX_x5fGenericTestNet_fset_x5ffile");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fRX_x5fGenericTestNet_fDUT_x5fMirrorSpectrumSet",
	"_nSTW_x5fRX_x5fGenericTestNet_fNO",
	"_nSTW_x5fRX_x5fGenericTestNet_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fRX_x5fGenericTestNet_fMirrorModSpectrumSet",
	"_nSTW_x5fRX_x5fGenericTestNet_fNO",
	"_nSTW_x5fRX_x5fGenericTestNet_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fRX_x5fGenericTestNet_fRF_x5fImpairmentsEnabledSet",
	"_nSTW_x5fRX_x5fGenericTestNet_fOFF",
	"_nSTW_x5fRX_x5fGenericTestNet_fON",
	"StdForm");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fRX_x5fGenericTestNet_fRF_x5fInterferersEnabledSet",
	"_nSTW_x5fRX_x5fGenericTestNet_fOFF",
	"_nSTW_x5fRX_x5fGenericTestNet_fON",
	"StdForm");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fRX_x5fGenericTestNet_fAWGN_x5fEnabledSet",
	"_nSTW_x5fRX_x5fGenericTestNet_fOFF",
	"_nSTW_x5fRX_x5fGenericTestNet_fON",
	"StdForm");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fLocal_x5fEb_x5fNo_x5f_x5fdB_x5f_x5fat_x5fESG_x5foutput", 
	"Local Eb/No (dB) at ESG output",
	0,
	"0",
	"Local Eb/No (dB) at ESG output");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fLocal_x5fEb_x5fNo_x5f_x5fdB_x5f_x5fat_x5fDUT_x5finput", 
	"Local Eb/No (dB) at DUT input",
	0,
	"1",
	"Local Eb/No (dB) at DUT input");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fSystem_x5fEb_x5fNo_x5f_x5fdB_x5f", 
	"System Eb/No (dB)",
	0,
	"2",
	"System Eb/No (dB)");
create_form_set("_nSTW_x5fRX_x5fGenericTestNet_fEbN0_x5fTypeSet",
	"_nSTW_x5fRX_x5fGenericTestNet_fLocal_x5fEb_x5fNo_x5f_x5fdB_x5f_x5fat_x5fESG_x5foutput",
	"_nSTW_x5fRX_x5fGenericTestNet_fLocal_x5fEb_x5fNo_x5f_x5fdB_x5f_x5fat_x5fDUT_x5finput",
	"_nSTW_x5fRX_x5fGenericTestNet_fSystem_x5fEb_x5fNo_x5f_x5fdB_x5f",
	"StdForm");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fRX_x5fGenericTestNet_fDUT_x5fOutFreqEnabledSet",
	"_nSTW_x5fRX_x5fGenericTestNet_fOFF",
	"_nSTW_x5fRX_x5fGenericTestNet_fON",
	"StdForm");
create_text_form ("_nSTW_x5fRX_x5fGenericTestNet_fdds_x5ffile", 
	"File with dds extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "dds"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fRX_x5fGenericTestNet_fDDSFileName_x5fFileSet",
	"_nSTW_x5fRX_x5fGenericTestNet_fdds_x5ffile");
create_text_form ("_nSTW_x5fRX_x5fGenericTestNet_fds_x5ffile", 
	"File with ds extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "ds"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fRX_x5fGenericTestNet_fDSFileName_x5fFileSet",
	"_nSTW_x5fRX_x5fGenericTestNet_fds_x5ffile");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fRX_x5fGenericTestNet_fDisableSourceDataDisplaySet",
	"_nSTW_x5fRX_x5fGenericTestNet_fNO",
	"_nSTW_x5fRX_x5fGenericTestNet_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fRF_x5fDUT_x5finput", 
	"RF DUT input",
	0,
	"0",
	"RF DUT input");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fESG_x5foutput", 
	"ESG output",
	0,
	"1",
	"ESG output");
create_form_set("_nSTW_x5fRX_x5fGenericTestNet_fSourceDisplayRefPointSet",
	"_nSTW_x5fRX_x5fGenericTestNet_fRF_x5fDUT_x5finput",
	"_nSTW_x5fRX_x5fGenericTestNet_fESG_x5foutput",
	"StdForm");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fnone", 
	"none",
	0,
	"0",
	"none");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fHamming_x5f0_x5f54", 
	"Hamming 0.54",
	0,
	"1",
	"Hamming 0.54");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fHanning_x5f0_x5f50", 
	"Hanning 0.50",
	0,
	"2",
	"Hanning 0.50");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fGaussian_x5f0_x5f75", 
	"Gaussian 0.75",
	0,
	"3",
	"Gaussian 0.75");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fKaiser_x5f7_x5f865", 
	"Kaiser 7.865",
	0,
	"4",
	"Kaiser 7.865");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_f_x5f8510_x5f6_x5f0", 
	"_8510 6.0",
	0,
	"5",
	"8510 6.0");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fBlackman", 
	"Blackman",
	0,
	"6",
	"Blackman");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fBlackman_x5fHarris", 
	"Blackman-Harris",
	0,
	"7",
	"Blackman-Harris");
create_form_set("_nSTW_x5fRX_x5fGenericTestNet_fSpecWindowSet",
	"_nSTW_x5fRX_x5fGenericTestNet_fnone",
	"_nSTW_x5fRX_x5fGenericTestNet_fHamming_x5f0_x5f54",
	"_nSTW_x5fRX_x5fGenericTestNet_fHanning_x5f0_x5f50",
	"_nSTW_x5fRX_x5fGenericTestNet_fGaussian_x5f0_x5f75",
	"_nSTW_x5fRX_x5fGenericTestNet_fKaiser_x5f7_x5f865",
	"_nSTW_x5fRX_x5fGenericTestNet_f_x5f8510_x5f6_x5f0",
	"_nSTW_x5fRX_x5fGenericTestNet_fBlackman",
	"_nSTW_x5fRX_x5fGenericTestNet_fBlackman_x5fHarris",
	"StdForm");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fRX_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fRX_x5fGenericTestNet_fSpecMirrorFreqSet",
	"_nSTW_x5fRX_x5fGenericTestNet_fNO",
	"_nSTW_x5fRX_x5fGenericTestNet_fYES",
	"StdForm");
create_item ("STW_RX_GenericTestNet","Receiver Generic Test Workbench",
	"S",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_STW_RX_GenericTestNet",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"STW_RX_GenericTestNet",
	SPDesignAnnotFmt,
	"SYM_DSN_STW_RX_GenericTestNet",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("InstrumentSetup","Instrument Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category_nc\"")),
	create_parm ("InstrumentEnabled","Enable Instrument Connectivity",
		PARM_INT,
		"_nSTW_x5fRX_x5fGenericTestNet_fInstrumentEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTestNet_fOFF","OFF")),
	create_parm ("ESG_Setup","ESG Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("ESG_Instrument","ESG Instrument Address",
		PARM_STRING | PARM_NO_DISPLAY,
		"InstrumentFormSet",
		UNITLESS_UNIT,
		prm("InstrumentForm","\"[GPIB0::19::INSTR][localhost][4790]\"")),
	create_parm ("ESG_MinOutputPower","ESG Minimum Output Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-116.0)")),
	create_parm ("ESG_MaxOutputPower","ESG Maximum Output Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(10.0)")),
	create_parm ("AdvancedESG_Setup","Advanced ESG Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category2\"")),
	create_parm ("ESG_ExportFilename","Export Waveform Filename",
		PARM_STRING | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"WLAN_802_11ag.wfm\"")),
	create_parm ("ESG_ClkRef","Waveform Clock Reference",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fRX_x5fGenericTestNet_fESG_x5fClkRefSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTestNet_fInternal","Internal")),
	create_parm ("ESG_ExtClkRefFreq","External Clock Reference Frequency",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","10 MHz")),
	create_parm ("ESG_IQFilter","IQ Filter",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fRX_x5fGenericTestNet_fESG_x5fIQFilterSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTestNet_fthrough","through")),
	create_parm ("ESG_AutoScaling","Activate Auto-Scaling",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fRX_x5fGenericTestNet_fESG_x5fAutoScalingSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTestNet_fYES","YES")),
	create_parm ("ESG_ArbOn","Select Waveform and Activate ESG ARB After Download",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fRX_x5fGenericTestNet_fESG_x5fArbOnSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTestNet_fYES","YES")),
	create_parm ("ESG_RFPowOn","Activate RF Power After Download",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fRX_x5fGenericTestNet_fESG_x5fRFPowOnSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTestNet_fYES","YES")),
	create_parm ("ESG_EventMarkerType","Event Marker Type",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fRX_x5fGenericTestNet_fESG_x5fEventMarkerTypeSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTestNet_fEvent1","Event1")),
	create_parm ("ESG_MarkerLength","Event Marker Length",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","10")),
	create_parm ("VSA_Setup","VSA Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("VSA_MinInputPower","VSA Minimum Input Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-45.0)")),
	create_parm ("VSA_MaxInputPower","VSA Maximum Input Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(20.0)")),
	create_parm ("AdvancedVSA_Setup","Advanced VSA Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category2\"")),
	create_parm ("VSA_DisplayMode","Activate VSA Display",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fRX_x5fGenericTestNet_fVSA_x5fDisplayModeSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTestNet_fNO","NO")),
	create_parm ("VSA_Trace","VSA Data Trace",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fRX_x5fGenericTestNet_fVSA_x5fTraceSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTestNet_fVSA_x5fB","VSA_B")),
	create_parm ("VSA_SetupFile","VSA Setup Filename",
		PARM_STRING | PARM_NO_DISPLAY,
		"_nSTW_x5fRX_x5fGenericTestNet_fVSA_x5fSetupFile_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTestNet_fset_x5ffile","\"$HPEESOF_DIR/Reacquire_802_11ag_BER_Meas.set\"")),
	create_parm ("VSA_Title","VSA Display Title",
		PARM_STRING | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"IEEE 802.11ag Measurement\"")),
	create_parm ("VSA_Digital_IF_Option","VSA Digital IF Option",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category2\"")),
	create_parm ("VSA_Digital_IF_OptionEnabled","Enable VSA Digital IF Option",
		PARM_INT,
		"_nSTW_x5fRX_x5fGenericTestNet_fVSA_x5fDigital_x5fIF_x5fOptionEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTestNet_fOFF","OFF")),
	create_parm ("VSA_Digital_IF_SetupFile","VSA Digital IF Setup Filename",
		PARM_STRING | PARM_NO_DISPLAY,
		"_nSTW_x5fRX_x5fGenericTestNet_fVSA_x5fDigital_x5fIF_x5fSetupFile_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTestNet_fset_x5ffile","\"$HPEESOF_DIR/Reacquire_DigIF_BER_Meas.set\"")),
	create_parm ("VSA_Digital_IF_NomSamplingRate","VSA Digital IF Output Signal Nominal Sampling Rate",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","80 MHz")),
	create_parm ("VSA_Digital_IF_CarrierFreq","VSA Digital IF Output Signal IF Carrier Frequency",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","20 MHz")),
	create_parm ("DUT_ModelSetup","DUT Model Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("DUT_PreAmpGain","DUT Pre-Amplifier Gain",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_PreAmpNoiseFigure","DUT Pre-Amplifier Noise Figure",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_Gain","DUT Gain",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_NoiseFigure","DUT Noise Figure",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_MirrorSpectrum","Mirror DUT Output Spectrum",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fRX_x5fGenericTestNet_fDUT_x5fMirrorSpectrumSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTestNet_fNO","NO")),
	create_parm ("DUT_PostAmpGain","DUT Post-Amplifier Gain",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_PostAmpNoiseFigure","DUT Post-Amplifier Noise Figure",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("SignalSetup","Signal Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("AdvancedSignalSetup","Advanced Signal Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("RandomSeed","Random Number Generator Seed",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1234567")),
	create_parm ("RF_Modulator","RF Modulator",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category_nc\"")),
	create_parm ("ModulatorFreq","Modulator Carrier Frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","2400.0MHz")),
	create_parm ("MirrorModSpectrum","Mirror Modulator Spectrum",
		PARM_INT,
		"_nSTW_x5fRX_x5fGenericTestNet_fMirrorModSpectrumSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTestNet_fNO","NO")),
	create_parm ("RF_Impairments","RF Impairments",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("RF_ImpairmentsEnabled","Enable RF Impairments",
		PARM_INT,
		"_nSTW_x5fRX_x5fGenericTestNet_fRF_x5fImpairmentsEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTestNet_fOFF","OFF")),
	create_parm ("GainImbalance","Gain Imbalance, Q vs I",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("PhaseImbalance","Phase Imbalance, Q vs I",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		ANGLE_UNIT,
		prm("StdForm","0")),
	create_parm ("I_OriginOffset","I Origin Offset (% of output RMS voltage)",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("Q_OriginOffset","Q Origin Offset (% of output RMS voltage)",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("IQ_Rotation","IQ Rotation",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		ANGLE_UNIT,
		prm("StdForm","0")),
	create_parm ("RF_Interferers","RF Interferers",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("RF_InterferersEnabled","Enable RF Interferers",
		PARM_INT,
		"_nSTW_x5fRX_x5fGenericTestNet_fRF_x5fInterferersEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTestNet_fOFF","OFF")),
	create_parm ("ModFreqOffset","Modulated Interferer Frequency Offset",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","0")),
	create_parm ("ModPower","Modulated Interferer Power",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-200.0)")),
	create_parm ("CW_FreqOffset","CW Interferer Frequency Offset",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","0")),
	create_parm ("CW_Power","CW Interferer Power",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-200.0)")),
	create_parm ("AWGN_Noise","Additive White Gaussian Noise (AWGN)",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("AWGN_Enabled","Enable AWGN",
		PARM_INT,
		"_nSTW_x5fRX_x5fGenericTestNet_fAWGN_x5fEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTestNet_fOFF","OFF")),
	create_parm ("EbN0_Type","Eb/No Type",
		PARM_INT,
		"_nSTW_x5fRX_x5fGenericTestNet_fEbN0_x5fTypeSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTestNet_fLocal_x5fEb_x5fNo_x5f_x5fdB_x5f_x5fat_x5fDUT_x5finput","Local_Eb_No__dB__at_DUT_input")),
	create_parm ("EbN0_Value","Eb/No Value",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-80")),
	create_parm ("MeasurementSetup","Measurement Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category_nc\"")),
	create_parm ("NumberSegments","Number of Signal Segments Measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")),
	create_parm ("DUT_InputPowerStart","DUT Input RF Start Power",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-20.0)")),
	create_parm ("DUT_InputPowerStep","DUT Input Power Step in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","10")),
	create_parm ("DUT_InputPowerNumSteps","DUT Input Number of Power Steps",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("DUT_OutFreq","DUT Output Frequency",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("DUT_OutFreqEnabled","Enable DUT Output Frequency Override",
		PARM_INT,
		"_nSTW_x5fRX_x5fGenericTestNet_fDUT_x5fOutFreqEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTestNet_fOFF","OFF")),
	create_parm ("DUT_OutputFreq","DUT Output Frequency",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","2412.0 MHz")),
	create_parm ("DataDisplaySetup","Data Display Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("DDSFileName","Data Display Filename (Leave Blank for Default Display)",
		PARM_STRING,
		"_nSTW_x5fRX_x5fGenericTestNet_fDDSFileName_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTestNet_fdds_x5ffile","\"\"")),
	create_parm ("DSFileName","Dataset Filename (Leave Blank for Default Name)",
		PARM_STRING,
		"_nSTW_x5fRX_x5fGenericTestNet_fDSFileName_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTestNet_fds_x5ffile","\"\"")),
	create_parm ("DisableSourceDataDisplay","Disable Source Signal Data Display",
		PARM_INT,
		"_nSTW_x5fRX_x5fGenericTestNet_fDisableSourceDataDisplaySet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTestNet_fNO","NO")),
	create_parm ("SourceDisplaySegments","Source Signal Display Number of Segments",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("SourceDisplayRefPoint","Source Signal Display Reference Point",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fRX_x5fGenericTestNet_fSourceDisplayRefPointSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTestNet_fRF_x5fDUT_x5finput","RF_DUT_input")),
	create_parm ("SpecResBW","Spectrum Resolution Bandwidth",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","100 kHz")),
	create_parm ("SpecWindow","Spectrum Window Type",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fRX_x5fGenericTestNet_fSpecWindowSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTestNet_fKaiser_x5f7_x5f865","Kaiser_7_865")),
	create_parm ("SpecMirrorFreq","Mirror Frequency of Source Spectrum/Envelope",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fRX_x5fGenericTestNet_fSpecMirrorFreqSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTestNet_fNO","NO")));
library_group("Testing (for development use only)","Testing (for development use only)","STW_RX_GenericTestNet");
palette_group("Testing (for development use only)","Testing (for development use only)","STW_RX_GenericTestNet");

create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fRX_x5fGenericTest_fInstrumentEnabledSet",
	"_nSTW_x5fRX_x5fGenericTest_fOFF",
	"_nSTW_x5fRX_x5fGenericTest_fON",
	"StdForm");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fInternal", 
	"Internal",
	0,
	"0",
	"Internal");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fExternal", 
	"External",
	0,
	"1",
	"External");
create_form_set("_nSTW_x5fRX_x5fGenericTest_fESG_x5fClkRefSet",
	"_nSTW_x5fRX_x5fGenericTest_fInternal",
	"_nSTW_x5fRX_x5fGenericTest_fExternal",
	"StdForm");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fthrough", 
	"through",
	0,
	"0",
	"through");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_ffilter_x5f2100kHz", 
	"filter_2100kHz",
	0,
	"1",
	"filter_2100kHz");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_ffilter_x5f40MHz", 
	"filter_40MHz",
	0,
	"2",
	"filter_40MHz");
create_form_set("_nSTW_x5fRX_x5fGenericTest_fESG_x5fIQFilterSet",
	"_nSTW_x5fRX_x5fGenericTest_fthrough",
	"_nSTW_x5fRX_x5fGenericTest_ffilter_x5f2100kHz",
	"_nSTW_x5fRX_x5fGenericTest_ffilter_x5f40MHz",
	"StdForm");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fRX_x5fGenericTest_fESG_x5fAutoScalingSet",
	"_nSTW_x5fRX_x5fGenericTest_fNO",
	"_nSTW_x5fRX_x5fGenericTest_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fRX_x5fGenericTest_fESG_x5fArbOnSet",
	"_nSTW_x5fRX_x5fGenericTest_fNO",
	"_nSTW_x5fRX_x5fGenericTest_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fRX_x5fGenericTest_fESG_x5fRFPowOnSet",
	"_nSTW_x5fRX_x5fGenericTest_fNO",
	"_nSTW_x5fRX_x5fGenericTest_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fNeither", 
	"Neither",
	0,
	"0",
	"Neither");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fEvent1", 
	"Event1",
	0,
	"1",
	"Event1");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fEvent2", 
	"Event2",
	0,
	"2",
	"Event2");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fBoth", 
	"Both",
	0,
	"3",
	"Both");
create_form_set("_nSTW_x5fRX_x5fGenericTest_fESG_x5fEventMarkerTypeSet",
	"_nSTW_x5fRX_x5fGenericTest_fNeither",
	"_nSTW_x5fRX_x5fGenericTest_fEvent1",
	"_nSTW_x5fRX_x5fGenericTest_fEvent2",
	"_nSTW_x5fRX_x5fGenericTest_fBoth",
	"StdForm");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fRX_x5fGenericTest_fVSA_x5fDisplayModeSet",
	"_nSTW_x5fRX_x5fGenericTest_fNO",
	"_nSTW_x5fRX_x5fGenericTest_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fVSA_x5fA", 
	"VSA_A",
	0,
	"0",
	"VSA_A");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fVSA_x5fB", 
	"VSA_B",
	0,
	"1",
	"VSA_B");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fVSA_x5fC", 
	"VSA_C",
	0,
	"2",
	"VSA_C");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fVSA_x5fD", 
	"VSA_D",
	0,
	"3",
	"VSA_D");
create_form_set("_nSTW_x5fRX_x5fGenericTest_fVSA_x5fTraceSet",
	"_nSTW_x5fRX_x5fGenericTest_fVSA_x5fA",
	"_nSTW_x5fRX_x5fGenericTest_fVSA_x5fB",
	"_nSTW_x5fRX_x5fGenericTest_fVSA_x5fC",
	"_nSTW_x5fRX_x5fGenericTest_fVSA_x5fD",
	"StdForm");
create_text_form ("_nSTW_x5fRX_x5fGenericTest_fset_x5ffile", 
	"File with set extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "set"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fRX_x5fGenericTest_fVSA_x5fSetupFile_x5fFileSet",
	"_nSTW_x5fRX_x5fGenericTest_fset_x5ffile");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fRX_x5fGenericTest_fVSA_x5fDigital_x5fIF_x5fOptionEnabledSet",
	"_nSTW_x5fRX_x5fGenericTest_fOFF",
	"_nSTW_x5fRX_x5fGenericTest_fON",
	"StdForm");
create_text_form ("_nSTW_x5fRX_x5fGenericTest_fset_x5ffile", 
	"File with set extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "set"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fRX_x5fGenericTest_fVSA_x5fDigital_x5fIF_x5fSetupFile_x5fFileSet",
	"_nSTW_x5fRX_x5fGenericTest_fset_x5ffile");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fRX_x5fGenericTest_fDUT_x5fMirrorSpectrumSet",
	"_nSTW_x5fRX_x5fGenericTest_fNO",
	"_nSTW_x5fRX_x5fGenericTest_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fRX_x5fGenericTest_fMirrorModSpectrumSet",
	"_nSTW_x5fRX_x5fGenericTest_fNO",
	"_nSTW_x5fRX_x5fGenericTest_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fRX_x5fGenericTest_fRF_x5fImpairmentsEnabledSet",
	"_nSTW_x5fRX_x5fGenericTest_fOFF",
	"_nSTW_x5fRX_x5fGenericTest_fON",
	"StdForm");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fRX_x5fGenericTest_fRF_x5fInterferersEnabledSet",
	"_nSTW_x5fRX_x5fGenericTest_fOFF",
	"_nSTW_x5fRX_x5fGenericTest_fON",
	"StdForm");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fRX_x5fGenericTest_fAWGN_x5fEnabledSet",
	"_nSTW_x5fRX_x5fGenericTest_fOFF",
	"_nSTW_x5fRX_x5fGenericTest_fON",
	"StdForm");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fLocal_x5fEb_x5fNo_x5f_x5fdB_x5f_x5fat_x5fESG_x5foutput", 
	"Local Eb/No (dB) at ESG output",
	0,
	"0",
	"Local Eb/No (dB) at ESG output");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fLocal_x5fEb_x5fNo_x5f_x5fdB_x5f_x5fat_x5fDUT_x5finput", 
	"Local Eb/No (dB) at DUT input",
	0,
	"1",
	"Local Eb/No (dB) at DUT input");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fSystem_x5fEb_x5fNo_x5f_x5fdB_x5f", 
	"System Eb/No (dB)",
	0,
	"2",
	"System Eb/No (dB)");
create_form_set("_nSTW_x5fRX_x5fGenericTest_fEbN0_x5fTypeSet",
	"_nSTW_x5fRX_x5fGenericTest_fLocal_x5fEb_x5fNo_x5f_x5fdB_x5f_x5fat_x5fESG_x5foutput",
	"_nSTW_x5fRX_x5fGenericTest_fLocal_x5fEb_x5fNo_x5f_x5fdB_x5f_x5fat_x5fDUT_x5finput",
	"_nSTW_x5fRX_x5fGenericTest_fSystem_x5fEb_x5fNo_x5f_x5fdB_x5f",
	"StdForm");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fRX_x5fGenericTest_fDUT_x5fOutFreqEnabledSet",
	"_nSTW_x5fRX_x5fGenericTest_fOFF",
	"_nSTW_x5fRX_x5fGenericTest_fON",
	"StdForm");
create_text_form ("_nSTW_x5fRX_x5fGenericTest_fdds_x5ffile", 
	"File with dds extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "dds"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fRX_x5fGenericTest_fDDSFileName_x5fFileSet",
	"_nSTW_x5fRX_x5fGenericTest_fdds_x5ffile");
create_text_form ("_nSTW_x5fRX_x5fGenericTest_fds_x5ffile", 
	"File with ds extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "ds"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fRX_x5fGenericTest_fDSFileName_x5fFileSet",
	"_nSTW_x5fRX_x5fGenericTest_fds_x5ffile");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fRX_x5fGenericTest_fDisableSourceDataDisplaySet",
	"_nSTW_x5fRX_x5fGenericTest_fNO",
	"_nSTW_x5fRX_x5fGenericTest_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fRF_x5fDUT_x5finput", 
	"RF DUT input",
	0,
	"0",
	"RF DUT input");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fESG_x5foutput", 
	"ESG output",
	0,
	"1",
	"ESG output");
create_form_set("_nSTW_x5fRX_x5fGenericTest_fSourceDisplayRefPointSet",
	"_nSTW_x5fRX_x5fGenericTest_fRF_x5fDUT_x5finput",
	"_nSTW_x5fRX_x5fGenericTest_fESG_x5foutput",
	"StdForm");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fnone", 
	"none",
	0,
	"0",
	"none");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fHamming_x5f0_x5f54", 
	"Hamming 0.54",
	0,
	"1",
	"Hamming 0.54");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fHanning_x5f0_x5f50", 
	"Hanning 0.50",
	0,
	"2",
	"Hanning 0.50");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fGaussian_x5f0_x5f75", 
	"Gaussian 0.75",
	0,
	"3",
	"Gaussian 0.75");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fKaiser_x5f7_x5f865", 
	"Kaiser 7.865",
	0,
	"4",
	"Kaiser 7.865");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_f_x5f8510_x5f6_x5f0", 
	"_8510 6.0",
	0,
	"5",
	"8510 6.0");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fBlackman", 
	"Blackman",
	0,
	"6",
	"Blackman");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fBlackman_x5fHarris", 
	"Blackman-Harris",
	0,
	"7",
	"Blackman-Harris");
create_form_set("_nSTW_x5fRX_x5fGenericTest_fSpecWindowSet",
	"_nSTW_x5fRX_x5fGenericTest_fnone",
	"_nSTW_x5fRX_x5fGenericTest_fHamming_x5f0_x5f54",
	"_nSTW_x5fRX_x5fGenericTest_fHanning_x5f0_x5f50",
	"_nSTW_x5fRX_x5fGenericTest_fGaussian_x5f0_x5f75",
	"_nSTW_x5fRX_x5fGenericTest_fKaiser_x5f7_x5f865",
	"_nSTW_x5fRX_x5fGenericTest_f_x5f8510_x5f6_x5f0",
	"_nSTW_x5fRX_x5fGenericTest_fBlackman",
	"_nSTW_x5fRX_x5fGenericTest_fBlackman_x5fHarris",
	"StdForm");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fRX_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fRX_x5fGenericTest_fSpecMirrorFreqSet",
	"_nSTW_x5fRX_x5fGenericTest_fNO",
	"_nSTW_x5fRX_x5fGenericTest_fYES",
	"StdForm");
create_item ("STW_RX_GenericTest","Receiver Generic Test Workbench",
	"S",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_STW_RX_GenericTest",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"STW_RX_GenericTest",
	SPDesignAnnotFmt,
	"SYM_DSN_STW_RX_GenericTest",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("InstrumentSetup","Instrument Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category_nc\"")),
	create_parm ("InstrumentEnabled","Enable Instrument Connectivity",
		PARM_INT,
		"_nSTW_x5fRX_x5fGenericTest_fInstrumentEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTest_fOFF","OFF")),
	create_parm ("ESG_Setup","ESG Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("ESG_Instrument","ESG Instrument Address",
		PARM_STRING | PARM_NO_DISPLAY,
		"InstrumentFormSet",
		UNITLESS_UNIT,
		prm("InstrumentForm","\"[GPIB0::19::INSTR][localhost][4790]\"")),
	create_parm ("ESG_MinOutputPower","ESG Minimum Output Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-116.0)")),
	create_parm ("ESG_MaxOutputPower","ESG Maximum Output Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(10.0)")),
	create_parm ("AdvancedESG_Setup","Advanced ESG Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category2\"")),
	create_parm ("ESG_ExportFilename","Export Waveform Filename",
		PARM_STRING | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"WLAN_802_11ag.wfm\"")),
	create_parm ("ESG_ClkRef","Waveform Clock Reference",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fRX_x5fGenericTest_fESG_x5fClkRefSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTest_fInternal","Internal")),
	create_parm ("ESG_ExtClkRefFreq","External Clock Reference Frequency",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","10 MHz")),
	create_parm ("ESG_IQFilter","IQ Filter",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fRX_x5fGenericTest_fESG_x5fIQFilterSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTest_fthrough","through")),
	create_parm ("ESG_AutoScaling","Activate Auto-Scaling",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fRX_x5fGenericTest_fESG_x5fAutoScalingSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTest_fYES","YES")),
	create_parm ("ESG_ArbOn","Select Waveform and Activate ESG ARB After Download",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fRX_x5fGenericTest_fESG_x5fArbOnSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTest_fYES","YES")),
	create_parm ("ESG_RFPowOn","Activate RF Power After Download",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fRX_x5fGenericTest_fESG_x5fRFPowOnSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTest_fYES","YES")),
	create_parm ("ESG_EventMarkerType","Event Marker Type",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fRX_x5fGenericTest_fESG_x5fEventMarkerTypeSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTest_fEvent1","Event1")),
	create_parm ("ESG_MarkerLength","Event Marker Length",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","10")),
	create_parm ("VSA_Setup","VSA Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("VSA_MinInputPower","VSA Minimum Input Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-45.0)")),
	create_parm ("VSA_MaxInputPower","VSA Maximum Input Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(20.0)")),
	create_parm ("AdvancedVSA_Setup","Advanced VSA Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category2\"")),
	create_parm ("VSA_DisplayMode","Activate VSA Display",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fRX_x5fGenericTest_fVSA_x5fDisplayModeSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTest_fNO","NO")),
	create_parm ("VSA_Trace","VSA Data Trace",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fRX_x5fGenericTest_fVSA_x5fTraceSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTest_fVSA_x5fB","VSA_B")),
	create_parm ("VSA_SetupFile","VSA Setup Filename",
		PARM_STRING | PARM_NO_DISPLAY,
		"_nSTW_x5fRX_x5fGenericTest_fVSA_x5fSetupFile_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTest_fset_x5ffile","\"$HPEESOF_DIR/Reacquire_802_11ag_BER_Meas.set\"")),
	create_parm ("VSA_Title","VSA Display Title",
		PARM_STRING | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"IEEE 802.11ag Measurement\"")),
	create_parm ("VSA_Digital_IF_Option","VSA Digital IF Option",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category2\"")),
	create_parm ("VSA_Digital_IF_OptionEnabled","Enable VSA Digital IF Option",
		PARM_INT,
		"_nSTW_x5fRX_x5fGenericTest_fVSA_x5fDigital_x5fIF_x5fOptionEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTest_fOFF","OFF")),
	create_parm ("VSA_Digital_IF_SetupFile","VSA Digital IF Setup Filename",
		PARM_STRING | PARM_NO_DISPLAY,
		"_nSTW_x5fRX_x5fGenericTest_fVSA_x5fDigital_x5fIF_x5fSetupFile_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTest_fset_x5ffile","\"$HPEESOF_DIR/Reacquire_DigIF_BER_Meas.set\"")),
	create_parm ("VSA_Digital_IF_NomSamplingRate","VSA Digital IF Output Signal Nominal Sampling Rate",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","80 MHz")),
	create_parm ("VSA_Digital_IF_CarrierFreq","VSA Digital IF Output Signal IF Carrier Frequency",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","20 MHz")),
	create_parm ("DUT_ModelSetup","DUT Model Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("DUT_PreAmpGain","DUT Pre-Amplifier Gain",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_PreAmpNoiseFigure","DUT Pre-Amplifier Noise Figure",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_Gain","DUT Gain",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_NoiseFigure","DUT Noise Figure",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_MirrorSpectrum","Mirror DUT Output Spectrum",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fRX_x5fGenericTest_fDUT_x5fMirrorSpectrumSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTest_fNO","NO")),
	create_parm ("DUT_PostAmpGain","DUT Post-Amplifier Gain",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_PostAmpNoiseFigure","DUT Post-Amplifier Noise Figure",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("SignalSetup","Signal Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("AdvancedSignalSetup","Advanced Signal Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("RandomSeed","Random Number Generator Seed",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1234567")),
	create_parm ("RF_Modulator","RF Modulator",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category_nc\"")),
	create_parm ("ModulatorFreq","Modulator Carrier Frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","2400.0MHz")),
	create_parm ("MirrorModSpectrum","Mirror Modulator Spectrum",
		PARM_INT,
		"_nSTW_x5fRX_x5fGenericTest_fMirrorModSpectrumSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTest_fNO","NO")),
	create_parm ("RF_Impairments","RF Impairments",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("RF_ImpairmentsEnabled","Enable RF Impairments",
		PARM_INT,
		"_nSTW_x5fRX_x5fGenericTest_fRF_x5fImpairmentsEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTest_fOFF","OFF")),
	create_parm ("GainImbalance","Gain Imbalance, Q vs I",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("PhaseImbalance","Phase Imbalance, Q vs I",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		ANGLE_UNIT,
		prm("StdForm","0")),
	create_parm ("I_OriginOffset","I Origin Offset (% of output RMS voltage)",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("Q_OriginOffset","Q Origin Offset (% of output RMS voltage)",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("IQ_Rotation","IQ Rotation",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		ANGLE_UNIT,
		prm("StdForm","0")),
	create_parm ("RF_Interferers","RF Interferers",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("RF_InterferersEnabled","Enable RF Interferers",
		PARM_INT,
		"_nSTW_x5fRX_x5fGenericTest_fRF_x5fInterferersEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTest_fOFF","OFF")),
	create_parm ("ModFreqOffset","Modulated Interferer Frequency Offset",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","0")),
	create_parm ("ModPower","Modulated Interferer Power",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-200.0)")),
	create_parm ("CW_FreqOffset","CW Interferer Frequency Offset",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","0")),
	create_parm ("CW_Power","CW Interferer Power",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-200.0)")),
	create_parm ("AWGN_Noise","Additive White Gaussian Noise (AWGN)",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("AWGN_Enabled","Enable AWGN",
		PARM_INT,
		"_nSTW_x5fRX_x5fGenericTest_fAWGN_x5fEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTest_fOFF","OFF")),
	create_parm ("EbN0_Type","Eb/No Type",
		PARM_INT,
		"_nSTW_x5fRX_x5fGenericTest_fEbN0_x5fTypeSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTest_fLocal_x5fEb_x5fNo_x5f_x5fdB_x5f_x5fat_x5fDUT_x5finput","Local_Eb_No__dB__at_DUT_input")),
	create_parm ("EbN0_Value","Eb/No Value",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-80")),
	create_parm ("MeasurementSetup","Measurement Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category_nc\"")),
	create_parm ("NumberSegments","Number of Signal Segments Measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")),
	create_parm ("DUT_InputPowerStart","DUT Input RF Start Power",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-20.0)")),
	create_parm ("DUT_InputPowerStep","DUT Input Power Step in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","10")),
	create_parm ("DUT_InputPowerNumSteps","DUT Input Number of Power Steps",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("DUT_OutFreq","DUT Output Frequency",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("DUT_OutFreqEnabled","Enable DUT Output Frequency Override",
		PARM_INT,
		"_nSTW_x5fRX_x5fGenericTest_fDUT_x5fOutFreqEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTest_fOFF","OFF")),
	create_parm ("DUT_OutputFreq","DUT Output Frequency",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","2412.0 MHz")),
	create_parm ("DataDisplaySetup","Data Display Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("DDSFileName","Data Display Filename (Leave Blank for Default Display)",
		PARM_STRING,
		"_nSTW_x5fRX_x5fGenericTest_fDDSFileName_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTest_fdds_x5ffile","\"\"")),
	create_parm ("DSFileName","Dataset Filename (Leave Blank for Default Name)",
		PARM_STRING,
		"_nSTW_x5fRX_x5fGenericTest_fDSFileName_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTest_fds_x5ffile","\"\"")),
	create_parm ("DisableSourceDataDisplay","Disable Source Signal Data Display",
		PARM_INT,
		"_nSTW_x5fRX_x5fGenericTest_fDisableSourceDataDisplaySet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTest_fNO","NO")),
	create_parm ("SourceDisplaySegments","Source Signal Display Number of Segments",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("SourceDisplayRefPoint","Source Signal Display Reference Point",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fRX_x5fGenericTest_fSourceDisplayRefPointSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTest_fRF_x5fDUT_x5finput","RF_DUT_input")),
	create_parm ("SpecResBW","Spectrum Resolution Bandwidth",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","100 kHz")),
	create_parm ("SpecWindow","Spectrum Window Type",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fRX_x5fGenericTest_fSpecWindowSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTest_fKaiser_x5f7_x5f865","Kaiser_7_865")),
	create_parm ("SpecMirrorFreq","Mirror Frequency of Source Spectrum/Envelope",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fRX_x5fGenericTest_fSpecMirrorFreqSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fRX_x5fGenericTest_fNO","NO")));
library_group("Testing (for development use only)","Testing (for development use only)","STW_RX_GenericTest");
palette_group("Testing (for development use only)","Testing (for development use only)","STW_RX_GenericTest");

create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fMATLAB_x5fGenericTestNet_fInstrumentEnabledSet",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fOFF",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fON",
	"StdForm");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fInternal", 
	"Internal",
	0,
	"0",
	"Internal");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fExternal", 
	"External",
	0,
	"1",
	"External");
create_form_set("_nSTW_x5fMATLAB_x5fGenericTestNet_fESG_x5fClkRefSet",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fInternal",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fExternal",
	"StdForm");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fthrough", 
	"through",
	0,
	"0",
	"through");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_ffilter_x5f2100kHz", 
	"filter_2100kHz",
	0,
	"1",
	"filter_2100kHz");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_ffilter_x5f40MHz", 
	"filter_40MHz",
	0,
	"2",
	"filter_40MHz");
create_form_set("_nSTW_x5fMATLAB_x5fGenericTestNet_fESG_x5fIQFilterSet",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fthrough",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_ffilter_x5f2100kHz",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_ffilter_x5f40MHz",
	"StdForm");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fMATLAB_x5fGenericTestNet_fESG_x5fAutoScalingSet",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fNO",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fMATLAB_x5fGenericTestNet_fESG_x5fArbOnSet",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fNO",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fMATLAB_x5fGenericTestNet_fESG_x5fRFPowOnSet",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fNO",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fNeither", 
	"Neither",
	0,
	"0",
	"Neither");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fEvent1", 
	"Event1",
	0,
	"1",
	"Event1");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fEvent2", 
	"Event2",
	0,
	"2",
	"Event2");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fBoth", 
	"Both",
	0,
	"3",
	"Both");
create_form_set("_nSTW_x5fMATLAB_x5fGenericTestNet_fESG_x5fEventMarkerTypeSet",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fNeither",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fEvent1",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fEvent2",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fBoth",
	"StdForm");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fMATLAB_x5fGenericTestNet_fVSA_x5fDisplayModeSet",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fNO",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fVSA_x5fA", 
	"VSA_A",
	0,
	"0",
	"VSA_A");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fVSA_x5fB", 
	"VSA_B",
	0,
	"1",
	"VSA_B");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fVSA_x5fC", 
	"VSA_C",
	0,
	"2",
	"VSA_C");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fVSA_x5fD", 
	"VSA_D",
	0,
	"3",
	"VSA_D");
create_form_set("_nSTW_x5fMATLAB_x5fGenericTestNet_fVSA_x5fTraceSet",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fVSA_x5fA",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fVSA_x5fB",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fVSA_x5fC",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fVSA_x5fD",
	"StdForm");
create_text_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fset_x5ffile", 
	"File with set extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "set"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fMATLAB_x5fGenericTestNet_fVSA_x5fSetupFile_x5fFileSet",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fset_x5ffile");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fMATLAB_x5fGenericTestNet_fDUT_x5fMirrorSpectrumSet",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fNO",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fMATLAB_x5fGenericTestNet_fMirrorModSpectrumSet",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fNO",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fMATLAB_x5fGenericTestNet_fRF_x5fImpairmentsEnabledSet",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fOFF",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fON",
	"StdForm");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fMATLAB_x5fGenericTestNet_fRF_x5fInterferersEnabledSet",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fOFF",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fON",
	"StdForm");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fMATLAB_x5fGenericTestNet_fAWGN_x5fEnabledSet",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fOFF",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fON",
	"StdForm");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fNoise_x5f_x5fdBm_x5f_x5fat_x5fESG_x5foutput", 
	"Noise (dBm) at ESG output",
	0,
	"0",
	"Noise (dBm) at ESG output");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fNoise_x5f_x5fdBm_x5fHz_x5f_x5fat_x5fESG_x5foutput", 
	"Noise (dBm/Hz) at ESG output",
	0,
	"1",
	"Noise (dBm/Hz) at ESG output");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fLocal_x5fEb_x5fNo_x5f_x5fdB_x5f_x5fat_x5fESG_x5foutput", 
	"Local Eb/No (dB) at ESG output",
	0,
	"2",
	"Local Eb/No (dB) at ESG output");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fNoise_x5f_x5fdBm_x5f_x5fat_x5fDUT_x5finput", 
	"Noise (dBm) at DUT input",
	0,
	"3",
	"Noise (dBm) at DUT input");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fNoise_x5f_x5fdBm_x5fHz_x5f_x5fat_x5fDUT_x5finput", 
	"Noise (dBm/Hz) at DUT input",
	0,
	"4",
	"Noise (dBm/Hz) at DUT input");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fLocal_x5fEb_x5fNo_x5f_x5fdB_x5f_x5fat_x5fDUT_x5finput", 
	"Local Eb/No (dB) at DUT input",
	0,
	"5",
	"Local Eb/No (dB) at DUT input");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fSystem_x5fEb_x5fNo_x5f_x5fdB_x5f", 
	"System Eb/No (dB)",
	0,
	"6",
	"System Eb/No (dB)");
create_form_set("_nSTW_x5fMATLAB_x5fGenericTestNet_fAWGN_x5fTypeSet",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fNoise_x5f_x5fdBm_x5f_x5fat_x5fESG_x5foutput",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fNoise_x5f_x5fdBm_x5fHz_x5f_x5fat_x5fESG_x5foutput",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fLocal_x5fEb_x5fNo_x5f_x5fdB_x5f_x5fat_x5fESG_x5foutput",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fNoise_x5f_x5fdBm_x5f_x5fat_x5fDUT_x5finput",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fNoise_x5f_x5fdBm_x5fHz_x5f_x5fat_x5fDUT_x5finput",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fLocal_x5fEb_x5fNo_x5f_x5fdB_x5f_x5fat_x5fDUT_x5finput",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fSystem_x5fEb_x5fNo_x5f_x5fdB_x5f",
	"StdForm");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fMATLAB_x5fGenericTestNet_fDUT_x5fOutFreqEnabledSet",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fOFF",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fON",
	"StdForm");
create_text_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fdds_x5ffile", 
	"File with dds extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "dds"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fMATLAB_x5fGenericTestNet_fDDSFileName_x5fFileSet",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fdds_x5ffile");
create_text_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fds_x5ffile", 
	"File with ds extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "ds"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fMATLAB_x5fGenericTestNet_fDSFileName_x5fFileSet",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fds_x5ffile");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fMATLAB_x5fGenericTestNet_fDisableSourceDataDisplaySet",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fNO",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fRF_x5fDUT_x5finput", 
	"RF DUT input",
	0,
	"0",
	"RF DUT input");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fESG_x5foutput", 
	"ESG output",
	0,
	"1",
	"ESG output");
create_form_set("_nSTW_x5fMATLAB_x5fGenericTestNet_fSourceDisplayRefPointSet",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fRF_x5fDUT_x5finput",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fESG_x5foutput",
	"StdForm");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fnone", 
	"none",
	0,
	"0",
	"none");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fHamming_x5f0_x5f54", 
	"Hamming 0.54",
	0,
	"1",
	"Hamming 0.54");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fHanning_x5f0_x5f50", 
	"Hanning 0.50",
	0,
	"2",
	"Hanning 0.50");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fGaussian_x5f0_x5f75", 
	"Gaussian 0.75",
	0,
	"3",
	"Gaussian 0.75");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fKaiser_x5f7_x5f865", 
	"Kaiser 7.865",
	0,
	"4",
	"Kaiser 7.865");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_f_x5f8510_x5f6_x5f0", 
	"_8510 6.0",
	0,
	"5",
	"8510 6.0");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fBlackman", 
	"Blackman",
	0,
	"6",
	"Blackman");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fBlackman_x5fHarris", 
	"Blackman-Harris",
	0,
	"7",
	"Blackman-Harris");
create_form_set("_nSTW_x5fMATLAB_x5fGenericTestNet_fSpecWindowSet",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fnone",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fHamming_x5f0_x5f54",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fHanning_x5f0_x5f50",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fGaussian_x5f0_x5f75",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fKaiser_x5f7_x5f865",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_f_x5f8510_x5f6_x5f0",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fBlackman",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fBlackman_x5fHarris",
	"StdForm");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fMATLAB_x5fGenericTestNet_fSpecMirrorFreqSet",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fNO",
	"_nSTW_x5fMATLAB_x5fGenericTestNet_fYES",
	"StdForm");
create_item ("STW_MATLAB_GenericTestNet","MATLAB Generic Test Workbench",
	"S",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_STW_MATLAB_GenericTestNet",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"STW_MATLAB_GenericTestNet",
	SPDesignAnnotFmt,
	"SYM_DSN_STW_MATLAB_GenericTestNet",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("InstrumentSetup","Instrument Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category_nc\"")),
	create_parm ("InstrumentEnabled","Enable Instrument Connectivity",
		PARM_INT,
		"_nSTW_x5fMATLAB_x5fGenericTestNet_fInstrumentEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTestNet_fOFF","OFF")),
	create_parm ("ESG_Setup","ESG Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("ESG_Instrument","ESG Instrument Address",
		PARM_STRING | PARM_NO_DISPLAY,
		"InstrumentFormSet",
		UNITLESS_UNIT,
		prm("InstrumentForm","\"[GPIB0::19::INSTR][localhost][4790]\"")),
	create_parm ("ESG_MinOutputPower","ESG Minimum Output Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-116.0)")),
	create_parm ("ESG_MaxOutputPower","ESG Maximum Output Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(10.0)")),
	create_parm ("AdvancedESG_Setup","Advanced ESG Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category2\"")),
	create_parm ("ESG_ExportFilename","Export Waveform Filename",
		PARM_STRING | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"WLAN_802_11ag.wfm\"")),
	create_parm ("ESG_ClkRef","Waveform Clock Reference",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fMATLAB_x5fGenericTestNet_fESG_x5fClkRefSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTestNet_fInternal","Internal")),
	create_parm ("ESG_ExtClkRefFreq","External Clock Reference Frequency",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","10 MHz")),
	create_parm ("ESG_IQFilter","IQ Filter",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fMATLAB_x5fGenericTestNet_fESG_x5fIQFilterSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTestNet_fthrough","through")),
	create_parm ("ESG_AutoScaling","Activate Auto-Scaling",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fMATLAB_x5fGenericTestNet_fESG_x5fAutoScalingSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTestNet_fYES","YES")),
	create_parm ("ESG_ArbOn","Select Waveform and Activate ESG ARB After Download",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fMATLAB_x5fGenericTestNet_fESG_x5fArbOnSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTestNet_fYES","YES")),
	create_parm ("ESG_RFPowOn","Activate RF Power After Download",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fMATLAB_x5fGenericTestNet_fESG_x5fRFPowOnSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTestNet_fYES","YES")),
	create_parm ("ESG_EventMarkerType","Event Marker Type",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fMATLAB_x5fGenericTestNet_fESG_x5fEventMarkerTypeSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTestNet_fEvent1","Event1")),
	create_parm ("ESG_MarkerLength","Event Marker Length",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","10")),
	create_parm ("VSA_Setup","VSA Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("VSA_MinInputPower","VSA Minimum Input Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-45.0)")),
	create_parm ("VSA_MaxInputPower","VSA Maximum Input Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(20.0)")),
	create_parm ("AdvancedVSA_Setup","Advanced VSA Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category2\"")),
	create_parm ("VSA_DisplayMode","Activate VSA Display",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fMATLAB_x5fGenericTestNet_fVSA_x5fDisplayModeSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTestNet_fNO","NO")),
	create_parm ("VSA_Trace","VSA Data Trace",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fMATLAB_x5fGenericTestNet_fVSA_x5fTraceSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTestNet_fVSA_x5fB","VSA_B")),
	create_parm ("VSA_SetupFile","VSA Setup Filename",
		PARM_STRING | PARM_NO_DISPLAY,
		"_nSTW_x5fMATLAB_x5fGenericTestNet_fVSA_x5fSetupFile_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTestNet_fset_x5ffile","\"$HPEESOF_DIR/Reacquire_802_11ag_BER_Meas.set\"")),
	create_parm ("VSA_Title","VSA Display Title",
		PARM_STRING | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"IEEE 802.11ag Measurement\"")),
	create_parm ("DUT_ModelSetup","DUT Model Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("DUT_PreAmpGain","DUT Pre-Amplifier Gain",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_PreAmpNoiseFigure","DUT Pre-Amplifier Noise Figure",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_Gain","DUT Gain",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_NoiseFigure","DUT Noise Figure",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_MirrorSpectrum","Mirror DUT Output Spectrum",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fMATLAB_x5fGenericTestNet_fDUT_x5fMirrorSpectrumSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTestNet_fNO","NO")),
	create_parm ("DUT_PostAmpGain","DUT Post-Amplifier Gain",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_PostAmpNoiseFigure","DUT Post-Amplifier Noise Figure",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("SignalSetup","Signal Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("AdvancedSignalSetup","Advanced Signal Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("RandomSeed","Random Number Generator Seed",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1234567")),
	create_parm ("RF_Modulator","RF Modulator",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category_nc\"")),
	create_parm ("ModulatorFreq","Modulator Carrier Frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","2400.0MHz")),
	create_parm ("MirrorModSpectrum","Mirror Modulator Spectrum",
		PARM_INT,
		"_nSTW_x5fMATLAB_x5fGenericTestNet_fMirrorModSpectrumSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTestNet_fNO","NO")),
	create_parm ("RF_Impairments","RF Impairments",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("RF_ImpairmentsEnabled","Enable RF Impairments",
		PARM_INT,
		"_nSTW_x5fMATLAB_x5fGenericTestNet_fRF_x5fImpairmentsEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTestNet_fOFF","OFF")),
	create_parm ("GainImbalance","Gain Imbalance, Q vs I",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("PhaseImbalance","Phase Imbalance, Q vs I",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		ANGLE_UNIT,
		prm("StdForm","0")),
	create_parm ("I_OriginOffset","I Origin Offset (% of output RMS voltage)",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("Q_OriginOffset","Q Origin Offset (% of output RMS voltage)",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("IQ_Rotation","IQ Rotation",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		ANGLE_UNIT,
		prm("StdForm","0")),
	create_parm ("RF_Interferers","RF Interferers",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("RF_InterferersEnabled","Enable RF Interferers",
		PARM_INT,
		"_nSTW_x5fMATLAB_x5fGenericTestNet_fRF_x5fInterferersEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTestNet_fOFF","OFF")),
	create_parm ("ModFreqOffset","Modulated Interferer Frequency Offset",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","0")),
	create_parm ("ModPower","Modulated Interferer Power",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-200.0)")),
	create_parm ("CW_FreqOffset","CW Interferer Frequency Offset",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","0")),
	create_parm ("CW_Power","CW Interferer Power",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-200.0)")),
	create_parm ("AWGN_Noise","Additive White Gaussian Noise (AWGN)",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("AWGN_Enabled","Enable AWGN",
		PARM_INT,
		"_nSTW_x5fMATLAB_x5fGenericTestNet_fAWGN_x5fEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTestNet_fOFF","OFF")),
	create_parm ("AWGN_Type","AWGN Specification Type",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fMATLAB_x5fGenericTestNet_fAWGN_x5fTypeSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTestNet_fNoise_x5f_x5fdBm_x5f_x5fat_x5fDUT_x5finput","Noise__dBm__at_DUT_input")),
	create_parm ("AWGN_Value","AWGN Specification Value",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-80")),
	create_parm ("MeasurementSetup","Measurement Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category_nc\"")),
	create_parm ("NumberSegments","Number of Signal Segments Measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")),
	create_parm ("DUT_InputPowerStart","DUT Input RF Start Power",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-20.0)")),
	create_parm ("DUT_InputPowerStep","DUT Input Power Step in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","10")),
	create_parm ("DUT_InputPowerNumSteps","DUT Input Number of Power Steps",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("DUT_OutFreq","DUT Output Frequency",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("DUT_OutFreqEnabled","Enable DUT Output Frequency Override",
		PARM_INT,
		"_nSTW_x5fMATLAB_x5fGenericTestNet_fDUT_x5fOutFreqEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTestNet_fOFF","OFF")),
	create_parm ("DUT_OutputFreq","DUT Output Frequency",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","2412.0 MHz")),
	create_parm ("DataDisplaySetup","Data Display Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("DDSFileName","Data Display Filename (Leave Blank for Default Display)",
		PARM_STRING,
		"_nSTW_x5fMATLAB_x5fGenericTestNet_fDDSFileName_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTestNet_fdds_x5ffile","\"\"")),
	create_parm ("DSFileName","Dataset Filename (Leave Blank for Default Name)",
		PARM_STRING,
		"_nSTW_x5fMATLAB_x5fGenericTestNet_fDSFileName_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTestNet_fds_x5ffile","\"\"")),
	create_parm ("DisableSourceDataDisplay","Disable Source Signal Data Display",
		PARM_INT,
		"_nSTW_x5fMATLAB_x5fGenericTestNet_fDisableSourceDataDisplaySet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTestNet_fNO","NO")),
	create_parm ("SourceDisplaySegments","Source Signal Display Number of Segments",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("SourceDisplayRefPoint","Source Signal Display Reference Point",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fMATLAB_x5fGenericTestNet_fSourceDisplayRefPointSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTestNet_fRF_x5fDUT_x5finput","RF_DUT_input")),
	create_parm ("SpecResBW","Spectrum Resolution Bandwidth",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","100 kHz")),
	create_parm ("SpecWindow","Spectrum Window Type",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fMATLAB_x5fGenericTestNet_fSpecWindowSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTestNet_fKaiser_x5f7_x5f865","Kaiser_7_865")),
	create_parm ("SpecMirrorFreq","Mirror Frequency of Source Spectrum/Envelope",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fMATLAB_x5fGenericTestNet_fSpecMirrorFreqSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTestNet_fNO","NO")));
library_group("Testing (for development use only)","Testing (for development use only)","STW_MATLAB_GenericTestNet");
palette_group("Testing (for development use only)","Testing (for development use only)","STW_MATLAB_GenericTestNet");

create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fMATLAB_x5fGenericTest_fInstrumentEnabledSet",
	"_nSTW_x5fMATLAB_x5fGenericTest_fOFF",
	"_nSTW_x5fMATLAB_x5fGenericTest_fON",
	"StdForm");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fInternal", 
	"Internal",
	0,
	"0",
	"Internal");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fExternal", 
	"External",
	0,
	"1",
	"External");
create_form_set("_nSTW_x5fMATLAB_x5fGenericTest_fESG_x5fClkRefSet",
	"_nSTW_x5fMATLAB_x5fGenericTest_fInternal",
	"_nSTW_x5fMATLAB_x5fGenericTest_fExternal",
	"StdForm");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fthrough", 
	"through",
	0,
	"0",
	"through");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_ffilter_x5f2100kHz", 
	"filter_2100kHz",
	0,
	"1",
	"filter_2100kHz");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_ffilter_x5f40MHz", 
	"filter_40MHz",
	0,
	"2",
	"filter_40MHz");
create_form_set("_nSTW_x5fMATLAB_x5fGenericTest_fESG_x5fIQFilterSet",
	"_nSTW_x5fMATLAB_x5fGenericTest_fthrough",
	"_nSTW_x5fMATLAB_x5fGenericTest_ffilter_x5f2100kHz",
	"_nSTW_x5fMATLAB_x5fGenericTest_ffilter_x5f40MHz",
	"StdForm");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fMATLAB_x5fGenericTest_fESG_x5fAutoScalingSet",
	"_nSTW_x5fMATLAB_x5fGenericTest_fNO",
	"_nSTW_x5fMATLAB_x5fGenericTest_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fMATLAB_x5fGenericTest_fESG_x5fArbOnSet",
	"_nSTW_x5fMATLAB_x5fGenericTest_fNO",
	"_nSTW_x5fMATLAB_x5fGenericTest_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fMATLAB_x5fGenericTest_fESG_x5fRFPowOnSet",
	"_nSTW_x5fMATLAB_x5fGenericTest_fNO",
	"_nSTW_x5fMATLAB_x5fGenericTest_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fNeither", 
	"Neither",
	0,
	"0",
	"Neither");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fEvent1", 
	"Event1",
	0,
	"1",
	"Event1");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fEvent2", 
	"Event2",
	0,
	"2",
	"Event2");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fBoth", 
	"Both",
	0,
	"3",
	"Both");
create_form_set("_nSTW_x5fMATLAB_x5fGenericTest_fESG_x5fEventMarkerTypeSet",
	"_nSTW_x5fMATLAB_x5fGenericTest_fNeither",
	"_nSTW_x5fMATLAB_x5fGenericTest_fEvent1",
	"_nSTW_x5fMATLAB_x5fGenericTest_fEvent2",
	"_nSTW_x5fMATLAB_x5fGenericTest_fBoth",
	"StdForm");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fMATLAB_x5fGenericTest_fVSA_x5fDisplayModeSet",
	"_nSTW_x5fMATLAB_x5fGenericTest_fNO",
	"_nSTW_x5fMATLAB_x5fGenericTest_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fVSA_x5fA", 
	"VSA_A",
	0,
	"0",
	"VSA_A");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fVSA_x5fB", 
	"VSA_B",
	0,
	"1",
	"VSA_B");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fVSA_x5fC", 
	"VSA_C",
	0,
	"2",
	"VSA_C");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fVSA_x5fD", 
	"VSA_D",
	0,
	"3",
	"VSA_D");
create_form_set("_nSTW_x5fMATLAB_x5fGenericTest_fVSA_x5fTraceSet",
	"_nSTW_x5fMATLAB_x5fGenericTest_fVSA_x5fA",
	"_nSTW_x5fMATLAB_x5fGenericTest_fVSA_x5fB",
	"_nSTW_x5fMATLAB_x5fGenericTest_fVSA_x5fC",
	"_nSTW_x5fMATLAB_x5fGenericTest_fVSA_x5fD",
	"StdForm");
create_text_form ("_nSTW_x5fMATLAB_x5fGenericTest_fset_x5ffile", 
	"File with set extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "set"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fMATLAB_x5fGenericTest_fVSA_x5fSetupFile_x5fFileSet",
	"_nSTW_x5fMATLAB_x5fGenericTest_fset_x5ffile");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fMATLAB_x5fGenericTest_fDUT_x5fMirrorSpectrumSet",
	"_nSTW_x5fMATLAB_x5fGenericTest_fNO",
	"_nSTW_x5fMATLAB_x5fGenericTest_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fMATLAB_x5fGenericTest_fMirrorModSpectrumSet",
	"_nSTW_x5fMATLAB_x5fGenericTest_fNO",
	"_nSTW_x5fMATLAB_x5fGenericTest_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fMATLAB_x5fGenericTest_fRF_x5fImpairmentsEnabledSet",
	"_nSTW_x5fMATLAB_x5fGenericTest_fOFF",
	"_nSTW_x5fMATLAB_x5fGenericTest_fON",
	"StdForm");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fMATLAB_x5fGenericTest_fRF_x5fInterferersEnabledSet",
	"_nSTW_x5fMATLAB_x5fGenericTest_fOFF",
	"_nSTW_x5fMATLAB_x5fGenericTest_fON",
	"StdForm");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fMATLAB_x5fGenericTest_fAWGN_x5fEnabledSet",
	"_nSTW_x5fMATLAB_x5fGenericTest_fOFF",
	"_nSTW_x5fMATLAB_x5fGenericTest_fON",
	"StdForm");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fNoise_x5f_x5fdBm_x5f_x5fat_x5fESG_x5foutput", 
	"Noise (dBm) at ESG output",
	0,
	"0",
	"Noise (dBm) at ESG output");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fNoise_x5f_x5fdBm_x5fHz_x5f_x5fat_x5fESG_x5foutput", 
	"Noise (dBm/Hz) at ESG output",
	0,
	"1",
	"Noise (dBm/Hz) at ESG output");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fLocal_x5fEb_x5fNo_x5f_x5fdB_x5f_x5fat_x5fESG_x5foutput", 
	"Local Eb/No (dB) at ESG output",
	0,
	"2",
	"Local Eb/No (dB) at ESG output");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fNoise_x5f_x5fdBm_x5f_x5fat_x5fDUT_x5finput", 
	"Noise (dBm) at DUT input",
	0,
	"3",
	"Noise (dBm) at DUT input");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fNoise_x5f_x5fdBm_x5fHz_x5f_x5fat_x5fDUT_x5finput", 
	"Noise (dBm/Hz) at DUT input",
	0,
	"4",
	"Noise (dBm/Hz) at DUT input");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fLocal_x5fEb_x5fNo_x5f_x5fdB_x5f_x5fat_x5fDUT_x5finput", 
	"Local Eb/No (dB) at DUT input",
	0,
	"5",
	"Local Eb/No (dB) at DUT input");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fSystem_x5fEb_x5fNo_x5f_x5fdB_x5f", 
	"System Eb/No (dB)",
	0,
	"6",
	"System Eb/No (dB)");
create_form_set("_nSTW_x5fMATLAB_x5fGenericTest_fAWGN_x5fTypeSet",
	"_nSTW_x5fMATLAB_x5fGenericTest_fNoise_x5f_x5fdBm_x5f_x5fat_x5fESG_x5foutput",
	"_nSTW_x5fMATLAB_x5fGenericTest_fNoise_x5f_x5fdBm_x5fHz_x5f_x5fat_x5fESG_x5foutput",
	"_nSTW_x5fMATLAB_x5fGenericTest_fLocal_x5fEb_x5fNo_x5f_x5fdB_x5f_x5fat_x5fESG_x5foutput",
	"_nSTW_x5fMATLAB_x5fGenericTest_fNoise_x5f_x5fdBm_x5f_x5fat_x5fDUT_x5finput",
	"_nSTW_x5fMATLAB_x5fGenericTest_fNoise_x5f_x5fdBm_x5fHz_x5f_x5fat_x5fDUT_x5finput",
	"_nSTW_x5fMATLAB_x5fGenericTest_fLocal_x5fEb_x5fNo_x5f_x5fdB_x5f_x5fat_x5fDUT_x5finput",
	"_nSTW_x5fMATLAB_x5fGenericTest_fSystem_x5fEb_x5fNo_x5f_x5fdB_x5f",
	"StdForm");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fMATLAB_x5fGenericTest_fDUT_x5fOutFreqEnabledSet",
	"_nSTW_x5fMATLAB_x5fGenericTest_fOFF",
	"_nSTW_x5fMATLAB_x5fGenericTest_fON",
	"StdForm");
create_text_form ("_nSTW_x5fMATLAB_x5fGenericTest_fdds_x5ffile", 
	"File with dds extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "dds"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fMATLAB_x5fGenericTest_fDDSFileName_x5fFileSet",
	"_nSTW_x5fMATLAB_x5fGenericTest_fdds_x5ffile");
create_text_form ("_nSTW_x5fMATLAB_x5fGenericTest_fds_x5ffile", 
	"File with ds extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "ds"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fMATLAB_x5fGenericTest_fDSFileName_x5fFileSet",
	"_nSTW_x5fMATLAB_x5fGenericTest_fds_x5ffile");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fMATLAB_x5fGenericTest_fDisableSourceDataDisplaySet",
	"_nSTW_x5fMATLAB_x5fGenericTest_fNO",
	"_nSTW_x5fMATLAB_x5fGenericTest_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fRF_x5fDUT_x5finput", 
	"RF DUT input",
	0,
	"0",
	"RF DUT input");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fESG_x5foutput", 
	"ESG output",
	0,
	"1",
	"ESG output");
create_form_set("_nSTW_x5fMATLAB_x5fGenericTest_fSourceDisplayRefPointSet",
	"_nSTW_x5fMATLAB_x5fGenericTest_fRF_x5fDUT_x5finput",
	"_nSTW_x5fMATLAB_x5fGenericTest_fESG_x5foutput",
	"StdForm");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fnone", 
	"none",
	0,
	"0",
	"none");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fHamming_x5f0_x5f54", 
	"Hamming 0.54",
	0,
	"1",
	"Hamming 0.54");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fHanning_x5f0_x5f50", 
	"Hanning 0.50",
	0,
	"2",
	"Hanning 0.50");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fGaussian_x5f0_x5f75", 
	"Gaussian 0.75",
	0,
	"3",
	"Gaussian 0.75");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fKaiser_x5f7_x5f865", 
	"Kaiser 7.865",
	0,
	"4",
	"Kaiser 7.865");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_f_x5f8510_x5f6_x5f0", 
	"_8510 6.0",
	0,
	"5",
	"8510 6.0");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fBlackman", 
	"Blackman",
	0,
	"6",
	"Blackman");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fBlackman_x5fHarris", 
	"Blackman-Harris",
	0,
	"7",
	"Blackman-Harris");
create_form_set("_nSTW_x5fMATLAB_x5fGenericTest_fSpecWindowSet",
	"_nSTW_x5fMATLAB_x5fGenericTest_fnone",
	"_nSTW_x5fMATLAB_x5fGenericTest_fHamming_x5f0_x5f54",
	"_nSTW_x5fMATLAB_x5fGenericTest_fHanning_x5f0_x5f50",
	"_nSTW_x5fMATLAB_x5fGenericTest_fGaussian_x5f0_x5f75",
	"_nSTW_x5fMATLAB_x5fGenericTest_fKaiser_x5f7_x5f865",
	"_nSTW_x5fMATLAB_x5fGenericTest_f_x5f8510_x5f6_x5f0",
	"_nSTW_x5fMATLAB_x5fGenericTest_fBlackman",
	"_nSTW_x5fMATLAB_x5fGenericTest_fBlackman_x5fHarris",
	"StdForm");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fMATLAB_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fMATLAB_x5fGenericTest_fSpecMirrorFreqSet",
	"_nSTW_x5fMATLAB_x5fGenericTest_fNO",
	"_nSTW_x5fMATLAB_x5fGenericTest_fYES",
	"StdForm");
create_item ("STW_MATLAB_GenericTest","Receiver Generic Test Workbench",
	"S",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_STW_MATLAB_GenericTest",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"STW_MATLAB_GenericTest",
	SPDesignAnnotFmt,
	"SYM_DSN_STW_MATLAB_GenericTest",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("InstrumentSetup","Instrument Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category_nc\"")),
	create_parm ("InstrumentEnabled","Enable Instrument Connectivity",
		PARM_INT,
		"_nSTW_x5fMATLAB_x5fGenericTest_fInstrumentEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTest_fOFF","OFF")),
	create_parm ("ESG_Setup","ESG Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("ESG_Instrument","ESG Instrument Address",
		PARM_STRING | PARM_NO_DISPLAY,
		"InstrumentFormSet",
		UNITLESS_UNIT,
		prm("InstrumentForm","\"[GPIB0::19::INSTR][localhost][4790]\"")),
	create_parm ("ESG_MinOutputPower","ESG Minimum Output Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-116.0)")),
	create_parm ("ESG_MaxOutputPower","ESG Maximum Output Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(10.0)")),
	create_parm ("AdvancedESG_Setup","Advanced ESG Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category2\"")),
	create_parm ("ESG_ExportFilename","Export Waveform Filename",
		PARM_STRING | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"WLAN_802_11ag.wfm\"")),
	create_parm ("ESG_ClkRef","Waveform Clock Reference",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fMATLAB_x5fGenericTest_fESG_x5fClkRefSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTest_fInternal","Internal")),
	create_parm ("ESG_ExtClkRefFreq","External Clock Reference Frequency",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","10 MHz")),
	create_parm ("ESG_IQFilter","IQ Filter",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fMATLAB_x5fGenericTest_fESG_x5fIQFilterSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTest_fthrough","through")),
	create_parm ("ESG_AutoScaling","Activate Auto-Scaling",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fMATLAB_x5fGenericTest_fESG_x5fAutoScalingSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTest_fYES","YES")),
	create_parm ("ESG_ArbOn","Select Waveform and Activate ESG ARB After Download",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fMATLAB_x5fGenericTest_fESG_x5fArbOnSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTest_fYES","YES")),
	create_parm ("ESG_RFPowOn","Activate RF Power After Download",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fMATLAB_x5fGenericTest_fESG_x5fRFPowOnSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTest_fYES","YES")),
	create_parm ("ESG_EventMarkerType","Event Marker Type",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fMATLAB_x5fGenericTest_fESG_x5fEventMarkerTypeSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTest_fEvent1","Event1")),
	create_parm ("ESG_MarkerLength","Event Marker Length",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","10")),
	create_parm ("VSA_Setup","VSA Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("VSA_MinInputPower","VSA Minimum Input Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-45.0)")),
	create_parm ("VSA_MaxInputPower","VSA Maximum Input Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(20.0)")),
	create_parm ("AdvancedVSA_Setup","Advanced VSA Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category2\"")),
	create_parm ("VSA_DisplayMode","Activate VSA Display",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fMATLAB_x5fGenericTest_fVSA_x5fDisplayModeSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTest_fNO","NO")),
	create_parm ("VSA_Trace","VSA Data Trace",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fMATLAB_x5fGenericTest_fVSA_x5fTraceSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTest_fVSA_x5fB","VSA_B")),
	create_parm ("VSA_SetupFile","VSA Setup Filename",
		PARM_STRING | PARM_NO_DISPLAY,
		"_nSTW_x5fMATLAB_x5fGenericTest_fVSA_x5fSetupFile_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTest_fset_x5ffile","\"$HPEESOF_DIR/Reacquire_802_11ag_BER_Meas.set\"")),
	create_parm ("VSA_Title","VSA Display Title",
		PARM_STRING | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"IEEE 802.11ag Measurement\"")),
	create_parm ("DUT_ModelSetup","DUT Model Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("DUT_PreAmpGain","DUT Pre-Amplifier Gain",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_PreAmpNoiseFigure","DUT Pre-Amplifier Noise Figure",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_Gain","DUT Gain",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_NoiseFigure","DUT Noise Figure",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_MirrorSpectrum","Mirror DUT Output Spectrum",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fMATLAB_x5fGenericTest_fDUT_x5fMirrorSpectrumSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTest_fNO","NO")),
	create_parm ("DUT_PostAmpGain","DUT Post-Amplifier Gain",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_PostAmpNoiseFigure","DUT Post-Amplifier Noise Figure",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("SignalSetup","Signal Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("AdvancedSignalSetup","Advanced Signal Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("RandomSeed","Random Number Generator Seed",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1234567")),
	create_parm ("RF_Modulator","RF Modulator",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category_nc\"")),
	create_parm ("ModulatorFreq","Modulator Carrier Frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","2400.0MHz")),
	create_parm ("MirrorModSpectrum","Mirror Modulator Spectrum",
		PARM_INT,
		"_nSTW_x5fMATLAB_x5fGenericTest_fMirrorModSpectrumSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTest_fNO","NO")),
	create_parm ("RF_Impairments","RF Impairments",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("RF_ImpairmentsEnabled","Enable RF Impairments",
		PARM_INT,
		"_nSTW_x5fMATLAB_x5fGenericTest_fRF_x5fImpairmentsEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTest_fOFF","OFF")),
	create_parm ("GainImbalance","Gain Imbalance, Q vs I",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("PhaseImbalance","Phase Imbalance, Q vs I",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		ANGLE_UNIT,
		prm("StdForm","0")),
	create_parm ("I_OriginOffset","I Origin Offset (% of output RMS voltage)",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("Q_OriginOffset","Q Origin Offset (% of output RMS voltage)",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("IQ_Rotation","IQ Rotation",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		ANGLE_UNIT,
		prm("StdForm","0")),
	create_parm ("RF_Interferers","RF Interferers",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("RF_InterferersEnabled","Enable RF Interferers",
		PARM_INT,
		"_nSTW_x5fMATLAB_x5fGenericTest_fRF_x5fInterferersEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTest_fOFF","OFF")),
	create_parm ("ModFreqOffset","Modulated Interferer Frequency Offset",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","0")),
	create_parm ("ModPower","Modulated Interferer Power",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-200.0)")),
	create_parm ("CW_FreqOffset","CW Interferer Frequency Offset",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","0")),
	create_parm ("CW_Power","CW Interferer Power",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-200.0)")),
	create_parm ("AWGN_Noise","Additive White Gaussian Noise (AWGN)",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("AWGN_Enabled","Enable AWGN",
		PARM_INT,
		"_nSTW_x5fMATLAB_x5fGenericTest_fAWGN_x5fEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTest_fOFF","OFF")),
	create_parm ("AWGN_Type","AWGN Specification Type",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fMATLAB_x5fGenericTest_fAWGN_x5fTypeSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTest_fNoise_x5f_x5fdBm_x5f_x5fat_x5fDUT_x5finput","Noise__dBm__at_DUT_input")),
	create_parm ("AWGN_Value","AWGN Specification Value",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-80")),
	create_parm ("MeasurementSetup","Measurement Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category_nc\"")),
	create_parm ("NumberSegments","Number of Signal Segments Measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")),
	create_parm ("DUT_InputPowerStart","DUT Input RF Start Power",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-20.0)")),
	create_parm ("DUT_InputPowerStep","DUT Input Power Step in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","10")),
	create_parm ("DUT_InputPowerNumSteps","DUT Input Number of Power Steps",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("DUT_OutFreq","DUT Output Frequency",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("DUT_OutFreqEnabled","Enable DUT Output Frequency Override",
		PARM_INT,
		"_nSTW_x5fMATLAB_x5fGenericTest_fDUT_x5fOutFreqEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTest_fOFF","OFF")),
	create_parm ("DUT_OutputFreq","DUT Output Frequency",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","2412.0 MHz")),
	create_parm ("DataDisplaySetup","Data Display Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("DDSFileName","Data Display Filename (Leave Blank for Default Display)",
		PARM_STRING,
		"_nSTW_x5fMATLAB_x5fGenericTest_fDDSFileName_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTest_fdds_x5ffile","\"\"")),
	create_parm ("DSFileName","Dataset Filename (Leave Blank for Default Name)",
		PARM_STRING,
		"_nSTW_x5fMATLAB_x5fGenericTest_fDSFileName_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTest_fds_x5ffile","\"\"")),
	create_parm ("DisableSourceDataDisplay","Disable Source Signal Data Display",
		PARM_INT,
		"_nSTW_x5fMATLAB_x5fGenericTest_fDisableSourceDataDisplaySet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTest_fNO","NO")),
	create_parm ("SourceDisplaySegments","Source Signal Display Number of Segments",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("SourceDisplayRefPoint","Source Signal Display Reference Point",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fMATLAB_x5fGenericTest_fSourceDisplayRefPointSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTest_fRF_x5fDUT_x5finput","RF_DUT_input")),
	create_parm ("SpecResBW","Spectrum Resolution Bandwidth",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","100 kHz")),
	create_parm ("SpecWindow","Spectrum Window Type",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fMATLAB_x5fGenericTest_fSpecWindowSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTest_fKaiser_x5f7_x5f865","Kaiser_7_865")),
	create_parm ("SpecMirrorFreq","Mirror Frequency of Source Spectrum/Envelope",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fMATLAB_x5fGenericTest_fSpecMirrorFreqSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fMATLAB_x5fGenericTest_fNO","NO")));
library_group("Testing (for development use only)","Testing (for development use only)","STW_MATLAB_GenericTest");
palette_group("Testing (for development use only)","Testing (for development use only)","STW_MATLAB_GenericTest");

create_item ("STW_ARB_Pause","STW ARB/PSG/VSA Pause",
	"S",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_STW_ARB_Pause",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"STW_ARB_Pause",
	SPDesignAnnotFmt,
	"SYM_DSN_STW_ARB_Pause",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("Testing (for development use only)","Testing (for development use only)","STW_ARB_Pause");
palette_group("Testing (for development use only)","Testing (for development use only)","STW_ARB_Pause");

create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fARB_x5fGenericTestNet_fInstrumentEnabledSet",
	"_nSTW_x5fARB_x5fGenericTestNet_fOFF",
	"_nSTW_x5fARB_x5fGenericTestNet_fON",
	"StdForm");
create_text_form ("_nSTW_x5fARB_x5fGenericTestNet_fbin_x5ffile", 
	"File with bin extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "bin"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fARB_x5fGenericTestNet_fARB_x5fExport_x5fI_x5fFilename_x5fFileSet",
	"_nSTW_x5fARB_x5fGenericTestNet_fbin_x5ffile");
create_text_form ("_nSTW_x5fARB_x5fGenericTestNet_fbin_x5ffile", 
	"File with bin extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "bin"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fARB_x5fGenericTestNet_fARB_x5fExport_x5fQ_x5fFilename_x5fFileSet",
	"_nSTW_x5fARB_x5fGenericTestNet_fbin_x5ffile");
create_text_form ("_nSTW_x5fARB_x5fGenericTestNet_ftxt_x5ffile", 
	"File with txt extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "txt"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fARB_x5fGenericTestNet_fARB_x5fI_x5fCompensationFilename_x5fFileSet",
	"_nSTW_x5fARB_x5fGenericTestNet_ftxt_x5ffile");
create_text_form ("_nSTW_x5fARB_x5fGenericTestNet_ftxt_x5ffile", 
	"File with txt extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "txt"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fARB_x5fGenericTestNet_fARB_x5fQ_x5fCompensationFilename_x5fFileSet",
	"_nSTW_x5fARB_x5fGenericTestNet_ftxt_x5ffile");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fARB_x5fGenericTestNet_fDisableSampleLimitSet",
	"_nSTW_x5fARB_x5fGenericTestNet_fNO",
	"_nSTW_x5fARB_x5fGenericTestNet_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fARB_x5fGenericTestNet_fVSA_x5fDisplayModeSet",
	"_nSTW_x5fARB_x5fGenericTestNet_fNO",
	"_nSTW_x5fARB_x5fGenericTestNet_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fVSA_x5fA", 
	"VSA_A",
	0,
	"0",
	"VSA_A");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fVSA_x5fB", 
	"VSA_B",
	0,
	"1",
	"VSA_B");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fVSA_x5fC", 
	"VSA_C",
	0,
	"2",
	"VSA_C");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fVSA_x5fD", 
	"VSA_D",
	0,
	"3",
	"VSA_D");
create_form_set("_nSTW_x5fARB_x5fGenericTestNet_fVSA_x5fTraceSet",
	"_nSTW_x5fARB_x5fGenericTestNet_fVSA_x5fA",
	"_nSTW_x5fARB_x5fGenericTestNet_fVSA_x5fB",
	"_nSTW_x5fARB_x5fGenericTestNet_fVSA_x5fC",
	"_nSTW_x5fARB_x5fGenericTestNet_fVSA_x5fD",
	"StdForm");
create_text_form ("_nSTW_x5fARB_x5fGenericTestNet_fset_x5ffile", 
	"File with set extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "set"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fARB_x5fGenericTestNet_fVSA_x5fSetupFile_x5fFileSet",
	"_nSTW_x5fARB_x5fGenericTestNet_fset_x5ffile");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fARB_x5fGenericTestNet_fDUT_x5fMirrorSpectrumSet",
	"_nSTW_x5fARB_x5fGenericTestNet_fNO",
	"_nSTW_x5fARB_x5fGenericTestNet_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fARB_x5fGenericTestNet_fMirrorModSpectrumSet",
	"_nSTW_x5fARB_x5fGenericTestNet_fNO",
	"_nSTW_x5fARB_x5fGenericTestNet_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fARB_x5fGenericTestNet_fRF_x5fImpairmentsEnabledSet",
	"_nSTW_x5fARB_x5fGenericTestNet_fOFF",
	"_nSTW_x5fARB_x5fGenericTestNet_fON",
	"StdForm");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fARB_x5fGenericTestNet_fMultipathFadingEnabledSet",
	"_nSTW_x5fARB_x5fGenericTestNet_fOFF",
	"_nSTW_x5fARB_x5fGenericTestNet_fON",
	"StdForm");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fJakes", 
	"Jakes",
	0,
	"0",
	"Jakes");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fNoiseFilter", 
	"NoiseFilter",
	0,
	"1",
	"NoiseFilter");
create_form_set("_nSTW_x5fARB_x5fGenericTestNet_fFadingAlgorithmSet",
	"_nSTW_x5fARB_x5fGenericTestNet_fJakes",
	"_nSTW_x5fARB_x5fGenericTestNet_fNoiseFilter",
	"StdForm");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fRayleigh", 
	"Rayleigh",
	0,
	"0",
	"Rayleigh");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fRicean", 
	"Ricean",
	0,
	"1",
	"Ricean");
create_form_set("_nSTW_x5fARB_x5fGenericTestNet_fFadingUserTypeSet",
	"_nSTW_x5fARB_x5fGenericTestNet_fRayleigh",
	"_nSTW_x5fARB_x5fGenericTestNet_fRicean",
	"StdForm");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fARB_x5fGenericTestNet_fRF_x5fInterferersEnabledSet",
	"_nSTW_x5fARB_x5fGenericTestNet_fOFF",
	"_nSTW_x5fARB_x5fGenericTestNet_fON",
	"StdForm");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fAfter_x5fmultipath_x5ffading", 
	"After multipath fading",
	0,
	"0",
	"After multipath fading");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fBefore_x5fmultipath_x5ffading", 
	"Before multipath fading",
	0,
	"1",
	"Before multipath fading");
create_form_set("_nSTW_x5fARB_x5fGenericTestNet_fLocationRF_x5fInterferersSet",
	"_nSTW_x5fARB_x5fGenericTestNet_fAfter_x5fmultipath_x5ffading",
	"_nSTW_x5fARB_x5fGenericTestNet_fBefore_x5fmultipath_x5ffading",
	"StdForm");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fARB_x5fGenericTestNet_fAWGN_x5fEnabledSet",
	"_nSTW_x5fARB_x5fGenericTestNet_fOFF",
	"_nSTW_x5fARB_x5fGenericTestNet_fON",
	"StdForm");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fNoise_x5f_x5fdBm_x5f_x5fat_x5fESG_x5foutput", 
	"Noise (dBm) at ESG output",
	0,
	"0",
	"Noise (dBm) at ESG output");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fNoise_x5f_x5fdBm_x5fHz_x5f_x5fat_x5fESG_x5foutput", 
	"Noise (dBm/Hz) at ESG output",
	0,
	"1",
	"Noise (dBm/Hz) at ESG output");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fLocal_x5fEb_x5fNo_x5f_x5fdB_x5f_x5fat_x5fESG_x5foutput", 
	"Local Eb/No (dB) at ESG output",
	0,
	"2",
	"Local Eb/No (dB) at ESG output");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fNoise_x5f_x5fdBm_x5f_x5fat_x5fDUT_x5finput", 
	"Noise (dBm) at DUT input",
	0,
	"3",
	"Noise (dBm) at DUT input");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fNoise_x5f_x5fdBm_x5fHz_x5f_x5fat_x5fDUT_x5finput", 
	"Noise (dBm/Hz) at DUT input",
	0,
	"4",
	"Noise (dBm/Hz) at DUT input");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fLocal_x5fEb_x5fNo_x5f_x5fdB_x5f_x5fat_x5fDUT_x5finput", 
	"Local Eb/No (dB) at DUT input",
	0,
	"5",
	"Local Eb/No (dB) at DUT input");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fSystem_x5fEb_x5fNo_x5f_x5fdB_x5f", 
	"System Eb/No (dB)",
	0,
	"6",
	"System Eb/No (dB)");
create_form_set("_nSTW_x5fARB_x5fGenericTestNet_fAWGN_x5fTypeSet",
	"_nSTW_x5fARB_x5fGenericTestNet_fNoise_x5f_x5fdBm_x5f_x5fat_x5fESG_x5foutput",
	"_nSTW_x5fARB_x5fGenericTestNet_fNoise_x5f_x5fdBm_x5fHz_x5f_x5fat_x5fESG_x5foutput",
	"_nSTW_x5fARB_x5fGenericTestNet_fLocal_x5fEb_x5fNo_x5f_x5fdB_x5f_x5fat_x5fESG_x5foutput",
	"_nSTW_x5fARB_x5fGenericTestNet_fNoise_x5f_x5fdBm_x5f_x5fat_x5fDUT_x5finput",
	"_nSTW_x5fARB_x5fGenericTestNet_fNoise_x5f_x5fdBm_x5fHz_x5f_x5fat_x5fDUT_x5finput",
	"_nSTW_x5fARB_x5fGenericTestNet_fLocal_x5fEb_x5fNo_x5f_x5fdB_x5f_x5fat_x5fDUT_x5finput",
	"_nSTW_x5fARB_x5fGenericTestNet_fSystem_x5fEb_x5fNo_x5f_x5fdB_x5f",
	"StdForm");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fARB_x5fGenericTestNet_fDUT_x5fOutFreqEnabledSet",
	"_nSTW_x5fARB_x5fGenericTestNet_fOFF",
	"_nSTW_x5fARB_x5fGenericTestNet_fON",
	"StdForm");
create_text_form ("_nSTW_x5fARB_x5fGenericTestNet_fdds_x5ffile", 
	"File with dds extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "dds"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fARB_x5fGenericTestNet_fDDSFileName_x5fFileSet",
	"_nSTW_x5fARB_x5fGenericTestNet_fdds_x5ffile");
create_text_form ("_nSTW_x5fARB_x5fGenericTestNet_fds_x5ffile", 
	"File with ds extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "ds"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fARB_x5fGenericTestNet_fDSFileName_x5fFileSet",
	"_nSTW_x5fARB_x5fGenericTestNet_fds_x5ffile");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fARB_x5fGenericTestNet_fDisableSourceDataDisplaySet",
	"_nSTW_x5fARB_x5fGenericTestNet_fNO",
	"_nSTW_x5fARB_x5fGenericTestNet_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fRF_x5fDUT_x5finput", 
	"RF DUT input",
	0,
	"0",
	"RF DUT input");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fESG_x5foutput", 
	"ESG output",
	0,
	"1",
	"ESG output");
create_form_set("_nSTW_x5fARB_x5fGenericTestNet_fSourceDisplayRefPointSet",
	"_nSTW_x5fARB_x5fGenericTestNet_fRF_x5fDUT_x5finput",
	"_nSTW_x5fARB_x5fGenericTestNet_fESG_x5foutput",
	"StdForm");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fRF_x5fDUT_x5foutput", 
	"RF DUT output",
	0,
	"0",
	"RF DUT output");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fVSA_x5finput", 
	"VSA input",
	0,
	"1",
	"VSA input");
create_form_set("_nSTW_x5fARB_x5fGenericTestNet_fDUT_x5fMeasDisplayRefPointSet",
	"_nSTW_x5fARB_x5fGenericTestNet_fRF_x5fDUT_x5foutput",
	"_nSTW_x5fARB_x5fGenericTestNet_fVSA_x5finput",
	"StdForm");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fnone", 
	"none",
	0,
	"0",
	"none");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fHamming_x5f0_x5f54", 
	"Hamming 0.54",
	0,
	"1",
	"Hamming 0.54");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fHanning_x5f0_x5f50", 
	"Hanning 0.50",
	0,
	"2",
	"Hanning 0.50");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fGaussian_x5f0_x5f75", 
	"Gaussian 0.75",
	0,
	"3",
	"Gaussian 0.75");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fKaiser_x5f7_x5f865", 
	"Kaiser 7.865",
	0,
	"4",
	"Kaiser 7.865");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_f_x5f8510_x5f6_x5f0", 
	"_8510 6.0",
	0,
	"5",
	"8510 6.0");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fBlackman", 
	"Blackman",
	0,
	"6",
	"Blackman");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fBlackman_x5fHarris", 
	"Blackman-Harris",
	0,
	"7",
	"Blackman-Harris");
create_form_set("_nSTW_x5fARB_x5fGenericTestNet_fSpecWindowSet",
	"_nSTW_x5fARB_x5fGenericTestNet_fnone",
	"_nSTW_x5fARB_x5fGenericTestNet_fHamming_x5f0_x5f54",
	"_nSTW_x5fARB_x5fGenericTestNet_fHanning_x5f0_x5f50",
	"_nSTW_x5fARB_x5fGenericTestNet_fGaussian_x5f0_x5f75",
	"_nSTW_x5fARB_x5fGenericTestNet_fKaiser_x5f7_x5f865",
	"_nSTW_x5fARB_x5fGenericTestNet_f_x5f8510_x5f6_x5f0",
	"_nSTW_x5fARB_x5fGenericTestNet_fBlackman",
	"_nSTW_x5fARB_x5fGenericTestNet_fBlackman_x5fHarris",
	"StdForm");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fARB_x5fGenericTestNet_fSpecMirrorFreqSet",
	"_nSTW_x5fARB_x5fGenericTestNet_fNO",
	"_nSTW_x5fARB_x5fGenericTestNet_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fARB_x5fGenericTestNet_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fARB_x5fGenericTestNet_fSpecMeasMirrorFreqSet",
	"_nSTW_x5fARB_x5fGenericTestNet_fNO",
	"_nSTW_x5fARB_x5fGenericTestNet_fYES",
	"StdForm");
create_item ("STW_ARB_GenericTestNet","ARB/PSG/Scope Transmission Test Workbench",
	"S",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_STW_ARB_GenericTestNet",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"STW_ARB_GenericTestNet",
	SPDesignAnnotFmt,
	"SYM_DSN_STW_ARB_GenericTestNet",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("InstrumentSetup","Instrument Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category_nc\"")),
	create_parm ("InstrumentEnabled","Enable Instrument Connectivity",
		PARM_INT,
		"_nSTW_x5fARB_x5fGenericTestNet_fInstrumentEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTestNet_fOFF","OFF")),
	create_parm ("N6030_Setup","ARB Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("ARB_Export_I_Filename","Export I Waveform Filename",
		PARM_STRING | PARM_NO_DISPLAY,
		"_nSTW_x5fARB_x5fGenericTestNet_fARB_x5fExport_x5fI_x5fFilename_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTestNet_fbin_x5ffile","\"ARB_I_waveform.bin\"")),
	create_parm ("ARB_Export_Q_Filename","Export Q Waveform Filename",
		PARM_STRING | PARM_NO_DISPLAY,
		"_nSTW_x5fARB_x5fGenericTestNet_fARB_x5fExport_x5fQ_x5fFilename_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTestNet_fbin_x5ffile","\"ARB_Q_waveform.bin\"")),
	create_parm ("ARB_I_CompensationFilename","ARB I Compensation Filename",
		PARM_STRING | PARM_NO_DISPLAY,
		"_nSTW_x5fARB_x5fGenericTestNet_fARB_x5fI_x5fCompensationFilename_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTestNet_ftxt_x5ffile","\"ARB_compensation.txt\"")),
	create_parm ("ARB_Q_CompensationFilename","ARB Q Compensation Filename",
		PARM_STRING | PARM_NO_DISPLAY,
		"_nSTW_x5fARB_x5fGenericTestNet_fARB_x5fQ_x5fCompensationFilename_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTestNet_ftxt_x5ffile","\"ARB_compensation.txt\"")),
	create_parm ("ARB_SamplingRate","ARB Sampling Rate",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","1.25 GHz")),
	create_parm ("MaxSignalSampleLimit","Maximum Signal Sample Limit (in M samples - M=2^20)",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")),
	create_parm ("DisableSampleLimit","Disable Signal Sample Limit When Instrument Connectivity Disabled",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fARB_x5fGenericTestNet_fDisableSampleLimitSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTestNet_fNO","NO")),
	create_parm ("PSG_Setup","PSG Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("PSG_Instrument","PSG Instrument Address",
		PARM_STRING | PARM_NO_DISPLAY,
		"InstrumentFormSet",
		UNITLESS_UNIT,
		prm("InstrumentForm","\"[GPIB0::19::INSTR][localhost][4790]\"")),
	create_parm ("PSG_MinOutputPower","PSG Minimum Output Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-116.0)")),
	create_parm ("PSG_MaxOutputPower","PSG Maximum Output Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(10.0)")),
	create_parm ("OscilloscopeSetup","Oscilloscope Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("OScopeMinInputPower","Oscilloscope Minimum Input Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-45.0)")),
	create_parm ("OScopeMaxInputPower","Oscilloscope Maximum Input Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(20.0)")),
	create_parm ("VSA_Setup","VSA Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("VSA_DisplayMode","Activate VSA Display",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fARB_x5fGenericTestNet_fVSA_x5fDisplayModeSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTestNet_fNO","NO")),
	create_parm ("VSA_Trace","VSA Data Trace",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fARB_x5fGenericTestNet_fVSA_x5fTraceSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTestNet_fVSA_x5fB","VSA_B")),
	create_parm ("VSA_SetupFile","VSA Setup Filename",
		PARM_STRING | PARM_NO_DISPLAY,
		"_nSTW_x5fARB_x5fGenericTestNet_fVSA_x5fSetupFile_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTestNet_fset_x5ffile","\"Reacquire_802_15_3a_UWB_Meas.set\"")),
	create_parm ("VSA_Title","VSA Display Title",
		PARM_STRING | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"IEEE 802.15.3a UWB Measurement\"")),
	create_parm ("DUT_ModelSetup","DUT Model Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("DUT_PreAmpGain","DUT Pre-Amplifier Gain",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_PreAmpNoiseFigure","DUT Pre-Amplifier Noise Figure",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_Gain","DUT Gain",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_NoiseFigure","DUT Noise Figure",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_MirrorSpectrum","Mirror DUT Output Spectrum",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fARB_x5fGenericTestNet_fDUT_x5fMirrorSpectrumSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTestNet_fNO","NO")),
	create_parm ("DUT_PostAmpGain","DUT Post-Amplifier Gain",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_PostAmpNoiseFigure","DUT Post-Amplifier Noise Figure",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("SignalSetup","Signal Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("AdvancedSignalSetup","Advanced Signal Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("RandomSeed","Random Number Generator Seed",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1234567")),
	create_parm ("RF_Modulator","RF Modulator",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category_nc\"")),
	create_parm ("ModulatorFreq","Modulator Carrier Frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","4488.0MHz")),
	create_parm ("MirrorModSpectrum","Mirror Modulator Spectrum",
		PARM_INT,
		"_nSTW_x5fARB_x5fGenericTestNet_fMirrorModSpectrumSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTestNet_fNO","NO")),
	create_parm ("RF_Impairments","RF Impairments",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("RF_ImpairmentsEnabled","Enable RF Impairments",
		PARM_INT,
		"_nSTW_x5fARB_x5fGenericTestNet_fRF_x5fImpairmentsEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTestNet_fOFF","OFF")),
	create_parm ("GainImbalance","Gain Imbalance, Q vs I",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("PhaseImbalance","Phase Imbalance, Q vs I",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		ANGLE_UNIT,
		prm("StdForm","0")),
	create_parm ("I_OriginOffset","I Origin Offset (% of output RMS voltage)",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("Q_OriginOffset","Q Origin Offset (% of output RMS voltage)",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("IQ_Rotation","IQ Rotation",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		ANGLE_UNIT,
		prm("StdForm","0")),
	create_parm ("MultipathFading","Multipath Fading",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("MultipathFadingEnabled","Enable Multipath Fading",
		PARM_INT,
		"_nSTW_x5fARB_x5fGenericTestNet_fMultipathFadingEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTestNet_fOFF","OFF")),
	create_parm ("FadingAlgorithm","Fading Algorithm",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fARB_x5fGenericTestNet_fFadingAlgorithmSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTestNet_fNoiseFilter","NoiseFilter")),
	create_parm ("FadingSeed","Jakes Algorithm Random Seed",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1234567")),
	create_parm ("FadingPathNumber","Number of Multipaths",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("FadingPowerArray","Path Average Relative Power Array in dB",
		PARM_REALARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0.0,  -14,  -18,  -20}")),
	create_parm ("FadingDelayArray","Path Delay Array in nsec",
		PARM_REALARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0.0,  56,  106,  185}")),
	create_parm ("FadingUserType","First Path Fading Type",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fARB_x5fGenericTestNet_fFadingUserTypeSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTestNet_fRicean","Ricean")),
	create_parm ("FadingRiceanFactor","Factor for Ricean Fading Type",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","10")),
	create_parm ("FadingJakesOscNum","Number of Jakes Algorithm Oscillators",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","10")),
	create_parm ("RF_Interferers","RF Interferers",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("RF_InterferersEnabled","Enable RF Interferers",
		PARM_INT,
		"_nSTW_x5fARB_x5fGenericTestNet_fRF_x5fInterferersEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTestNet_fOFF","OFF")),
	create_parm ("LocationRF_Interferers","Location of RF Interferers",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fARB_x5fGenericTestNet_fLocationRF_x5fInterferersSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTestNet_fAfter_x5fmultipath_x5ffading","After_multipath_fading")),
	create_parm ("ModFreqOffset","Modulated Interferer Frequency Offset",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","0")),
	create_parm ("ModPower","Modulated Interferer Power",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-200.0)")),
	create_parm ("CW_FreqOffset","CW Interferer Frequency Offset",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","0")),
	create_parm ("CW_Power","CW Interferer Power",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-200.0)")),
	create_parm ("AWGN_Noise","Additive White Gaussian Noise (AWGN)",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("AWGN_Enabled","Enable AWGN",
		PARM_INT,
		"_nSTW_x5fARB_x5fGenericTestNet_fAWGN_x5fEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTestNet_fOFF","OFF")),
	create_parm ("AWGN_Type","AWGN Specification Type",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fARB_x5fGenericTestNet_fAWGN_x5fTypeSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTestNet_fNoise_x5f_x5fdBm_x5f_x5fat_x5fDUT_x5finput","Noise__dBm__at_DUT_input")),
	create_parm ("AWGN_Value","AWGN Specification Value",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-80")),
	create_parm ("MeasurementSetup","Measurement Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category_nc\"")),
	create_parm ("NumberSegments","Number of Signal Segments Measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("DUT_InputPowerStart","DUT Input RF Start Power",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-20.0)")),
	create_parm ("DUT_InputPowerStep","DUT Input Power Step in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","10")),
	create_parm ("DUT_InputPowerNumSteps","DUT Input Number of Power Steps",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("DUT_OutFreq","DUT Output Frequency",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("DUT_OutFreqEnabled","Enable DUT Output Frequency Override",
		PARM_INT,
		"_nSTW_x5fARB_x5fGenericTestNet_fDUT_x5fOutFreqEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTestNet_fOFF","OFF")),
	create_parm ("DUT_OutputFreq","DUT Output Frequency",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","4488.0MHz")),
	create_parm ("DataDisplaySetup","Data Display Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("DDSFileName","Data Display Filename (Leave Blank for Default Display)",
		PARM_STRING,
		"_nSTW_x5fARB_x5fGenericTestNet_fDDSFileName_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTestNet_fdds_x5ffile","\"\"")),
	create_parm ("DSFileName","Dataset Filename (Leave Blank for Default Name)",
		PARM_STRING,
		"_nSTW_x5fARB_x5fGenericTestNet_fDSFileName_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTestNet_fds_x5ffile","\"\"")),
	create_parm ("DisableSourceDataDisplay","Disable Source Signal Data Display",
		PARM_INT,
		"_nSTW_x5fARB_x5fGenericTestNet_fDisableSourceDataDisplaySet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTestNet_fNO","NO")),
	create_parm ("SourceDisplayRefPoint","Source Signal Display Reference Point",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fARB_x5fGenericTestNet_fSourceDisplayRefPointSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTestNet_fRF_x5fDUT_x5finput","RF_DUT_input")),
	create_parm ("DUT_MeasDisplayRefPoint","DUT Measurement Display Reference Point",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fARB_x5fGenericTestNet_fDUT_x5fMeasDisplayRefPointSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTestNet_fRF_x5fDUT_x5foutput","RF_DUT_output")),
	create_parm ("SpecResBW","Spectrum Resolution Bandwidth",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","100 kHz")),
	create_parm ("SpecWindow","Spectrum Window Type",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fARB_x5fGenericTestNet_fSpecWindowSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTestNet_fKaiser_x5f7_x5f865","Kaiser_7_865")),
	create_parm ("SpecMirrorFreq","Mirror Frequency of Source Spectrum/Envelope",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fARB_x5fGenericTestNet_fSpecMirrorFreqSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTestNet_fNO","NO")),
	create_parm ("SpecMeasMirrorFreq","Mirror Frequency of Measurement Spectrum/Envelope",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fARB_x5fGenericTestNet_fSpecMeasMirrorFreqSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTestNet_fNO","NO")));
library_group("Testing (for development use only)","Testing (for development use only)","STW_ARB_GenericTestNet");
palette_group("Testing (for development use only)","Testing (for development use only)","STW_ARB_GenericTestNet");

create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fARB_x5fGenericTest_fInstrumentEnabledSet",
	"_nSTW_x5fARB_x5fGenericTest_fOFF",
	"_nSTW_x5fARB_x5fGenericTest_fON",
	"StdForm");
create_text_form ("_nSTW_x5fARB_x5fGenericTest_fbin_x5ffile", 
	"File with bin extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "bin"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fARB_x5fGenericTest_fARB_x5fExport_x5fI_x5fFilename_x5fFileSet",
	"_nSTW_x5fARB_x5fGenericTest_fbin_x5ffile");
create_text_form ("_nSTW_x5fARB_x5fGenericTest_fbin_x5ffile", 
	"File with bin extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "bin"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fARB_x5fGenericTest_fARB_x5fExport_x5fQ_x5fFilename_x5fFileSet",
	"_nSTW_x5fARB_x5fGenericTest_fbin_x5ffile");
create_text_form ("_nSTW_x5fARB_x5fGenericTest_ftxt_x5ffile", 
	"File with txt extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "txt"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fARB_x5fGenericTest_fARB_x5fI_x5fCompensationFilename_x5fFileSet",
	"_nSTW_x5fARB_x5fGenericTest_ftxt_x5ffile");
create_text_form ("_nSTW_x5fARB_x5fGenericTest_ftxt_x5ffile", 
	"File with txt extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "txt"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fARB_x5fGenericTest_fARB_x5fQ_x5fCompensationFilename_x5fFileSet",
	"_nSTW_x5fARB_x5fGenericTest_ftxt_x5ffile");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fARB_x5fGenericTest_fDisableSampleLimitSet",
	"_nSTW_x5fARB_x5fGenericTest_fNO",
	"_nSTW_x5fARB_x5fGenericTest_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fARB_x5fGenericTest_fVSA_x5fDisplayModeSet",
	"_nSTW_x5fARB_x5fGenericTest_fNO",
	"_nSTW_x5fARB_x5fGenericTest_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fVSA_x5fA", 
	"VSA_A",
	0,
	"0",
	"VSA_A");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fVSA_x5fB", 
	"VSA_B",
	0,
	"1",
	"VSA_B");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fVSA_x5fC", 
	"VSA_C",
	0,
	"2",
	"VSA_C");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fVSA_x5fD", 
	"VSA_D",
	0,
	"3",
	"VSA_D");
create_form_set("_nSTW_x5fARB_x5fGenericTest_fVSA_x5fTraceSet",
	"_nSTW_x5fARB_x5fGenericTest_fVSA_x5fA",
	"_nSTW_x5fARB_x5fGenericTest_fVSA_x5fB",
	"_nSTW_x5fARB_x5fGenericTest_fVSA_x5fC",
	"_nSTW_x5fARB_x5fGenericTest_fVSA_x5fD",
	"StdForm");
create_text_form ("_nSTW_x5fARB_x5fGenericTest_fset_x5ffile", 
	"File with set extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "set"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fARB_x5fGenericTest_fVSA_x5fSetupFile_x5fFileSet",
	"_nSTW_x5fARB_x5fGenericTest_fset_x5ffile");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fARB_x5fGenericTest_fDUT_x5fMirrorSpectrumSet",
	"_nSTW_x5fARB_x5fGenericTest_fNO",
	"_nSTW_x5fARB_x5fGenericTest_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fARB_x5fGenericTest_fMirrorModSpectrumSet",
	"_nSTW_x5fARB_x5fGenericTest_fNO",
	"_nSTW_x5fARB_x5fGenericTest_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fARB_x5fGenericTest_fRF_x5fImpairmentsEnabledSet",
	"_nSTW_x5fARB_x5fGenericTest_fOFF",
	"_nSTW_x5fARB_x5fGenericTest_fON",
	"StdForm");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fARB_x5fGenericTest_fMultipathFadingEnabledSet",
	"_nSTW_x5fARB_x5fGenericTest_fOFF",
	"_nSTW_x5fARB_x5fGenericTest_fON",
	"StdForm");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fJakes", 
	"Jakes",
	0,
	"0",
	"Jakes");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fNoiseFilter", 
	"NoiseFilter",
	0,
	"1",
	"NoiseFilter");
create_form_set("_nSTW_x5fARB_x5fGenericTest_fFadingAlgorithmSet",
	"_nSTW_x5fARB_x5fGenericTest_fJakes",
	"_nSTW_x5fARB_x5fGenericTest_fNoiseFilter",
	"StdForm");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fRayleigh", 
	"Rayleigh",
	0,
	"0",
	"Rayleigh");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fRicean", 
	"Ricean",
	0,
	"1",
	"Ricean");
create_form_set("_nSTW_x5fARB_x5fGenericTest_fFadingUserTypeSet",
	"_nSTW_x5fARB_x5fGenericTest_fRayleigh",
	"_nSTW_x5fARB_x5fGenericTest_fRicean",
	"StdForm");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fARB_x5fGenericTest_fRF_x5fInterferersEnabledSet",
	"_nSTW_x5fARB_x5fGenericTest_fOFF",
	"_nSTW_x5fARB_x5fGenericTest_fON",
	"StdForm");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fAfter_x5fmultipath_x5ffading", 
	"After multipath fading",
	0,
	"0",
	"After multipath fading");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fBefore_x5fmultipath_x5ffading", 
	"Before multipath fading",
	0,
	"1",
	"Before multipath fading");
create_form_set("_nSTW_x5fARB_x5fGenericTest_fLocationRF_x5fInterferersSet",
	"_nSTW_x5fARB_x5fGenericTest_fAfter_x5fmultipath_x5ffading",
	"_nSTW_x5fARB_x5fGenericTest_fBefore_x5fmultipath_x5ffading",
	"StdForm");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fARB_x5fGenericTest_fAWGN_x5fEnabledSet",
	"_nSTW_x5fARB_x5fGenericTest_fOFF",
	"_nSTW_x5fARB_x5fGenericTest_fON",
	"StdForm");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fNoise_x5f_x5fdBm_x5f_x5fat_x5fESG_x5foutput", 
	"Noise (dBm) at ESG output",
	0,
	"0",
	"Noise (dBm) at ESG output");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fNoise_x5f_x5fdBm_x5fHz_x5f_x5fat_x5fESG_x5foutput", 
	"Noise (dBm/Hz) at ESG output",
	0,
	"1",
	"Noise (dBm/Hz) at ESG output");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fLocal_x5fEb_x5fNo_x5f_x5fdB_x5f_x5fat_x5fESG_x5foutput", 
	"Local Eb/No (dB) at ESG output",
	0,
	"2",
	"Local Eb/No (dB) at ESG output");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fNoise_x5f_x5fdBm_x5f_x5fat_x5fDUT_x5finput", 
	"Noise (dBm) at DUT input",
	0,
	"3",
	"Noise (dBm) at DUT input");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fNoise_x5f_x5fdBm_x5fHz_x5f_x5fat_x5fDUT_x5finput", 
	"Noise (dBm/Hz) at DUT input",
	0,
	"4",
	"Noise (dBm/Hz) at DUT input");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fLocal_x5fEb_x5fNo_x5f_x5fdB_x5f_x5fat_x5fDUT_x5finput", 
	"Local Eb/No (dB) at DUT input",
	0,
	"5",
	"Local Eb/No (dB) at DUT input");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fSystem_x5fEb_x5fNo_x5f_x5fdB_x5f", 
	"System Eb/No (dB)",
	0,
	"6",
	"System Eb/No (dB)");
create_form_set("_nSTW_x5fARB_x5fGenericTest_fAWGN_x5fTypeSet",
	"_nSTW_x5fARB_x5fGenericTest_fNoise_x5f_x5fdBm_x5f_x5fat_x5fESG_x5foutput",
	"_nSTW_x5fARB_x5fGenericTest_fNoise_x5f_x5fdBm_x5fHz_x5f_x5fat_x5fESG_x5foutput",
	"_nSTW_x5fARB_x5fGenericTest_fLocal_x5fEb_x5fNo_x5f_x5fdB_x5f_x5fat_x5fESG_x5foutput",
	"_nSTW_x5fARB_x5fGenericTest_fNoise_x5f_x5fdBm_x5f_x5fat_x5fDUT_x5finput",
	"_nSTW_x5fARB_x5fGenericTest_fNoise_x5f_x5fdBm_x5fHz_x5f_x5fat_x5fDUT_x5finput",
	"_nSTW_x5fARB_x5fGenericTest_fLocal_x5fEb_x5fNo_x5f_x5fdB_x5f_x5fat_x5fDUT_x5finput",
	"_nSTW_x5fARB_x5fGenericTest_fSystem_x5fEb_x5fNo_x5f_x5fdB_x5f",
	"StdForm");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nSTW_x5fARB_x5fGenericTest_fDUT_x5fOutFreqEnabledSet",
	"_nSTW_x5fARB_x5fGenericTest_fOFF",
	"_nSTW_x5fARB_x5fGenericTest_fON",
	"StdForm");
create_text_form ("_nSTW_x5fARB_x5fGenericTest_fdds_x5ffile", 
	"File with dds extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "dds"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fARB_x5fGenericTest_fDDSFileName_x5fFileSet",
	"_nSTW_x5fARB_x5fGenericTest_fdds_x5ffile");
create_text_form ("_nSTW_x5fARB_x5fGenericTest_fds_x5ffile", 
	"File with ds extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "ds"), prefix_path_to_data_file);
create_form_set ( "_nSTW_x5fARB_x5fGenericTest_fDSFileName_x5fFileSet",
	"_nSTW_x5fARB_x5fGenericTest_fds_x5ffile");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fARB_x5fGenericTest_fDisableSourceDataDisplaySet",
	"_nSTW_x5fARB_x5fGenericTest_fNO",
	"_nSTW_x5fARB_x5fGenericTest_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fRF_x5fDUT_x5finput", 
	"RF DUT input",
	0,
	"0",
	"RF DUT input");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fESG_x5foutput", 
	"ESG output",
	0,
	"1",
	"ESG output");
create_form_set("_nSTW_x5fARB_x5fGenericTest_fSourceDisplayRefPointSet",
	"_nSTW_x5fARB_x5fGenericTest_fRF_x5fDUT_x5finput",
	"_nSTW_x5fARB_x5fGenericTest_fESG_x5foutput",
	"StdForm");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fRF_x5fDUT_x5foutput", 
	"RF DUT output",
	0,
	"0",
	"RF DUT output");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fVSA_x5finput", 
	"VSA input",
	0,
	"1",
	"VSA input");
create_form_set("_nSTW_x5fARB_x5fGenericTest_fDUT_x5fMeasDisplayRefPointSet",
	"_nSTW_x5fARB_x5fGenericTest_fRF_x5fDUT_x5foutput",
	"_nSTW_x5fARB_x5fGenericTest_fVSA_x5finput",
	"StdForm");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fnone", 
	"none",
	0,
	"0",
	"none");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fHamming_x5f0_x5f54", 
	"Hamming 0.54",
	0,
	"1",
	"Hamming 0.54");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fHanning_x5f0_x5f50", 
	"Hanning 0.50",
	0,
	"2",
	"Hanning 0.50");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fGaussian_x5f0_x5f75", 
	"Gaussian 0.75",
	0,
	"3",
	"Gaussian 0.75");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fKaiser_x5f7_x5f865", 
	"Kaiser 7.865",
	0,
	"4",
	"Kaiser 7.865");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_f_x5f8510_x5f6_x5f0", 
	"_8510 6.0",
	0,
	"5",
	"8510 6.0");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fBlackman", 
	"Blackman",
	0,
	"6",
	"Blackman");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fBlackman_x5fHarris", 
	"Blackman-Harris",
	0,
	"7",
	"Blackman-Harris");
create_form_set("_nSTW_x5fARB_x5fGenericTest_fSpecWindowSet",
	"_nSTW_x5fARB_x5fGenericTest_fnone",
	"_nSTW_x5fARB_x5fGenericTest_fHamming_x5f0_x5f54",
	"_nSTW_x5fARB_x5fGenericTest_fHanning_x5f0_x5f50",
	"_nSTW_x5fARB_x5fGenericTest_fGaussian_x5f0_x5f75",
	"_nSTW_x5fARB_x5fGenericTest_fKaiser_x5f7_x5f865",
	"_nSTW_x5fARB_x5fGenericTest_f_x5f8510_x5f6_x5f0",
	"_nSTW_x5fARB_x5fGenericTest_fBlackman",
	"_nSTW_x5fARB_x5fGenericTest_fBlackman_x5fHarris",
	"StdForm");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fARB_x5fGenericTest_fSpecMirrorFreqSet",
	"_nSTW_x5fARB_x5fGenericTest_fNO",
	"_nSTW_x5fARB_x5fGenericTest_fYES",
	"StdForm");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nSTW_x5fARB_x5fGenericTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nSTW_x5fARB_x5fGenericTest_fSpecMeasMirrorFreqSet",
	"_nSTW_x5fARB_x5fGenericTest_fNO",
	"_nSTW_x5fARB_x5fGenericTest_fYES",
	"StdForm");
create_item ("STW_ARB_GenericTest","ARB/PSG/Scope Transmission Test Workbench",
	"S",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_STW_ARB_GenericTest",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"STW_ARB_GenericTest",
	SPDesignAnnotFmt,
	"SYM_DSN_STW_ARB_GenericTest",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("InstrumentSetup","Instrument Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category_nc\"")),
	create_parm ("InstrumentEnabled","Enable Instrument Connectivity",
		PARM_INT,
		"_nSTW_x5fARB_x5fGenericTest_fInstrumentEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTest_fOFF","OFF")),
	create_parm ("N6030_Setup","ARB Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("ARB_Export_I_Filename","Export I Waveform Filename",
		PARM_STRING | PARM_NO_DISPLAY,
		"_nSTW_x5fARB_x5fGenericTest_fARB_x5fExport_x5fI_x5fFilename_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTest_fbin_x5ffile","\"ARB_I_waveform.bin\"")),
	create_parm ("ARB_Export_Q_Filename","Export Q Waveform Filename",
		PARM_STRING | PARM_NO_DISPLAY,
		"_nSTW_x5fARB_x5fGenericTest_fARB_x5fExport_x5fQ_x5fFilename_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTest_fbin_x5ffile","\"ARB_Q_waveform.bin\"")),
	create_parm ("ARB_I_CompensationFilename","ARB I Compensation Filename",
		PARM_STRING | PARM_NO_DISPLAY,
		"_nSTW_x5fARB_x5fGenericTest_fARB_x5fI_x5fCompensationFilename_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTest_ftxt_x5ffile","\"ARB_compensation.txt\"")),
	create_parm ("ARB_Q_CompensationFilename","ARB Q Compensation Filename",
		PARM_STRING | PARM_NO_DISPLAY,
		"_nSTW_x5fARB_x5fGenericTest_fARB_x5fQ_x5fCompensationFilename_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTest_ftxt_x5ffile","\"ARB_compensation.txt\"")),
	create_parm ("ARB_SamplingRate","ARB Sampling Rate",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","1.25 GHz")),
	create_parm ("MaxSignalSampleLimit","Maximum Signal Sample Limit (in M samples - M=2^20)",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")),
	create_parm ("DisableSampleLimit","Disable Signal Sample Limit When Instrument Connectivity Disabled",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fARB_x5fGenericTest_fDisableSampleLimitSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTest_fNO","NO")),
	create_parm ("PSG_Setup","PSG Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("PSG_Instrument","PSG Instrument Address",
		PARM_STRING | PARM_NO_DISPLAY,
		"InstrumentFormSet",
		UNITLESS_UNIT,
		prm("InstrumentForm","\"[GPIB0::19::INSTR][localhost][4790]\"")),
	create_parm ("PSG_MinOutputPower","PSG Minimum Output Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-116.0)")),
	create_parm ("PSG_MaxOutputPower","PSG Maximum Output Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(10.0)")),
	create_parm ("OscilloscopeSetup","Oscilloscope Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("OScopeMinInputPower","Oscilloscope Minimum Input Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-45.0)")),
	create_parm ("OScopeMaxInputPower","Oscilloscope Maximum Input Power Limit",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(20.0)")),
	create_parm ("VSA_Setup","VSA Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("VSA_DisplayMode","Activate VSA Display",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fARB_x5fGenericTest_fVSA_x5fDisplayModeSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTest_fNO","NO")),
	create_parm ("VSA_Trace","VSA Data Trace",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fARB_x5fGenericTest_fVSA_x5fTraceSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTest_fVSA_x5fB","VSA_B")),
	create_parm ("VSA_SetupFile","VSA Setup Filename",
		PARM_STRING | PARM_NO_DISPLAY,
		"_nSTW_x5fARB_x5fGenericTest_fVSA_x5fSetupFile_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTest_fset_x5ffile","\"Reacquire_802_15_3a_UWB_Meas.set\"")),
	create_parm ("VSA_Title","VSA Display Title",
		PARM_STRING | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"IEEE 802.15.3a UWB Measurement\"")),
	create_parm ("DUT_ModelSetup","DUT Model Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("DUT_PreAmpGain","DUT Pre-Amplifier Gain",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_PreAmpNoiseFigure","DUT Pre-Amplifier Noise Figure",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_Gain","DUT Gain",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_NoiseFigure","DUT Noise Figure",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_MirrorSpectrum","Mirror DUT Output Spectrum",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fARB_x5fGenericTest_fDUT_x5fMirrorSpectrumSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTest_fNO","NO")),
	create_parm ("DUT_PostAmpGain","DUT Post-Amplifier Gain",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("DUT_PostAmpNoiseFigure","DUT Post-Amplifier Noise Figure",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("SignalSetup","Signal Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("AdvancedSignalSetup","Advanced Signal Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("RandomSeed","Random Number Generator Seed",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1234567")),
	create_parm ("RF_Modulator","RF Modulator",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category_nc\"")),
	create_parm ("ModulatorFreq","Modulator Carrier Frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","4488.0MHz")),
	create_parm ("MirrorModSpectrum","Mirror Modulator Spectrum",
		PARM_INT,
		"_nSTW_x5fARB_x5fGenericTest_fMirrorModSpectrumSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTest_fNO","NO")),
	create_parm ("RF_Impairments","RF Impairments",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("RF_ImpairmentsEnabled","Enable RF Impairments",
		PARM_INT,
		"_nSTW_x5fARB_x5fGenericTest_fRF_x5fImpairmentsEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTest_fOFF","OFF")),
	create_parm ("GainImbalance","Gain Imbalance, Q vs I",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","0")),
	create_parm ("PhaseImbalance","Phase Imbalance, Q vs I",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		ANGLE_UNIT,
		prm("StdForm","0")),
	create_parm ("I_OriginOffset","I Origin Offset (% of output RMS voltage)",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("Q_OriginOffset","Q Origin Offset (% of output RMS voltage)",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("IQ_Rotation","IQ Rotation",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		ANGLE_UNIT,
		prm("StdForm","0")),
	create_parm ("MultipathFading","Multipath Fading",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("MultipathFadingEnabled","Enable Multipath Fading",
		PARM_INT,
		"_nSTW_x5fARB_x5fGenericTest_fMultipathFadingEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTest_fOFF","OFF")),
	create_parm ("FadingAlgorithm","Fading Algorithm",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fARB_x5fGenericTest_fFadingAlgorithmSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTest_fNoiseFilter","NoiseFilter")),
	create_parm ("FadingSeed","Jakes Algorithm Random Seed",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1234567")),
	create_parm ("FadingPathNumber","Number of Multipaths",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("FadingPowerArray","Path Average Relative Power Array in dB",
		PARM_REALARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0.0,  -14,  -18,  -20}")),
	create_parm ("FadingDelayArray","Path Delay Array in nsec",
		PARM_REALARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{0.0,  56,  106,  185}")),
	create_parm ("FadingUserType","First Path Fading Type",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fARB_x5fGenericTest_fFadingUserTypeSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTest_fRicean","Ricean")),
	create_parm ("FadingRiceanFactor","Factor for Ricean Fading Type",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","10")),
	create_parm ("FadingJakesOscNum","Number of Jakes Algorithm Oscillators",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","10")),
	create_parm ("RF_Interferers","RF Interferers",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("RF_InterferersEnabled","Enable RF Interferers",
		PARM_INT,
		"_nSTW_x5fARB_x5fGenericTest_fRF_x5fInterferersEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTest_fOFF","OFF")),
	create_parm ("LocationRF_Interferers","Location of RF Interferers",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fARB_x5fGenericTest_fLocationRF_x5fInterferersSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTest_fAfter_x5fmultipath_x5ffading","After_multipath_fading")),
	create_parm ("ModFreqOffset","Modulated Interferer Frequency Offset",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","0")),
	create_parm ("ModPower","Modulated Interferer Power",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-200.0)")),
	create_parm ("CW_FreqOffset","CW Interferer Frequency Offset",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","0")),
	create_parm ("CW_Power","CW Interferer Power",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-200.0)")),
	create_parm ("AWGN_Noise","Additive White Gaussian Noise (AWGN)",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("AWGN_Enabled","Enable AWGN",
		PARM_INT,
		"_nSTW_x5fARB_x5fGenericTest_fAWGN_x5fEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTest_fOFF","OFF")),
	create_parm ("AWGN_Type","AWGN Specification Type",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fARB_x5fGenericTest_fAWGN_x5fTypeSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTest_fNoise_x5f_x5fdBm_x5f_x5fat_x5fDUT_x5finput","Noise__dBm__at_DUT_input")),
	create_parm ("AWGN_Value","AWGN Specification Value",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-80")),
	create_parm ("MeasurementSetup","Measurement Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category_nc\"")),
	create_parm ("NumberSegments","Number of Signal Segments Measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("DUT_InputPowerStart","DUT Input RF Start Power",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(-20.0)")),
	create_parm ("DUT_InputPowerStep","DUT Input Power Step in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		DB_GAIN_UNIT,
		prm("StdForm","10")),
	create_parm ("DUT_InputPowerNumSteps","DUT Input Number of Power Steps",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("DUT_OutFreq","DUT Output Frequency",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category1\"")),
	create_parm ("DUT_OutFreqEnabled","Enable DUT Output Frequency Override",
		PARM_INT,
		"_nSTW_x5fARB_x5fGenericTest_fDUT_x5fOutFreqEnabledSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTest_fOFF","OFF")),
	create_parm ("DUT_OutputFreq","DUT Output Frequency",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","4488.0MHz")),
	create_parm ("DataDisplaySetup","Data Display Setup",
		PARM_STRING | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_NOT_NETLISTED,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"Category\"")),
	create_parm ("DDSFileName","Data Display Filename (Leave Blank for Default Display)",
		PARM_STRING,
		"_nSTW_x5fARB_x5fGenericTest_fDDSFileName_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTest_fdds_x5ffile","\"\"")),
	create_parm ("DSFileName","Dataset Filename (Leave Blank for Default Name)",
		PARM_STRING,
		"_nSTW_x5fARB_x5fGenericTest_fDSFileName_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTest_fds_x5ffile","\"\"")),
	create_parm ("DisableSourceDataDisplay","Disable Source Signal Data Display",
		PARM_INT,
		"_nSTW_x5fARB_x5fGenericTest_fDisableSourceDataDisplaySet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTest_fNO","NO")),
	create_parm ("SourceDisplayRefPoint","Source Signal Display Reference Point",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fARB_x5fGenericTest_fSourceDisplayRefPointSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTest_fRF_x5fDUT_x5finput","RF_DUT_input")),
	create_parm ("DUT_MeasDisplayRefPoint","DUT Measurement Display Reference Point",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fARB_x5fGenericTest_fDUT_x5fMeasDisplayRefPointSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTest_fRF_x5fDUT_x5foutput","RF_DUT_output")),
	create_parm ("SpecResBW","Spectrum Resolution Bandwidth",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","100 kHz")),
	create_parm ("SpecWindow","Spectrum Window Type",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fARB_x5fGenericTest_fSpecWindowSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTest_fKaiser_x5f7_x5f865","Kaiser_7_865")),
	create_parm ("SpecMirrorFreq","Mirror Frequency of Source Spectrum/Envelope",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fARB_x5fGenericTest_fSpecMirrorFreqSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTest_fNO","NO")),
	create_parm ("SpecMeasMirrorFreq","Mirror Frequency of Measurement Spectrum/Envelope",
		PARM_INT | PARM_NO_DISPLAY,
		"_nSTW_x5fARB_x5fGenericTest_fSpecMeasMirrorFreqSet",
		UNITLESS_UNIT,
		prm("_nSTW_x5fARB_x5fGenericTest_fNO","NO")));
library_group("Testing (for development use only)","Testing (for development use only)","STW_ARB_GenericTest");
palette_group("Testing (for development use only)","Testing (for development use only)","STW_ARB_GenericTest");

create_item ("STW_ARB_DoNotPause","STW ARB/PSG/VSA Do Not Pause",
	"S",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_STW_ARB_DoNotPause",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"STW_ARB_DoNotPause",
	SPDesignAnnotFmt,
	"SYM_DSN_STW_ARB_DoNotPause",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("Testing (for development use only)","Testing (for development use only)","STW_ARB_DoNotPause");
palette_group("Testing (for development use only)","Testing (for development use only)","STW_ARB_DoNotPause");

create_constant_form ("_nRF_x5fPathSwitch_fA", 
	"A",
	0,
	"0",
	"A");
create_constant_form ("_nRF_x5fPathSwitch_fB", 
	"B",
	0,
	"1",
	"B");
create_form_set("_nRF_x5fPathSwitch_fPathSet",
	"_nRF_x5fPathSwitch_fA",
	"_nRF_x5fPathSwitch_fB",
	"StdForm");
create_item ("RF_PathSwitch","Switch between RF paths",
	"R",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_RF_PathSwitch",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"RF_PathSwitch",
	SPDesignAnnotFmt,
	"SYM_DSN_RF_PathSwitch",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("R","Reference resistance",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50")),
	create_parm ("Path","Path selected",
		PARM_INT,
		"_nRF_x5fPathSwitch_fPathSet",
		UNITLESS_UNIT,
		prm("_nRF_x5fPathSwitch_fA","A")));
library_group("Testing (for development use only)","Testing (for development use only)","RF_PathSwitch");
palette_group("Testing (for development use only)","Testing (for development use only)","RF_PathSwitch");

create_constant_form ("_nRF_x5fMultipath_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");
create_constant_form ("_nRF_x5fMultipath_fON", 
	"ON",
	0,
	"1",
	"ON");
create_form_set("_nRF_x5fMultipath_fMultipathFadingEnabledSet",
	"_nRF_x5fMultipath_fOFF",
	"_nRF_x5fMultipath_fON",
	"StdForm");
create_constant_form ("_nRF_x5fMultipath_fJakes", 
	"Jakes",
	0,
	"0",
	"Jakes");
create_constant_form ("_nRF_x5fMultipath_fNoiseFilter", 
	"NoiseFilter",
	0,
	"1",
	"NoiseFilter");
create_form_set("_nRF_x5fMultipath_fFadingAlgorithmSet",
	"_nRF_x5fMultipath_fJakes",
	"_nRF_x5fMultipath_fNoiseFilter",
	"StdForm");
create_constant_form ("_nRF_x5fMultipath_fRayleigh", 
	"Rayleigh",
	0,
	"0",
	"Rayleigh");
create_constant_form ("_nRF_x5fMultipath_fRicean", 
	"Ricean",
	0,
	"1",
	"Ricean");
create_form_set("_nRF_x5fMultipath_fFadingUserTypeSet",
	"_nRF_x5fMultipath_fRayleigh",
	"_nRF_x5fMultipath_fRicean",
	"StdForm");
create_item ("RF_Multipath","RF Multipath Channel",
	"R",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_RF_Multipath",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"RF_Multipath",
	SPDesignAnnotFmt,
	"SYM_DSN_RF_Multipath",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("RIn","Input resistance",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50")),
	create_parm ("ROut","Output resistance",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50")),
	create_parm ("RTemp","Temperature of resistor in Celcius",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TEMPERATURE_UNIT,
		prm("StdForm","-273.15")),
	create_parm ("MultipathFadingEnabled","Multipath fading model enabled",
		PARM_INT,
		"_nRF_x5fMultipath_fMultipathFadingEnabledSet",
		UNITLESS_UNIT,
		prm("_nRF_x5fMultipath_fOFF","OFF")),
	create_parm ("FadingAlgorithm","Fading algorithm",
		PARM_INT,
		"_nRF_x5fMultipath_fFadingAlgorithmSet",
		UNITLESS_UNIT,
		prm("_nRF_x5fMultipath_fNoiseFilter","NoiseFilter")),
	create_parm ("FadingSeed","Random seed in Jakes algorithm",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1234567")),
	create_parm ("FadingPathNumber","Number of multipath echoes",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("FadingPowerArray","Average relative power of path array in dB",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"0.0 -14 -18 -20\"")),
	create_parm ("FadingDelayArray","Delays associated with path array in nsec",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"0.0 56 106 185\"")),
	create_parm ("FadingUserType","First path fading type",
		PARM_INT,
		"_nRF_x5fMultipath_fFadingUserTypeSet",
		UNITLESS_UNIT,
		prm("_nRF_x5fMultipath_fRicean","Ricean")),
	create_parm ("FadingRiceanFactor","Factor when fading type is Ricean",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","10")),
	create_parm ("FadingJakesOscNum","Number of oscillators used in Jakes algorithm",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","10")));
library_group("Testing (for development use only)","Testing (for development use only)","RF_Multipath");
palette_group("Testing (for development use only)","Testing (for development use only)","RF_Multipath");

create_constant_form ("_nRF_x5fInterferers_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nRF_x5fInterferers_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nRF_x5fInterferers_fRF_x5fInterferersEnabledSet",
	"_nRF_x5fInterferers_fNO",
	"_nRF_x5fInterferers_fYES",
	"StdForm");
create_item ("RF_Interferers","RF Interferers",
	"R",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_RF_Interferers",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"RF_Interferers",
	SPDesignAnnotFmt,
	"SYM_DSN_RF_Interferers",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("RIn","Input resistance",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50")),
	create_parm ("ROut","Output resistance",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50")),
	create_parm ("RTemp","Temperature of resistor in Celcius",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TEMPERATURE_UNIT,
		prm("StdForm","-273.15")),
	create_parm ("RF_InterferersEnabled","Enable RF interferers",
		PARM_INT,
		"_nRF_x5fInterferers_fRF_x5fInterferersEnabledSet",
		UNITLESS_UNIT,
		prm("_nRF_x5fInterferers_fNO","NO")),
	create_parm ("FCarrier","RF carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","2400.0MHz")),
	create_parm ("ModFreqOffset","Modulator frequency offset",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","0")),
	create_parm ("ModPower","Modulator power",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","0")),
	create_parm ("ModVRef","Modulator reference voltage for output power calibration",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		VOLTAGE_UNIT,
		prm("StdForm","1")),
	create_parm ("CW_FreqOffset","CW frequency offset",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","0")),
	create_parm ("CW_Power","CW power",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","0")));
library_group("Testing (for development use only)","Testing (for development use only)","RF_Interferers");
palette_group("Testing (for development use only)","Testing (for development use only)","RF_Interferers");

create_item ("STW_TX_SpecificMeas_Info","STW specific measurement information box",
	"S",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_STW_TX_SpecificMeas_Info",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"STW_TX_SpecificMeas_Info",
	SPDesignAnnotFmt,
	"SYM_DSN_STW_TX_SpecificMeas_Info",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("Testing (for development use only)","Testing (for development use only)","STW_TX_SpecificMeas_Info");
palette_group("Testing (for development use only)","Testing (for development use only)","STW_TX_SpecificMeas_Info");

create_item ("STW_Top_Info","STW top level information Box",
	"S",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_STW_Top_Info",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"STW_Top_Info",
	SPDesignAnnotFmt,
	"SYM_DSN_STW_Top_Info",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("Testing (for development use only)","Testing (for development use only)","STW_Top_Info");
palette_group("Testing (for development use only)","Testing (for development use only)","STW_Top_Info");

create_item ("STW_SourceMeas_Info","STW measurement information box",
	"S",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_STW_SourceMeas_Info",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"STW_SourceMeas_Info",
	SPDesignAnnotFmt,
	"SYM_DSN_STW_SourceMeas_Info",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("Testing (for development use only)","Testing (for development use only)","STW_SourceMeas_Info");
palette_group("Testing (for development use only)","Testing (for development use only)","STW_SourceMeas_Info");

create_item ("STW_RX_BER_Meas_Info","STW specific measurement information box",
	"S",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_STW_RX_BER_Meas_Info",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"STW_RX_BER_Meas_Info",
	SPDesignAnnotFmt,
	"SYM_DSN_STW_RX_BER_Meas_Info",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("Testing (for development use only)","Testing (for development use only)","STW_RX_BER_Meas_Info");
palette_group("Testing (for development use only)","Testing (for development use only)","STW_RX_BER_Meas_Info");

create_item ("STW_RangeCheck_Info","STW range check information box",
	"S",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_STW_RangeCheck_Info",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"STW_RangeCheck_Info",
	SPDesignAnnotFmt,
	"SYM_DSN_STW_RangeCheck_Info",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("Testing (for development use only)","Testing (for development use only)","STW_RangeCheck_Info");
palette_group("Testing (for development use only)","Testing (for development use only)","STW_RangeCheck_Info");

create_item ("STW_Multipath_Info","STW channel information box",
	"S",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_STW_Multipath_Info",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"STW_Multipath_Info",
	SPDesignAnnotFmt,
	"SYM_DSN_STW_Multipath_Info",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("Testing (for development use only)","Testing (for development use only)","STW_Multipath_Info");
palette_group("Testing (for development use only)","Testing (for development use only)","STW_Multipath_Info");

create_item ("STW_BasebandSignal_Info","STW baseband source information box",
	"S",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_STW_BasebandSignal_Info",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"STW_BasebandSignal_Info",
	SPDesignAnnotFmt,
	"SYM_DSN_STW_BasebandSignal_Info",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("Testing (for development use only)","Testing (for development use only)","STW_BasebandSignal_Info");
palette_group("Testing (for development use only)","Testing (for development use only)","STW_BasebandSignal_Info");

