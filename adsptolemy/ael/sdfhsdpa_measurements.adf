set_design_type( sigproc_net );

create_constant_form ("_n_x5fHSDPA_x5fEVM_fAutoDetect", 
	"AutoDetect",
	0,
	"0",
	"AutoDetect");

create_constant_form ("_n_x5fHSDPA_x5fEVM_fQPSK", 
	"QPSK",
	0,
	"1",
	"QPSK");

create_constant_form ("_n_x5fHSDPA_x5fEVM_fQAM16", 
	"QAM16",
	0,
	"2",
	"QAM16");

create_constant_form ("_n_x5fHSDPA_x5fEVM_fQAM64", 
	"QAM64",
	0,
	"3",
	"QAM64");

create_form_set("_n_x5fHSDPA_x5fEVM_fModSchemeSet",
	"_n_x5fHSDPA_x5fEVM_fAutoDetect",
	"_n_x5fHSDPA_x5fEVM_fQPSK",
	"_n_x5fHSDPA_x5fEVM_fQAM16",
	"_n_x5fHSDPA_x5fEVM_fQAM64",
	"StdForm");

create_constant_form ("_n_x5fHSDPA_x5fEVM_fnormal", 
	"normal",
	0,
	"0",
	"Normal");

create_constant_form ("_n_x5fHSDPA_x5fEVM_fright", 
	"right",
	0,
	"1",
	"Right Alternate");

create_constant_form ("_n_x5fHSDPA_x5fEVM_fleft", 
	"left",
	0,
	"2",
	"Left Alternate");

create_form_set("_n_x5fHSDPA_x5fEVM_fScrambleTypeSet",
	"_n_x5fHSDPA_x5fEVM_fnormal",
	"_n_x5fHSDPA_x5fEVM_fright",
	"_n_x5fHSDPA_x5fEVM_fleft",
	"StdForm");

create_constant_form ("_n_x5fHSDPA_x5fEVM_fCPICH", 
	"CPICH",
	0,
	"0",
	"CPICH");

create_constant_form ("_n_x5fHSDPA_x5fEVM_fSCH", 
	"SCH",
	0,
	"1",
	"SCH");

create_constant_form ("_n_x5fHSDPA_x5fEVM_fCPICH2", 
	"CPICH2",
	0,
	"2",
	"CPICH2");

create_form_set("_n_x5fHSDPA_x5fEVM_fsyncModeSelectionSet",
	"_n_x5fHSDPA_x5fEVM_fCPICH",
	"_n_x5fHSDPA_x5fEVM_fSCH",
	"_n_x5fHSDPA_x5fEVM_fCPICH2",
	"StdForm");

create_constant_form ("_n_x5fHSDPA_x5fEVM_fNONE", 
	"NONE",
	0,
	"0",
	"NONE");

create_constant_form ("_n_x5fHSDPA_x5fEVM_fMODEL_x5f1_x5fDPCH_x5f16", 
	"MODEL_1_DPCH_16",
	0,
	"1",
	"MODEL_1_DPCH_16");

create_constant_form ("_n_x5fHSDPA_x5fEVM_fMODEL_x5f1_x5fDPCH_x5f32", 
	"MODEL_1_DPCH_32",
	0,
	"2",
	"MODEL_1_DPCH_32");

create_constant_form ("_n_x5fHSDPA_x5fEVM_fMODEL_x5f1_x5fDPCH_x5f64", 
	"MODEL_1_DPCH_64",
	0,
	"3",
	"MODEL_1_DPCH_64");

create_constant_form ("_n_x5fHSDPA_x5fEVM_fMODEL_x5f2", 
	"MODEL_2",
	0,
	"4",
	"MODEL_2");

create_constant_form ("_n_x5fHSDPA_x5fEVM_fMODEL_x5f3_x5fDPCH_x5f16", 
	"MODEL_3_DPCH_16",
	0,
	"5",
	"MODEL_3_DPCH_16");

create_constant_form ("_n_x5fHSDPA_x5fEVM_fMODEL_x5f3_x5fDPCH_x5f32", 
	"MODEL_3_DPCH_32",
	0,
	"6",
	"MODEL_3_DPCH_32");

create_constant_form ("_n_x5fHSDPA_x5fEVM_fMODEL_x5f4", 
	"MODEL_4",
	0,
	"7",
	"MODEL_4");

create_constant_form ("_n_x5fHSDPA_x5fEVM_fMODEL_x5f1_x5fDPCH_x5f16_x5fSCCPCH", 
	"MODEL_1_DPCH_16_SCCPCH",
	0,
	"8",
	"MODEL_1_DPCH_16_SCCPCH");

create_constant_form ("_n_x5fHSDPA_x5fEVM_fMODEL_x5f1_x5fDPCH_x5f32_x5fSCCPCH", 
	"MODEL_1_DPCH_32_SCCPCH",
	0,
	"9",
	"MODEL_1_DPCH_32_SCCPCH");

create_constant_form ("_n_x5fHSDPA_x5fEVM_fMODEL_x5f1_x5fDPCH_x5f64_x5fSCCPCH", 
	"MODEL_1_DPCH_64_SCCPCH",
	0,
	"10",
	"MODEL_1_DPCH_64_SCCPCH");

create_constant_form ("_n_x5fHSDPA_x5fEVM_fMODEL_x5f2_x5fSCCPCH", 
	"MODEL_2_SCCPCH",
	0,
	"11",
	"MODEL_2_SCCPCH");

create_constant_form ("_n_x5fHSDPA_x5fEVM_fMODEL_x5f3_x5fDPCH_x5f16_x5fSCCPCH", 
	"MODEL_3_DPCH_16_SCCPCH",
	0,
	"12",
	"MODEL_3_DPCH_16_SCCPCH");

create_constant_form ("_n_x5fHSDPA_x5fEVM_fMODEL_x5f3_x5fDPCH_x5f32_x5fSCCPCH", 
	"MODEL_3_DPCH_32_SCCPCH",
	0,
	"13",
	"MODEL_3_DPCH_32_SCCPCH");

create_constant_form ("_n_x5fHSDPA_x5fEVM_fMODEL_x5f4_x5fPCPICH", 
	"MODEL_4_PCPICH",
	0,
	"14",
	"MODEL_4_PCPICH");

create_constant_form ("_n_x5fHSDPA_x5fEVM_fMODEL_x5f5_x5fHSPDSCH_x5f2_x5fDPCH_x5f6", 
	"MODEL_5_HSPDSCH_2_DPCH_6",
	0,
	"15",
	"MODEL_5_HSPDSCH_2_DPCH_6");

create_constant_form ("_n_x5fHSDPA_x5fEVM_fMODEL_x5f5_x5fHSPDSCH_x5f4_x5fDPCH_x5f14", 
	"MODEL_5_HSPDSCH_4_DPCH_14",
	0,
	"16",
	"MODEL_5_HSPDSCH_4_DPCH_14");

create_constant_form ("_n_x5fHSDPA_x5fEVM_fMODEL_x5f5_x5fHSPDSCH_x5f8_x5fDPCH_x5f30", 
	"MODEL_5_HSPDSCH_8_DPCH_30",
	0,
	"17",
	"MODEL_5_HSPDSCH_8_DPCH_30");

create_constant_form ("_n_x5fHSDPA_x5fEVM_fMODEL_x5f6", 
	"MODEL_6",
	0,
	"18",
	"MODEL_6");

create_form_set("_n_x5fHSDPA_x5fEVM_fTestModelSet",
	"_n_x5fHSDPA_x5fEVM_fNONE",
	"_n_x5fHSDPA_x5fEVM_fMODEL_x5f1_x5fDPCH_x5f16",
	"_n_x5fHSDPA_x5fEVM_fMODEL_x5f1_x5fDPCH_x5f32",
	"_n_x5fHSDPA_x5fEVM_fMODEL_x5f1_x5fDPCH_x5f64",
	"_n_x5fHSDPA_x5fEVM_fMODEL_x5f2",
	"_n_x5fHSDPA_x5fEVM_fMODEL_x5f3_x5fDPCH_x5f16",
	"_n_x5fHSDPA_x5fEVM_fMODEL_x5f3_x5fDPCH_x5f32",
	"_n_x5fHSDPA_x5fEVM_fMODEL_x5f4",
	"_n_x5fHSDPA_x5fEVM_fMODEL_x5f1_x5fDPCH_x5f16_x5fSCCPCH",
	"_n_x5fHSDPA_x5fEVM_fMODEL_x5f1_x5fDPCH_x5f32_x5fSCCPCH",
	"_n_x5fHSDPA_x5fEVM_fMODEL_x5f1_x5fDPCH_x5f64_x5fSCCPCH",
	"_n_x5fHSDPA_x5fEVM_fMODEL_x5f2_x5fSCCPCH",
	"_n_x5fHSDPA_x5fEVM_fMODEL_x5f3_x5fDPCH_x5f16_x5fSCCPCH",
	"_n_x5fHSDPA_x5fEVM_fMODEL_x5f3_x5fDPCH_x5f32_x5fSCCPCH",
	"_n_x5fHSDPA_x5fEVM_fMODEL_x5f4_x5fPCPICH",
	"_n_x5fHSDPA_x5fEVM_fMODEL_x5f5_x5fHSPDSCH_x5f2_x5fDPCH_x5f6",
	"_n_x5fHSDPA_x5fEVM_fMODEL_x5f5_x5fHSPDSCH_x5f4_x5fDPCH_x5f14",
	"_n_x5fHSDPA_x5fEVM_fMODEL_x5f5_x5fHSPDSCH_x5f8_x5fDPCH_x5f30",
	"_n_x5fHSDPA_x5fEVM_fMODEL_x5f6",
	"StdForm");

create_constant_form ("_n_x5fHSDPA_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");

create_constant_form ("_n_x5fHSDPA_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");

create_form_set("_n_x5fHSDPA_x5fEVM_fMirrorSpectrumSet",
	"_n_x5fHSDPA_x5fEVM_fNO",
	"_n_x5fHSDPA_x5fEVM_fYES",
	"StdForm");

create_constant_form ("_n_x5fHSDPA_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");

create_constant_form ("_n_x5fHSDPA_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");

create_form_set("_n_x5fHSDPA_x5fEVM_fEVMIncludeIQOffsetSet",
	"_n_x5fHSDPA_x5fEVM_fNO",
	"_n_x5fHSDPA_x5fEVM_fYES",
	"StdForm");

create_constant_form ("_n_x5fHSDPA_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");

create_constant_form ("_n_x5fHSDPA_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");

create_form_set("_n_x5fHSDPA_x5fEVM_fSuppressSCHSet",
	"_n_x5fHSDPA_x5fEVM_fNO",
	"_n_x5fHSDPA_x5fEVM_fYES",
	"StdForm");

create_constant_form ("_n_x5fHSDPA_x5fEVM_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");

create_constant_form ("_n_x5fHSDPA_x5fEVM_fRMS_x5f_x5fVideo_x5f", 
	"RMS (Video)",
	0,
	"1",
	"RMS (Video)");

create_form_set("_n_x5fHSDPA_x5fEVM_fAverageTypeSet",
	"_n_x5fHSDPA_x5fEVM_fOFF",
	"_n_x5fHSDPA_x5fEVM_fRMS_x5f_x5fVideo_x5f",
	"StdForm");

create_constant_form ("_n_x5fHSDPA_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");

create_constant_form ("_n_x5fHSDPA_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");

create_form_set("_n_x5fHSDPA_x5fEVM_fDTXDetectionSet",
	"_n_x5fHSDPA_x5fEVM_fNO",
	"_n_x5fHSDPA_x5fEVM_fYES",
	"StdForm");

create_constant_form ("_n_x5fHSDPA_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");

create_constant_form ("_n_x5fHSDPA_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");

create_form_set("_n_x5fHSDPA_x5fEVM_fMultiChannelEstimatorSet",
	"_n_x5fHSDPA_x5fEVM_fNO",
	"_n_x5fHSDPA_x5fEVM_fYES",
	"StdForm");

create_constant_form ("_n_x5fHSDPA_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");

create_constant_form ("_n_x5fHSDPA_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");

create_form_set("_n_x5fHSDPA_x5fEVM_fBypassRRCFilterSet",
	"_n_x5fHSDPA_x5fEVM_fNO",
	"_n_x5fHSDPA_x5fEVM_fYES",
	"StdForm");

create_item ("_HSDPA_EVM","HSDPA EVM measurement",
	"H",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_HSDPA_EVM",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dTSDF_n_x5fHSDPA_x5fEVM_lsdfhsdpa_x5fmeasurements",
	SPComponentAnnotFmt,
	"SYM_HSDPA_EVM",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("RLoad","load resistance",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","DefaultRLoad")),
	create_parm ("RTemp","physical temperature, in degrees C, of load resistance",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		TEMPERATURE_UNIT,
		prm("StdForm","DefaultRTemp")),
	create_parm ("FCarrier","carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","1.9 GHz")),
	create_parm ("ChipRate","symbol rate",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","3840000")),
	create_parm ("AnalysisCodeLevel","specifies the channel level that Channel EVM with be calculated for",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","2")),
	create_parm ("AnalysisCodeIndex","specifies the channel index that Channel EVM with be calculated for",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("ModScheme","modulation scheme for selected AnalysisCodeLevel and AnalysisCodeIndex",
		PARM_INT,
		"_n_x5fHSDPA_x5fEVM_fModSchemeSet",
		UNITLESS_UNIT,
		prm("_n_x5fHSDPA_x5fEVM_fAutoDetect","AutoDetect")),
	create_parm ("ScrambleCode","index of scramble code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("ScrambleOffset","scramble code offset",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("ScrambleType","scramble code type",
		PARM_INT,
		"_n_x5fHSDPA_x5fEVM_fScrambleTypeSet",
		UNITLESS_UNIT,
		prm("_n_x5fHSDPA_x5fEVM_fnormal","normal")),
	create_parm ("syncModeSelection","Sync mode selection",
		PARM_INT,
		"_n_x5fHSDPA_x5fEVM_fsyncModeSelectionSet",
		UNITLESS_UNIT,
		prm("_n_x5fHSDPA_x5fEVM_fSCH","SCH")),
	create_parm ("TestModel","test model selection",
		PARM_INT,
		"_n_x5fHSDPA_x5fEVM_fTestModelSet",
		UNITLESS_UNIT,
		prm("_n_x5fHSDPA_x5fEVM_fNONE","NONE")),
	create_parm ("MirrorSpectrum","Mirror spectrum about carrier?",
		PARM_INT,
		"_n_x5fHSDPA_x5fEVM_fMirrorSpectrumSet",
		UNITLESS_UNIT,
		prm("_n_x5fHSDPA_x5fEVM_fNO","NO")),
	create_parm ("EVMIncludeIQOffset","selection of calculating EVM pre-compensating for IQ origin offset",
		PARM_INT,
		"_n_x5fHSDPA_x5fEVM_fEVMIncludeIQOffsetSet",
		UNITLESS_UNIT,
		prm("_n_x5fHSDPA_x5fEVM_fNO","NO")),
	create_parm ("SuppressSCH","suppress SCH for channel measurements",
		PARM_INT,
		"_n_x5fHSDPA_x5fEVM_fSuppressSCHSet",
		UNITLESS_UNIT,
		prm("_n_x5fHSDPA_x5fEVM_fNO","NO")),
	create_parm ("Start","start time for data recording",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","DefaultTimeStart")),
	create_parm ("AverageType","average type",
		PARM_INT,
		"_n_x5fHSDPA_x5fEVM_fAverageTypeSet",
		UNITLESS_UNIT,
		prm("_n_x5fHSDPA_x5fEVM_fOFF","OFF")),
	create_parm ("SlotsToAverage","number of slots that will be averaged if AverageType is RMS (Video)",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","15")),
	create_parm ("alpha","specify the alpha for 3GPP root raised cosine filtering when BypassRRCFilter is NO",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.22")),
	create_parm ("DTXDetection","Discontinuous Transmission channels detection",
		PARM_INT,
		"_n_x5fHSDPA_x5fEVM_fDTXDetectionSet",
		UNITLESS_UNIT,
		prm("_n_x5fHSDPA_x5fEVM_fNO","NO")),
	create_parm ("MultiChannelEstimator","When set to TRUE, channel-by-channel timing estimation and compensation",
		PARM_INT,
		"_n_x5fHSDPA_x5fEVM_fMultiChannelEstimatorSet",
		UNITLESS_UNIT,
		prm("_n_x5fHSDPA_x5fEVM_fNO","NO")),
	create_parm ("BypassRRCFilter","bypass the root raised cosine filter or not",
		PARM_INT,
		"_n_x5fHSDPA_x5fEVM_fBypassRRCFilterSet",
		UNITLESS_UNIT,
		prm("_n_x5fHSDPA_x5fEVM_fNO","NO")));


create_constant_form ("_nHSDPA_x5fEVM_fAutoDetect", 
	"AutoDetect",
	0,
	"0",
	"AutoDetect");

create_constant_form ("_nHSDPA_x5fEVM_fQPSK", 
	"QPSK",
	0,
	"1",
	"QPSK");

create_constant_form ("_nHSDPA_x5fEVM_fQAM16", 
	"QAM16",
	0,
	"2",
	"QAM16");

create_constant_form ("_nHSDPA_x5fEVM_fQAM64", 
	"QAM64",
	0,
	"3",
	"QAM64");

create_form_set("_nHSDPA_x5fEVM_fModSchemeSet",
	"_nHSDPA_x5fEVM_fAutoDetect",
	"_nHSDPA_x5fEVM_fQPSK",
	"_nHSDPA_x5fEVM_fQAM16",
	"_nHSDPA_x5fEVM_fQAM64",
	"StdForm");

create_constant_form ("_nHSDPA_x5fEVM_fnormal", 
	"normal",
	0,
	"0",
	"Normal");

create_constant_form ("_nHSDPA_x5fEVM_fright", 
	"right",
	0,
	"1",
	"Right Alternate");

create_constant_form ("_nHSDPA_x5fEVM_fleft", 
	"left",
	0,
	"2",
	"Left Alternate");

create_form_set("_nHSDPA_x5fEVM_fScrambleTypeSet",
	"_nHSDPA_x5fEVM_fnormal",
	"_nHSDPA_x5fEVM_fright",
	"_nHSDPA_x5fEVM_fleft",
	"StdForm");

create_constant_form ("_nHSDPA_x5fEVM_fCPICH", 
	"CPICH",
	0,
	"0",
	"CPICH");

create_constant_form ("_nHSDPA_x5fEVM_fSCH", 
	"SCH",
	0,
	"1",
	"SCH");

create_constant_form ("_nHSDPA_x5fEVM_fCPICH2", 
	"CPICH2",
	0,
	"2",
	"CPICH2");

create_form_set("_nHSDPA_x5fEVM_fsyncModeSelectionSet",
	"_nHSDPA_x5fEVM_fCPICH",
	"_nHSDPA_x5fEVM_fSCH",
	"_nHSDPA_x5fEVM_fCPICH2",
	"StdForm");

create_constant_form ("_nHSDPA_x5fEVM_fNONE", 
	"NONE",
	0,
	"0",
	"NONE");

create_constant_form ("_nHSDPA_x5fEVM_fMODEL_x5f1_x5fDPCH_x5f16", 
	"MODEL_1_DPCH_16",
	0,
	"1",
	"MODEL_1_DPCH_16");

create_constant_form ("_nHSDPA_x5fEVM_fMODEL_x5f1_x5fDPCH_x5f32", 
	"MODEL_1_DPCH_32",
	0,
	"2",
	"MODEL_1_DPCH_32");

create_constant_form ("_nHSDPA_x5fEVM_fMODEL_x5f1_x5fDPCH_x5f64", 
	"MODEL_1_DPCH_64",
	0,
	"3",
	"MODEL_1_DPCH_64");

create_constant_form ("_nHSDPA_x5fEVM_fMODEL_x5f2", 
	"MODEL_2",
	0,
	"4",
	"MODEL_2");

create_constant_form ("_nHSDPA_x5fEVM_fMODEL_x5f3_x5fDPCH_x5f16", 
	"MODEL_3_DPCH_16",
	0,
	"5",
	"MODEL_3_DPCH_16");

create_constant_form ("_nHSDPA_x5fEVM_fMODEL_x5f3_x5fDPCH_x5f32", 
	"MODEL_3_DPCH_32",
	0,
	"6",
	"MODEL_3_DPCH_32");

create_constant_form ("_nHSDPA_x5fEVM_fMODEL_x5f4", 
	"MODEL_4",
	0,
	"7",
	"MODEL_4");

create_constant_form ("_nHSDPA_x5fEVM_fMODEL_x5f1_x5fDPCH_x5f16_x5fSCCPCH", 
	"MODEL_1_DPCH_16_SCCPCH",
	0,
	"8",
	"MODEL_1_DPCH_16_SCCPCH");

create_constant_form ("_nHSDPA_x5fEVM_fMODEL_x5f1_x5fDPCH_x5f32_x5fSCCPCH", 
	"MODEL_1_DPCH_32_SCCPCH",
	0,
	"9",
	"MODEL_1_DPCH_32_SCCPCH");

create_constant_form ("_nHSDPA_x5fEVM_fMODEL_x5f1_x5fDPCH_x5f64_x5fSCCPCH", 
	"MODEL_1_DPCH_64_SCCPCH",
	0,
	"10",
	"MODEL_1_DPCH_64_SCCPCH");

create_constant_form ("_nHSDPA_x5fEVM_fMODEL_x5f2_x5fSCCPCH", 
	"MODEL_2_SCCPCH",
	0,
	"11",
	"MODEL_2_SCCPCH");

create_constant_form ("_nHSDPA_x5fEVM_fMODEL_x5f3_x5fDPCH_x5f16_x5fSCCPCH", 
	"MODEL_3_DPCH_16_SCCPCH",
	0,
	"12",
	"MODEL_3_DPCH_16_SCCPCH");

create_constant_form ("_nHSDPA_x5fEVM_fMODEL_x5f3_x5fDPCH_x5f32_x5fSCCPCH", 
	"MODEL_3_DPCH_32_SCCPCH",
	0,
	"13",
	"MODEL_3_DPCH_32_SCCPCH");

create_constant_form ("_nHSDPA_x5fEVM_fMODEL_x5f4_x5fPCPICH", 
	"MODEL_4_PCPICH",
	0,
	"14",
	"MODEL_4_PCPICH");

create_constant_form ("_nHSDPA_x5fEVM_fMODEL_x5f5_x5fHSPDSCH_x5f2_x5fDPCH_x5f6", 
	"MODEL_5_HSPDSCH_2_DPCH_6",
	0,
	"15",
	"MODEL_5_HSPDSCH_2_DPCH_6");

create_constant_form ("_nHSDPA_x5fEVM_fMODEL_x5f5_x5fHSPDSCH_x5f4_x5fDPCH_x5f14", 
	"MODEL_5_HSPDSCH_4_DPCH_14",
	0,
	"16",
	"MODEL_5_HSPDSCH_4_DPCH_14");

create_constant_form ("_nHSDPA_x5fEVM_fMODEL_x5f5_x5fHSPDSCH_x5f8_x5fDPCH_x5f30", 
	"MODEL_5_HSPDSCH_8_DPCH_30",
	0,
	"17",
	"MODEL_5_HSPDSCH_8_DPCH_30");

create_constant_form ("_nHSDPA_x5fEVM_fMODEL_x5f6", 
	"MODEL_6",
	0,
	"18",
	"MODEL_6");

create_form_set("_nHSDPA_x5fEVM_fTestModelSet",
	"_nHSDPA_x5fEVM_fNONE",
	"_nHSDPA_x5fEVM_fMODEL_x5f1_x5fDPCH_x5f16",
	"_nHSDPA_x5fEVM_fMODEL_x5f1_x5fDPCH_x5f32",
	"_nHSDPA_x5fEVM_fMODEL_x5f1_x5fDPCH_x5f64",
	"_nHSDPA_x5fEVM_fMODEL_x5f2",
	"_nHSDPA_x5fEVM_fMODEL_x5f3_x5fDPCH_x5f16",
	"_nHSDPA_x5fEVM_fMODEL_x5f3_x5fDPCH_x5f32",
	"_nHSDPA_x5fEVM_fMODEL_x5f4",
	"_nHSDPA_x5fEVM_fMODEL_x5f1_x5fDPCH_x5f16_x5fSCCPCH",
	"_nHSDPA_x5fEVM_fMODEL_x5f1_x5fDPCH_x5f32_x5fSCCPCH",
	"_nHSDPA_x5fEVM_fMODEL_x5f1_x5fDPCH_x5f64_x5fSCCPCH",
	"_nHSDPA_x5fEVM_fMODEL_x5f2_x5fSCCPCH",
	"_nHSDPA_x5fEVM_fMODEL_x5f3_x5fDPCH_x5f16_x5fSCCPCH",
	"_nHSDPA_x5fEVM_fMODEL_x5f3_x5fDPCH_x5f32_x5fSCCPCH",
	"_nHSDPA_x5fEVM_fMODEL_x5f4_x5fPCPICH",
	"_nHSDPA_x5fEVM_fMODEL_x5f5_x5fHSPDSCH_x5f2_x5fDPCH_x5f6",
	"_nHSDPA_x5fEVM_fMODEL_x5f5_x5fHSPDSCH_x5f4_x5fDPCH_x5f14",
	"_nHSDPA_x5fEVM_fMODEL_x5f5_x5fHSPDSCH_x5f8_x5fDPCH_x5f30",
	"_nHSDPA_x5fEVM_fMODEL_x5f6",
	"StdForm");

create_constant_form ("_nHSDPA_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");

create_constant_form ("_nHSDPA_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");

create_form_set("_nHSDPA_x5fEVM_fMirrorSpectrumSet",
	"_nHSDPA_x5fEVM_fNO",
	"_nHSDPA_x5fEVM_fYES",
	"StdForm");

create_constant_form ("_nHSDPA_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");

create_constant_form ("_nHSDPA_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");

create_form_set("_nHSDPA_x5fEVM_fEVMIncludeIQOffsetSet",
	"_nHSDPA_x5fEVM_fNO",
	"_nHSDPA_x5fEVM_fYES",
	"StdForm");

create_constant_form ("_nHSDPA_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");

create_constant_form ("_nHSDPA_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");

create_form_set("_nHSDPA_x5fEVM_fSuppressSCHSet",
	"_nHSDPA_x5fEVM_fNO",
	"_nHSDPA_x5fEVM_fYES",
	"StdForm");

create_constant_form ("_nHSDPA_x5fEVM_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");

create_constant_form ("_nHSDPA_x5fEVM_fRMS_x5f_x5fVideo_x5f", 
	"RMS (Video)",
	0,
	"1",
	"RMS (Video)");

create_form_set("_nHSDPA_x5fEVM_fAverageTypeSet",
	"_nHSDPA_x5fEVM_fOFF",
	"_nHSDPA_x5fEVM_fRMS_x5f_x5fVideo_x5f",
	"StdForm");

create_constant_form ("_nHSDPA_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");

create_constant_form ("_nHSDPA_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");

create_form_set("_nHSDPA_x5fEVM_fDTXDetectionSet",
	"_nHSDPA_x5fEVM_fNO",
	"_nHSDPA_x5fEVM_fYES",
	"StdForm");

create_constant_form ("_nHSDPA_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");

create_constant_form ("_nHSDPA_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");

create_form_set("_nHSDPA_x5fEVM_fMultiChannelEstimatorSet",
	"_nHSDPA_x5fEVM_fNO",
	"_nHSDPA_x5fEVM_fYES",
	"StdForm");

create_constant_form ("_nHSDPA_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");

create_constant_form ("_nHSDPA_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");

create_form_set("_nHSDPA_x5fEVM_fBypassRRCFilterSet",
	"_nHSDPA_x5fEVM_fNO",
	"_nHSDPA_x5fEVM_fYES",
	"StdForm");

create_item ("HSDPA_EVM","HSDPA EVM measurement",
	"H",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_HSDPA_EVM",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"HSDPA_EVM",
	SPDesignAnnotFmt,
	"SYM_HSDPA_EVM",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("RLoad","load resistance",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","DefaultRLoad")),
	create_parm ("RTemp","physical temperature, in degrees C, of load resistance",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		TEMPERATURE_UNIT,
		prm("StdForm","DefaultRTemp")),
	create_parm ("FCarrier","carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","1.9 GHz")),
	create_parm ("ChipRate","symbol rate",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","3840000")),
	create_parm ("AnalysisCodeLevel","specifies the channel level that Channel EVM with be calculated for",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","2")),
	create_parm ("AnalysisCodeIndex","specifies the channel index that Channel EVM with be calculated for",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("ModScheme","modulation scheme for selected AnalysisCodeLevel and AnalysisCodeIndex",
		PARM_INT,
		"_nHSDPA_x5fEVM_fModSchemeSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fEVM_fAutoDetect","AutoDetect")),
	create_parm ("ScrambleCode","index of scramble code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("ScrambleOffset","scramble code offset",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("ScrambleType","scramble code type",
		PARM_INT,
		"_nHSDPA_x5fEVM_fScrambleTypeSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fEVM_fnormal","normal")),
	create_parm ("syncModeSelection","Sync mode selection",
		PARM_INT,
		"_nHSDPA_x5fEVM_fsyncModeSelectionSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fEVM_fSCH","SCH")),
	create_parm ("TestModel","test model selection",
		PARM_INT,
		"_nHSDPA_x5fEVM_fTestModelSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fEVM_fNONE","NONE")),
	create_parm ("MirrorSpectrum","Mirror spectrum about carrier?",
		PARM_INT,
		"_nHSDPA_x5fEVM_fMirrorSpectrumSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fEVM_fNO","NO")),
	create_parm ("EVMIncludeIQOffset","selection of calculating EVM pre-compensating for IQ origin offset",
		PARM_INT,
		"_nHSDPA_x5fEVM_fEVMIncludeIQOffsetSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fEVM_fNO","NO")),
	create_parm ("SuppressSCH","suppress SCH for channel measurements",
		PARM_INT,
		"_nHSDPA_x5fEVM_fSuppressSCHSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fEVM_fNO","NO")),
	create_parm ("Start","start time for data recording",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","DefaultTimeStart")),
	create_parm ("AverageType","average type",
		PARM_INT,
		"_nHSDPA_x5fEVM_fAverageTypeSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fEVM_fOFF","OFF")),
	create_parm ("SlotsToAverage","number of slots that will be averaged if AverageType is RMS (Video)",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","15")),
	create_parm ("alpha","specify the alpha for 3GPP root raised cosine filtering when BypassRRCFilter is NO",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.22")),
	create_parm ("DTXDetection","Discontinuous Transmission channels detection",
		PARM_INT,
		"_nHSDPA_x5fEVM_fDTXDetectionSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fEVM_fNO","NO")),
	create_parm ("MultiChannelEstimator","When set to TRUE, channel-by-channel timing estimation and compensation",
		PARM_INT,
		"_nHSDPA_x5fEVM_fMultiChannelEstimatorSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fEVM_fNO","NO")),
	create_parm ("BypassRRCFilter","bypass the root raised cosine filter or not",
		PARM_INT,
		"_nHSDPA_x5fEVM_fBypassRRCFilterSet",
		UNITLESS_UNIT,
		prm("_nHSDPA_x5fEVM_fNO","NO")));
