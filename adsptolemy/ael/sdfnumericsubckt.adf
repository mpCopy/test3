set_design_type( sigproc_net );

create_item ("WiMax_UL_Info","WiMax UL Test Information Box",
	"W",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_WiMax_UL_Info",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"WiMax_UL_Info",
	SPDesignAnnotFmt,
	"SYM_DSN_WiMax_UL_Info",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);


create_item ("WiMax_DL_Info","WiMax DL Test information Box",
	"W",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_WiMax_DL_Info",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"WiMax_DL_Info",
	SPDesignAnnotFmt,
	"SYM_DSN_WiMax_DL_Info",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);


create_item ("RF_AGC_Info","RF AGC information",
	"R",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_RF_AGC_Info",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"RF_AGC_Info",
	SPDesignAnnotFmt,
	"SYM_DSN_RF_AGC_Info",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);


create_item ("RF_PLL_Info","RF PLL information",
	"R",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_RF_PLL_Info",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"RF_PLL_Info",
	SPDesignAnnotFmt,
	"SYM_DSN_RF_PLL_Info",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);


create_item ("DelayEstimator","Delay Estimate",
	"D",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_DelayEstimator",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"DelayEstimator",
	SPDesignAnnotFmt,
	"SYM_DSN_DelayEstimator",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("MaxSampleDelay","Maximum delay estimate samples",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","100")));


create_item ("XmitSpread","Spread Spectrum Transmitter",
	"X",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_XmitSpread",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"XmitSpread",
	SPDesignAnnotFmt,
	"SYM_DSN_XmitSpread",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PulseDuration","number of times to repeat each transmitted bit",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));


create_item ("TelephoneChannel","Telephone Channel Distortion Model",
	"T",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_TelephoneChannel",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"TelephoneChannel",
	SPDesignAnnotFmt,
	"SYM_DSN_TelephoneChannel",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("LinearDistortionTaps","taps values of the FIR filter that models linear distortion",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"1.0\"")),
	create_parm ("Noise","additive white Gaussian noise distortion gain",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("PhaseJitterFrequencyHz","frequency of the phase jitter distortion to add to signal, in Hertz",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("PhaseJitterAmplitudeDeg","phase jitter peak amplitude, in degrees",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("FrequencyOffsetHz","frequency offset distortion to add to the signal, in Hertz",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("SecondHarmonic","proportion of the second harmonic of the input that is added to the original signal",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("ThirdHarmonic","proportion of the third harmonic of the input that is added to the original signal",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")));


create_item ("Spread","Spread Spectrum Modulator",
	"S",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_Spread",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"Spread",
	SPDesignAnnotFmt,
	"SYM_DSN_Spread",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);


create_item ("RecSpread","Spread Spectrum Receiver",
	"R",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_RecSpread",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"RecSpread",
	SPDesignAnnotFmt,
	"SYM_DSN_RecSpread",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PulseDuration","number of times to repeat each transmitted sample",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));


create_constant_form ("_nRaisedCosineCx_fNO", 
	"NO",
	0,
	"0",
	"NO");

create_constant_form ("_nRaisedCosineCx_fYES", 
	"YES",
	0,
	"1",
	"YES");

create_form_set("_nRaisedCosineCx_fSquareRootSet",
	"_nRaisedCosineCx_fNO",
	"_nRaisedCosineCx_fYES",
	"StdForm");

create_item ("RaisedCosineCx","Complex Raised-Cosine Filter",
	"R",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_RaisedCosineCx",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"RaisedCosineCx",
	SPDesignAnnotFmt,
	"SYM_DSN_RaisedCosineCx",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Decimation","decimation ratio",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("DecimationPhase","decimation phase",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("Interpolation","interpolation ratio",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")),
	create_parm ("Length","number of taps",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","64")),
	create_parm ("SymbolInterval","distance from center to first zero crossing",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")),
	create_parm ("ExcessBW","excess bandwidth, between 0 and 1",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1.0")),
	create_parm ("SquareRoot","square root raised-cosine pulse",
		PARM_INT,
		"_nRaisedCosineCx_fSquareRootSet",
		UNITLESS_UNIT,
		prm("_nRaisedCosineCx_fNO","NO")));


create_item ("QAM4Slicer","4-State Quadrature Amplitude Modulator Slicer",
	"Q",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_QAM4Slicer",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"QAM4Slicer",
	SPDesignAnnotFmt,
	"SYM_DSN_QAM4Slicer",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);


create_item ("QAM4","4-State Quadrature Amplitude Modulator",
	"Q",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_QAM4",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"QAM4",
	SPDesignAnnotFmt,
	"SYM_DSN_QAM4",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);


create_item ("QAM64Slicer","64-State Quadrature Amplitude Modulator Slicer",
	"Q",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_QAM64Slicer",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"QAM64Slicer",
	SPDesignAnnotFmt,
	"SYM_DSN_QAM64Slicer",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);


create_item ("QAM64Decode","64-State Quadrature Amplitude Modulator Decoder",
	"Q",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_QAM64Decode",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"QAM64Decode",
	SPDesignAnnotFmt,
	"SYM_DSN_QAM64Decode",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);


create_item ("QAM64","64-State Quadrature Amplitude Modulator",
	"Q",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_QAM64",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"QAM64",
	SPDesignAnnotFmt,
	"SYM_DSN_QAM64",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);


create_item ("QAM16Slicer","16-State Quadrature Amplitude Modulator Slicer",
	"Q",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_QAM16Slicer",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"QAM16Slicer",
	SPDesignAnnotFmt,
	"SYM_DSN_QAM16Slicer",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);


create_item ("QAM16Decode","16-State Quadrature Amplitude Modulator Decoder",
	"Q",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_QAM16Decode",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"QAM16Decode",
	SPDesignAnnotFmt,
	"SYM_DSN_QAM16Decode",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);


create_item ("QAM16","16-State Quadrature Amplitude Modulator",
	"Q",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_QAM16",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"QAM16",
	SPDesignAnnotFmt,
	"SYM_DSN_QAM16",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);


create_item ("PhaseShift","Phase Shift Distortion",
	"P",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_PhaseShift",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"PhaseShift",
	SPDesignAnnotFmt,
	"SYM_DSN_PhaseShift",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("HilbertFilterLength","Hilbert filter length",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","64")));


create_item ("PSK2Xmit","Binary Phase-Shift Keying Modulator",
	"P",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_PSK2Xmit",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"PSK2Xmit",
	SPDesignAnnotFmt,
	"SYM_DSN_PSK2Xmit",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("CarrierFrequency","cosine carrier wave frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","2000")),
	create_parm ("SamplingRate","carrier wave sampling rate",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8000")));


create_item ("PSK2Rec","Binary Phase-Shift Keying Demodulator",
	"P",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_PSK2Rec",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"PSK2Rec",
	SPDesignAnnotFmt,
	"SYM_DSN_PSK2Rec",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("CarrierFrequency","cosine carier wave frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","2000")),
	create_parm ("SamplingRate","carrier wave sampling rate",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8000")));


create_item ("PCM_BitDecoder","Pulse-Code Modulation Decoder",
	"P",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_PCM_BitDecoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"PCM_BitDecoder",
	SPDesignAnnotFmt,
	"SYM_DSN_PCM_BitDecoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);


create_item ("PCM_BitCoder","Pulse-Code Modulation Encoder",
	"P",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_PCM_BitCoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"PCM_BitCoder",
	SPDesignAnnotFmt,
	"SYM_DSN_PCM_BitCoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);


create_item ("PAM4Xmit","4-Level Pulse Amplitude Modulation Transmitter",
	"P",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_PAM4Xmit",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"PAM4Xmit",
	SPDesignAnnotFmt,
	"SYM_DSN_PAM4Xmit",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("ExcessBW","excess bandwidth of square root raised-cosine pulses used to transmit data",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1.0")),
	create_parm ("FilterLength","length of square root raised-cosine pulses used to transmit data",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","32")));


create_item ("PAM4Rec","4-Level Pulse Amplitude Modulation Input Signal Receiver",
	"P",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_PAM4Rec",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"PAM4Rec",
	SPDesignAnnotFmt,
	"SYM_DSN_PAM4Rec",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);


create_item ("PAM2Xmit","2-Level Pulse Amplitude Modulation Transmitter",
	"P",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_PAM2Xmit",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"PAM2Xmit",
	SPDesignAnnotFmt,
	"SYM_DSN_PAM2Xmit",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("ExcessBW","excess bandwidth of the square root raised-cosine pulses used to transmit data",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1.0")),
	create_parm ("FilterLength","length of square root raised-cosine pulses used to transmit data",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","32")));


create_item ("PAM2Rec","2-Level Pulse Amplitude Modulation Input Signal Receiver",
	"P",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_PAM2Rec",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"PAM2Rec",
	SPDesignAnnotFmt,
	"SYM_DSN_PAM2Rec",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);


create_item ("NonlinearDistortion","Second and Third Harmonic Distortion",
	"N",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_NonlinearDistortion",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"NonlinearDistortion",
	SPDesignAnnotFmt,
	"SYM_DSN_NonlinearDistortion",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SecondHarmonic","proportion of second harmonic of input to add to original signal",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("ThirdHarmonic","proportion of third harmonic of input to add to original signal",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")));


create_item ("NoiseChannel","Channel Modeling with Additive White Gaussian Noise",
	"N",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_NoiseChannel",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"NoiseChannel",
	SPDesignAnnotFmt,
	"SYM_DSN_NoiseChannel",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("NoiseVariance","maximum settable value for noise variance",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1.0")));


create_item ("NRZToLogic","NRZ to Logic Format",
	"N",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_NRZToLogic",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"NRZToLogic",
	SPDesignAnnotFmt,
	"SYM_DSN_NRZToLogic",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Amplitude","Amplitude",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1.0")));


create_item ("LogicToNRZ","Logic to NRZ Format",
	"L",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_LogicToNRZ",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"LogicToNRZ",
	SPDesignAnnotFmt,
	"SYM_DSN_LogicToNRZ",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Amplitude","amplitude of NRZ signal",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1.0")));


create_item ("HilbertSplit","Real to Analytic Signal Converter",
	"H",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_HilbertSplit",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"HilbertSplit",
	SPDesignAnnotFmt,
	"SYM_DSN_HilbertSplit",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Delay","processing delay of this block",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","32")));


create_item ("FreqPhase","Frequency Offset or Phase Jitter Sampler",
	"F",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_FreqPhase",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"FreqPhase",
	SPDesignAnnotFmt,
	"SYM_DSN_FreqPhase",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SampleRate","input signal sample rate",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","2 * PI")),
	create_parm ("PhaseJitterFrequencyHz","frequency of phase jitter distortion to add to signal",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("FrequencyOffsetHz","frequency offset distorion to add to signal",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("PhaseJitterAmplitudeDeg","phase jitter peak amplitude, in degrees",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")));


create_constant_form ("_nEnableUDSample_fNO", 
	"NO",
	0,
	"0",
	"NO");

create_constant_form ("_nEnableUDSample_fYES", 
	"YES",
	0,
	"1",
	"YES");

create_form_set("_nEnableUDSample_fEnableSet",
	"_nEnableUDSample_fNO",
	"_nEnableUDSample_fYES",
	"StdForm");

create_item ("EnableUDSample","Data Up/Down Sampler",
	"E",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_EnableUDSample",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"EnableUDSample",
	SPDesignAnnotFmt,
	"SYM_DSN_EnableUDSample",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Enable","enable the up/down sampling",
		PARM_INT,
		"_nEnableUDSample_fEnableSet",
		UNITLESS_UNIT,
		prm("_nEnableUDSample_fNO","NO")),
	create_parm ("USample","upsample ratio",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("DSample","downsample ratio",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));


create_item ("DeSpreader","Frame Synchronized Direct-Sequence Spread Spectrum Demodulator",
	"D",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_DeSpreader",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"DeSpreader",
	SPDesignAnnotFmt,
	"SYM_DSN_DeSpreader",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);


create_item ("BlockPredictor","Block Linear Predictor",
	"B",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_BlockPredictor",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"BlockPredictor",
	SPDesignAnnotFmt,
	"SYM_DSN_BlockPredictor",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Order","order of the regression (also number of reflection coefficients to generate)",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("BlockSize","number of input that use each reflection coefficient set",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","64")));


create_constant_form ("_nBits_fRandom", 
	"Random",
	0,
	"0",
	"Random");

create_constant_form ("_nBits_fPrbs", 
	"Prbs",
	0,
	"1",
	"Prbs");

create_form_set("_nBits_fTypeSet",
	"_nBits_fRandom",
	"_nBits_fPrbs",
	"StdForm");

create_item ("Bits","Binary random bits output",
	"B",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_Bits",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"Bits",
	SPDesignAnnotFmt,
	"SYM_DSN_Bits",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Type","type of bit sequence, random or pseudo random",
		PARM_INT,
		"_nBits_fTypeSet",
		UNITLESS_UNIT,
		prm("_nBits_fRandom","Random")),
	create_parm ("ProbOfZero","probability of bit value being zero (used when Type=Random)",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.5")),
	create_parm ("LFSR_Length","Linear Feedback Shift Register length (used when Type=Prbs)",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","12")),
	create_parm ("LFSR_InitState","Linear Feedback Shift Register initial state (used when Type=Prbs)",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));


create_item ("AWGN_Channel","Additive White Gaussian Noise Channel",
	"A",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_AWGN_Channel",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"AWGN_Channel",
	SPDesignAnnotFmt,
	"SYM_DSN_AWGN_Channel",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("FwdTaps","forward FIR filter tap to model linear distortion",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"1\"")),
	create_parm ("FdbkTaps","feedback FIR filter tap to model linear distortion",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"0\"")),
	create_parm ("NoisePwr","variance of the additive white Gaussian noise",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.5")));


create_item ("ADPCM_ToBits","4-Bit Adaptive Differential Pulse-Code Modulation Error Signal Decoder",
	"A",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_ADPCM_ToBits",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"ADPCM_ToBits",
	SPDesignAnnotFmt,
	"SYM_DSN_ADPCM_ToBits",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Range","range of PCM signal level",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","800")));


create_item ("ADPCM_FromBits","Adaptive Differential Pulse-Code Modulation Error Signal Decoder",
	"A",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_ADPCM_FromBits",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"ADPCM_FromBits",
	SPDesignAnnotFmt,
	"SYM_DSN_ADPCM_FromBits",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Range","range of PCM signal level",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","800")));


create_item ("ADPCM_Decoder","Adaptive Differential Pulse-Code Modulation Decoder",
	"A",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_ADPCM_Decoder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"ADPCM_Decoder",
	SPDesignAnnotFmt,
	"SYM_DSN_ADPCM_Decoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("StepSize","step size of adaptive LMS prediction filter",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1.0e-12")),
	create_parm ("InitialLMS_Taps","initial taps of adaptive LMS prediction filter",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"1.0 0.0 [15]\"")));


create_item ("ADPCM_Coder","Adaptive Differential Pulse-Code Modulation Encoder",
	"A",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_ADPCM_Coder",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"ADPCM_Coder",
	SPDesignAnnotFmt,
	"SYM_DSN_ADPCM_Coder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("StepSize","Step size of adaptive LMS prediction filter",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1.0e-12")),
	create_parm ("InitialLMS_Taps","initial taps of adaptive LMS prediction filter",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"1.0 0.0 [15]\"")),
	create_parm ("Range","range of PCM signal level",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","800")));


create_item ("LogicXNOR2","2-Input Logical XNOR Function",
	"L",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_LogicXNOR2",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"LogicXNOR2",
	SPDesignAnnotFmt,
	"SYM_DSN_LogicXNOR2",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);


create_item ("LogicXOR2","2-Input Logical XOR Function",
	"L",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_LogicXOR2",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"LogicXOR2",
	SPDesignAnnotFmt,
	"SYM_DSN_LogicXOR2",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);


create_item ("LogicNOR2","2-Input Logical NOR Function",
	"L",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_LogicNOR2",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"LogicNOR2",
	SPDesignAnnotFmt,
	"SYM_DSN_LogicNOR2",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);


create_item ("LogicOR2","2-Input Logical OR Function",
	"L",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_LogicOR2",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"LogicOR2",
	SPDesignAnnotFmt,
	"SYM_DSN_LogicOR2",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);


create_item ("LogicNAND2","2-Input Logical NAND Function",
	"L",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_LogicNAND2",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"LogicNAND2",
	SPDesignAnnotFmt,
	"SYM_DSN_LogicNAND2",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);


create_item ("LogicAND2","2-Input Logical AND Function",
	"L",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_LogicAND2",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"LogicAND2",
	SPDesignAnnotFmt,
	"SYM_DSN_LogicAND2",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);


create_item ("Add2","2-Input Adder",
	"A",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_Add2",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"Add2",
	SPDesignAnnotFmt,
	"SYM_DSN_Add2",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);


create_item ("AddCx2","2-Input Complex Adder",
	"A",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_AddCx2",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"AddCx2",
	SPDesignAnnotFmt,
	"SYM_DSN_AddCx2",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);


create_item ("AddInt2","2-Input Integer Adder",
	"A",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_AddInt2",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"AddInt2",
	SPDesignAnnotFmt,
	"SYM_DSN_AddInt2",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);


create_constant_form ("_nAddFix2_fwrapped", 
	"wrapped",
	0,
	"0",
	"wrapped");

create_constant_form ("_nAddFix2_fsaturate", 
	"saturate",
	0,
	"1",
	"saturate");

create_constant_form ("_nAddFix2_fzero_x5fsaturate", 
	"zero saturate",
	0,
	"2",
	"zero saturate");

create_constant_form ("_nAddFix2_fwarning", 
	"warning",
	0,
	"3",
	"warning");

create_form_set("_nAddFix2_fOverflowHandlerSet",
	"_nAddFix2_fwrapped",
	"_nAddFix2_fsaturate",
	"_nAddFix2_fzero_x5fsaturate",
	"_nAddFix2_fwarning",
	"StdForm");

create_constant_form ("_nAddFix2_fDONT_x5fREPORT", 
	"DONT REPORT",
	0,
	"0",
	"DONT REPORT");

create_constant_form ("_nAddFix2_fREPORT", 
	"REPORT",
	0,
	"1",
	"REPORT");

create_form_set("_nAddFix2_fReportOverflowSet",
	"_nAddFix2_fDONT_x5fREPORT",
	"_nAddFix2_fREPORT",
	"StdForm");

create_constant_form ("_nAddFix2_fTRUNCATE", 
	"TRUNCATE",
	0,
	"0",
	"TRUNCATE");

create_constant_form ("_nAddFix2_fROUND", 
	"ROUND",
	0,
	"1",
	"ROUND");

create_form_set("_nAddFix2_fRoundFixSet",
	"_nAddFix2_fTRUNCATE",
	"_nAddFix2_fROUND",
	"StdForm");

create_constant_form ("_nAddFix2_fNO", 
	"NO",
	0,
	"0",
	"NO");

create_constant_form ("_nAddFix2_fYES", 
	"YES",
	0,
	"1",
	"YES");

create_form_set("_nAddFix2_fUseArrivingPrecisionSet",
	"_nAddFix2_fNO",
	"_nAddFix2_fYES",
	"StdForm");

create_item ("AddFix2","2-Input Fixed-Point Adder",
	"A",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_AddFix2",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"AddFix2",
	SPDesignAnnotFmt,
	"SYM_DSN_AddFix2",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("OverflowHandler","output overflow characteristic",
		PARM_INT,
		"_nAddFix2_fOverflowHandlerSet",
		UNITLESS_UNIT,
		prm("_nAddFix2_fwrapped","wrapped")),
	create_parm ("ReportOverflow","simulation overflow error report",
		PARM_INT,
		"_nAddFix2_fReportOverflowSet",
		UNITLESS_UNIT,
		prm("_nAddFix2_fREPORT","REPORT")),
	create_parm ("RoundFix","fixed-point computations, assignments, and data type conversions",
		PARM_INT,
		"_nAddFix2_fRoundFixSet",
		UNITLESS_UNIT,
		prm("_nAddFix2_fTRUNCATE","TRUNCATE")),
	create_parm ("UseArrivingPrecision","use precision of arriving data",
		PARM_INT,
		"_nAddFix2_fUseArrivingPrecisionSet",
		UNITLESS_UNIT,
		prm("_nAddFix2_fNO","NO")),
	create_parm ("InputPrecision","precision of input(used only if UseArrivingPrecision is set to NO)",
		PARM_PRECISION,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"2.14\"")),
	create_parm ("OutputPrecision","precision of output accumulation",
		PARM_PRECISION,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"2.14\"")));


create_constant_form ("_nActivatePath2_fNO", 
	"NO",
	0,
	"0",
	"NO");

create_constant_form ("_nActivatePath2_fYES", 
	"YES",
	0,
	"1",
	"YES");

create_form_set("_nActivatePath2_fActivateSet",
	"_nActivatePath2_fNO",
	"_nActivatePath2_fYES",
	"StdForm");

create_item ("ActivatePath2","Activate or remove succeeding blocks",
	"A",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_ActivatePath2",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"ActivatePath2",
	SPDesignAnnotFmt,
	"SYM_DSN_ActivatePath2",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Activate","'YES' to activate succeeding blocks",
		PARM_INT,
		"_nActivatePath2_fActivateSet",
		UNITLESS_UNIT,
		prm("_nActivatePath2_fYES","YES")));


create_constant_form ("_nActivatePath_fNO", 
	"NO",
	0,
	"0",
	"NO");

create_constant_form ("_nActivatePath_fYES", 
	"YES",
	0,
	"1",
	"YES");

create_form_set("_nActivatePath_fActivateSet",
	"_nActivatePath_fNO",
	"_nActivatePath_fYES",
	"StdForm");

create_item ("ActivatePath","Activate or remove succeeding blocks",
	"A",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_ActivatePath",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"ActivatePath",
	SPDesignAnnotFmt,
	"SYM_DSN_ActivatePath",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Activate","'YES' to activate succeeding blocks",
		PARM_INT,
		"_nActivatePath_fActivateSet",
		UNITLESS_UNIT,
		prm("_nActivatePath_fYES","YES")));
