set_design_type( sigproc_net );

create_constant_form ("_nTrigCx_fSin", 
	"Sin",
	0,
	"0",
	"Sin");

create_constant_form ("_nTrigCx_fCos", 
	"Cos",
	0,
	"1",
	"Cos");

create_constant_form ("_nTrigCx_fTan", 
	"Tan",
	0,
	"2",
	"Tan");

create_constant_form ("_nTrigCx_fCot", 
	"Cot",
	0,
	"3",
	"Cot");

create_constant_form ("_nTrigCx_fAsin", 
	"Asin",
	0,
	"4",
	"Asin");

create_constant_form ("_nTrigCx_fAcos", 
	"Acos",
	0,
	"5",
	"Acos");

create_constant_form ("_nTrigCx_fAtan", 
	"Atan",
	0,
	"6",
	"Atan");

create_constant_form ("_nTrigCx_fAcot", 
	"Acot",
	0,
	"7",
	"Acot");

create_constant_form ("_nTrigCx_fSinh", 
	"Sinh",
	0,
	"8",
	"Sinh");

create_constant_form ("_nTrigCx_fCosh", 
	"Cosh",
	0,
	"9",
	"Cosh");

create_constant_form ("_nTrigCx_fTanh", 
	"Tanh",
	0,
	"10",
	"Tanh");

create_constant_form ("_nTrigCx_fCoth", 
	"Coth",
	0,
	"11",
	"Coth");

create_constant_form ("_nTrigCx_fAsinh", 
	"Asinh",
	0,
	"12",
	"Asinh");

create_constant_form ("_nTrigCx_fAcosh", 
	"Acosh",
	0,
	"13",
	"Acosh");

create_constant_form ("_nTrigCx_fAtanh", 
	"Atanh",
	0,
	"14",
	"Atanh");

create_constant_form ("_nTrigCx_fAcoth", 
	"Acoth",
	0,
	"15",
	"Acoth");

create_form_set("_nTrigCx_fTypeSet",
	"_nTrigCx_fSin",
	"_nTrigCx_fCos",
	"_nTrigCx_fTan",
	"_nTrigCx_fCot",
	"_nTrigCx_fAsin",
	"_nTrigCx_fAcos",
	"_nTrigCx_fAtan",
	"_nTrigCx_fAcot",
	"_nTrigCx_fSinh",
	"_nTrigCx_fCosh",
	"_nTrigCx_fTanh",
	"_nTrigCx_fCoth",
	"_nTrigCx_fAsinh",
	"_nTrigCx_fAcosh",
	"_nTrigCx_fAtanh",
	"_nTrigCx_fAcoth",
	"StdForm");

create_item ("TrigCx","Complex trigonometric function",
	"T",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_TrigCx",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nTrigCx_lsdfomnistars",
	SPComponentAnnotFmt,
	"SYM_TrigCx",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Type","function",
		PARM_INT,
		"_nTrigCx_fTypeSet",
		UNITLESS_UNIT,
		prm("_nTrigCx_fSin","Sin")));


create_constant_form ("_nTrig_fSin", 
	"Sin",
	0,
	"0",
	"Sin");

create_constant_form ("_nTrig_fCos", 
	"Cos",
	0,
	"1",
	"Cos");

create_constant_form ("_nTrig_fTan", 
	"Tan",
	0,
	"2",
	"Tan");

create_constant_form ("_nTrig_fCot", 
	"Cot",
	0,
	"3",
	"Cot");

create_constant_form ("_nTrig_fAsin", 
	"Asin",
	0,
	"4",
	"Asin");

create_constant_form ("_nTrig_fAcos", 
	"Acos",
	0,
	"5",
	"Acos");

create_constant_form ("_nTrig_fAtan", 
	"Atan",
	0,
	"6",
	"Atan");

create_constant_form ("_nTrig_fAcot", 
	"Acot",
	0,
	"7",
	"Acot");

create_constant_form ("_nTrig_fSinh", 
	"Sinh",
	0,
	"8",
	"Sinh");

create_constant_form ("_nTrig_fCosh", 
	"Cosh",
	0,
	"9",
	"Cosh");

create_constant_form ("_nTrig_fTanh", 
	"Tanh",
	0,
	"10",
	"Tanh");

create_constant_form ("_nTrig_fCoth", 
	"Coth",
	0,
	"11",
	"Coth");

create_constant_form ("_nTrig_fAsinh", 
	"Asinh",
	0,
	"12",
	"Asinh");

create_constant_form ("_nTrig_fAcosh", 
	"Acosh",
	0,
	"13",
	"Acosh");

create_constant_form ("_nTrig_fAtanh", 
	"Atanh",
	0,
	"14",
	"Atanh");

create_constant_form ("_nTrig_fAcoth", 
	"Acoth",
	0,
	"15",
	"Acoth");

create_form_set("_nTrig_fTypeSet",
	"_nTrig_fSin",
	"_nTrig_fCos",
	"_nTrig_fTan",
	"_nTrig_fCot",
	"_nTrig_fAsin",
	"_nTrig_fAcos",
	"_nTrig_fAtan",
	"_nTrig_fAcot",
	"_nTrig_fSinh",
	"_nTrig_fCosh",
	"_nTrig_fTanh",
	"_nTrig_fCoth",
	"_nTrig_fAsinh",
	"_nTrig_fAcosh",
	"_nTrig_fAtanh",
	"_nTrig_fAcoth",
	"StdForm");

create_item ("Trig","Trigonometric function",
	"T",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_Trig",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nTrig_lsdfomnistars",
	SPComponentAnnotFmt,
	"SYM_Trig",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Type","function",
		PARM_INT,
		"_nTrig_fTypeSet",
		UNITLESS_UNIT,
		prm("_nTrig_fSin","Sin")));


create_item ("Toggle","Data Toggle with Clock Input",
	"T",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_Toggle",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nToggle_lsdfomnistars",
	SPComponentAnnotFmt,
	"SYM_Toggle",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);


create_item ("SchmittTrig","Schmitt Trigger",
	"S",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_SchmittTrig",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nSchmittTrig_lsdfomnistars",
	SPComponentAnnotFmt,
	"SYM_SchmittTrig",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("ILow","lower input trigger value",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-1")),
	create_parm ("IHigh","higher input trigger value",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("OLow","lower output trigger value",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-1")),
	create_parm ("OHigh","higher output trigger value",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));


create_item ("Quantizer2D","2-dimensional quantizer",
	"Q",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_Quantizer2D",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nQuantizer2D_lsdfomnistars",
	SPComponentAnnotFmt,
	"SYM_Quantizer2D",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("VxMax","maximum real output level",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1.0")),
	create_parm ("VxMin","minimum real output level",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-1.0")),
	create_parm ("Nx","number of real output levels",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")),
	create_parm ("VyMax","maximum imaginary output level",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1.0")),
	create_parm ("VyMin","minimum imaginary output level",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-1.0")),
	create_parm ("Ny","number of imaginary output levels",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")),
	create_parm ("QuantList","user-defined quantization points",
		PARM_COMPLEXARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")));


create_constant_form ("_nMathCx_fAbs", 
	"Abs",
	0,
	"0",
	"Abs");

create_constant_form ("_nMathCx_fCeil", 
	"Ceil",
	0,
	"1",
	"Ceil");

create_constant_form ("_nMathCx_fExp", 
	"Exp",
	0,
	"2",
	"Exp");

create_constant_form ("_nMathCx_fFloor", 
	"Floor",
	0,
	"3",
	"Floor");

create_constant_form ("_nMathCx_fLn", 
	"Ln",
	0,
	"4",
	"Ln");

create_constant_form ("_nMathCx_fLog10", 
	"Log10",
	0,
	"5",
	"Log10");

create_constant_form ("_nMathCx_fPow10", 
	"Pow10",
	0,
	"6",
	"Pow10");

create_constant_form ("_nMathCx_fRecip", 
	"Recip",
	0,
	"7",
	"Recip");

create_constant_form ("_nMathCx_fRound", 
	"Round",
	0,
	"8",
	"Round");

create_constant_form ("_nMathCx_fSqr", 
	"Sqr",
	0,
	"9",
	"Sqr");

create_constant_form ("_nMathCx_fSqrt", 
	"Sqrt",
	0,
	"10",
	"Sqrt");

create_constant_form ("_nMathCx_fConj", 
	"Conj",
	0,
	"11",
	"Conj");

create_form_set("_nMathCx_fTypeSet",
	"_nMathCx_fAbs",
	"_nMathCx_fCeil",
	"_nMathCx_fExp",
	"_nMathCx_fFloor",
	"_nMathCx_fLn",
	"_nMathCx_fLog10",
	"_nMathCx_fPow10",
	"_nMathCx_fRecip",
	"_nMathCx_fRound",
	"_nMathCx_fSqr",
	"_nMathCx_fSqrt",
	"_nMathCx_fConj",
	"StdForm");

create_item ("MathCx","Complex Math Function",
	"M",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_MathCx",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nMathCx_lsdfomnistars",
	SPComponentAnnotFmt,
	"SYM_MathCx",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Type","mathematical function",
		PARM_INT,
		"_nMathCx_fTypeSet",
		UNITLESS_UNIT,
		prm("_nMathCx_fAbs","Abs")));


create_constant_form ("_nMath_fAbs", 
	"Abs",
	0,
	"0",
	"Abs");

create_constant_form ("_nMath_fCeil", 
	"Ceil",
	0,
	"1",
	"Ceil");

create_constant_form ("_nMath_fExp", 
	"Exp",
	0,
	"2",
	"Exp");

create_constant_form ("_nMath_fFloor", 
	"Floor",
	0,
	"3",
	"Floor");

create_constant_form ("_nMath_fLn", 
	"Ln",
	0,
	"4",
	"Ln");

create_constant_form ("_nMath_fLog10", 
	"Log10",
	0,
	"5",
	"Log10");

create_constant_form ("_nMath_fPow10", 
	"Pow10",
	0,
	"6",
	"Pow10");

create_constant_form ("_nMath_fRecip", 
	"Recip",
	0,
	"7",
	"Recip");

create_constant_form ("_nMath_fRound", 
	"Round",
	0,
	"8",
	"Round");

create_constant_form ("_nMath_fSqr", 
	"Sqr",
	0,
	"9",
	"Sqr");

create_constant_form ("_nMath_fSqrt", 
	"Sqrt",
	0,
	"10",
	"Sqrt");

create_form_set("_nMath_fTypeSet",
	"_nMath_fAbs",
	"_nMath_fCeil",
	"_nMath_fExp",
	"_nMath_fFloor",
	"_nMath_fLn",
	"_nMath_fLog10",
	"_nMath_fPow10",
	"_nMath_fRecip",
	"_nMath_fRound",
	"_nMath_fSqr",
	"_nMath_fSqrt",
	"StdForm");

create_item ("Math","Math Function",
	"M",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_Math",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nMath_lsdfomnistars",
	SPComponentAnnotFmt,
	"SYM_Math",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Type","mathematical function",
		PARM_INT,
		"_nMath_fTypeSet",
		UNITLESS_UNIT,
		prm("_nMath_fAbs","Abs")));


create_item ("LatchClocked","Data Latch with Clock Input",
	"L",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_LatchClocked",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nLatchClocked_lsdfomnistars",
	SPComponentAnnotFmt,
	"SYM_LatchClocked",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("ResetCx","complex output when reset pin is high",
		PARM_COMPLEX,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")));


create_item ("LFSR","Linear feedback shift register",
	"L",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_LFSR",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nLFSR_lsdfomnistars",
	SPComponentAnnotFmt,
	"SYM_LFSR",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Seed","initial value loaded into the shift register",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"1\"")),
	create_parm ("FeedbackList","tap positions for non-zero feedback coefficients",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"7 3 2 1\"")));


create_item ("JKFF","Binary Data J-K Type Flip-Flop",
	"J",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_JKFF",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nJKFF_lsdfomnistars",
	SPComponentAnnotFmt,
	"SYM_JKFF",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);


create_constant_form ("_nExpand_fMU_x5flaw", 
	"MU-law",
	0,
	"0",
	"MU-law");

create_constant_form ("_nExpand_fA_x5flaw", 
	"A-law",
	0,
	"1",
	"A-law");

create_form_set("_nExpand_fTypeSet",
	"_nExpand_fMU_x5flaw",
	"_nExpand_fA_x5flaw",
	"StdForm");

create_item ("Expand","Expander part of a compander",
	"E",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_Expand",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nExpand_lsdfomnistars",
	SPComponentAnnotFmt,
	"SYM_Expand",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Type","compression law",
		PARM_INT,
		"_nExpand_fTypeSet",
		UNITLESS_UNIT,
		prm("_nExpand_fMU_x5flaw","MU_law")),
	create_parm ("CompressionK","compression constant",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("Max","maximum input value magnitude",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));


create_item ("DivByN","Binary Data Divide-By-N Counter",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DivByN",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDivByN_lsdfomnistars",
	SPComponentAnnotFmt,
	"SYM_DivByN",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("N","divide-by factor",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("N0","initial counter value",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")));


create_item ("DeadZone","Dead Zone Nonlinearity",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DeadZone",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDeadZone_lsdfomnistars",
	SPComponentAnnotFmt,
	"SYM_DeadZone",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("K","magnitude gain",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("Low","lower dead zone value",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("High","higher dead zone value",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));


create_item ("LogicLatch","Logic Latch",
	"L",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_LogicLatch",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nLogicLatch_lsdfomnistars",
	SPComponentAnnotFmt,
	"SYM_LogicLatch",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);


create_item ("DFF","D-Type Binary Data Flip-Flop (Edge Triggered)",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DFF",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDFF_lsdfomnistars",
	SPComponentAnnotFmt,
	"SYM_DFF",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);


create_constant_form ("_nCompress_fMU_x5flaw", 
	"MU-law",
	0,
	"0",
	"MU-law");

create_constant_form ("_nCompress_fA_x5flaw", 
	"A-law",
	0,
	"1",
	"A-law");

create_form_set("_nCompress_fTypeSet",
	"_nCompress_fMU_x5flaw",
	"_nCompress_fA_x5flaw",
	"StdForm");

create_item ("Compress","Compression part of a compander",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_Compress",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCompress_lsdfomnistars",
	SPComponentAnnotFmt,
	"SYM_Compress",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Type","compression law",
		PARM_INT,
		"_nCompress_fTypeSet",
		UNITLESS_UNIT,
		prm("_nCompress_fMU_x5flaw","MU_law")),
	create_parm ("CompressionK","compression constant",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("Max","maximum input value magnitude",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));
