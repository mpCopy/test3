set_design_type( sigproc_net );
create_constant_form ("_n_x5fWMAN_x5fEVM_fOff", 
	"Off",
	0,
	"0",
	"Off");
create_constant_form ("_n_x5fWMAN_x5fEVM_fRMS_x5f_x5fVideo_x5f", 
	"RMS (Video)",
	0,
	"1",
	"RMS (Video)");
create_form_set("_n_x5fWMAN_x5fEVM_fAverageTypeSet",
	"_n_x5fWMAN_x5fEVM_fOff",
	"_n_x5fWMAN_x5fEVM_fRMS_x5f_x5fVideo_x5f",
	"StdForm");
create_constant_form ("_n_x5fWMAN_x5fEVM_fAuto_x5fDetect", 
	"Auto Detect",
	0,
	"0",
	"Auto Detect");
create_constant_form ("_n_x5fWMAN_x5fEVM_fFCH", 
	"FCH",
	0,
	"1",
	"FCH");
create_constant_form ("_n_x5fWMAN_x5fEVM_fBPSK", 
	"BPSK",
	0,
	"2",
	"BPSK");
create_constant_form ("_n_x5fWMAN_x5fEVM_fQPSK", 
	"QPSK",
	0,
	"3",
	"QPSK");
create_constant_form ("_n_x5fWMAN_x5fEVM_fQAM_x5f16", 
	"QAM 16",
	0,
	"4",
	"QAM 16");
create_constant_form ("_n_x5fWMAN_x5fEVM_fQAM_x5f64", 
	"QAM 64",
	0,
	"5",
	"QAM 64");
create_form_set("_n_x5fWMAN_x5fEVM_fDataSubcarrierModulationSet",
	"_n_x5fWMAN_x5fEVM_fAuto_x5fDetect",
	"_n_x5fWMAN_x5fEVM_fFCH",
	"_n_x5fWMAN_x5fEVM_fBPSK",
	"_n_x5fWMAN_x5fEVM_fQPSK",
	"_n_x5fWMAN_x5fEVM_fQAM_x5f16",
	"_n_x5fWMAN_x5fEVM_fQAM_x5f64",
	"StdForm");
create_constant_form ("_n_x5fWMAN_x5fEVM_fAuto", 
	"Auto",
	0,
	"0",
	"Auto");
create_constant_form ("_n_x5fWMAN_x5fEVM_f_x5f57_x5f50", 
	"_57/50",
	0,
	"1",
	"57/50");
create_constant_form ("_n_x5fWMAN_x5fEVM_f_x5f8_x5f7", 
	"_8/7",
	0,
	"2",
	"8/7");
create_constant_form ("_n_x5fWMAN_x5fEVM_f_x5f86_x5f75", 
	"_86/75",
	0,
	"3",
	"86/75");
create_constant_form ("_n_x5fWMAN_x5fEVM_f_x5f316_x5f275", 
	"_316/275",
	0,
	"4",
	"316/275");
create_constant_form ("_n_x5fWMAN_x5fEVM_f_x5f144_x5f125", 
	"_144/125",
	0,
	"5",
	"144/125");
create_constant_form ("_n_x5fWMAN_x5fEVM_fOther", 
	"Other",
	0,
	"6",
	"Other");
create_form_set("_n_x5fWMAN_x5fEVM_fFsBW_x5fRatioSet",
	"_n_x5fWMAN_x5fEVM_fAuto",
	"_n_x5fWMAN_x5fEVM_f_x5f57_x5f50",
	"_n_x5fWMAN_x5fEVM_f_x5f8_x5f7",
	"_n_x5fWMAN_x5fEVM_f_x5f86_x5f75",
	"_n_x5fWMAN_x5fEVM_f_x5f316_x5f275",
	"_n_x5fWMAN_x5fEVM_f_x5f144_x5f125",
	"_n_x5fWMAN_x5fEVM_fOther",
	"StdForm");
create_constant_form ("_n_x5fWMAN_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_n_x5fWMAN_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_n_x5fWMAN_x5fEVM_fPulseSearchSet",
	"_n_x5fWMAN_x5fEVM_fNO",
	"_n_x5fWMAN_x5fEVM_fYES",
	"StdForm");
create_constant_form ("_n_x5fWMAN_x5fEVM_fAuto_x5fSelect", 
	"Auto Select",
	0,
	"0",
	"Auto Select");
create_constant_form ("_n_x5fWMAN_x5fEVM_fTry_x5fFCH", 
	"Try FCH",
	0,
	"1",
	"Try FCH");
create_constant_form ("_n_x5fWMAN_x5fEVM_fManual_x5fOverride", 
	"Manual Override",
	0,
	"2",
	"Manual Override");
create_form_set("_n_x5fWMAN_x5fEVM_fResultLengthTypeSet",
	"_n_x5fWMAN_x5fEVM_fAuto_x5fSelect",
	"_n_x5fWMAN_x5fEVM_fTry_x5fFCH",
	"_n_x5fWMAN_x5fEVM_fManual_x5fOverride",
	"StdForm");
create_constant_form ("_n_x5fWMAN_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_n_x5fWMAN_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_n_x5fWMAN_x5fEVM_fTrackAmplitudeSet",
	"_n_x5fWMAN_x5fEVM_fNO",
	"_n_x5fWMAN_x5fEVM_fYES",
	"StdForm");
create_constant_form ("_n_x5fWMAN_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_n_x5fWMAN_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_n_x5fWMAN_x5fEVM_fTrackPhaseSet",
	"_n_x5fWMAN_x5fEVM_fNO",
	"_n_x5fWMAN_x5fEVM_fYES",
	"StdForm");
create_constant_form ("_n_x5fWMAN_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_n_x5fWMAN_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_n_x5fWMAN_x5fEVM_fTrackTimingSet",
	"_n_x5fWMAN_x5fEVM_fNO",
	"_n_x5fWMAN_x5fEVM_fYES",
	"StdForm");
create_constant_form ("_n_x5fWMAN_x5fEVM_fCH_x5fEstimation_x5fSequence_x5fOnly", 
	"CH Estimation Sequence Only",
	0,
	"0",
	"CH Estimation Sequence Only");
create_constant_form ("_n_x5fWMAN_x5fEVM_fCH_x5fEstimation_x5fSequence_x5f_x5f_x5fData", 
	"CH Estimation Sequence & Data",
	0,
	"1",
	"CH Estimation Sequence & Data");
create_form_set("_n_x5fWMAN_x5fEVM_fEqualizerTrainingSet",
	"_n_x5fWMAN_x5fEVM_fCH_x5fEstimation_x5fSequence_x5fOnly",
	"_n_x5fWMAN_x5fEVM_fCH_x5fEstimation_x5fSequence_x5f_x5f_x5fData",
	"StdForm");
create_constant_form ("_n_x5fWMAN_x5fEVM_fAll", 
	"All",
	0,
	"0",
	"All");
create_constant_form ("_n_x5fWMAN_x5fEVM_fSingle_x5fCarrier", 
	"Single Carrier",
	0,
	"1",
	"Single Carrier");
create_constant_form ("_n_x5fWMAN_x5fEVM_fPilots_x5fOnly", 
	"Pilots Only",
	0,
	"2",
	"Pilots Only");
create_form_set("_n_x5fWMAN_x5fEVM_fSubcarrierSelectSet",
	"_n_x5fWMAN_x5fEVM_fAll",
	"_n_x5fWMAN_x5fEVM_fSingle_x5fCarrier",
	"_n_x5fWMAN_x5fEVM_fPilots_x5fOnly",
	"StdForm");
create_constant_form ("_n_x5fWMAN_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_n_x5fWMAN_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_n_x5fWMAN_x5fEVM_fDebugSet",
	"_n_x5fWMAN_x5fEVM_fNO",
	"_n_x5fWMAN_x5fEVM_fYES",
	"StdForm");
create_item ("_WMAN_EVM","WMAN EVM measurement",
	"W",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_WMAN_EVM",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dTSDF_n_x5fWMAN_x5fEVM_lsdfwmanmeasurements",
	SPComponentAnnotFmt,
	"SYM_WMAN_EVM",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("RLoad","load resistance",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","DefaultRLoad")),
	create_parm ("RTemp","physical temperature, in degrees C, of load resistance",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		TEMPERATURE_UNIT,
		prm("StdForm","DefaultRTemp")),
	create_parm ("FCarrier","carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","1.9 GHz")),
	create_parm ("Start","start time for data recording",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","DefaultTimeStart")),
	create_parm ("AverageType","average type",
		PARM_INT,
		"_n_x5fWMAN_x5fEVM_fAverageTypeSet",
		UNITLESS_UNIT,
		prm("_n_x5fWMAN_x5fEVM_fRMS_x5f_x5fVideo_x5f","RMS__Video_")),
	create_parm ("FramesToAverage","number of frames that will be averaged if AverageType is RMS (Video)",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","20")),
	create_parm ("DataSubcarrierModulation","modulation format of the data subcarriers",
		PARM_INT,
		"_n_x5fWMAN_x5fEVM_fDataSubcarrierModulationSet",
		UNITLESS_UNIT,
		prm("_n_x5fWMAN_x5fEVM_fAuto_x5fDetect","Auto_Detect")),
	create_parm ("GuardInterval","guard interval time, expressed as a fraction of the FFT time length",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.25")),
	create_parm ("NominalBandwidth","nominal channel bandwidth of the input signal",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","7.0 MHz")),
	create_parm ("FsBW_Ratio","ratio between the FFT sampling frequency and the nominal bandwidth",
		PARM_INT,
		"_n_x5fWMAN_x5fEVM_fFsBW_x5fRatioSet",
		UNITLESS_UNIT,
		prm("_n_x5fWMAN_x5fEVM_fAuto","Auto")),
	create_parm ("OtherFsBW_Ratio","sampling frequency to nominal bandwidth ratio when FsBW_Ratio is set to Other",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8/7")),
	create_parm ("SearchLength","search length",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","4.8 msec")),
	create_parm ("PulseSearch","search for burst in the input signal",
		PARM_INT | PARM_NO_DISPLAY,
		"_n_x5fWMAN_x5fEVM_fPulseSearchSet",
		UNITLESS_UNIT,
		prm("_n_x5fWMAN_x5fEVM_fYES","YES")),
	create_parm ("ResultLengthType","used together with ResultLength parameter, see help for details",
		PARM_INT | PARM_NO_DISPLAY,
		"_n_x5fWMAN_x5fEVM_fResultLengthTypeSet",
		UNITLESS_UNIT,
		prm("_n_x5fWMAN_x5fEVM_fAuto_x5fSelect","Auto_Select")),
	create_parm ("ResultLength","in terms of symbol-times, see help for details",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","60")),
	create_parm ("MeasurementOffset","measurement offset (symbol-times)",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("MeasurementInterval","measurement interval (symbol-times)",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","60")),
	create_parm ("SubchannelIndex","specify the subchannel to check the possible uplink subchannel preamble",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")),
	create_parm ("SymbolTimingAdjust","amount of time (expressed as a percent of the FFT time length) to back away from the end of the symbol time when decidin...(Press Help for more info)",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-3.125")),
	create_parm ("TrackAmplitude","pilot amplitude tracking",
		PARM_INT | PARM_NO_DISPLAY,
		"_n_x5fWMAN_x5fEVM_fTrackAmplitudeSet",
		UNITLESS_UNIT,
		prm("_n_x5fWMAN_x5fEVM_fNO","NO")),
	create_parm ("TrackPhase","pilot phase tracking",
		PARM_INT | PARM_NO_DISPLAY,
		"_n_x5fWMAN_x5fEVM_fTrackPhaseSet",
		UNITLESS_UNIT,
		prm("_n_x5fWMAN_x5fEVM_fYES","YES")),
	create_parm ("TrackTiming","pilot timing tracking",
		PARM_INT | PARM_NO_DISPLAY,
		"_n_x5fWMAN_x5fEVM_fTrackTimingSet",
		UNITLESS_UNIT,
		prm("_n_x5fWMAN_x5fEVM_fNO","NO")),
	create_parm ("EqualizerTraining","specify how the equalizer is initialized, or trained",
		PARM_INT | PARM_NO_DISPLAY,
		"_n_x5fWMAN_x5fEVM_fEqualizerTrainingSet",
		UNITLESS_UNIT,
		prm("_n_x5fWMAN_x5fEVM_fCH_x5fEstimation_x5fSequence_x5fOnly","CH_Estimation_Sequence_Only")),
	create_parm ("SubcarrierSelect","carriers that will be analyzed",
		PARM_INT | PARM_NO_DISPLAY,
		"_n_x5fWMAN_x5fEVM_fSubcarrierSelectSet",
		UNITLESS_UNIT,
		prm("_n_x5fWMAN_x5fEVM_fAll","All")),
	create_parm ("CarrierIndex","index of carrier to be analyzed when SubcarrierSelect = Single carrier",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("Debug","display instant RCE and other information when set to YES",
		PARM_INT | PARM_NO_DISPLAY,
		"_n_x5fWMAN_x5fEVM_fDebugSet",
		UNITLESS_UNIT,
		prm("_n_x5fWMAN_x5fEVM_fNO","NO")));
library_group("WMAN, Measurement","WMAN, Measurement","_WMAN_EVM");
palette_group("WMAN, Measurement","WMAN, Measurement","_WMAN_EVM");

create_constant_form ("_nWMAN_x5fEVM_fOff", 
	"Off",
	0,
	"0",
	"Off");
create_constant_form ("_nWMAN_x5fEVM_fRMS_x5f_x5fVideo_x5f", 
	"RMS (Video)",
	0,
	"1",
	"RMS (Video)");
create_form_set("_nWMAN_x5fEVM_fAverageTypeSet",
	"_nWMAN_x5fEVM_fOff",
	"_nWMAN_x5fEVM_fRMS_x5f_x5fVideo_x5f",
	"StdForm");
create_constant_form ("_nWMAN_x5fEVM_fAuto_x5fDetect", 
	"Auto Detect",
	0,
	"0",
	"Auto Detect");
create_constant_form ("_nWMAN_x5fEVM_fFCH", 
	"FCH",
	0,
	"1",
	"FCH");
create_constant_form ("_nWMAN_x5fEVM_fBPSK", 
	"BPSK",
	0,
	"2",
	"BPSK");
create_constant_form ("_nWMAN_x5fEVM_fQPSK", 
	"QPSK",
	0,
	"3",
	"QPSK");
create_constant_form ("_nWMAN_x5fEVM_fQAM_x5f16", 
	"QAM 16",
	0,
	"4",
	"QAM 16");
create_constant_form ("_nWMAN_x5fEVM_fQAM_x5f64", 
	"QAM 64",
	0,
	"5",
	"QAM 64");
create_form_set("_nWMAN_x5fEVM_fDataSubcarrierModulationSet",
	"_nWMAN_x5fEVM_fAuto_x5fDetect",
	"_nWMAN_x5fEVM_fFCH",
	"_nWMAN_x5fEVM_fBPSK",
	"_nWMAN_x5fEVM_fQPSK",
	"_nWMAN_x5fEVM_fQAM_x5f16",
	"_nWMAN_x5fEVM_fQAM_x5f64",
	"StdForm");
create_constant_form ("_nWMAN_x5fEVM_fAuto", 
	"Auto",
	0,
	"0",
	"Auto");
create_constant_form ("_nWMAN_x5fEVM_f_x5f57_x5f50", 
	"_57/50",
	0,
	"1",
	"57/50");
create_constant_form ("_nWMAN_x5fEVM_f_x5f8_x5f7", 
	"_8/7",
	0,
	"2",
	"8/7");
create_constant_form ("_nWMAN_x5fEVM_f_x5f86_x5f75", 
	"_86/75",
	0,
	"3",
	"86/75");
create_constant_form ("_nWMAN_x5fEVM_f_x5f316_x5f275", 
	"_316/275",
	0,
	"4",
	"316/275");
create_constant_form ("_nWMAN_x5fEVM_f_x5f144_x5f125", 
	"_144/125",
	0,
	"5",
	"144/125");
create_constant_form ("_nWMAN_x5fEVM_fOther", 
	"Other",
	0,
	"6",
	"Other");
create_form_set("_nWMAN_x5fEVM_fFsBW_x5fRatioSet",
	"_nWMAN_x5fEVM_fAuto",
	"_nWMAN_x5fEVM_f_x5f57_x5f50",
	"_nWMAN_x5fEVM_f_x5f8_x5f7",
	"_nWMAN_x5fEVM_f_x5f86_x5f75",
	"_nWMAN_x5fEVM_f_x5f316_x5f275",
	"_nWMAN_x5fEVM_f_x5f144_x5f125",
	"_nWMAN_x5fEVM_fOther",
	"StdForm");
create_constant_form ("_nWMAN_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nWMAN_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nWMAN_x5fEVM_fPulseSearchSet",
	"_nWMAN_x5fEVM_fNO",
	"_nWMAN_x5fEVM_fYES",
	"StdForm");
create_constant_form ("_nWMAN_x5fEVM_fAuto_x5fSelect", 
	"Auto Select",
	0,
	"0",
	"Auto Select");
create_constant_form ("_nWMAN_x5fEVM_fTry_x5fFCH", 
	"Try FCH",
	0,
	"1",
	"Try FCH");
create_constant_form ("_nWMAN_x5fEVM_fManual_x5fOverride", 
	"Manual Override",
	0,
	"2",
	"Manual Override");
create_form_set("_nWMAN_x5fEVM_fResultLengthTypeSet",
	"_nWMAN_x5fEVM_fAuto_x5fSelect",
	"_nWMAN_x5fEVM_fTry_x5fFCH",
	"_nWMAN_x5fEVM_fManual_x5fOverride",
	"StdForm");
create_constant_form ("_nWMAN_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nWMAN_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nWMAN_x5fEVM_fTrackAmplitudeSet",
	"_nWMAN_x5fEVM_fNO",
	"_nWMAN_x5fEVM_fYES",
	"StdForm");
create_constant_form ("_nWMAN_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nWMAN_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nWMAN_x5fEVM_fTrackPhaseSet",
	"_nWMAN_x5fEVM_fNO",
	"_nWMAN_x5fEVM_fYES",
	"StdForm");
create_constant_form ("_nWMAN_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nWMAN_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nWMAN_x5fEVM_fTrackTimingSet",
	"_nWMAN_x5fEVM_fNO",
	"_nWMAN_x5fEVM_fYES",
	"StdForm");
create_constant_form ("_nWMAN_x5fEVM_fCH_x5fEstimation_x5fSequence_x5fOnly", 
	"CH Estimation Sequence Only",
	0,
	"0",
	"CH Estimation Sequence Only");
create_constant_form ("_nWMAN_x5fEVM_fCH_x5fEstimation_x5fSequence_x5f_x5f_x5fData", 
	"CH Estimation Sequence & Data",
	0,
	"1",
	"CH Estimation Sequence & Data");
create_form_set("_nWMAN_x5fEVM_fEqualizerTrainingSet",
	"_nWMAN_x5fEVM_fCH_x5fEstimation_x5fSequence_x5fOnly",
	"_nWMAN_x5fEVM_fCH_x5fEstimation_x5fSequence_x5f_x5f_x5fData",
	"StdForm");
create_constant_form ("_nWMAN_x5fEVM_fAll", 
	"All",
	0,
	"0",
	"All");
create_constant_form ("_nWMAN_x5fEVM_fSingle_x5fCarrier", 
	"Single Carrier",
	0,
	"1",
	"Single Carrier");
create_constant_form ("_nWMAN_x5fEVM_fPilots_x5fOnly", 
	"Pilots Only",
	0,
	"2",
	"Pilots Only");
create_form_set("_nWMAN_x5fEVM_fSubcarrierSelectSet",
	"_nWMAN_x5fEVM_fAll",
	"_nWMAN_x5fEVM_fSingle_x5fCarrier",
	"_nWMAN_x5fEVM_fPilots_x5fOnly",
	"StdForm");
create_constant_form ("_nWMAN_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nWMAN_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nWMAN_x5fEVM_fDebugSet",
	"_nWMAN_x5fEVM_fNO",
	"_nWMAN_x5fEVM_fYES",
	"StdForm");
create_item ("WMAN_EVM","WMAN EVM measurement",
	"W",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_WMAN_EVM",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"WMAN_EVM",
	SPDesignAnnotFmt,
	"SYM_WMAN_EVM",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("RLoad","load resistance",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","DefaultRLoad")),
	create_parm ("RTemp","physical temperature, in degrees C, of load resistance",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		TEMPERATURE_UNIT,
		prm("StdForm","DefaultRTemp")),
	create_parm ("FCarrier","carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","1.9 GHz")),
	create_parm ("Start","start time for data recording",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","DefaultTimeStart")),
	create_parm ("AverageType","average type",
		PARM_INT,
		"_nWMAN_x5fEVM_fAverageTypeSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fEVM_fRMS_x5f_x5fVideo_x5f","RMS__Video_")),
	create_parm ("FramesToAverage","number of frames that will be averaged if AverageType is RMS (Video)",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","20")),
	create_parm ("DataSubcarrierModulation","modulation format of the data subcarriers",
		PARM_INT,
		"_nWMAN_x5fEVM_fDataSubcarrierModulationSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fEVM_fAuto_x5fDetect","Auto_Detect")),
	create_parm ("GuardInterval","guard interval time, expressed as a fraction of the FFT time length",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.25")),
	create_parm ("NominalBandwidth","nominal channel bandwidth of the input signal",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","7.0 MHz")),
	create_parm ("FsBW_Ratio","ratio between the FFT sampling frequency and the nominal bandwidth",
		PARM_INT,
		"_nWMAN_x5fEVM_fFsBW_x5fRatioSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fEVM_fAuto","Auto")),
	create_parm ("OtherFsBW_Ratio","sampling frequency to nominal bandwidth ratio when FsBW_Ratio is set to Other",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8/7")),
	create_parm ("SearchLength","search length",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","4.8 msec")),
	create_parm ("PulseSearch","search for burst in the input signal",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fEVM_fPulseSearchSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fEVM_fYES","YES")),
	create_parm ("ResultLengthType","used together with ResultLength parameter, see help for details",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fEVM_fResultLengthTypeSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fEVM_fAuto_x5fSelect","Auto_Select")),
	create_parm ("ResultLength","in terms of symbol-times, see help for details",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","60")),
	create_parm ("MeasurementOffset","measurement offset (symbol-times)",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("MeasurementInterval","measurement interval (symbol-times)",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","60")),
	create_parm ("SubchannelIndex","specify the subchannel to check the possible uplink subchannel preamble",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")),
	create_parm ("SymbolTimingAdjust","amount of time (expressed as a percent of the FFT time length) to back away from the end of the symbol time when decidin...(Press Help for more info)",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-3.125")),
	create_parm ("TrackAmplitude","pilot amplitude tracking",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fEVM_fTrackAmplitudeSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fEVM_fNO","NO")),
	create_parm ("TrackPhase","pilot phase tracking",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fEVM_fTrackPhaseSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fEVM_fYES","YES")),
	create_parm ("TrackTiming","pilot timing tracking",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fEVM_fTrackTimingSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fEVM_fNO","NO")),
	create_parm ("EqualizerTraining","specify how the equalizer is initialized, or trained",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fEVM_fEqualizerTrainingSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fEVM_fCH_x5fEstimation_x5fSequence_x5fOnly","CH_Estimation_Sequence_Only")),
	create_parm ("SubcarrierSelect","carriers that will be analyzed",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fEVM_fSubcarrierSelectSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fEVM_fAll","All")),
	create_parm ("CarrierIndex","index of carrier to be analyzed when SubcarrierSelect = Single carrier",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("Debug","display instant RCE and other information when set to YES",
		PARM_INT | PARM_NO_DISPLAY,
		"_nWMAN_x5fEVM_fDebugSet",
		UNITLESS_UNIT,
		prm("_nWMAN_x5fEVM_fNO","NO")));
library_group("WMAN, Measurement","WMAN, Measurement","WMAN_EVM");
palette_group("WMAN, Measurement","WMAN, Measurement","WMAN_EVM");

