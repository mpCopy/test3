set_design_type( sigproc_net );
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fOverrideInstrumentModelCheckSet",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fNO",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fYES",
	"StdForm");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f1", 
	"Channel 1",
	0,
	"0",
	"Channel 1");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f2", 
	"Channel 2",
	0,
	"1",
	"Channel 2");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f3", 
	"Channel 3",
	0,
	"2",
	"Channel 3");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f4", 
	"Channel 4",
	0,
	"3",
	"Channel 4");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f1", 
	"Memory 1",
	0,
	"4",
	"Memory 1");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f2", 
	"Memory 2",
	0,
	"5",
	"Memory 2");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f3", 
	"Memory 3",
	0,
	"6",
	"Memory 3");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f4", 
	"Memory 4",
	0,
	"7",
	"Memory 4");
create_form_set("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fWaveform1Set",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f1",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f2",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f3",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f4",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f1",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f2",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f3",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f4",
	"StdForm");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f1", 
	"Channel 1",
	0,
	"0",
	"Channel 1");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f2", 
	"Channel 2",
	0,
	"1",
	"Channel 2");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f3", 
	"Channel 3",
	0,
	"2",
	"Channel 3");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f4", 
	"Channel 4",
	0,
	"3",
	"Channel 4");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f1", 
	"Memory 1",
	0,
	"4",
	"Memory 1");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f2", 
	"Memory 2",
	0,
	"5",
	"Memory 2");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f3", 
	"Memory 3",
	0,
	"6",
	"Memory 3");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f4", 
	"Memory 4",
	0,
	"7",
	"Memory 4");
create_form_set("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fWaveform2Set",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f1",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f2",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f3",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f4",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f1",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f2",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f3",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f4",
	"StdForm");
create_text_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fset_x5ffile", 
	"File with set extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "set"), prefix_path_to_data_file);
create_form_set ( "_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fSetupFile_x5fFileSet",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fset_x5ffile");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fUseInstrumentSettingsSet",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fNO",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fYES",
	"StdForm");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fAutoscaleSet",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fNO",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fYES",
	"StdForm");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fDerived_x5ffrom_x5fsource_x5fdata", 
	"Derived from source data",
	0,
	"-1",
	"-1");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fDerived_x5ffrom_x5foutput_x5fpin", 
	"Derived from output pin",
	0,
	"0",
	"0");
create_form_set("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_f_x5fTStepSet",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fDerived_x5ffrom_x5fsource_x5fdata",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fDerived_x5ffrom_x5foutput_x5fpin",
	"StdForm");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fControlSimulationSet",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fNO",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fYES",
	"StdForm");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fSingle_x5fpass", 
	"Single pass",
	0,
	"0",
	"Single pass");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fRepeat", 
	"Repeat",
	0,
	"1",
	"Repeat");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fReacquire", 
	"Reacquire",
	0,
	"2",
	"Reacquire");
create_form_set("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fRepeatDataSet",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fSingle_x5fpass",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fRepeat",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fReacquire",
	"StdForm");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fLagrange", 
	"Lagrange",
	0,
	"0",
	"Lagrange");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fSample_x5fand_x5fhold", 
	"Sample and hold",
	0,
	"1",
	"Sample and hold");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fLinear", 
	"Linear",
	0,
	"2",
	"Linear");
create_form_set("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fInterpolationTypeSet",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fLagrange",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fSample_x5fand_x5fhold",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fLinear",
	"StdForm");
create_item ("_CM_Infiniium_548xx_Source2","Capture two channels from an Infiniium oscilloscope",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CM_Infiniium_548xx_Source2",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dTSDF_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_lmsrvsimstars_poutput_x3d2_a_x5fCM_x5fInfiniium_x5f548xx_x5fSource2",
	SPComponentAnnotFmt,
	"SYM_CM_Infiniium_548xx_Source2",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Instrument","instrument to be used in the simulation",
		PARM_STRING | PARM_NO_DISPLAY,
		"InstrumentFormSet",
		UNITLESS_UNIT,
		prm("InstrumentForm","\"[GPIB0::7::INSTR][localhost][4790]\"")),
	create_parm ("OverrideInstrumentModelCheck","if no, error if instrument model is unsupported",
		PARM_INT | PARM_NO_DISPLAY,
		"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fOverrideInstrumentModelCheckSet",
		UNITLESS_UNIT,
		prm("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fNO","NO")),
	create_parm ("Waveform1","source data to write to output#1",
		PARM_INT,
		"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fWaveform1Set",
		UNITLESS_UNIT,
		prm("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f1","Channel_1")),
	create_parm ("Waveform2","source data to write to output#2",
		PARM_INT,
		"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fWaveform2Set",
		UNITLESS_UNIT,
		prm("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f3","Channel_3")),
	create_parm ("SetupFile","name of setup file to recall state into Infiniium",
		PARM_STRING,
		"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fSetupFile_x5fFileSet",
		UNITLESS_UNIT,
		prm("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fset_x5ffile","\"\"")),
	create_parm ("UseInstrumentSettings","if yes, ignore Autoscale, TimebaseDelay and TriggerHoldoff component parameters",
		PARM_INT,
		"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fUseInstrumentSettingsSet",
		UNITLESS_UNIT,
		prm("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fYES","YES")),
	create_parm ("InstructionTimeout","Time to wait for an instrument instruction to complete before giving up",
		PARM_INT | PARM_NO_DISPLAY,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","10")),
	create_parm ("Autoscale","perform autoscale before acquiring source data",
		PARM_INT,
		"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fAutoscaleSet",
		UNITLESS_UNIT,
		prm("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fYES","YES")),
	create_parm ("TimebaseDelay","time interval between the trigger event and the delay reference point",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","0")),
	create_parm ("TriggerHoldoff","time the oscilloscope should wait after receiving a trigger before enabling the trigger again",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","80 nsec")),
	create_parm ("ROut","resistance",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","DefaultROut")),
	create_parm ("RTemp","physical temperature, in degrees C",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		TEMPERATURE_UNIT,
		prm("StdForm","DefaultRTemp")),
	create_parm ("TStep","simulation time step",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_f_x5fTStepSet",
		TIME_UNIT,
		prm("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fDerived_x5ffrom_x5fsource_x5fdata","Derived_from_source_data")),
	create_parm ("ControlSimulation","control simulation",
		PARM_INT,
		"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fControlSimulationSet",
		UNITLESS_UNIT,
		prm("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fNO","NO")),
	create_parm ("SegmentLength","if non-zero, truncate or zero pad source data to this length",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","0")),
	create_parm ("RepeatData","control operation at the end of source data",
		PARM_INT,
		"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fRepeatDataSet",
		UNITLESS_UNIT,
		prm("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fSingle_x5fpass","Single_pass")),
	create_parm ("InterpolationType","interpolation technique to use",
		PARM_INT,
		"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fInterpolationTypeSet",
		UNITLESS_UNIT,
		prm("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fLagrange","Lagrange")),
	create_parm ("InterpolationOrder","number of points to use if Lagrange interpolation is set",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")));
library_group("Instruments","Instruments","_CM_Infiniium_548xx_Source2");
palette_group("Instruments","Instruments","_CM_Infiniium_548xx_Source2");

create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nCM_x5fInfiniium_x5f548xx_x5fSource_fOverrideInstrumentModelCheckSet",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fNO",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fYES",
	"StdForm");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f1", 
	"Channel 1",
	0,
	"0",
	"Channel 1");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f2", 
	"Channel 2",
	0,
	"1",
	"Channel 2");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f3", 
	"Channel 3",
	0,
	"2",
	"Channel 3");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f4", 
	"Channel 4",
	0,
	"3",
	"Channel 4");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f1", 
	"Memory 1",
	0,
	"4",
	"Memory 1");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f2", 
	"Memory 2",
	0,
	"5",
	"Memory 2");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f3", 
	"Memory 3",
	0,
	"6",
	"Memory 3");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f4", 
	"Memory 4",
	0,
	"7",
	"Memory 4");
create_form_set("_nCM_x5fInfiniium_x5f548xx_x5fSource_fWaveform1Set",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f1",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f2",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f3",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f4",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f1",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f2",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f3",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f4",
	"StdForm");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f1", 
	"Channel 1",
	0,
	"0",
	"Channel 1");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f2", 
	"Channel 2",
	0,
	"1",
	"Channel 2");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f3", 
	"Channel 3",
	0,
	"2",
	"Channel 3");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f4", 
	"Channel 4",
	0,
	"3",
	"Channel 4");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f1", 
	"Memory 1",
	0,
	"4",
	"Memory 1");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f2", 
	"Memory 2",
	0,
	"5",
	"Memory 2");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f3", 
	"Memory 3",
	0,
	"6",
	"Memory 3");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f4", 
	"Memory 4",
	0,
	"7",
	"Memory 4");
create_form_set("_nCM_x5fInfiniium_x5f548xx_x5fSource_fWaveform2Set",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f1",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f2",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f3",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f4",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f1",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f2",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f3",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f4",
	"StdForm");
create_text_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fset_x5ffile", 
	"File with set extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "set"), prefix_path_to_data_file);
create_form_set ( "_nCM_x5fInfiniium_x5f548xx_x5fSource_fSetupFile_x5fFileSet",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fset_x5ffile");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nCM_x5fInfiniium_x5f548xx_x5fSource_fUseInstrumentSettingsSet",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fNO",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fYES",
	"StdForm");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nCM_x5fInfiniium_x5f548xx_x5fSource_fAutoscaleSet",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fNO",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fYES",
	"StdForm");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fDerived_x5ffrom_x5fsource_x5fdata", 
	"Derived from source data",
	0,
	"-1",
	"-1");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fDerived_x5ffrom_x5foutput_x5fpin", 
	"Derived from output pin",
	0,
	"0",
	"0");
create_form_set("_nCM_x5fInfiniium_x5f548xx_x5fSource_f_x5fTStepSet",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fDerived_x5ffrom_x5fsource_x5fdata",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fDerived_x5ffrom_x5foutput_x5fpin",
	"StdForm");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nCM_x5fInfiniium_x5f548xx_x5fSource_fControlSimulationSet",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fNO",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fYES",
	"StdForm");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fSingle_x5fpass", 
	"Single pass",
	0,
	"0",
	"Single pass");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fRepeat", 
	"Repeat",
	0,
	"1",
	"Repeat");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fReacquire", 
	"Reacquire",
	0,
	"2",
	"Reacquire");
create_form_set("_nCM_x5fInfiniium_x5f548xx_x5fSource_fRepeatDataSet",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fSingle_x5fpass",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fRepeat",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fReacquire",
	"StdForm");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fLagrange", 
	"Lagrange",
	0,
	"0",
	"Lagrange");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fSample_x5fand_x5fhold", 
	"Sample and hold",
	0,
	"1",
	"Sample and hold");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fLinear", 
	"Linear",
	0,
	"2",
	"Linear");
create_form_set("_nCM_x5fInfiniium_x5f548xx_x5fSource_fInterpolationTypeSet",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fLagrange",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fSample_x5fand_x5fhold",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fLinear",
	"StdForm");
create_item ("CM_Infiniium_548xx_Source2","Capture two channels from an Infiniium oscilloscope",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CM_Infiniium_548xx_Source2",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CM_Infiniium_548xx_Source2",
	SPDesignAnnotFmt,
	"SYM_DSN_CM_Infiniium_548xx_Source2",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Instrument","instrument to be used in the simulation",
		PARM_STRING | PARM_NO_DISPLAY,
		"InstrumentFormSet",
		UNITLESS_UNIT,
		prm("InstrumentForm","\"[GPIB0::7::INSTR][localhost][4790]\"")),
	create_parm ("OverrideInstrumentModelCheck","if no, error if instrument model is unsupported",
		PARM_INT | PARM_NO_DISPLAY,
		"_nCM_x5fInfiniium_x5f548xx_x5fSource_fOverrideInstrumentModelCheckSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fInfiniium_x5f548xx_x5fSource_fNO","NO")),
	create_parm ("Waveform1","source data to write to output#1",
		PARM_INT,
		"_nCM_x5fInfiniium_x5f548xx_x5fSource_fWaveform1Set",
		UNITLESS_UNIT,
		prm("_nCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f1","Channel_1")),
	create_parm ("Waveform2","source data to write to output#2",
		PARM_INT,
		"_nCM_x5fInfiniium_x5f548xx_x5fSource_fWaveform2Set",
		UNITLESS_UNIT,
		prm("_nCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f3","Channel_3")),
	create_parm ("SetupFile","name of setup file to recall state into Infiniium",
		PARM_STRING,
		"_nCM_x5fInfiniium_x5f548xx_x5fSource_fSetupFile_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fInfiniium_x5f548xx_x5fSource_fset_x5ffile","\"\"")),
	create_parm ("UseInstrumentSettings","if yes, ignore Autoscale, TimebaseDelay and TriggerHoldoff component parameters",
		PARM_INT,
		"_nCM_x5fInfiniium_x5f548xx_x5fSource_fUseInstrumentSettingsSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fInfiniium_x5f548xx_x5fSource_fYES","YES")),
	create_parm ("InstructionTimeout","Time to wait for an instrument instruction to complete before giving up",
		PARM_INT | PARM_NO_DISPLAY,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","10")),
	create_parm ("Autoscale","perform autoscale before acquiring source data",
		PARM_INT,
		"_nCM_x5fInfiniium_x5f548xx_x5fSource_fAutoscaleSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fInfiniium_x5f548xx_x5fSource_fYES","YES")),
	create_parm ("TimebaseDelay","time interval between the trigger event and the delay reference point",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","0")),
	create_parm ("TriggerHoldoff","time the oscilloscope should wait after receiving a trigger before enabling the trigger again",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","80 nsec")),
	create_parm ("ROut","resistance",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","DefaultROut")),
	create_parm ("RTemp","physical temperature, in degrees C",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		TEMPERATURE_UNIT,
		prm("StdForm","DefaultRTemp")),
	create_parm ("TStep","simulation time step",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"_nCM_x5fInfiniium_x5f548xx_x5fSource_f_x5fTStepSet",
		TIME_UNIT,
		prm("_nCM_x5fInfiniium_x5f548xx_x5fSource_fDerived_x5ffrom_x5fsource_x5fdata","Derived_from_source_data")),
	create_parm ("ControlSimulation","control simulation",
		PARM_INT,
		"_nCM_x5fInfiniium_x5f548xx_x5fSource_fControlSimulationSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fInfiniium_x5f548xx_x5fSource_fNO","NO")),
	create_parm ("SegmentLength","if non-zero, truncate or zero pad source data to this length",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","0")),
	create_parm ("RepeatData","control operation at the end of source data",
		PARM_INT,
		"_nCM_x5fInfiniium_x5f548xx_x5fSource_fRepeatDataSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fInfiniium_x5f548xx_x5fSource_fSingle_x5fpass","Single_pass")),
	create_parm ("InterpolationType","interpolation technique to use",
		PARM_INT,
		"_nCM_x5fInfiniium_x5f548xx_x5fSource_fInterpolationTypeSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fInfiniium_x5f548xx_x5fSource_fLagrange","Lagrange")),
	create_parm ("InterpolationOrder","number of points to use if Lagrange interpolation is set",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")));
library_group("Instruments","Instruments","CM_Infiniium_548xx_Source2");
palette_group("Instruments","Instruments","CM_Infiniium_548xx_Source2");

create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fOverrideInstrumentModelCheckSet",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fNO",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fYES",
	"StdForm");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f1", 
	"Channel 1",
	0,
	"0",
	"Channel 1");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f2", 
	"Channel 2",
	0,
	"1",
	"Channel 2");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f3", 
	"Channel 3",
	0,
	"2",
	"Channel 3");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f4", 
	"Channel 4",
	0,
	"3",
	"Channel 4");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f1", 
	"Memory 1",
	0,
	"4",
	"Memory 1");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f2", 
	"Memory 2",
	0,
	"5",
	"Memory 2");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f3", 
	"Memory 3",
	0,
	"6",
	"Memory 3");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f4", 
	"Memory 4",
	0,
	"7",
	"Memory 4");
create_form_set("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fWaveform1Set",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f1",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f2",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f3",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f4",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f1",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f2",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f3",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f4",
	"StdForm");
create_text_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fset_x5ffile", 
	"File with set extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "set"), prefix_path_to_data_file);
create_form_set ( "_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fSetupFile_x5fFileSet",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fset_x5ffile");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fUseInstrumentSettingsSet",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fNO",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fYES",
	"StdForm");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fAutoscaleSet",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fNO",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fYES",
	"StdForm");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fDerived_x5ffrom_x5fsource_x5fdata", 
	"Derived from source data",
	0,
	"-1",
	"-1");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fDerived_x5ffrom_x5foutput_x5fpin", 
	"Derived from output pin",
	0,
	"0",
	"0");
create_form_set("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_f_x5fTStepSet",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fDerived_x5ffrom_x5fsource_x5fdata",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fDerived_x5ffrom_x5foutput_x5fpin",
	"StdForm");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fControlSimulationSet",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fNO",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fYES",
	"StdForm");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fSingle_x5fpass", 
	"Single pass",
	0,
	"0",
	"Single pass");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fRepeat", 
	"Repeat",
	0,
	"1",
	"Repeat");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fReacquire", 
	"Reacquire",
	0,
	"2",
	"Reacquire");
create_form_set("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fRepeatDataSet",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fSingle_x5fpass",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fRepeat",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fReacquire",
	"StdForm");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fLagrange", 
	"Lagrange",
	0,
	"0",
	"Lagrange");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fSample_x5fand_x5fhold", 
	"Sample and hold",
	0,
	"1",
	"Sample and hold");
create_constant_form ("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fLinear", 
	"Linear",
	0,
	"2",
	"Linear");
create_form_set("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fInterpolationTypeSet",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fLagrange",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fSample_x5fand_x5fhold",
	"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fLinear",
	"StdForm");
create_item ("_CM_Infiniium_548xx_Source1","Capture one channel from an Infiniium oscilloscope",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CM_Infiniium_548xx_Source1",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dTSDF_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_lmsrvsimstars_sWaveform2_x3d1_poutput_x3d1_a_x5fCM_x5fInfiniium_x5f548xx_x5fSource1",
	SPComponentAnnotFmt,
	"SYM_CM_Infiniium_548xx_Source1",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Instrument","instrument to be used in the simulation",
		PARM_STRING | PARM_NO_DISPLAY,
		"InstrumentFormSet",
		UNITLESS_UNIT,
		prm("InstrumentForm","\"[GPIB0::7::INSTR][localhost][4790]\"")),
	create_parm ("OverrideInstrumentModelCheck","if no, error if instrument model is unsupported",
		PARM_INT | PARM_NO_DISPLAY,
		"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fOverrideInstrumentModelCheckSet",
		UNITLESS_UNIT,
		prm("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fNO","NO")),
	create_parm ("Waveform1","source data to write to output#1",
		PARM_INT,
		"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fWaveform1Set",
		UNITLESS_UNIT,
		prm("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f1","Channel_1")),
	create_parm ("SetupFile","name of setup file to recall state into Infiniium",
		PARM_STRING,
		"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fSetupFile_x5fFileSet",
		UNITLESS_UNIT,
		prm("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fset_x5ffile","\"\"")),
	create_parm ("UseInstrumentSettings","if yes, ignore Autoscale, TimebaseDelay and TriggerHoldoff component parameters",
		PARM_INT,
		"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fUseInstrumentSettingsSet",
		UNITLESS_UNIT,
		prm("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fYES","YES")),
	create_parm ("InstructionTimeout","Time to wait for an instrument instruction to complete before giving up",
		PARM_INT | PARM_NO_DISPLAY,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","10")),
	create_parm ("Autoscale","perform autoscale before acquiring source data",
		PARM_INT,
		"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fAutoscaleSet",
		UNITLESS_UNIT,
		prm("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fYES","YES")),
	create_parm ("TimebaseDelay","time interval between the trigger event and the delay reference point",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","0")),
	create_parm ("TriggerHoldoff","time the oscilloscope should wait after receiving a trigger before enabling the trigger again",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","80 nsec")),
	create_parm ("ROut","resistance",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","DefaultROut")),
	create_parm ("RTemp","physical temperature, in degrees C",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		TEMPERATURE_UNIT,
		prm("StdForm","DefaultRTemp")),
	create_parm ("TStep","simulation time step",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_f_x5fTStepSet",
		TIME_UNIT,
		prm("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fDerived_x5ffrom_x5fsource_x5fdata","Derived_from_source_data")),
	create_parm ("ControlSimulation","control simulation",
		PARM_INT,
		"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fControlSimulationSet",
		UNITLESS_UNIT,
		prm("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fNO","NO")),
	create_parm ("SegmentLength","if non-zero, truncate or zero pad source data to this length",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","0")),
	create_parm ("RepeatData","control operation at the end of source data",
		PARM_INT,
		"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fRepeatDataSet",
		UNITLESS_UNIT,
		prm("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fSingle_x5fpass","Single_pass")),
	create_parm ("InterpolationType","interpolation technique to use",
		PARM_INT,
		"_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fInterpolationTypeSet",
		UNITLESS_UNIT,
		prm("_n_x5fCM_x5fInfiniium_x5f548xx_x5fSource_fLagrange","Lagrange")),
	create_parm ("InterpolationOrder","number of points to use if Lagrange interpolation is set",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")));
library_group("Instruments","Instruments","_CM_Infiniium_548xx_Source1");
palette_group("Instruments","Instruments","_CM_Infiniium_548xx_Source1");

create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nCM_x5fInfiniium_x5f548xx_x5fSource_fOverrideInstrumentModelCheckSet",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fNO",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fYES",
	"StdForm");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f1", 
	"Channel 1",
	0,
	"0",
	"Channel 1");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f2", 
	"Channel 2",
	0,
	"1",
	"Channel 2");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f3", 
	"Channel 3",
	0,
	"2",
	"Channel 3");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f4", 
	"Channel 4",
	0,
	"3",
	"Channel 4");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f1", 
	"Memory 1",
	0,
	"4",
	"Memory 1");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f2", 
	"Memory 2",
	0,
	"5",
	"Memory 2");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f3", 
	"Memory 3",
	0,
	"6",
	"Memory 3");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f4", 
	"Memory 4",
	0,
	"7",
	"Memory 4");
create_form_set("_nCM_x5fInfiniium_x5f548xx_x5fSource_fWaveform1Set",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f1",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f2",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f3",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f4",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f1",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f2",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f3",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fMemory_x5f4",
	"StdForm");
create_text_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fset_x5ffile", 
	"File with set extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "set"), prefix_path_to_data_file);
create_form_set ( "_nCM_x5fInfiniium_x5f548xx_x5fSource_fSetupFile_x5fFileSet",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fset_x5ffile");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nCM_x5fInfiniium_x5f548xx_x5fSource_fUseInstrumentSettingsSet",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fNO",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fYES",
	"StdForm");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nCM_x5fInfiniium_x5f548xx_x5fSource_fAutoscaleSet",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fNO",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fYES",
	"StdForm");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fDerived_x5ffrom_x5fsource_x5fdata", 
	"Derived from source data",
	0,
	"-1",
	"-1");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fDerived_x5ffrom_x5foutput_x5fpin", 
	"Derived from output pin",
	0,
	"0",
	"0");
create_form_set("_nCM_x5fInfiniium_x5f548xx_x5fSource_f_x5fTStepSet",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fDerived_x5ffrom_x5fsource_x5fdata",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fDerived_x5ffrom_x5foutput_x5fpin",
	"StdForm");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nCM_x5fInfiniium_x5f548xx_x5fSource_fControlSimulationSet",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fNO",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fYES",
	"StdForm");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fSingle_x5fpass", 
	"Single pass",
	0,
	"0",
	"Single pass");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fRepeat", 
	"Repeat",
	0,
	"1",
	"Repeat");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fReacquire", 
	"Reacquire",
	0,
	"2",
	"Reacquire");
create_form_set("_nCM_x5fInfiniium_x5f548xx_x5fSource_fRepeatDataSet",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fSingle_x5fpass",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fRepeat",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fReacquire",
	"StdForm");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fLagrange", 
	"Lagrange",
	0,
	"0",
	"Lagrange");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fSample_x5fand_x5fhold", 
	"Sample and hold",
	0,
	"1",
	"Sample and hold");
create_constant_form ("_nCM_x5fInfiniium_x5f548xx_x5fSource_fLinear", 
	"Linear",
	0,
	"2",
	"Linear");
create_form_set("_nCM_x5fInfiniium_x5f548xx_x5fSource_fInterpolationTypeSet",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fLagrange",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fSample_x5fand_x5fhold",
	"_nCM_x5fInfiniium_x5f548xx_x5fSource_fLinear",
	"StdForm");
create_item ("CM_Infiniium_548xx_Source1","Capture one channel from an Infiniium oscilloscope",
	"C",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_CM_Infiniium_548xx_Source1",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"CM_Infiniium_548xx_Source1",
	SPDesignAnnotFmt,
	"SYM_DSN_CM_Infiniium_548xx_Source1",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Instrument","instrument to be used in the simulation",
		PARM_STRING | PARM_NO_DISPLAY,
		"InstrumentFormSet",
		UNITLESS_UNIT,
		prm("InstrumentForm","\"[GPIB0::7::INSTR][localhost][4790]\"")),
	create_parm ("OverrideInstrumentModelCheck","if no, error if instrument model is unsupported",
		PARM_INT | PARM_NO_DISPLAY,
		"_nCM_x5fInfiniium_x5f548xx_x5fSource_fOverrideInstrumentModelCheckSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fInfiniium_x5f548xx_x5fSource_fNO","NO")),
	create_parm ("Waveform1","source data to write to output#1",
		PARM_INT,
		"_nCM_x5fInfiniium_x5f548xx_x5fSource_fWaveform1Set",
		UNITLESS_UNIT,
		prm("_nCM_x5fInfiniium_x5f548xx_x5fSource_fChannel_x5f1","Channel_1")),
	create_parm ("SetupFile","name of setup file to recall state into Infiniium",
		PARM_STRING,
		"_nCM_x5fInfiniium_x5f548xx_x5fSource_fSetupFile_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fInfiniium_x5f548xx_x5fSource_fset_x5ffile","\"\"")),
	create_parm ("UseInstrumentSettings","if yes, ignore Autoscale, TimebaseDelay and TriggerHoldoff component parameters",
		PARM_INT,
		"_nCM_x5fInfiniium_x5f548xx_x5fSource_fUseInstrumentSettingsSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fInfiniium_x5f548xx_x5fSource_fYES","YES")),
	create_parm ("InstructionTimeout","Time to wait for an instrument instruction to complete before giving up",
		PARM_INT | PARM_NO_DISPLAY,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","10")),
	create_parm ("Autoscale","perform autoscale before acquiring source data",
		PARM_INT,
		"_nCM_x5fInfiniium_x5f548xx_x5fSource_fAutoscaleSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fInfiniium_x5f548xx_x5fSource_fYES","YES")),
	create_parm ("TimebaseDelay","time interval between the trigger event and the delay reference point",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","0")),
	create_parm ("TriggerHoldoff","time the oscilloscope should wait after receiving a trigger before enabling the trigger again",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","80 nsec")),
	create_parm ("ROut","resistance",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","DefaultROut")),
	create_parm ("RTemp","physical temperature, in degrees C",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		TEMPERATURE_UNIT,
		prm("StdForm","DefaultRTemp")),
	create_parm ("TStep","simulation time step",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"_nCM_x5fInfiniium_x5f548xx_x5fSource_f_x5fTStepSet",
		TIME_UNIT,
		prm("_nCM_x5fInfiniium_x5f548xx_x5fSource_fDerived_x5ffrom_x5fsource_x5fdata","Derived_from_source_data")),
	create_parm ("ControlSimulation","control simulation",
		PARM_INT,
		"_nCM_x5fInfiniium_x5f548xx_x5fSource_fControlSimulationSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fInfiniium_x5f548xx_x5fSource_fNO","NO")),
	create_parm ("SegmentLength","if non-zero, truncate or zero pad source data to this length",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","0")),
	create_parm ("RepeatData","control operation at the end of source data",
		PARM_INT,
		"_nCM_x5fInfiniium_x5f548xx_x5fSource_fRepeatDataSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fInfiniium_x5f548xx_x5fSource_fSingle_x5fpass","Single_pass")),
	create_parm ("InterpolationType","interpolation technique to use",
		PARM_INT,
		"_nCM_x5fInfiniium_x5f548xx_x5fSource_fInterpolationTypeSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fInfiniium_x5f548xx_x5fSource_fLagrange","Lagrange")),
	create_parm ("InterpolationOrder","number of points to use if Lagrange interpolation is set",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")));
library_group("Instruments","Instruments","CM_Infiniium_548xx_Source1");
palette_group("Instruments","Instruments","CM_Infiniium_548xx_Source1");

create_constant_form ("_nCM_x5fVSA_x5fE4406A_x5fSource_fMeasured_x5ftime_x5f_x5ftimed_x5f", 
	"Measured time (timed)",
	0,
	"0",
	"Measured time (timed)");
create_constant_form ("_nCM_x5fVSA_x5fE4406A_x5fSource_fMeasured_x5fspectrum_x5f_x5ffreq_x5fcomplex_x5f", 
	"Measured spectrum (freq complex)",
	0,
	"1",
	"Measured spectrum (freq complex)");
create_form_set("_nCM_x5fVSA_x5fE4406A_x5fSource_fMeasurementSet",
	"_nCM_x5fVSA_x5fE4406A_x5fSource_fMeasured_x5ftime_x5f_x5ftimed_x5f",
	"_nCM_x5fVSA_x5fE4406A_x5fSource_fMeasured_x5fspectrum_x5f_x5ffreq_x5fcomplex_x5f",
	"StdForm");
create_constant_form ("_nCM_x5fVSA_x5fE4406A_x5fSource_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nCM_x5fVSA_x5fE4406A_x5fSource_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nCM_x5fVSA_x5fE4406A_x5fSource_fControlSimulationSet",
	"_nCM_x5fVSA_x5fE4406A_x5fSource_fNO",
	"_nCM_x5fVSA_x5fE4406A_x5fSource_fYES",
	"StdForm");
create_constant_form ("_nCM_x5fVSA_x5fE4406A_x5fSource_fRepeat", 
	"Repeat",
	0,
	"0",
	"Repeat");
create_constant_form ("_nCM_x5fVSA_x5fE4406A_x5fSource_fResample", 
	"Resample",
	0,
	"1",
	"Resample");
create_form_set("_nCM_x5fVSA_x5fE4406A_x5fSource_fRepeatDataSet",
	"_nCM_x5fVSA_x5fE4406A_x5fSource_fRepeat",
	"_nCM_x5fVSA_x5fE4406A_x5fSource_fResample",
	"StdForm");
create_constant_form ("_nCM_x5fVSA_x5fE4406A_x5fSource_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nCM_x5fVSA_x5fE4406A_x5fSource_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nCM_x5fVSA_x5fE4406A_x5fSource_fUseCurrentSettingsSet",
	"_nCM_x5fVSA_x5fE4406A_x5fSource_fNO",
	"_nCM_x5fVSA_x5fE4406A_x5fSource_fYES",
	"StdForm");
create_constant_form ("_nCM_x5fVSA_x5fE4406A_x5fSource_fImmediate", 
	"Immediate",
	0,
	"0",
	"Immediate");
create_constant_form ("_nCM_x5fVSA_x5fE4406A_x5fSource_fFront", 
	"Front",
	0,
	"1",
	"Front");
create_constant_form ("_nCM_x5fVSA_x5fE4406A_x5fSource_fRear", 
	"Rear",
	0,
	"2",
	"Rear");
create_form_set("_nCM_x5fVSA_x5fE4406A_x5fSource_fVSA_x5fTriggerSet",
	"_nCM_x5fVSA_x5fE4406A_x5fSource_fImmediate",
	"_nCM_x5fVSA_x5fE4406A_x5fSource_fFront",
	"_nCM_x5fVSA_x5fE4406A_x5fSource_fRear",
	"StdForm");
create_item ("CM_VSA_E444xA_Source","E444xA Vector Signal Analyzer",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CM_VSA_E444xA_Source",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dTSDF_nCM_x5fVSA_x5fE4406A_x5fSource_lmsrvsimstars_aCM_x5fVSA_x5fE444xA_x5fSource",
	SPComponentAnnotFmt,
	"SYM_CM_VSA_E444xA_Source",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Instrument","instrument to be used in the simulation",
		PARM_STRING | PARM_NO_DISPLAY,
		"InstrumentFormSet",
		UNITLESS_UNIT,
		prm("InstrumentForm","\"[GPIB0::17::INSTR][localhost][4790]\"")),
	create_parm ("Measurement","measurement type",
		PARM_INT,
		"_nCM_x5fVSA_x5fE4406A_x5fSource_fMeasurementSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fVSA_x5fE4406A_x5fSource_fMeasured_x5ftime_x5f_x5ftimed_x5f","Measured_time__timed_")),
	create_parm ("ControlSimulation","control simulation",
		PARM_INT,
		"_nCM_x5fVSA_x5fE4406A_x5fSource_fControlSimulationSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fVSA_x5fE4406A_x5fSource_fNO","NO")),
	create_parm ("RepeatData","repeat data or resample instrument",
		PARM_INT,
		"_nCM_x5fVSA_x5fE4406A_x5fSource_fRepeatDataSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fVSA_x5fE4406A_x5fSource_fRepeat","Repeat")),
	create_parm ("UseCurrentSettings","use current instrument settings",
		PARM_INT,
		"_nCM_x5fVSA_x5fE4406A_x5fSource_fUseCurrentSettingsSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fVSA_x5fE4406A_x5fSource_fYES","YES")),
	create_parm ("CenterFrequency","set center frequency",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","100 MHz")),
	create_parm ("Span","set frequency span",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","1 MHz")),
	create_parm ("ResBW","set resolution bandwidth",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","100 kHz")),
	create_parm ("SweepTime","set sweep time",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","2 msec")),
	create_parm ("VSA_Trigger","set VSA trigger type",
		PARM_INT | PARM_NO_DISPLAY,
		"_nCM_x5fVSA_x5fE4406A_x5fSource_fVSA_x5fTriggerSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fVSA_x5fE4406A_x5fSource_fImmediate","Immediate")));
library_group("Instruments","Instruments","CM_VSA_E444xA_Source");
palette_group("Instruments","Instruments","CM_VSA_E444xA_Source");

create_text_form ("_nCM_x5fN6030_x5fFileWrite_fbin_x5ffile", 
	"File with bin extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "bin"), prefix_path_to_data_file);
create_form_set ( "_nCM_x5fN6030_x5fFileWrite_fFileNameI_x5fFileSet",
	"_nCM_x5fN6030_x5fFileWrite_fbin_x5ffile");
create_text_form ("_nCM_x5fN6030_x5fFileWrite_fbin_x5ffile", 
	"File with bin extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "bin"), prefix_path_to_data_file);
create_form_set ( "_nCM_x5fN6030_x5fFileWrite_fFileNameQ_x5fFileSet",
	"_nCM_x5fN6030_x5fFileWrite_fbin_x5ffile");
create_constant_form ("_nCM_x5fN6030_x5fFileWrite_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nCM_x5fN6030_x5fFileWrite_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nCM_x5fN6030_x5fFileWrite_fControlSimulationSet",
	"_nCM_x5fN6030_x5fFileWrite_fNO",
	"_nCM_x5fN6030_x5fFileWrite_fYES",
	"StdForm");
create_constant_form ("_nCM_x5fN6030_x5fFileWrite_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nCM_x5fN6030_x5fFileWrite_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nCM_x5fN6030_x5fFileWrite_fAutoScalingSet",
	"_nCM_x5fN6030_x5fFileWrite_fNO",
	"_nCM_x5fN6030_x5fFileWrite_fYES",
	"StdForm");
create_item ("CM_N6030_FileWrite","N6030 Arbitrary Waveform Generator file writer",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CM_N6030_FileWrite",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCM_x5fN6030_x5fFileWrite_lmsrvsimstars",
	SPComponentAnnotFmt,
	"SYM_CM_N6030_FileWrite",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Start","sample number to start waveform recording",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","DefaultNumericStart")),
	create_parm ("Stop","sample number to stop waveform recording",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","DefaultNumericStop")),
	create_parm ("FileNameI","Output baseband studio file name for In-channel data",
		PARM_STRING,
		"_nCM_x5fN6030_x5fFileWrite_fFileNameI_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fN6030_x5fFileWrite_fbin_x5ffile","\"file_i.bin\"")),
	create_parm ("FileNameQ","Output baseband studio file name for Quadrature-channel data",
		PARM_STRING,
		"_nCM_x5fN6030_x5fFileWrite_fFileNameQ_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fN6030_x5fFileWrite_fbin_x5ffile","\"file_q.bin\"")),
	create_parm ("ControlSimulation","control simulation",
		PARM_INT,
		"_nCM_x5fN6030_x5fFileWrite_fControlSimulationSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fN6030_x5fFileWrite_fYES","YES")),
	create_parm ("AutoScaling","scale input data to fit dynamic range of ESG DAC",
		PARM_INT,
		"_nCM_x5fN6030_x5fFileWrite_fAutoScalingSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fN6030_x5fFileWrite_fYES","YES")),
	create_parm ("FullScaleFactor","Full scale factor for peak value, when autoscale is used",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1.0")));
library_group("Instruments","Instruments","CM_N6030_FileWrite");
palette_group("Instruments","Instruments","CM_N6030_FileWrite");

create_text_form ("_nCM_x5fBB_x5fStudioStreamRead_fbin_x5ffile", 
	"File with bin extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "bin"), prefix_path_to_data_file);
create_form_set ( "_nCM_x5fBB_x5fStudioStreamRead_fFileName_x5fFileSet",
	"_nCM_x5fBB_x5fStudioStreamRead_fbin_x5ffile");
create_constant_form ("_nCM_x5fBB_x5fStudioStreamRead_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nCM_x5fBB_x5fStudioStreamRead_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nCM_x5fBB_x5fStudioStreamRead_fControlSimulationSet",
	"_nCM_x5fBB_x5fStudioStreamRead_fNO",
	"_nCM_x5fBB_x5fStudioStreamRead_fYES",
	"StdForm");
create_constant_form ("_nCM_x5fBB_x5fStudioStreamRead_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nCM_x5fBB_x5fStudioStreamRead_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nCM_x5fBB_x5fStudioStreamRead_fPeriodicSet",
	"_nCM_x5fBB_x5fStudioStreamRead_fNO",
	"_nCM_x5fBB_x5fStudioStreamRead_fYES",
	"StdForm");
create_constant_form ("_nCM_x5fBB_x5fStudioStreamRead_fzero_x5fMarkers_x5f_x5f16_x5fBit_x5fIQ_x5f", 
	"zero Markers (16 Bit IQ)",
	0,
	"0",
	"zero Markers (16 Bit IQ)");
create_constant_form ("_nCM_x5fBB_x5fStudioStreamRead_ftwo_x5fMarkers_x5f_x5f15_x5fBit_x5fIQ_x5f", 
	"two Markers (15 Bit IQ)",
	0,
	"1",
	"two Markers (15 Bit IQ)");
create_constant_form ("_nCM_x5fBB_x5fStudioStreamRead_ffour_x5fMarkers_x5f_x5f14_x5fBit_x5fIQ_x5f", 
	"four Markers (14 Bit IQ)",
	0,
	"2",
	"four Markers (14 Bit IQ)");
create_form_set("_nCM_x5fBB_x5fStudioStreamRead_fMarkerFormatSet",
	"_nCM_x5fBB_x5fStudioStreamRead_fzero_x5fMarkers_x5f_x5f16_x5fBit_x5fIQ_x5f",
	"_nCM_x5fBB_x5fStudioStreamRead_ftwo_x5fMarkers_x5f_x5f15_x5fBit_x5fIQ_x5f",
	"_nCM_x5fBB_x5fStudioStreamRead_ffour_x5fMarkers_x5f_x5f14_x5fBit_x5fIQ_x5f",
	"StdForm");
create_item ("CM_BB_StudioStreamRead","Baseband Studio for Streaming file reader",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CM_BB_StudioStreamRead",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCM_x5fBB_x5fStudioStreamRead_lmsrvsimstars",
	SPComponentAnnotFmt,
	"SYM_CM_BB_StudioStreamRead",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("FileName","input baseband studio file name",
		PARM_STRING,
		"_nCM_x5fBB_x5fStudioStreamRead_fFileName_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fBB_x5fStudioStreamRead_fbin_x5ffile","\"file.bin\"")),
	create_parm ("ControlSimulation","control simulation",
		PARM_INT,
		"_nCM_x5fBB_x5fStudioStreamRead_fControlSimulationSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fBB_x5fStudioStreamRead_fNO","NO")),
	create_parm ("Periodic","periodic output",
		PARM_INT,
		"_nCM_x5fBB_x5fStudioStreamRead_fPeriodicSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fBB_x5fStudioStreamRead_fYES","YES")),
	create_parm ("MarkerFormat","format of marker bits embedded in IQ data",
		PARM_INT,
		"_nCM_x5fBB_x5fStudioStreamRead_fMarkerFormatSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fBB_x5fStudioStreamRead_fzero_x5fMarkers_x5f_x5f16_x5fBit_x5fIQ_x5f","zero_Markers__16_Bit_IQ_")));
library_group("Instruments","Instruments","CM_BB_StudioStreamRead");
palette_group("Instruments","Instruments","CM_BB_StudioStreamRead");

create_text_form ("_nCM_x5fBB_x5fStudioStreamWrite_fbin_x5ffile", 
	"File with bin extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "bin"), prefix_path_to_data_file);
create_form_set ( "_nCM_x5fBB_x5fStudioStreamWrite_fFileName_x5fFileSet",
	"_nCM_x5fBB_x5fStudioStreamWrite_fbin_x5ffile");
create_constant_form ("_nCM_x5fBB_x5fStudioStreamWrite_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nCM_x5fBB_x5fStudioStreamWrite_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nCM_x5fBB_x5fStudioStreamWrite_fControlSimulationSet",
	"_nCM_x5fBB_x5fStudioStreamWrite_fNO",
	"_nCM_x5fBB_x5fStudioStreamWrite_fYES",
	"StdForm");
create_constant_form ("_nCM_x5fBB_x5fStudioStreamWrite_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nCM_x5fBB_x5fStudioStreamWrite_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nCM_x5fBB_x5fStudioStreamWrite_fAutoScalingSet",
	"_nCM_x5fBB_x5fStudioStreamWrite_fNO",
	"_nCM_x5fBB_x5fStudioStreamWrite_fYES",
	"StdForm");
create_item ("CM_BB_StudioStreamWrite","Baseband Studio for Streaming file writer",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CM_BB_StudioStreamWrite",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCM_x5fBB_x5fStudioStreamWrite_lmsrvsimstars",
	SPComponentAnnotFmt,
	"SYM_CM_BB_StudioStreamWrite",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Start","sample number to start waveform recording",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","DefaultNumericStart")),
	create_parm ("Stop","sample number to stop waveform recording",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","DefaultNumericStop")),
	create_parm ("FileName","Output baseband studio file name",
		PARM_STRING,
		"_nCM_x5fBB_x5fStudioStreamWrite_fFileName_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fBB_x5fStudioStreamWrite_fbin_x5ffile","\"file.bin\"")),
	create_parm ("ControlSimulation","control simulation",
		PARM_INT,
		"_nCM_x5fBB_x5fStudioStreamWrite_fControlSimulationSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fBB_x5fStudioStreamWrite_fYES","YES")),
	create_parm ("AutoScaling","scale input data to fit dynamic range of ESG DAC",
		PARM_INT,
		"_nCM_x5fBB_x5fStudioStreamWrite_fAutoScalingSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fBB_x5fStudioStreamWrite_fYES","YES")));
library_group("Instruments","Instruments","CM_BB_StudioStreamWrite");
palette_group("Instruments","Instruments","CM_BB_StudioStreamWrite");

create_text_form ("_nCM_x5fPatGen_x5f169xx_x5fSink_ftxt_x5ffile", 
	"File with txt extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "txt"), prefix_path_to_data_file);
create_form_set ( "_nCM_x5fPatGen_x5f169xx_x5fSink_fInstrumentSetupFile_x5fFileSet",
	"_nCM_x5fPatGen_x5f169xx_x5fSink_ftxt_x5ffile");
create_text_form ("_nCM_x5fPatGen_x5f169xx_x5fSink_fpgb_x5ffile", 
	"File with pgb extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "pgb"), prefix_path_to_data_file);
create_form_set ( "_nCM_x5fPatGen_x5f169xx_x5fSink_fPGBFileName_x5fFileSet",
	"_nCM_x5fPatGen_x5f169xx_x5fSink_fpgb_x5ffile");
create_constant_form ("_nCM_x5fPatGen_x5f169xx_x5fSink_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nCM_x5fPatGen_x5f169xx_x5fSink_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nCM_x5fPatGen_x5f169xx_x5fSink_fOverwriteExistingFileSet",
	"_nCM_x5fPatGen_x5f169xx_x5fSink_fNO",
	"_nCM_x5fPatGen_x5f169xx_x5fSink_fYES",
	"StdForm");
create_constant_form ("_nCM_x5fPatGen_x5f169xx_x5fSink_fHalfChannel", 
	"HalfChannel",
	0,
	"0",
	"HalfChannel");
create_constant_form ("_nCM_x5fPatGen_x5f169xx_x5fSink_fFullChannel", 
	"FullChannel",
	0,
	"1",
	"FullChannel");
create_form_set("_nCM_x5fPatGen_x5f169xx_x5fSink_fOutputModeSet",
	"_nCM_x5fPatGen_x5f169xx_x5fSink_fHalfChannel",
	"_nCM_x5fPatGen_x5f169xx_x5fSink_fFullChannel",
	"StdForm");
create_constant_form ("_nCM_x5fPatGen_x5f169xx_x5fSink_fInternal", 
	"Internal",
	0,
	"0",
	"Internal");
create_constant_form ("_nCM_x5fPatGen_x5f169xx_x5fSink_fExternal", 
	"External",
	0,
	"1",
	"External");
create_form_set("_nCM_x5fPatGen_x5f169xx_x5fSink_fClkSourceSet",
	"_nCM_x5fPatGen_x5f169xx_x5fSink_fInternal",
	"_nCM_x5fPatGen_x5f169xx_x5fSink_fExternal",
	"StdForm");
create_constant_form ("_nCM_x5fPatGen_x5f169xx_x5fSink_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nCM_x5fPatGen_x5f169xx_x5fSink_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nCM_x5fPatGen_x5f169xx_x5fSink_fRunAfterLoadingSet",
	"_nCM_x5fPatGen_x5f169xx_x5fSink_fNO",
	"_nCM_x5fPatGen_x5f169xx_x5fSink_fYES",
	"StdForm");
create_constant_form ("_nCM_x5fPatGen_x5f169xx_x5fSink_fSinglePass", 
	"SinglePass",
	0,
	"0",
	"SinglePass");
create_constant_form ("_nCM_x5fPatGen_x5f169xx_x5fSink_fRepeat", 
	"Repeat",
	0,
	"1",
	"Repeat");
create_form_set("_nCM_x5fPatGen_x5f169xx_x5fSink_fRunModeSet",
	"_nCM_x5fPatGen_x5f169xx_x5fSink_fSinglePass",
	"_nCM_x5fPatGen_x5f169xx_x5fSink_fRepeat",
	"StdForm");
create_text_form ("_nCM_x5fPatGen_x5f169xx_x5fSink_fpgb_x5ffile", 
	"File with pgb extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "pgb"), prefix_path_to_data_file);
create_form_set ( "_nCM_x5fPatGen_x5f169xx_x5fSink_fInitSequenceFile_x5fFileSet",
	"_nCM_x5fPatGen_x5f169xx_x5fSink_fpgb_x5ffile");
create_constant_form ("_nCM_x5fPatGen_x5f169xx_x5fSink_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nCM_x5fPatGen_x5f169xx_x5fSink_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nCM_x5fPatGen_x5f169xx_x5fSink_fControlSimulationSet",
	"_nCM_x5fPatGen_x5f169xx_x5fSink_fNO",
	"_nCM_x5fPatGen_x5f169xx_x5fSink_fYES",
	"StdForm");
create_item ("CM_PatGen_169xx_Sink","Downloads data to a pattern generator module housed in a 169xx mainframe",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CM_PatGen_169xx_Sink",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCM_x5fPatGen_x5f169xx_x5fSink_lmsrvsimstars",
	SPComponentAnnotFmt,
	"SYM_CM_PatGen_169xx_Sink",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("InstrumentHostname","Logic Analysis System hostname or IP address",
		PARM_STRING,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"localhost\"")),
	create_parm ("InstrumentSetupFile","name of instrument state file",
		PARM_STRING,
		"_nCM_x5fPatGen_x5f169xx_x5fSink_fInstrumentSetupFile_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fPatGen_x5f169xx_x5fSink_ftxt_x5ffile","\"\"")),
	create_parm ("ModuleName","name of the PattGen module to be used",
		PARM_STRING,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"My 16720A-1\"")),
	create_parm ("BusSignalNames","names of bus signals in analyzer memory",
		PARM_STRINGARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"MyBus1\"")),
	create_parm ("Start","sample number to start data recording",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","DefaultNumericStart")),
	create_parm ("Stop","sample number to stop data recording",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","DefaultNumericStop")),
	create_parm ("PGBFileName","name of pattern generator binary file",
		PARM_STRING,
		"_nCM_x5fPatGen_x5f169xx_x5fSink_fPGBFileName_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fPatGen_x5f169xx_x5fSink_fpgb_x5ffile","\"PattGen.pgb\"")),
	create_parm ("OverwriteExistingFile","overwrite if file exists",
		PARM_INT | PARM_NO_DISPLAY,
		"_nCM_x5fPatGen_x5f169xx_x5fSink_fOverwriteExistingFileSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fPatGen_x5f169xx_x5fSink_fYES","YES")),
	create_parm ("OutputMode","output channel mode",
		PARM_INT,
		"_nCM_x5fPatGen_x5f169xx_x5fSink_fOutputModeSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fPatGen_x5f169xx_x5fSink_fHalfChannel","HalfChannel")),
	create_parm ("ClkSource","clock source",
		PARM_INT,
		"_nCM_x5fPatGen_x5f169xx_x5fSink_fClkSourceSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fPatGen_x5f169xx_x5fSink_fInternal","Internal")),
	create_parm ("IntClkFrequency","internal clock frequency",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","180e6")),
	create_parm ("ClkOutDelay","delay the clock by multiple of 500 ps",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("RunAfterLoading","clock data out of pattgen after download",
		PARM_INT,
		"_nCM_x5fPatGen_x5f169xx_x5fSink_fRunAfterLoadingSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fPatGen_x5f169xx_x5fSink_fYES","YES")),
	create_parm ("RunMode","cycle through data once or repeat data",
		PARM_INT | PARM_NO_DISPLAY,
		"_nCM_x5fPatGen_x5f169xx_x5fSink_fRunModeSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fPatGen_x5f169xx_x5fSink_fRepeat","Repeat")),
	create_parm ("InitSequenceFile","text file containing initial sequence data",
		PARM_STRING | PARM_NO_DISPLAY,
		"_nCM_x5fPatGen_x5f169xx_x5fSink_fInitSequenceFile_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fPatGen_x5f169xx_x5fSink_fpgb_x5ffile","\"\"")),
	create_parm ("ControlSimulation","control simulation",
		PARM_INT,
		"_nCM_x5fPatGen_x5f169xx_x5fSink_fControlSimulationSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fPatGen_x5f169xx_x5fSink_fYES","YES")));
library_group("Instruments","Instruments","CM_PatGen_169xx_Sink");
palette_group("Instruments","Instruments","CM_PatGen_169xx_Sink");

create_constant_form ("_nCM_x5fLA_x5f169xx_x5fSource_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nCM_x5fLA_x5f169xx_x5fSource_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nCM_x5fLA_x5f169xx_x5fSource_fRunBeforeCaptureSet",
	"_nCM_x5fLA_x5f169xx_x5fSource_fNO",
	"_nCM_x5fLA_x5f169xx_x5fSource_fYES",
	"StdForm");
create_constant_form ("_nCM_x5fLA_x5f169xx_x5fSource_fSinglePass", 
	"SinglePass",
	0,
	"0",
	"SinglePass");
create_constant_form ("_nCM_x5fLA_x5f169xx_x5fSource_fRepeat", 
	"Repeat",
	0,
	"1",
	"Repeat");
create_form_set("_nCM_x5fLA_x5f169xx_x5fSource_fRepeatDataSet",
	"_nCM_x5fLA_x5f169xx_x5fSource_fSinglePass",
	"_nCM_x5fLA_x5f169xx_x5fSource_fRepeat",
	"StdForm");
create_constant_form ("_nCM_x5fLA_x5f169xx_x5fSource_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nCM_x5fLA_x5f169xx_x5fSource_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nCM_x5fLA_x5f169xx_x5fSource_fControlSimulationSet",
	"_nCM_x5fLA_x5f169xx_x5fSource_fNO",
	"_nCM_x5fLA_x5f169xx_x5fSource_fYES",
	"StdForm");
create_item ("CM_LA_169xx_Source","Waveform output using data downloaded from an analyzer that resides in a 169xx mainframe",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CM_LA_169xx_Source",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCM_x5fLA_x5f169xx_x5fSource_lmsrvsimstars",
	SPComponentAnnotFmt,
	"SYM_CM_LA_169xx_Source",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("InstrumentHostname","Logic Analysis System hostname or IP address",
		PARM_STRING,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"la16900\"")),
	create_parm ("InstrumentSetupFile","name of instrument state file",
		PARM_STRING | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("ModuleName","name of the Analyzer module to be used",
		PARM_STRING,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"My 168x/9x-1\"")),
	create_parm ("BusSignalNames","names of bus signals in analyzer memory",
		PARM_STRINGARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"MyBus1\"")),
	create_parm ("StartingSampleNumber","index of starting sample in analyzer",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","DefaultNumericStart")),
	create_parm ("EndingSampleNumber","index of ending sample in analyzer",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","DefaultNumericStop")),
	create_parm ("RunBeforeCapture","run new measurement before retrieving data",
		PARM_INT | PARM_NO_DISPLAY,
		"_nCM_x5fLA_x5f169xx_x5fSource_fRunBeforeCaptureSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fLA_x5f169xx_x5fSource_fNO","NO")),
	create_parm ("RepeatData","zero-pad, repeat data",
		PARM_INT,
		"_nCM_x5fLA_x5f169xx_x5fSource_fRepeatDataSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fLA_x5f169xx_x5fSource_fRepeat","Repeat")),
	create_parm ("ControlSimulation","control simulation",
		PARM_INT,
		"_nCM_x5fLA_x5f169xx_x5fSource_fControlSimulationSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fLA_x5f169xx_x5fSource_fNO","NO")),
	create_parm ("TimeoutInSeconds","The length of time to wait, in seconds, before giving up on data transfer",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","120")));
library_group("Instruments","Instruments","CM_LA_169xx_Source");
palette_group("Instruments","Instruments","CM_LA_169xx_Source");

create_constant_form ("_nInterpTest_fDerived_x5ffrom_x5fsource_x5fdata", 
	"Derived from source data",
	0,
	"-1",
	"-1");
create_constant_form ("_nInterpTest_fDerived_x5ffrom_x5foutput_x5fpin", 
	"Derived from output pin",
	0,
	"0",
	"0");
create_form_set("_nInterpTest_f_x5fTStepSet",
	"_nInterpTest_fDerived_x5ffrom_x5fsource_x5fdata",
	"_nInterpTest_fDerived_x5ffrom_x5foutput_x5fpin",
	"StdForm");
create_constant_form ("_nInterpTest_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nInterpTest_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nInterpTest_fControlSimulationSet",
	"_nInterpTest_fNO",
	"_nInterpTest_fYES",
	"StdForm");
create_constant_form ("_nInterpTest_fSingle_x5fpass", 
	"Single pass",
	0,
	"0",
	"Single pass");
create_constant_form ("_nInterpTest_fRepeat", 
	"Repeat",
	0,
	"1",
	"Repeat");
create_constant_form ("_nInterpTest_fReacquire", 
	"Reacquire",
	0,
	"2",
	"Reacquire");
create_form_set("_nInterpTest_fRepeatDataSet",
	"_nInterpTest_fSingle_x5fpass",
	"_nInterpTest_fRepeat",
	"_nInterpTest_fReacquire",
	"StdForm");
create_constant_form ("_nInterpTest_fLagrange", 
	"Lagrange",
	0,
	"0",
	"Lagrange");
create_constant_form ("_nInterpTest_fSample_x5fand_x5fhold", 
	"Sample and hold",
	0,
	"1",
	"Sample and hold");
create_constant_form ("_nInterpTest_fLinear", 
	"Linear",
	0,
	"2",
	"Linear");
create_form_set("_nInterpTest_fInterpolationTypeSet",
	"_nInterpTest_fLagrange",
	"_nInterpTest_fSample_x5fand_x5fhold",
	"_nInterpTest_fLinear",
	"StdForm");
create_item ("InterpTest","",
	"I",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_InterpTest",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dTSDF_nInterpTest_lmsrvsimstars",
	SPComponentAnnotFmt,
	"SYM_InterpTest",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Waveform","Waveform",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"1, 2, 3, 4\"")),
	create_parm ("WaveformTStep","Waveform time step",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","1 sec")),
	create_parm ("Carrier","Carrier",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","1 GHz")),
	create_parm ("TStep","simulation time step",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"_nInterpTest_f_x5fTStepSet",
		TIME_UNIT,
		prm("_nInterpTest_fDerived_x5ffrom_x5fsource_x5fdata","Derived_from_source_data")),
	create_parm ("ControlSimulation","control simulation",
		PARM_INT,
		"_nInterpTest_fControlSimulationSet",
		UNITLESS_UNIT,
		prm("_nInterpTest_fNO","NO")),
	create_parm ("SegmentLength","if non-zero, truncate or zero pad source data to this length",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","0")),
	create_parm ("RepeatData","control operation at the end of source data",
		PARM_INT,
		"_nInterpTest_fRepeatDataSet",
		UNITLESS_UNIT,
		prm("_nInterpTest_fSingle_x5fpass","Single_pass")),
	create_parm ("InterpolationType","interpolation technique to use",
		PARM_INT,
		"_nInterpTest_fInterpolationTypeSet",
		UNITLESS_UNIT,
		prm("_nInterpTest_fLagrange","Lagrange")),
	create_parm ("InterpolationOrder","number of points to use if Lagrange interpolation is set",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")));
library_group("Testing (for development use only)","Testing (for development use only)","InterpTest");
palette_group("Testing (for development use only)","Testing (for development use only)","InterpTest");

create_text_form ("_nCM_x5fSStudioFileRead_fwfm_x5ffile", 
	"File with wfm extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "wfm"), prefix_path_to_data_file);
create_text_form ("_nCM_x5fSStudioFileRead_fmat_x5ffile", 
	"File with mat extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "mat"), prefix_path_to_data_file);
create_text_form ("_nCM_x5fSStudioFileRead_fbin_x5ffile", 
	"File with bin extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "bin"), prefix_path_to_data_file);
create_form_set ( "_nCM_x5fSStudioFileRead_fFileName_x5fFileSet",
	"_nCM_x5fSStudioFileRead_fwfm_x5ffile",
	"_nCM_x5fSStudioFileRead_fmat_x5ffile",
	"_nCM_x5fSStudioFileRead_fbin_x5ffile");
create_constant_form ("_nCM_x5fSStudioFileRead_fDerived_x5ffrom_x5fsource_x5fdata", 
	"Derived from source data",
	0,
	"-1",
	"-1");
create_constant_form ("_nCM_x5fSStudioFileRead_fDerived_x5ffrom_x5foutput_x5fpin", 
	"Derived from output pin",
	0,
	"0",
	"0");
create_form_set("_nCM_x5fSStudioFileRead_f_x5fTStepSet",
	"_nCM_x5fSStudioFileRead_fDerived_x5ffrom_x5fsource_x5fdata",
	"_nCM_x5fSStudioFileRead_fDerived_x5ffrom_x5foutput_x5fpin",
	"StdForm");
create_constant_form ("_nCM_x5fSStudioFileRead_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nCM_x5fSStudioFileRead_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nCM_x5fSStudioFileRead_fControlSimulationSet",
	"_nCM_x5fSStudioFileRead_fNO",
	"_nCM_x5fSStudioFileRead_fYES",
	"StdForm");
create_constant_form ("_nCM_x5fSStudioFileRead_fSingle_x5fpass", 
	"Single pass",
	0,
	"0",
	"Single pass");
create_constant_form ("_nCM_x5fSStudioFileRead_fRepeat", 
	"Repeat",
	0,
	"1",
	"Repeat");
create_form_set("_nCM_x5fSStudioFileRead_fRepeatDataSet",
	"_nCM_x5fSStudioFileRead_fSingle_x5fpass",
	"_nCM_x5fSStudioFileRead_fRepeat",
	"StdForm");
create_constant_form ("_nCM_x5fSStudioFileRead_fLagrange", 
	"Lagrange",
	0,
	"0",
	"Lagrange");
create_constant_form ("_nCM_x5fSStudioFileRead_fSample_x5fand_x5fhold", 
	"Sample and hold",
	0,
	"1",
	"Sample and hold");
create_constant_form ("_nCM_x5fSStudioFileRead_fLinear", 
	"Linear",
	0,
	"2",
	"Linear");
create_form_set("_nCM_x5fSStudioFileRead_fInterpolationTypeSet",
	"_nCM_x5fSStudioFileRead_fLagrange",
	"_nCM_x5fSStudioFileRead_fSample_x5fand_x5fhold",
	"_nCM_x5fSStudioFileRead_fLinear",
	"StdForm");
create_constant_form ("_nCM_x5fSStudioFileRead_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nCM_x5fSStudioFileRead_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nCM_x5fSStudioFileRead_fUseFileFCarrierSet",
	"_nCM_x5fSStudioFileRead_fNO",
	"_nCM_x5fSStudioFileRead_fYES",
	"StdForm");
create_item ("CM_SStudioFileRead","Time domain signal generator with signalstudio encrypted file based data",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CM_SStudioFileRead",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dTSDF_nCM_x5fSStudioFileRead_lmsrvsimstars",
	SPComponentAnnotFmt,
	"SYM_CM_SStudioFileRead",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("FileName","Input file name",
		PARM_STRING,
		"_nCM_x5fSStudioFileRead_fFileName_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fSStudioFileRead_fwfm_x5ffile","\"esg.wfm\"")),
	create_parm ("TStep","simulation time step",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"_nCM_x5fSStudioFileRead_f_x5fTStepSet",
		TIME_UNIT,
		prm("_nCM_x5fSStudioFileRead_fDerived_x5ffrom_x5fsource_x5fdata","Derived_from_source_data")),
	create_parm ("ControlSimulation","control simulation",
		PARM_INT,
		"_nCM_x5fSStudioFileRead_fControlSimulationSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fSStudioFileRead_fNO","NO")),
	create_parm ("SegmentLength","if non-zero, truncate or zero pad source data to this length",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","0")),
	create_parm ("RepeatData","control operation at the end of source data",
		PARM_INT,
		"_nCM_x5fSStudioFileRead_fRepeatDataSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fSStudioFileRead_fSingle_x5fpass","Single_pass")),
	create_parm ("InterpolationType","interpolation technique to use",
		PARM_INT,
		"_nCM_x5fSStudioFileRead_fInterpolationTypeSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fSStudioFileRead_fLagrange","Lagrange")),
	create_parm ("InterpolationOrder","number of points to use if Lagrange interpolation is set",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("UseFileFCarrier","Determines whether to use the carrier frequency in the WFM file or FCarrier parameter",
		PARM_INT,
		"_nCM_x5fSStudioFileRead_fUseFileFCarrierSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fSStudioFileRead_fYES","YES")),
	create_parm ("FCarrier","Carrier frequency used when UseFileFCarrier is set to NO",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","1000000.0")));
library_group("Instruments","Instruments","CM_SStudioFileRead");
palette_group("Instruments","Instruments","CM_SStudioFileRead");

create_constant_form ("_nCM_x5fVSA_x5fE4406A_x5fSource_fMeasured_x5ftime_x5f_x5ftimed_x5f", 
	"Measured time (timed)",
	0,
	"0",
	"Measured time (timed)");
create_constant_form ("_nCM_x5fVSA_x5fE4406A_x5fSource_fMeasured_x5fspectrum_x5f_x5ffreq_x5fcomplex_x5f", 
	"Measured spectrum (freq complex)",
	0,
	"1",
	"Measured spectrum (freq complex)");
create_form_set("_nCM_x5fVSA_x5fE4406A_x5fSource_fMeasurementSet",
	"_nCM_x5fVSA_x5fE4406A_x5fSource_fMeasured_x5ftime_x5f_x5ftimed_x5f",
	"_nCM_x5fVSA_x5fE4406A_x5fSource_fMeasured_x5fspectrum_x5f_x5ffreq_x5fcomplex_x5f",
	"StdForm");
create_constant_form ("_nCM_x5fVSA_x5fE4406A_x5fSource_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nCM_x5fVSA_x5fE4406A_x5fSource_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nCM_x5fVSA_x5fE4406A_x5fSource_fControlSimulationSet",
	"_nCM_x5fVSA_x5fE4406A_x5fSource_fNO",
	"_nCM_x5fVSA_x5fE4406A_x5fSource_fYES",
	"StdForm");
create_constant_form ("_nCM_x5fVSA_x5fE4406A_x5fSource_fRepeat", 
	"Repeat",
	0,
	"0",
	"Repeat");
create_constant_form ("_nCM_x5fVSA_x5fE4406A_x5fSource_fResample", 
	"Resample",
	0,
	"1",
	"Resample");
create_form_set("_nCM_x5fVSA_x5fE4406A_x5fSource_fRepeatDataSet",
	"_nCM_x5fVSA_x5fE4406A_x5fSource_fRepeat",
	"_nCM_x5fVSA_x5fE4406A_x5fSource_fResample",
	"StdForm");
create_constant_form ("_nCM_x5fVSA_x5fE4406A_x5fSource_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nCM_x5fVSA_x5fE4406A_x5fSource_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nCM_x5fVSA_x5fE4406A_x5fSource_fUseCurrentSettingsSet",
	"_nCM_x5fVSA_x5fE4406A_x5fSource_fNO",
	"_nCM_x5fVSA_x5fE4406A_x5fSource_fYES",
	"StdForm");
create_constant_form ("_nCM_x5fVSA_x5fE4406A_x5fSource_fImmediate", 
	"Immediate",
	0,
	"0",
	"Immediate");
create_constant_form ("_nCM_x5fVSA_x5fE4406A_x5fSource_fFront", 
	"Front",
	0,
	"1",
	"Front");
create_constant_form ("_nCM_x5fVSA_x5fE4406A_x5fSource_fRear", 
	"Rear",
	0,
	"2",
	"Rear");
create_form_set("_nCM_x5fVSA_x5fE4406A_x5fSource_fVSA_x5fTriggerSet",
	"_nCM_x5fVSA_x5fE4406A_x5fSource_fImmediate",
	"_nCM_x5fVSA_x5fE4406A_x5fSource_fFront",
	"_nCM_x5fVSA_x5fE4406A_x5fSource_fRear",
	"StdForm");
create_item ("CM_VSA_E4406A_Source","E4406A Vector Signal Anayzer",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CM_VSA_E4406A_Source",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dTSDF_nCM_x5fVSA_x5fE4406A_x5fSource_lmsrvsimstars",
	SPComponentAnnotFmt,
	"SYM_CM_VSA_E4406A_Source",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Instrument","instrument to be used in the simulation",
		PARM_STRING | PARM_NO_DISPLAY,
		"InstrumentFormSet",
		UNITLESS_UNIT,
		prm("InstrumentForm","\"[GPIB0::17::INSTR][localhost][4790]\"")),
	create_parm ("Measurement","measurement type",
		PARM_INT,
		"_nCM_x5fVSA_x5fE4406A_x5fSource_fMeasurementSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fVSA_x5fE4406A_x5fSource_fMeasured_x5ftime_x5f_x5ftimed_x5f","Measured_time__timed_")),
	create_parm ("ControlSimulation","control simulation",
		PARM_INT,
		"_nCM_x5fVSA_x5fE4406A_x5fSource_fControlSimulationSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fVSA_x5fE4406A_x5fSource_fNO","NO")),
	create_parm ("RepeatData","repeat data or resample instrument",
		PARM_INT,
		"_nCM_x5fVSA_x5fE4406A_x5fSource_fRepeatDataSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fVSA_x5fE4406A_x5fSource_fRepeat","Repeat")),
	create_parm ("UseCurrentSettings","use current instrument settings",
		PARM_INT,
		"_nCM_x5fVSA_x5fE4406A_x5fSource_fUseCurrentSettingsSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fVSA_x5fE4406A_x5fSource_fYES","YES")),
	create_parm ("CenterFrequency","set center frequency",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","100 MHz")),
	create_parm ("Span","set frequency span",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","1 MHz")),
	create_parm ("ResBW","set resolution bandwidth",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","100 kHz")),
	create_parm ("SweepTime","set sweep time",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","2 msec")),
	create_parm ("VSA_Trigger","set VSA trigger type",
		PARM_INT | PARM_NO_DISPLAY,
		"_nCM_x5fVSA_x5fE4406A_x5fSource_fVSA_x5fTriggerSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fVSA_x5fE4406A_x5fSource_fImmediate","Immediate")));
library_group("Instruments","Instruments","CM_VSA_E4406A_Source");
palette_group("Instruments","Instruments","CM_VSA_E4406A_Source");

create_constant_form ("_nCM_x5fPSG_x5fE8267C_x5fSink_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nCM_x5fPSG_x5fE8267C_x5fSink_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nCM_x5fPSG_x5fE8267C_x5fSink_fEnabledSet",
	"_nCM_x5fPSG_x5fE8267C_x5fSink_fNO",
	"_nCM_x5fPSG_x5fE8267C_x5fSink_fYES",
	"StdForm");
create_constant_form ("_nCM_x5fPSG_x5fE8267C_x5fSink_fInternal", 
	"Internal",
	0,
	"0",
	"Internal");
create_constant_form ("_nCM_x5fPSG_x5fE8267C_x5fSink_fExternal", 
	"External",
	0,
	"1",
	"External");
create_form_set("_nCM_x5fPSG_x5fE8267C_x5fSink_fARBRefSet",
	"_nCM_x5fPSG_x5fE8267C_x5fSink_fInternal",
	"_nCM_x5fPSG_x5fE8267C_x5fSink_fExternal",
	"StdForm");
create_text_form ("_nCM_x5fPSG_x5fE8267C_x5fSink_fwfm_x5ffile", 
	"File with wfm extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "wfm"), prefix_path_to_data_file);
create_text_form ("_nCM_x5fPSG_x5fE8267C_x5fSink_fmat_x5ffile", 
	"File with mat extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "mat"), prefix_path_to_data_file);
create_text_form ("_nCM_x5fPSG_x5fE8267C_x5fSink_fbin_x5ffile", 
	"File with bin extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "bin"), prefix_path_to_data_file);
create_form_set ( "_nCM_x5fPSG_x5fE8267C_x5fSink_fFileName_x5fFileSet",
	"_nCM_x5fPSG_x5fE8267C_x5fSink_fwfm_x5ffile",
	"_nCM_x5fPSG_x5fE8267C_x5fSink_fmat_x5ffile",
	"_nCM_x5fPSG_x5fE8267C_x5fSink_fbin_x5ffile");
create_constant_form ("_nCM_x5fPSG_x5fE8267C_x5fSink_fdownload_x5fto_x5fVARB", 
	"download_to_VARB",
	0,
	"0",
	"download_to_VARB");
create_constant_form ("_nCM_x5fPSG_x5fE8267C_x5fSink_fwrite_x5fto_x5fdatafile", 
	"write_to_datafile",
	0,
	"1",
	"write_to_datafile");
create_constant_form ("_nCM_x5fPSG_x5fE8267C_x5fSink_fboth", 
	"both",
	0,
	"2",
	"both");
create_form_set("_nCM_x5fPSG_x5fE8267C_x5fSink_fDownloadModeSet",
	"_nCM_x5fPSG_x5fE8267C_x5fSink_fdownload_x5fto_x5fVARB",
	"_nCM_x5fPSG_x5fE8267C_x5fSink_fwrite_x5fto_x5fdatafile",
	"_nCM_x5fPSG_x5fE8267C_x5fSink_fboth",
	"StdForm");
create_constant_form ("_nCM_x5fPSG_x5fE8267C_x5fSink_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nCM_x5fPSG_x5fE8267C_x5fSink_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nCM_x5fPSG_x5fE8267C_x5fSink_fAutoScalingSet",
	"_nCM_x5fPSG_x5fE8267C_x5fSink_fNO",
	"_nCM_x5fPSG_x5fE8267C_x5fSink_fYES",
	"StdForm");
create_constant_form ("_nCM_x5fPSG_x5fE8267C_x5fSink_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nCM_x5fPSG_x5fE8267C_x5fSink_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nCM_x5fPSG_x5fE8267C_x5fSink_fArbOnSet",
	"_nCM_x5fPSG_x5fE8267C_x5fSink_fNO",
	"_nCM_x5fPSG_x5fE8267C_x5fSink_fYES",
	"StdForm");
create_constant_form ("_nCM_x5fPSG_x5fE8267C_x5fSink_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nCM_x5fPSG_x5fE8267C_x5fSink_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nCM_x5fPSG_x5fE8267C_x5fSink_fRFPowOnSet",
	"_nCM_x5fPSG_x5fE8267C_x5fSink_fNO",
	"_nCM_x5fPSG_x5fE8267C_x5fSink_fYES",
	"StdForm");
create_constant_form ("_nCM_x5fPSG_x5fE8267C_x5fSink_fNeither", 
	"Neither",
	0,
	"0",
	"Neither");
create_constant_form ("_nCM_x5fPSG_x5fE8267C_x5fSink_fEvent1", 
	"Event1",
	0,
	"1",
	"Event1");
create_constant_form ("_nCM_x5fPSG_x5fE8267C_x5fSink_fEvent2", 
	"Event2",
	0,
	"2",
	"Event2");
create_constant_form ("_nCM_x5fPSG_x5fE8267C_x5fSink_fBoth", 
	"Both",
	0,
	"3",
	"Both");
create_form_set("_nCM_x5fPSG_x5fE8267C_x5fSink_fEventMarkersSet",
	"_nCM_x5fPSG_x5fE8267C_x5fSink_fNeither",
	"_nCM_x5fPSG_x5fE8267C_x5fSink_fEvent1",
	"_nCM_x5fPSG_x5fE8267C_x5fSink_fEvent2",
	"_nCM_x5fPSG_x5fE8267C_x5fSink_fBoth",
	"StdForm");
create_constant_form ("_nCM_x5fPSG_x5fE8267C_x5fSink_fthrough", 
	"through",
	0,
	"0",
	"through");
create_constant_form ("_nCM_x5fPSG_x5fE8267C_x5fSink_ffilter_x5f40MHz", 
	"filter_40MHz",
	0,
	"1",
	"filter_40MHz");
create_form_set("_nCM_x5fPSG_x5fE8267C_x5fSink_fIQ_x5fModFilterSet",
	"_nCM_x5fPSG_x5fE8267C_x5fSink_fthrough",
	"_nCM_x5fPSG_x5fE8267C_x5fSink_ffilter_x5f40MHz",
	"StdForm");
create_item ("CM_PSG_E8267C_Sink","PSG E8267C Vector Signal Generator",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CM_PSG_E8267C_Sink",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCM_x5fPSG_x5fE8267C_x5fSink_lmsrvsimstars",
	SPComponentAnnotFmt,
	"SYM_CM_PSG_E8267C_Sink",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Instrument","instrument to be used in the simulation",
		PARM_STRING | PARM_NO_DISPLAY,
		"InstrumentFormSet",
		UNITLESS_UNIT,
		prm("InstrumentForm","\"[GPIB0::21::INSTR][localhost][4790]\"")),
	create_parm ("Enabled","When YES communicates with instrument",
		PARM_INT,
		"_nCM_x5fPSG_x5fE8267C_x5fSink_fEnabledSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fPSG_x5fE8267C_x5fSink_fYES","YES")),
	create_parm ("Start","sample number to start waveform recording",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","DefaultNumericStart")),
	create_parm ("Stop","sample number to stop waveform recording",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","DefaultNumericStop")),
	create_parm ("Frequency","RF output frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","3e9")),
	create_parm ("Amplitude","RF output power level (dBm)",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-135")),
	create_parm ("ARBRef","reference for the waveform clock",
		PARM_INT | PARM_NO_DISPLAY,
		"_nCM_x5fPSG_x5fE8267C_x5fSink_fARBRefSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fPSG_x5fE8267C_x5fSink_fInternal","Internal")),
	create_parm ("ARBRefFreq","reference frequency of the external clock generator",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","10e6")),
	create_parm ("SampleClk","sample clock rate for sequencer and DAC",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","4.9152e6")),
	create_parm ("FileName","waveform file name to be stored in PSG",
		PARM_STRING,
		"_nCM_x5fPSG_x5fE8267C_x5fSink_fFileName_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fPSG_x5fE8267C_x5fSink_fwfm_x5ffile","\"ads_psg_download\"")),
	create_parm ("DownloadMode","select mode of operation of the sink",
		PARM_INT | PARM_NO_DISPLAY,
		"_nCM_x5fPSG_x5fE8267C_x5fSink_fDownloadModeSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fPSG_x5fE8267C_x5fSink_fdownload_x5fto_x5fVARB","download_to_VARB")),
	create_parm ("AutoScaling","scale inputs to range { -1, +1 } before download",
		PARM_INT | PARM_NO_DISPLAY,
		"_nCM_x5fPSG_x5fE8267C_x5fSink_fAutoScalingSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fPSG_x5fE8267C_x5fSink_fYES","YES")),
	create_parm ("ArbOn","select waveform and turn ARB ON after download",
		PARM_INT | PARM_NO_DISPLAY,
		"_nCM_x5fPSG_x5fE8267C_x5fSink_fArbOnSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fPSG_x5fE8267C_x5fSink_fNO","NO")),
	create_parm ("RFPowOn","turn RF power ON after download",
		PARM_INT | PARM_NO_DISPLAY,
		"_nCM_x5fPSG_x5fE8267C_x5fSink_fRFPowOnSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fPSG_x5fE8267C_x5fSink_fNO","NO")),
	create_parm ("EventMarkers","Enable PSG markers",
		PARM_INT | PARM_NO_DISPLAY,
		"_nCM_x5fPSG_x5fE8267C_x5fSink_fEventMarkersSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fPSG_x5fE8267C_x5fSink_fNeither","Neither")),
	create_parm ("MarkerLength","select number of points for ESG markers",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","10")),
	create_parm ("InstructionTimeout","Instrument instruction timeout",
		PARM_INT | PARM_NO_DISPLAY,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","300 sec")),
	create_parm ("IQ_ModFilter","baseband filter applied to the IQ signals",
		PARM_INT | PARM_NO_DISPLAY,
		"_nCM_x5fPSG_x5fE8267C_x5fSink_fIQ_x5fModFilterSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fPSG_x5fE8267C_x5fSink_fthrough","through")));
library_group("Instruments","Instruments","CM_PSG_E8267C_Sink");
palette_group("Instruments","Instruments","CM_PSG_E8267C_Sink");

create_constant_form ("_nCM_x5fESG_x5fE443xB_x5fSink_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nCM_x5fESG_x5fE443xB_x5fSink_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nCM_x5fESG_x5fE443xB_x5fSink_fEnabledSet",
	"_nCM_x5fESG_x5fE443xB_x5fSink_fNO",
	"_nCM_x5fESG_x5fE443xB_x5fSink_fYES",
	"StdForm");
create_constant_form ("_nCM_x5fESG_x5fE443xB_x5fSink_fInternal", 
	"Internal",
	0,
	"0",
	"Internal");
create_constant_form ("_nCM_x5fESG_x5fE443xB_x5fSink_fExternal", 
	"External",
	0,
	"1",
	"External");
create_form_set("_nCM_x5fESG_x5fE443xB_x5fSink_fARBRefSet",
	"_nCM_x5fESG_x5fE443xB_x5fSink_fInternal",
	"_nCM_x5fESG_x5fE443xB_x5fSink_fExternal",
	"StdForm");
create_text_form ("_nCM_x5fESG_x5fE443xB_x5fSink_fwfm_x5ffile", 
	"File with wfm extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "wfm"), prefix_path_to_data_file);
create_text_form ("_nCM_x5fESG_x5fE443xB_x5fSink_fmat_x5ffile", 
	"File with mat extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "mat"), prefix_path_to_data_file);
create_text_form ("_nCM_x5fESG_x5fE443xB_x5fSink_fbin_x5ffile", 
	"File with bin extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "bin"), prefix_path_to_data_file);
create_form_set ( "_nCM_x5fESG_x5fE443xB_x5fSink_fFileName_x5fFileSet",
	"_nCM_x5fESG_x5fE443xB_x5fSink_fwfm_x5ffile",
	"_nCM_x5fESG_x5fE443xB_x5fSink_fmat_x5ffile",
	"_nCM_x5fESG_x5fE443xB_x5fSink_fbin_x5ffile");
create_constant_form ("_nCM_x5fESG_x5fE443xB_x5fSink_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nCM_x5fESG_x5fE443xB_x5fSink_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nCM_x5fESG_x5fE443xB_x5fSink_fArbOnSet",
	"_nCM_x5fESG_x5fE443xB_x5fSink_fNO",
	"_nCM_x5fESG_x5fE443xB_x5fSink_fYES",
	"StdForm");
create_constant_form ("_nCM_x5fESG_x5fE443xB_x5fSink_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nCM_x5fESG_x5fE443xB_x5fSink_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nCM_x5fESG_x5fE443xB_x5fSink_fRFPowOnSet",
	"_nCM_x5fESG_x5fE443xB_x5fSink_fNO",
	"_nCM_x5fESG_x5fE443xB_x5fSink_fYES",
	"StdForm");
create_constant_form ("_nCM_x5fESG_x5fE443xB_x5fSink_fNeither", 
	"Neither",
	0,
	"0",
	"Neither");
create_constant_form ("_nCM_x5fESG_x5fE443xB_x5fSink_fEvent1", 
	"Event1",
	0,
	"1",
	"Event1");
create_constant_form ("_nCM_x5fESG_x5fE443xB_x5fSink_fEvent2", 
	"Event2",
	0,
	"2",
	"Event2");
create_constant_form ("_nCM_x5fESG_x5fE443xB_x5fSink_fBoth", 
	"Both",
	0,
	"3",
	"Both");
create_form_set("_nCM_x5fESG_x5fE443xB_x5fSink_fEventMarkersSet",
	"_nCM_x5fESG_x5fE443xB_x5fSink_fNeither",
	"_nCM_x5fESG_x5fE443xB_x5fSink_fEvent1",
	"_nCM_x5fESG_x5fE443xB_x5fSink_fEvent2",
	"_nCM_x5fESG_x5fE443xB_x5fSink_fBoth",
	"StdForm");
create_constant_form ("_nCM_x5fESG_x5fE443xB_x5fSink_fthrough", 
	"through",
	0,
	"0",
	"through");
create_constant_form ("_nCM_x5fESG_x5fE443xB_x5fSink_ffilter_x5f250kHz", 
	"filter_250kHz",
	0,
	"1",
	"filter_250kHz");
create_constant_form ("_nCM_x5fESG_x5fE443xB_x5fSink_ffilter_x5f2500kHz", 
	"filter_2500kHz",
	0,
	"2",
	"filter_2500kHz");
create_constant_form ("_nCM_x5fESG_x5fE443xB_x5fSink_ffilter_x5f8MHz", 
	"filter_8MHz",
	0,
	"3",
	"filter_8MHz");
create_form_set("_nCM_x5fESG_x5fE443xB_x5fSink_fRecFilterSet",
	"_nCM_x5fESG_x5fE443xB_x5fSink_fthrough",
	"_nCM_x5fESG_x5fE443xB_x5fSink_ffilter_x5f250kHz",
	"_nCM_x5fESG_x5fE443xB_x5fSink_ffilter_x5f2500kHz",
	"_nCM_x5fESG_x5fE443xB_x5fSink_ffilter_x5f8MHz",
	"StdForm");
create_item ("CM_ESG_E443xB_Sink","ESG E443xB RF Signal Generator",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CM_ESG_E443xB_Sink",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCM_x5fESG_x5fE443xB_x5fSink_lmsrvsimstars",
	SPComponentAnnotFmt,
	"SYM_CM_ESG_E443xB_Sink",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Instrument","instrument to be used in the simulation",
		PARM_STRING | PARM_NO_DISPLAY,
		"InstrumentFormSet",
		UNITLESS_UNIT,
		prm("InstrumentForm","\"[GPIB0::19::INSTR][localhost][4790]\"")),
	create_parm ("Enabled","When YES communicates with instrument",
		PARM_INT,
		"_nCM_x5fESG_x5fE443xB_x5fSink_fEnabledSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fESG_x5fE443xB_x5fSink_fYES","YES")),
	create_parm ("Start","sample number to start waveform recording",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","DefaultNumericStart")),
	create_parm ("Stop","sample number to stop waveform recording",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","DefaultNumericStop")),
	create_parm ("Frequency","RF output frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","3e9")),
	create_parm ("Amplitude","RF output power level (dBm)",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-135")),
	create_parm ("ARBRef","reference for the waveform clock",
		PARM_INT | PARM_NO_DISPLAY,
		"_nCM_x5fESG_x5fE443xB_x5fSink_fARBRefSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fESG_x5fE443xB_x5fSink_fInternal","Internal")),
	create_parm ("ARBRefFreq","reference frequency of the external clock generator",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","10e6")),
	create_parm ("SampleClk","sample clock rate for sequencer and DAC",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","4.9152e6")),
	create_parm ("FileName","waveform file name",
		PARM_STRING,
		"_nCM_x5fESG_x5fE443xB_x5fSink_fFileName_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fESG_x5fE443xB_x5fSink_fwfm_x5ffile","\"esg.wfm\"")),
	create_parm ("ArbOn","select waveform and turn ARB ON after download",
		PARM_INT | PARM_NO_DISPLAY,
		"_nCM_x5fESG_x5fE443xB_x5fSink_fArbOnSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fESG_x5fE443xB_x5fSink_fNO","NO")),
	create_parm ("RFPowOn","turn RF power ON after download",
		PARM_INT | PARM_NO_DISPLAY,
		"_nCM_x5fESG_x5fE443xB_x5fSink_fRFPowOnSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fESG_x5fE443xB_x5fSink_fNO","NO")),
	create_parm ("EventMarkers","enable ESG markers",
		PARM_INT | PARM_NO_DISPLAY,
		"_nCM_x5fESG_x5fE443xB_x5fSink_fEventMarkersSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fESG_x5fE443xB_x5fSink_fNeither","Neither")),
	create_parm ("MarkerLength","select number of points for ESG markers",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","10")),
	create_parm ("InstructionTimeout","Instrument instruction timeout",
		PARM_INT | PARM_NO_DISPLAY,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","300 sec")),
	create_parm ("RecFilter","baseband filter applied to the IQ signals",
		PARM_INT | PARM_NO_DISPLAY,
		"_nCM_x5fESG_x5fE443xB_x5fSink_fRecFilterSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fESG_x5fE443xB_x5fSink_fthrough","through")),
	create_parm ("ScalingFactor","scaling factor applied to the IQ signals",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1.0")));
library_group("Instruments","Instruments","CM_ESG_E443xB_Sink");
palette_group("Instruments","Instruments","CM_ESG_E443xB_Sink");

create_constant_form ("_nCM_x5fESG_x5fE4438C_x5fSink_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nCM_x5fESG_x5fE4438C_x5fSink_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nCM_x5fESG_x5fE4438C_x5fSink_fEnabledSet",
	"_nCM_x5fESG_x5fE4438C_x5fSink_fNO",
	"_nCM_x5fESG_x5fE4438C_x5fSink_fYES",
	"StdForm");
create_constant_form ("_nCM_x5fESG_x5fE4438C_x5fSink_fInternal", 
	"Internal",
	0,
	"0",
	"Internal");
create_constant_form ("_nCM_x5fESG_x5fE4438C_x5fSink_fExternal", 
	"External",
	0,
	"1",
	"External");
create_form_set("_nCM_x5fESG_x5fE4438C_x5fSink_fARBRefSet",
	"_nCM_x5fESG_x5fE4438C_x5fSink_fInternal",
	"_nCM_x5fESG_x5fE4438C_x5fSink_fExternal",
	"StdForm");
create_constant_form ("_nCM_x5fESG_x5fE4438C_x5fSink_fthrough", 
	"through",
	0,
	"0",
	"through");
create_constant_form ("_nCM_x5fESG_x5fE4438C_x5fSink_ffilter_x5f2100kHz", 
	"filter_2100kHz",
	0,
	"1",
	"filter_2100kHz");
create_constant_form ("_nCM_x5fESG_x5fE4438C_x5fSink_ffilter_x5f40MHz", 
	"filter_40MHz",
	0,
	"2",
	"filter_40MHz");
create_form_set("_nCM_x5fESG_x5fE4438C_x5fSink_fIQModFilterSet",
	"_nCM_x5fESG_x5fE4438C_x5fSink_fthrough",
	"_nCM_x5fESG_x5fE4438C_x5fSink_ffilter_x5f2100kHz",
	"_nCM_x5fESG_x5fE4438C_x5fSink_ffilter_x5f40MHz",
	"StdForm");
create_text_form ("_nCM_x5fESG_x5fE4438C_x5fSink_fwfm_x5ffile", 
	"File with wfm extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "wfm"), prefix_path_to_data_file);
create_text_form ("_nCM_x5fESG_x5fE4438C_x5fSink_fmat_x5ffile", 
	"File with mat extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "mat"), prefix_path_to_data_file);
create_text_form ("_nCM_x5fESG_x5fE4438C_x5fSink_fbin_x5ffile", 
	"File with bin extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "bin"), prefix_path_to_data_file);
create_form_set ( "_nCM_x5fESG_x5fE4438C_x5fSink_fFileName_x5fFileSet",
	"_nCM_x5fESG_x5fE4438C_x5fSink_fwfm_x5ffile",
	"_nCM_x5fESG_x5fE4438C_x5fSink_fmat_x5ffile",
	"_nCM_x5fESG_x5fE4438C_x5fSink_fbin_x5ffile");
create_constant_form ("_nCM_x5fESG_x5fE4438C_x5fSink_fdownload_x5fto_x5fVARB", 
	"download_to_VARB",
	0,
	"0",
	"download_to_VARB");
create_constant_form ("_nCM_x5fESG_x5fE4438C_x5fSink_fwrite_x5fto_x5fdatafile", 
	"write_to_datafile",
	0,
	"1",
	"write_to_datafile");
create_constant_form ("_nCM_x5fESG_x5fE4438C_x5fSink_fboth", 
	"both",
	0,
	"2",
	"both");
create_form_set("_nCM_x5fESG_x5fE4438C_x5fSink_fDownloadModeSet",
	"_nCM_x5fESG_x5fE4438C_x5fSink_fdownload_x5fto_x5fVARB",
	"_nCM_x5fESG_x5fE4438C_x5fSink_fwrite_x5fto_x5fdatafile",
	"_nCM_x5fESG_x5fE4438C_x5fSink_fboth",
	"StdForm");
create_constant_form ("_nCM_x5fESG_x5fE4438C_x5fSink_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nCM_x5fESG_x5fE4438C_x5fSink_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nCM_x5fESG_x5fE4438C_x5fSink_fAutoScalingSet",
	"_nCM_x5fESG_x5fE4438C_x5fSink_fNO",
	"_nCM_x5fESG_x5fE4438C_x5fSink_fYES",
	"StdForm");
create_constant_form ("_nCM_x5fESG_x5fE4438C_x5fSink_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nCM_x5fESG_x5fE4438C_x5fSink_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nCM_x5fESG_x5fE4438C_x5fSink_fArbOnSet",
	"_nCM_x5fESG_x5fE4438C_x5fSink_fNO",
	"_nCM_x5fESG_x5fE4438C_x5fSink_fYES",
	"StdForm");
create_constant_form ("_nCM_x5fESG_x5fE4438C_x5fSink_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nCM_x5fESG_x5fE4438C_x5fSink_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nCM_x5fESG_x5fE4438C_x5fSink_fRFPowOnSet",
	"_nCM_x5fESG_x5fE4438C_x5fSink_fNO",
	"_nCM_x5fESG_x5fE4438C_x5fSink_fYES",
	"StdForm");
create_constant_form ("_nCM_x5fESG_x5fE4438C_x5fSink_fNeither", 
	"Neither",
	0,
	"0",
	"Neither");
create_constant_form ("_nCM_x5fESG_x5fE4438C_x5fSink_fEvent1", 
	"Event1",
	0,
	"1",
	"Event1");
create_constant_form ("_nCM_x5fESG_x5fE4438C_x5fSink_fEvent2", 
	"Event2",
	0,
	"2",
	"Event2");
create_constant_form ("_nCM_x5fESG_x5fE4438C_x5fSink_fBoth", 
	"Both",
	0,
	"3",
	"Both");
create_form_set("_nCM_x5fESG_x5fE4438C_x5fSink_fEventMarkersSet",
	"_nCM_x5fESG_x5fE4438C_x5fSink_fNeither",
	"_nCM_x5fESG_x5fE4438C_x5fSink_fEvent1",
	"_nCM_x5fESG_x5fE4438C_x5fSink_fEvent2",
	"_nCM_x5fESG_x5fE4438C_x5fSink_fBoth",
	"StdForm");
create_item ("CM_ESG_E4438C_Sink","ESG Vector Signal Generators",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CM_ESG_E4438C_Sink",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCM_x5fESG_x5fE4438C_x5fSink_lmsrvsimstars",
	SPComponentAnnotFmt,
	"SYM_CM_ESG_E4438C_Sink",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Instrument","instrument to be used in the simulation",
		PARM_STRING | PARM_NO_DISPLAY,
		"InstrumentFormSet",
		UNITLESS_UNIT,
		prm("InstrumentForm","\"[GPIB0::20::INSTR][localhost][4790]\"")),
	create_parm ("Enabled","When YES communicates with instrument",
		PARM_INT,
		"_nCM_x5fESG_x5fE4438C_x5fSink_fEnabledSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fESG_x5fE4438C_x5fSink_fYES","YES")),
	create_parm ("Start","sample number to start waveform recording",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","DefaultNumericStart")),
	create_parm ("Stop","sample number to stop waveform recording",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","DefaultNumericStop")),
	create_parm ("Frequency","RF output frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","3e9")),
	create_parm ("Amplitude","RF output power level (dBm)",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-135")),
	create_parm ("ARBRef","reference for the waveform clock",
		PARM_INT | PARM_NO_DISPLAY,
		"_nCM_x5fESG_x5fE4438C_x5fSink_fARBRefSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fESG_x5fE4438C_x5fSink_fInternal","Internal")),
	create_parm ("ARBRefFreq","reference frequency of the external clock generator",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","10e6")),
	create_parm ("IQModFilter","baseband filter applied to the IQ signals",
		PARM_INT | PARM_NO_DISPLAY,
		"_nCM_x5fESG_x5fE4438C_x5fSink_fIQModFilterSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fESG_x5fE4438C_x5fSink_fthrough","through")),
	create_parm ("SampleClk","sample clock rate for sequencer and DAC",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","4.9152e6")),
	create_parm ("FileName","waveform file name",
		PARM_STRING,
		"_nCM_x5fESG_x5fE4438C_x5fSink_fFileName_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fESG_x5fE4438C_x5fSink_fwfm_x5ffile","\"esg.wfm\"")),
	create_parm ("DownloadMode","select mode of operation of the sink",
		PARM_INT | PARM_NO_DISPLAY,
		"_nCM_x5fESG_x5fE4438C_x5fSink_fDownloadModeSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fESG_x5fE4438C_x5fSink_fdownload_x5fto_x5fVARB","download_to_VARB")),
	create_parm ("AutoScaling","scale inputs to range { -1, +1 } before download",
		PARM_INT | PARM_NO_DISPLAY,
		"_nCM_x5fESG_x5fE4438C_x5fSink_fAutoScalingSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fESG_x5fE4438C_x5fSink_fYES","YES")),
	create_parm ("ArbOn","select waveform and turn ARB ON after download",
		PARM_INT | PARM_NO_DISPLAY,
		"_nCM_x5fESG_x5fE4438C_x5fSink_fArbOnSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fESG_x5fE4438C_x5fSink_fNO","NO")),
	create_parm ("RFPowOn","turn RF power ON after download",
		PARM_INT | PARM_NO_DISPLAY,
		"_nCM_x5fESG_x5fE4438C_x5fSink_fRFPowOnSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fESG_x5fE4438C_x5fSink_fNO","NO")),
	create_parm ("EventMarkers","enable ESG markers",
		PARM_INT | PARM_NO_DISPLAY,
		"_nCM_x5fESG_x5fE4438C_x5fSink_fEventMarkersSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fESG_x5fE4438C_x5fSink_fNeither","Neither")),
	create_parm ("MarkerLength","select number of points for ESG markers",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","10")),
	create_parm ("InstructionTimeout","Instrument instruction timeout",
		PARM_INT | PARM_NO_DISPLAY,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","300 sec")));
library_group("Instruments","Instruments","CM_ESG_E4438C_Sink");
palette_group("Instruments","Instruments","CM_ESG_E4438C_Sink");

create_constant_form ("_nCM_x5fSCPI_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nCM_x5fSCPI_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nCM_x5fSCPI_fSendIDCommandSet",
	"_nCM_x5fSCPI_fNO",
	"_nCM_x5fSCPI_fYES",
	"StdForm");
create_constant_form ("_nCM_x5fSCPI_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nCM_x5fSCPI_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nCM_x5fSCPI_fEnabledSet",
	"_nCM_x5fSCPI_fNO",
	"_nCM_x5fSCPI_fYES",
	"StdForm");
create_item ("CM_SCPI","ADS Ptolemy link to send SCPI commands to any instrument",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_CM_SCPI",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nCM_x5fSCPI_lmsrvsimstars",
	SPComponentAnnotFmt,
	"SYM_CM_SCPI",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Instrument","instrument to be used in the simulation",
		PARM_STRING | PARM_NO_DISPLAY,
		"InstrumentFormSet",
		UNITLESS_UNIT,
		prm("InstrumentForm","\"[GPIB0::19::INSTR][localhost][4790]\"")),
	create_parm ("SetupCommands","commands to send at simulation setup time",
		PARM_STRING,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("BeginCommands","commands to send at simulation begin time",
		PARM_STRING,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("WrapupCommands","commands to send at simulation wrapup",
		PARM_STRING,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("SendIDCommand","send SCPI '*IDN' command to instrument (select NO for non-SCPI instrument)",
		PARM_INT,
		"_nCM_x5fSCPI_fSendIDCommandSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fSCPI_fYES","YES")),
	create_parm ("Enabled","When YES communicates with instruments",
		PARM_INT,
		"_nCM_x5fSCPI_fEnabledSet",
		UNITLESS_UNIT,
		prm("_nCM_x5fSCPI_fYES","YES")));
library_group("Instruments","Instruments","CM_SCPI");
palette_group("Instruments","Instruments","CM_SCPI");

