set_design_type( sigproc_net );
create_item ("1xEV_MAPDecoder2","MAP decoder 2 for turbo decoder",
	"x",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_1xEV_MAPDecoder2",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_n1xEV_x5fMAPDecoder2_lsdf1xevstars",
	SPComponentAnnotFmt,
	"SYM_1xEV_MAPDecoder2",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("BlockSize","turbo block size",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","250")),
	create_parm ("ConstraintLength","constraint length of RSC encoder in turbo encoder",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("Polynomial","generator polynomial",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"015 013 017\"")));
library_group("1xEV, Channel Coding","1xEV, Channel Coding","1xEV_MAPDecoder2");
palette_group("1xEV, Channel Coding","1xEV, Channel Coding","1xEV_MAPDecoder2");

create_item ("1xEV_MAPDecoder1","MAP decoder 1 for turbo decoder",
	"x",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_1xEV_MAPDecoder1",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_n1xEV_x5fMAPDecoder1_lsdf1xevstars",
	SPComponentAnnotFmt,
	"SYM_1xEV_MAPDecoder1",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("BlockSize","turbo block size",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","250")),
	create_parm ("ConstraintLength","constraint length of RSC encoder in turbo encoder",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("Polynomial","generator polynomial",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"015 013 017\"")));
library_group("1xEV, Channel Coding","1xEV, Channel Coding","1xEV_MAPDecoder1");
palette_group("1xEV, Channel Coding","1xEV, Channel Coding","1xEV_MAPDecoder1");

create_constant_form ("_n1xEV_x5fTurboIntlvr_fInterleave", 
	"Interleave",
	0,
	"0",
	"Interleave");
create_constant_form ("_n1xEV_x5fTurboIntlvr_fDe_x5finterleave", 
	"De-interleave",
	0,
	"1",
	"De-interleave");
create_form_set("_n1xEV_x5fTurboIntlvr_fTypeSet",
	"_n1xEV_x5fTurboIntlvr_fInterleave",
	"_n1xEV_x5fTurboIntlvr_fDe_x5finterleave",
	"StdForm");
create_item ("1xEV_TurboIntlvr","Interleaver or De-interleaver for turbo code",
	"x",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_1xEV_TurboIntlvr",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_n1xEV_x5fTurboIntlvr_lsdf1xevstars",
	SPComponentAnnotFmt,
	"SYM_1xEV_TurboIntlvr",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("BlockSize","turbo block size",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","250")),
	create_parm ("Type","interleave type",
		PARM_INT,
		"_n1xEV_x5fTurboIntlvr_fTypeSet",
		UNITLESS_UNIT,
		prm("_n1xEV_x5fTurboIntlvr_fInterleave","Interleave")));
library_group("1xEV, Channel Coding","1xEV, Channel Coding","1xEV_TurboIntlvr");
palette_group("1xEV, Channel Coding","1xEV, Channel Coding","1xEV_TurboIntlvr");

create_item ("1xEV_WalshCover","FHT is performed to realize Walsh cover and chip level summer",
	"x",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_1xEV_WalshCover",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_n1xEV_x5fWalshCover_lsdf1xevstars",
	SPComponentAnnotFmt,
	"SYM_1xEV_WalshCover",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("WalshLength","the length of Walsh code used for spreading",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")));
library_group("1xEV, Modems","1xEV, Modems","1xEV_WalshCover");
palette_group("1xEV, Modems","1xEV, Modems","1xEV_WalshCover");

create_item ("1xEV_WalshCode","Walsh code generator",
	"x",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_1xEV_WalshCode",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_n1xEV_x5fWalshCode_lsdf1xevstars",
	SPComponentAnnotFmt,
	"SYM_1xEV_WalshCode",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("WalshLength","length of Walsh code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","64")),
	create_parm ("WalshCodeIndex","index of Walsh code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")));
library_group("1xEV, Modems","1xEV, Modems","1xEV_WalshCode");
palette_group("1xEV, Modems","1xEV, Modems","1xEV_WalshCode");

create_constant_form ("_n1xEV_x5fTail_fAdd", 
	"Add",
	0,
	"0",
	"Add");
create_constant_form ("_n1xEV_x5fTail_fRemove", 
	"Remove",
	0,
	"1",
	"Remove");
create_form_set("_n1xEV_x5fTail_fAddRmvSwitchSet",
	"_n1xEV_x5fTail_fAdd",
	"_n1xEV_x5fTail_fRemove",
	"StdForm");
create_item ("1xEV_Tail","Tailing bits adder or remover",
	"x",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_1xEV_Tail",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_n1xEV_x5fTail_lsdf1xevstars",
	SPComponentAnnotFmt,
	"SYM_1xEV_Tail",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("AddRmvSwitch","switch between adding and removing tail bits",
		PARM_INT,
		"_n1xEV_x5fTail_fAddRmvSwitchSet",
		UNITLESS_UNIT,
		prm("_n1xEV_x5fTail_fAdd","Add")),
	create_parm ("InputLength","input data length",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1018")),
	create_parm ("TailLength","tail bits length",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","6")));
library_group("1xEV, Channel Coding","1xEV, Channel Coding","1xEV_Tail");
palette_group("1xEV, Channel Coding","1xEV, Channel Coding","1xEV_Tail");

create_constant_form ("_n1xEV_x5fScrambleCode_fR38_x5f4kbps_x5f16_x5fslot", 
	"R38.4kbps 16 slot",
	0,
	"0",
	"R38.4kbps 16 slot");
create_constant_form ("_n1xEV_x5fScrambleCode_fR76_x5f8kbps_x5f8_x5fslot", 
	"R76.8kbps 8 slot",
	0,
	"1",
	"R76.8kbps 8 slot");
create_constant_form ("_n1xEV_x5fScrambleCode_fR153_x5f6kbps_x5f4_x5fslot", 
	"R153.6kbps 4 slot",
	0,
	"2",
	"R153.6kbps 4 slot");
create_constant_form ("_n1xEV_x5fScrambleCode_fR307_x5f2kbps_x5f2_x5fslot", 
	"R307.2kbps 2 slot",
	0,
	"3",
	"R307.2kbps 2 slot");
create_constant_form ("_n1xEV_x5fScrambleCode_fR614_x5f4kbps_x5f1_x5fslot", 
	"R614.4kbps 1 slot",
	0,
	"4",
	"R614.4kbps 1 slot");
create_constant_form ("_n1xEV_x5fScrambleCode_fR307_x5f2kbps_x5f4_x5fslot", 
	"R307.2kbps 4 slot",
	0,
	"5",
	"R307.2kbps 4 slot");
create_constant_form ("_n1xEV_x5fScrambleCode_fR614_x5f4kbps_x5f2_x5fslot", 
	"R614.4kbps 2 slot",
	0,
	"6",
	"R614.4kbps 2 slot");
create_constant_form ("_n1xEV_x5fScrambleCode_fR1228_x5f8kbps_x5f1_x5fslot", 
	"R1228.8kbps 1 slot",
	0,
	"7",
	"R1228.8kbps 1 slot");
create_constant_form ("_n1xEV_x5fScrambleCode_fR921_x5f6kbps_x5f2_x5fslot", 
	"R921.6kbps 2 slot",
	0,
	"8",
	"R921.6kbps 2 slot");
create_constant_form ("_n1xEV_x5fScrambleCode_fR1843_x5f2kbps_x5f1_x5fslot", 
	"R1843.2kbps 1 slot",
	0,
	"9",
	"R1843.2kbps 1 slot");
create_constant_form ("_n1xEV_x5fScrambleCode_fR1228_x5f8kbps_x5f2_x5fslot", 
	"R1228.8kbps 2 slot",
	0,
	"10",
	"R1228.8kbps 2 slot");
create_constant_form ("_n1xEV_x5fScrambleCode_fR2457_x5f6kbps_x5f1_x5fslot", 
	"R2457.6kbps 1 slot",
	0,
	"11",
	"R2457.6kbps 1 slot");
create_form_set("_n1xEV_x5fScrambleCode_fDataRateSet",
	"_n1xEV_x5fScrambleCode_fR38_x5f4kbps_x5f16_x5fslot",
	"_n1xEV_x5fScrambleCode_fR76_x5f8kbps_x5f8_x5fslot",
	"_n1xEV_x5fScrambleCode_fR153_x5f6kbps_x5f4_x5fslot",
	"_n1xEV_x5fScrambleCode_fR307_x5f2kbps_x5f2_x5fslot",
	"_n1xEV_x5fScrambleCode_fR614_x5f4kbps_x5f1_x5fslot",
	"_n1xEV_x5fScrambleCode_fR307_x5f2kbps_x5f4_x5fslot",
	"_n1xEV_x5fScrambleCode_fR614_x5f4kbps_x5f2_x5fslot",
	"_n1xEV_x5fScrambleCode_fR1228_x5f8kbps_x5f1_x5fslot",
	"_n1xEV_x5fScrambleCode_fR921_x5f6kbps_x5f2_x5fslot",
	"_n1xEV_x5fScrambleCode_fR1843_x5f2kbps_x5f1_x5fslot",
	"_n1xEV_x5fScrambleCode_fR1228_x5f8kbps_x5f2_x5fslot",
	"_n1xEV_x5fScrambleCode_fR2457_x5f6kbps_x5f1_x5fslot",
	"StdForm");
create_item ("1xEV_ScrambleCode","Scrambling sequence generator",
	"x",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_1xEV_ScrambleCode",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_n1xEV_x5fScrambleCode_lsdf1xevstars",
	SPComponentAnnotFmt,
	"SYM_1xEV_ScrambleCode",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("MAC_Index","preamble MACIndex",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","2")),
	create_parm ("DataRate","data rate of the forward traffic channel",
		PARM_INT,
		"_n1xEV_x5fScrambleCode_fDataRateSet",
		UNITLESS_UNIT,
		prm("_n1xEV_x5fScrambleCode_fR38_x5f4kbps_x5f16_x5fslot","R38_4kbps_16_slot")));
library_group("1xEV, Modems","1xEV, Modems","1xEV_ScrambleCode");
palette_group("1xEV, Modems","1xEV, Modems","1xEV_ScrambleCode");

create_constant_form ("_n1xEV_x5fRevPowerAdjust_fStep0dB", 
	"Step0dB",
	0,
	"0",
	"0dB");
create_constant_form ("_n1xEV_x5fRevPowerAdjust_fStep0_x5f5dB", 
	"Step0_5dB",
	0,
	"1",
	"0.5dB");
create_constant_form ("_n1xEV_x5fRevPowerAdjust_fStep1dB", 
	"Step1dB",
	0,
	"2",
	"1dB");
create_form_set("_n1xEV_x5fRevPowerAdjust_fTrafficAdjustStepSet",
	"_n1xEV_x5fRevPowerAdjust_fStep0dB",
	"_n1xEV_x5fRevPowerAdjust_fStep0_x5f5dB",
	"_n1xEV_x5fRevPowerAdjust_fStep1dB",
	"StdForm");
create_item ("1xEV_RevPowerAdjust","Power adjuster for access terminal channels",
	"x",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_1xEV_RevPowerAdjust",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_n1xEV_x5fRevPowerAdjust_lsdf1xevstars",
	SPComponentAnnotFmt,
	"SYM_1xEV_RevPowerAdjust",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("TrafficAdjustStep","power adjust step",
		PARM_INT,
		"_n1xEV_x5fRevPowerAdjust_fTrafficAdjustStepSet",
		UNITLESS_UNIT,
		prm("_n1xEV_x5fRevPowerAdjust_fStep0dB","Step0dB")),
	create_parm ("BlockSize","number of particles in a block",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","2048")),
	create_parm ("IgnoreNum","number of initially ignored firings",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));
library_group("1xEV, Modems","1xEV, Modems","1xEV_RevPowerAdjust");
palette_group("1xEV, Modems","1xEV, Modems","1xEV_RevPowerAdjust");

create_item ("1xEV_RevIntlvr","Reverse channel interleaver",
	"x",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_1xEV_RevIntlvr",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_n1xEV_x5fRevIntlvr_lsdf1xevstars",
	SPComponentAnnotFmt,
	"SYM_1xEV_RevIntlvr",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("InputLength","the input data length",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1024")));
library_group("1xEV, Channel Coding","1xEV, Channel Coding","1xEV_RevIntlvr");
palette_group("1xEV, Channel Coding","1xEV, Channel Coding","1xEV_RevIntlvr");

create_item ("1xEV_RevDeintlvr","Reverse channel deinterleaver",
	"x",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_1xEV_RevDeintlvr",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_n1xEV_x5fRevDeintlvr_lsdf1xevstars",
	SPComponentAnnotFmt,
	"SYM_1xEV_RevDeintlvr",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("InputLength","the input data length",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1024")));
library_group("1xEV, Channel Coding","1xEV, Channel Coding","1xEV_RevDeintlvr");
palette_group("1xEV, Channel Coding","1xEV, Channel Coding","1xEV_RevDeintlvr");

create_item ("1xEV_RevCohReceiver","Reverse link Rake receiver",
	"x",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_1xEV_RevCohReceiver",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_n1xEV_x5fRevCohReceiver_lsdf1xevstars",
	SPComponentAnnotFmt,
	"SYM_1xEV_RevCohReceiver",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SampPerChip","number of samples per chip",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("FingerNumber","number of fingers in Rake receiver",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")),
	create_parm ("WalshLength","Walsh code length used for spreading",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")));
library_group("1xEV, Receivers","1xEV, Receivers","1xEV_RevCohReceiver");
palette_group("1xEV, Receivers","1xEV, Receivers","1xEV_RevCohReceiver");

create_item ("1xEV_RevChnlEstimate","Reverse link channel estimator",
	"x",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_1xEV_RevChnlEstimate",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_n1xEV_x5fRevChnlEstimate_lsdf1xevstars",
	SPComponentAnnotFmt,
	"SYM_1xEV_RevChnlEstimate",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("MaxSearchPathNum","range for searching strongest paths",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","30")),
	create_parm ("SampPerChip","number of samples per chip",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("FilterOrder","filter order",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","48")),
	create_parm ("FingerNumber","number of fingers in Rake receiver",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")));
library_group("1xEV, Receivers","1xEV, Receivers","1xEV_RevChnlEstimate");
palette_group("1xEV, Receivers","1xEV, Receivers","1xEV_RevChnlEstimate");

create_constant_form ("_n1xEV_x5fRateMatch_fR38_x5f4kbps_x5f16_x5fslot", 
	"R38.4kbps 16 slot",
	0,
	"0",
	"R38.4kbps 16 slot");
create_constant_form ("_n1xEV_x5fRateMatch_fR76_x5f8kbps_x5f8_x5fslot", 
	"R76.8kbps 8 slot",
	0,
	"1",
	"R76.8kbps 8 slot");
create_constant_form ("_n1xEV_x5fRateMatch_fR153_x5f6kbps_x5f4_x5fslot", 
	"R153.6kbps 4 slot",
	0,
	"2",
	"R153.6kbps 4 slot");
create_constant_form ("_n1xEV_x5fRateMatch_fR307_x5f2kbps_x5f2_x5fslot", 
	"R307.2kbps 2 slot",
	0,
	"3",
	"R307.2kbps 2 slot");
create_constant_form ("_n1xEV_x5fRateMatch_fR614_x5f4kbps_x5f1_x5fslot", 
	"R614.4kbps 1 slot",
	0,
	"4",
	"R614.4kbps 1 slot");
create_constant_form ("_n1xEV_x5fRateMatch_fR307_x5f2kbps_x5f4_x5fslot", 
	"R307.2kbps 4 slot",
	0,
	"5",
	"R307.2kbps 4 slot");
create_constant_form ("_n1xEV_x5fRateMatch_fR614_x5f4kbps_x5f2_x5fslot", 
	"R614.4kbps 2 slot",
	0,
	"6",
	"R614.4kbps 2 slot");
create_constant_form ("_n1xEV_x5fRateMatch_fR1228_x5f8kbps_x5f1_x5fslot", 
	"R1228.8kbps 1 slot",
	0,
	"7",
	"R1228.8kbps 1 slot");
create_constant_form ("_n1xEV_x5fRateMatch_fR921_x5f6kbps_x5f2_x5fslot", 
	"R921.6kbps 2 slot",
	0,
	"8",
	"R921.6kbps 2 slot");
create_constant_form ("_n1xEV_x5fRateMatch_fR1843_x5f2kbps_x5f1_x5fslot", 
	"R1843.2kbps 1 slot",
	0,
	"9",
	"R1843.2kbps 1 slot");
create_constant_form ("_n1xEV_x5fRateMatch_fR1228_x5f8kbps_x5f2_x5fslot", 
	"R1228.8kbps 2 slot",
	0,
	"10",
	"R1228.8kbps 2 slot");
create_constant_form ("_n1xEV_x5fRateMatch_fR2457_x5f6kbps_x5f1_x5fslot", 
	"R2457.6kbps 1 slot",
	0,
	"11",
	"R2457.6kbps 1 slot");
create_form_set("_n1xEV_x5fRateMatch_fDataRateSet",
	"_n1xEV_x5fRateMatch_fR38_x5f4kbps_x5f16_x5fslot",
	"_n1xEV_x5fRateMatch_fR76_x5f8kbps_x5f8_x5fslot",
	"_n1xEV_x5fRateMatch_fR153_x5f6kbps_x5f4_x5fslot",
	"_n1xEV_x5fRateMatch_fR307_x5f2kbps_x5f2_x5fslot",
	"_n1xEV_x5fRateMatch_fR614_x5f4kbps_x5f1_x5fslot",
	"_n1xEV_x5fRateMatch_fR307_x5f2kbps_x5f4_x5fslot",
	"_n1xEV_x5fRateMatch_fR614_x5f4kbps_x5f2_x5fslot",
	"_n1xEV_x5fRateMatch_fR1228_x5f8kbps_x5f1_x5fslot",
	"_n1xEV_x5fRateMatch_fR921_x5f6kbps_x5f2_x5fslot",
	"_n1xEV_x5fRateMatch_fR1843_x5f2kbps_x5f1_x5fslot",
	"_n1xEV_x5fRateMatch_fR1228_x5f8kbps_x5f2_x5fslot",
	"_n1xEV_x5fRateMatch_fR2457_x5f6kbps_x5f1_x5fslot",
	"StdForm");
create_item ("1xEV_RateMatch","Sequence repetition and symbol puncturing for forward link",
	"x",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_1xEV_RateMatch",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_n1xEV_x5fRateMatch_lsdf1xevstars",
	SPComponentAnnotFmt,
	"SYM_1xEV_RateMatch",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("DataRate","data rate of the forward traffic channel",
		PARM_INT,
		"_n1xEV_x5fRateMatch_fDataRateSet",
		UNITLESS_UNIT,
		prm("_n1xEV_x5fRateMatch_fR38_x5f4kbps_x5f16_x5fslot","R38_4kbps_16_slot")));
library_group("1xEV, Modems","1xEV, Modems","1xEV_RateMatch");
palette_group("1xEV, Modems","1xEV, Modems","1xEV_RateMatch");

create_constant_form ("_n1xEV_x5fRateDematch_fR38_x5f4kbps_x5f16_x5fslot", 
	"R38.4kbps 16 slot",
	0,
	"0",
	"R38.4kbps 16 slot");
create_constant_form ("_n1xEV_x5fRateDematch_fR76_x5f8kbps_x5f8_x5fslot", 
	"R76.8kbps 8 slot",
	0,
	"1",
	"R76.8kbps 8 slot");
create_constant_form ("_n1xEV_x5fRateDematch_fR153_x5f6kbps_x5f4_x5fslot", 
	"R153.6kbps 4 slot",
	0,
	"2",
	"R153.6kbps 4 slot");
create_constant_form ("_n1xEV_x5fRateDematch_fR307_x5f2kbps_x5f2_x5fslot", 
	"R307.2kbps 2 slot",
	0,
	"3",
	"R307.2kbps 2 slot");
create_constant_form ("_n1xEV_x5fRateDematch_fR614_x5f4kbps_x5f1_x5fslot", 
	"R614.4kbps 1 slot",
	0,
	"4",
	"R614.4kbps 1 slot");
create_constant_form ("_n1xEV_x5fRateDematch_fR307_x5f2kbps_x5f4_x5fslot", 
	"R307.2kbps 4 slot",
	0,
	"5",
	"R307.2kbps 4 slot");
create_constant_form ("_n1xEV_x5fRateDematch_fR614_x5f4kbps_x5f2_x5fslot", 
	"R614.4kbps 2 slot",
	0,
	"6",
	"R614.4kbps 2 slot");
create_constant_form ("_n1xEV_x5fRateDematch_fR1228_x5f8kbps_x5f1_x5fslot", 
	"R1228.8kbps 1 slot",
	0,
	"7",
	"R1228.8kbps 1 slot");
create_constant_form ("_n1xEV_x5fRateDematch_fR921_x5f6kbps_x5f2_x5fslot", 
	"R921.6kbps 2 slot",
	0,
	"8",
	"R921.6kbps 2 slot");
create_constant_form ("_n1xEV_x5fRateDematch_fR1843_x5f2kbps_x5f1_x5fslot", 
	"R1843.2kbps 1 slot",
	0,
	"9",
	"R1843.2kbps 1 slot");
create_constant_form ("_n1xEV_x5fRateDematch_fR1228_x5f8kbps_x5f2_x5fslot", 
	"R1228.8kbps 2 slot",
	0,
	"10",
	"R1228.8kbps 2 slot");
create_constant_form ("_n1xEV_x5fRateDematch_fR2457_x5f6kbps_x5f1_x5fslot", 
	"R2457.6kbps 1 slot",
	0,
	"11",
	"R2457.6kbps 1 slot");
create_form_set("_n1xEV_x5fRateDematch_fDataRateSet",
	"_n1xEV_x5fRateDematch_fR38_x5f4kbps_x5f16_x5fslot",
	"_n1xEV_x5fRateDematch_fR76_x5f8kbps_x5f8_x5fslot",
	"_n1xEV_x5fRateDematch_fR153_x5f6kbps_x5f4_x5fslot",
	"_n1xEV_x5fRateDematch_fR307_x5f2kbps_x5f2_x5fslot",
	"_n1xEV_x5fRateDematch_fR614_x5f4kbps_x5f1_x5fslot",
	"_n1xEV_x5fRateDematch_fR307_x5f2kbps_x5f4_x5fslot",
	"_n1xEV_x5fRateDematch_fR614_x5f4kbps_x5f2_x5fslot",
	"_n1xEV_x5fRateDematch_fR1228_x5f8kbps_x5f1_x5fslot",
	"_n1xEV_x5fRateDematch_fR921_x5f6kbps_x5f2_x5fslot",
	"_n1xEV_x5fRateDematch_fR1843_x5f2kbps_x5f1_x5fslot",
	"_n1xEV_x5fRateDematch_fR1228_x5f8kbps_x5f2_x5fslot",
	"_n1xEV_x5fRateDematch_fR2457_x5f6kbps_x5f1_x5fslot",
	"StdForm");
create_item ("1xEV_RateDematch","Rate dematching for forward link",
	"x",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_1xEV_RateDematch",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_n1xEV_x5fRateDematch_lsdf1xevstars",
	SPComponentAnnotFmt,
	"SYM_1xEV_RateDematch",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("DataRate","data rate of the forward traffic channel",
		PARM_INT,
		"_n1xEV_x5fRateDematch_fDataRateSet",
		UNITLESS_UNIT,
		prm("_n1xEV_x5fRateDematch_fR38_x5f4kbps_x5f16_x5fslot","R38_4kbps_16_slot")));
library_group("1xEV, Modems","1xEV, Modems","1xEV_RateDematch");
palette_group("1xEV, Modems","1xEV, Modems","1xEV_RateDematch");

create_constant_form ("_n1xEV_x5fPNCode_fForward_x5flink", 
	"Forward link",
	0,
	"0",
	"Forward link");
create_constant_form ("_n1xEV_x5fPNCode_fReverse_x5flink", 
	"Reverse link",
	0,
	"1",
	"Reverse link");
create_form_set("_n1xEV_x5fPNCode_fLinkSet",
	"_n1xEV_x5fPNCode_fForward_x5flink",
	"_n1xEV_x5fPNCode_fReverse_x5flink",
	"StdForm");
create_item ("1xEV_PNCode","Short PN code generator",
	"x",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_1xEV_PNCode",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_n1xEV_x5fPNCode_lsdf1xevstars",
	SPComponentAnnotFmt,
	"SYM_1xEV_PNCode",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PN_Offset","access terminal PN code offset",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("Link","type of link",
		PARM_INT,
		"_n1xEV_x5fPNCode_fLinkSet",
		UNITLESS_UNIT,
		prm("_n1xEV_x5fPNCode_fForward_x5flink","Forward_link")));
library_group("1xEV, Modems","1xEV, Modems","1xEV_PNCode");
palette_group("1xEV, Modems","1xEV, Modems","1xEV_PNCode");

create_constant_form ("_n1xEV_x5fModulator_fR38_x5f4kbps_x5f16_x5fslot", 
	"R38.4kbps 16 slot",
	0,
	"0",
	"R38.4kbps 16 slot");
create_constant_form ("_n1xEV_x5fModulator_fR76_x5f8kbps_x5f8_x5fslot", 
	"R76.8kbps 8 slot",
	0,
	"1",
	"R76.8kbps 8 slot");
create_constant_form ("_n1xEV_x5fModulator_fR153_x5f6kbps_x5f4_x5fslot", 
	"R153.6kbps 4 slot",
	0,
	"2",
	"R153.6kbps 4 slot");
create_constant_form ("_n1xEV_x5fModulator_fR307_x5f2kbps_x5f2_x5fslot", 
	"R307.2kbps 2 slot",
	0,
	"3",
	"R307.2kbps 2 slot");
create_constant_form ("_n1xEV_x5fModulator_fR614_x5f4kbps_x5f1_x5fslot", 
	"R614.4kbps 1 slot",
	0,
	"4",
	"R614.4kbps 1 slot");
create_constant_form ("_n1xEV_x5fModulator_fR307_x5f2kbps_x5f4_x5fslot", 
	"R307.2kbps 4 slot",
	0,
	"5",
	"R307.2kbps 4 slot");
create_constant_form ("_n1xEV_x5fModulator_fR614_x5f4kbps_x5f2_x5fslot", 
	"R614.4kbps 2 slot",
	0,
	"6",
	"R614.4kbps 2 slot");
create_constant_form ("_n1xEV_x5fModulator_fR1228_x5f8kbps_x5f1_x5fslot", 
	"R1228.8kbps 1 slot",
	0,
	"7",
	"R1228.8kbps 1 slot");
create_constant_form ("_n1xEV_x5fModulator_fR921_x5f6kbps_x5f2_x5fslot", 
	"R921.6kbps 2 slot",
	0,
	"8",
	"R921.6kbps 2 slot");
create_constant_form ("_n1xEV_x5fModulator_fR1843_x5f2kbps_x5f1_x5fslot", 
	"R1843.2kbps 1 slot",
	0,
	"9",
	"R1843.2kbps 1 slot");
create_constant_form ("_n1xEV_x5fModulator_fR1228_x5f8kbps_x5f2_x5fslot", 
	"R1228.8kbps 2 slot",
	0,
	"10",
	"R1228.8kbps 2 slot");
create_constant_form ("_n1xEV_x5fModulator_fR2457_x5f6kbps_x5f1_x5fslot", 
	"R2457.6kbps 1 slot",
	0,
	"11",
	"R2457.6kbps 1 slot");
create_form_set("_n1xEV_x5fModulator_fDataRateSet",
	"_n1xEV_x5fModulator_fR38_x5f4kbps_x5f16_x5fslot",
	"_n1xEV_x5fModulator_fR76_x5f8kbps_x5f8_x5fslot",
	"_n1xEV_x5fModulator_fR153_x5f6kbps_x5f4_x5fslot",
	"_n1xEV_x5fModulator_fR307_x5f2kbps_x5f2_x5fslot",
	"_n1xEV_x5fModulator_fR614_x5f4kbps_x5f1_x5fslot",
	"_n1xEV_x5fModulator_fR307_x5f2kbps_x5f4_x5fslot",
	"_n1xEV_x5fModulator_fR614_x5f4kbps_x5f2_x5fslot",
	"_n1xEV_x5fModulator_fR1228_x5f8kbps_x5f1_x5fslot",
	"_n1xEV_x5fModulator_fR921_x5f6kbps_x5f2_x5fslot",
	"_n1xEV_x5fModulator_fR1843_x5f2kbps_x5f1_x5fslot",
	"_n1xEV_x5fModulator_fR1228_x5f8kbps_x5f2_x5fslot",
	"_n1xEV_x5fModulator_fR2457_x5f6kbps_x5f1_x5fslot",
	"StdForm");
create_item ("1xEV_Modulator","Modulator to generate QPSK, 8-PSK, 16-QAM modulation symbols depending on data rate",
	"x",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_1xEV_Modulator",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_n1xEV_x5fModulator_lsdf1xevstars",
	SPComponentAnnotFmt,
	"SYM_1xEV_Modulator",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("DataRate","data rate of the forward traffic channel",
		PARM_INT,
		"_n1xEV_x5fModulator_fDataRateSet",
		UNITLESS_UNIT,
		prm("_n1xEV_x5fModulator_fR38_x5f4kbps_x5f16_x5fslot","R38_4kbps_16_slot")));
library_group("1xEV, Modems","1xEV, Modems","1xEV_Modulator");
palette_group("1xEV, Modems","1xEV, Modems","1xEV_Modulator");

create_constant_form ("_n1xEV_x5fMAC_x5fSrc_fRA_x5fYes", 
	"RA_Yes",
	0,
	"0",
	"Yes");
create_constant_form ("_n1xEV_x5fMAC_x5fSrc_fRA_x5fNo", 
	"RA_No",
	0,
	"1",
	"No");
create_form_set("_n1xEV_x5fMAC_x5fSrc_fRA_x5fEnableSet",
	"_n1xEV_x5fMAC_x5fSrc_fRA_x5fYes",
	"_n1xEV_x5fMAC_x5fSrc_fRA_x5fNo",
	"StdForm");
create_constant_form ("_n1xEV_x5fMAC_x5fSrc_fRPC_x5fYes", 
	"RPC_Yes",
	0,
	"0",
	"Yes");
create_constant_form ("_n1xEV_x5fMAC_x5fSrc_fRPC_x5fNo", 
	"RPC_No",
	0,
	"1",
	"No");
create_form_set("_n1xEV_x5fMAC_x5fSrc_fRPC_x5fEnableSet",
	"_n1xEV_x5fMAC_x5fSrc_fRPC_x5fYes",
	"_n1xEV_x5fMAC_x5fSrc_fRPC_x5fNo",
	"StdForm");
create_constant_form ("_n1xEV_x5fMAC_x5fSrc_fSequential", 
	"Sequential",
	0,
	"0",
	"Sequential");
create_constant_form ("_n1xEV_x5fMAC_x5fSrc_fRandom", 
	"Random",
	0,
	"1",
	"Random");
create_constant_form ("_n1xEV_x5fMAC_x5fSrc_fUserDefined", 
	"UserDefined",
	0,
	"2",
	"UserDefined");
create_form_set("_n1xEV_x5fMAC_x5fSrc_fRPC_x5fChSelectSet",
	"_n1xEV_x5fMAC_x5fSrc_fSequential",
	"_n1xEV_x5fMAC_x5fSrc_fRandom",
	"_n1xEV_x5fMAC_x5fSrc_fUserDefined",
	"StdForm");
create_constant_form ("_n1xEV_x5fMAC_x5fSrc_fAll_x5f0s", 
	"All 0s",
	0,
	"0",
	"All 0s");
create_constant_form ("_n1xEV_x5fMAC_x5fSrc_fAll_x5f1s", 
	"All 1s",
	0,
	"1",
	"All 1s");
create_constant_form ("_n1xEV_x5fMAC_x5fSrc_fRandom_x5fValue", 
	"Random Value",
	0,
	"2",
	"Random Value");
create_form_set("_n1xEV_x5fMAC_x5fSrc_fRPC_x5fValueSet",
	"_n1xEV_x5fMAC_x5fSrc_fAll_x5f0s",
	"_n1xEV_x5fMAC_x5fSrc_fAll_x5f1s",
	"_n1xEV_x5fMAC_x5fSrc_fRandom_x5fValue",
	"StdForm");
create_constant_form ("_n1xEV_x5fMAC_x5fSrc_fC_x5fP9010", 
	"C_P9010",
	0,
	"0",
	"3GPP2 C.P9010 Sept. 2000");
create_constant_form ("_n1xEV_x5fMAC_x5fSrc_fC_x5fS0024", 
	"C_S0024",
	0,
	"1",
	"3GPP2 C.S0024 Aug. 2001");
create_form_set("_n1xEV_x5fMAC_x5fSrc_fVersionSet",
	"_n1xEV_x5fMAC_x5fSrc_fC_x5fP9010",
	"_n1xEV_x5fMAC_x5fSrc_fC_x5fS0024",
	"StdForm");
create_constant_form ("_n1xEV_x5fMAC_x5fSrc_fDRC_x5fLockYes", 
	"DRC_LockYes",
	0,
	"0",
	"Yes");
create_constant_form ("_n1xEV_x5fMAC_x5fSrc_fDRC_x5fLockNo", 
	"DRC_LockNo",
	0,
	"1",
	"No");
create_form_set("_n1xEV_x5fMAC_x5fSrc_fDRC_x5fLockEnableSet",
	"_n1xEV_x5fMAC_x5fSrc_fDRC_x5fLockYes",
	"_n1xEV_x5fMAC_x5fSrc_fDRC_x5fLockNo",
	"StdForm");
create_constant_form ("_n1xEV_x5fMAC_x5fSrc_f_x5f4_x5fTimes", 
	"_4_Times",
	0,
	"0",
	"4");
create_constant_form ("_n1xEV_x5fMAC_x5fSrc_f_x5f8_x5fTimes", 
	"_8_Times",
	0,
	"1",
	"8 ");
create_constant_form ("_n1xEV_x5fMAC_x5fSrc_f_x5f16_x5fTimes", 
	"_16_Times",
	0,
	"2",
	"16");
create_constant_form ("_n1xEV_x5fMAC_x5fSrc_f_x5f32_x5fTimes", 
	"_32_Times",
	0,
	"3",
	"32");
create_form_set("_n1xEV_x5fMAC_x5fSrc_fDRC_x5fLockLengthSet",
	"_n1xEV_x5fMAC_x5fSrc_f_x5f4_x5fTimes",
	"_n1xEV_x5fMAC_x5fSrc_f_x5f8_x5fTimes",
	"_n1xEV_x5fMAC_x5fSrc_f_x5f16_x5fTimes",
	"_n1xEV_x5fMAC_x5fSrc_f_x5f32_x5fTimes",
	"StdForm");
create_constant_form ("_n1xEV_x5fMAC_x5fSrc_f_x5f8_x5fSlots", 
	"_8_Slots",
	0,
	"0",
	"8 slots");
create_constant_form ("_n1xEV_x5fMAC_x5fSrc_f_x5f16_x5fSlots", 
	"_16_Slots",
	0,
	"1",
	"16 slots");
create_form_set("_n1xEV_x5fMAC_x5fSrc_fDRC_x5fLockPeriodSet",
	"_n1xEV_x5fMAC_x5fSrc_f_x5f8_x5fSlots",
	"_n1xEV_x5fMAC_x5fSrc_f_x5f16_x5fSlots",
	"StdForm");
create_item ("1xEV_MAC_Src","Signal source for MAC channel",
	"x",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_1xEV_MAC_Src",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_n1xEV_x5fMAC_x5fSrc_lsdf1xevstars",
	SPComponentAnnotFmt,
	"SYM_1xEV_MAC_Src",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("RA_Enable","enable or disable RA channel",
		PARM_INT,
		"_n1xEV_x5fMAC_x5fSrc_fRA_x5fEnableSet",
		UNITLESS_UNIT,
		prm("_n1xEV_x5fMAC_x5fSrc_fRA_x5fYes","RA_Yes")),
	create_parm ("RAB_Length","the number of slots over which the Reverse Activity Bit is transmitted",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("RPC_Enable","enable or disable RPC channel",
		PARM_INT,
		"_n1xEV_x5fMAC_x5fSrc_fRPC_x5fEnableSet",
		UNITLESS_UNIT,
		prm("_n1xEV_x5fMAC_x5fSrc_fRPC_x5fYes","RPC_Yes")),
	create_parm ("RPC_ChNum","number of the reverse power control channel",
		PARM_INT | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("RPC_ChSelect","the way to set channel index of reverse power control channel",
		PARM_INT | PARM_NO_DISPLAY,
		"_n1xEV_x5fMAC_x5fSrc_fRPC_x5fChSelectSet",
		UNITLESS_UNIT,
		prm("_n1xEV_x5fMAC_x5fSrc_fSequential","Sequential")),
	create_parm ("RPC_Index","user-defined RPC index",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"5\"")),
	create_parm ("RPC_Value","value of RPC bit in each RPC channel",
		PARM_INT | PARM_NO_DISPLAY,
		"_n1xEV_x5fMAC_x5fSrc_fRPC_x5fValueSet",
		UNITLESS_UNIT,
		prm("_n1xEV_x5fMAC_x5fSrc_fRandom_x5fValue","Random_Value")),
	create_parm ("Version","version of cdma2000 High Rate Packet Data Air Interface Specification",
		PARM_INT,
		"_n1xEV_x5fMAC_x5fSrc_fVersionSet",
		UNITLESS_UNIT,
		prm("_n1xEV_x5fMAC_x5fSrc_fC_x5fP9010","C_P9010")),
	create_parm ("DRC_LockEnable","enable or disable DRCLock channel",
		PARM_INT,
		"_n1xEV_x5fMAC_x5fSrc_fDRC_x5fLockEnableSet",
		UNITLESS_UNIT,
		prm("_n1xEV_x5fMAC_x5fSrc_fDRC_x5fLockYes","DRC_LockYes")),
	create_parm ("DRC_LockLength","the number of times that a DRCLock bit is repeated",
		PARM_INT | PARM_NO_DISPLAY,
		"_n1xEV_x5fMAC_x5fSrc_fDRC_x5fLockLengthSet",
		UNITLESS_UNIT,
		prm("_n1xEV_x5fMAC_x5fSrc_f_x5f8_x5fTimes","_8_Times")),
	create_parm ("DRC_LockPeriod","the time interval in units of slots between transmission of two consecutive DRCLock bit",
		PARM_INT | PARM_NO_DISPLAY,
		"_n1xEV_x5fMAC_x5fSrc_fDRC_x5fLockPeriodSet",
		UNITLESS_UNIT,
		prm("_n1xEV_x5fMAC_x5fSrc_f_x5f8_x5fSlots","_8_Slots")));
library_group("1xEV, Signal Sources","1xEV, Signal Sources","1xEV_MAC_Src");
palette_group("1xEV, Signal Sources","1xEV, Signal Sources","1xEV_MAC_Src");

create_constant_form ("_n1xEV_x5fMAC_x5fTDM_fC_x5fP9010", 
	"C_P9010",
	0,
	"0",
	"3GPP2 C.P9010 Sept. 2000");
create_constant_form ("_n1xEV_x5fMAC_x5fTDM_fC_x5fS0024", 
	"C_S0024",
	0,
	"1",
	"3GPP2 C.S0024 Aug. 2001");
create_form_set("_n1xEV_x5fMAC_x5fTDM_fVersionSet",
	"_n1xEV_x5fMAC_x5fTDM_fC_x5fP9010",
	"_n1xEV_x5fMAC_x5fTDM_fC_x5fS0024",
	"StdForm");
create_constant_form ("_n1xEV_x5fMAC_x5fTDM_f_x5f8_x5fSlots", 
	"_8_Slots",
	0,
	"0",
	"8 slots");
create_constant_form ("_n1xEV_x5fMAC_x5fTDM_f_x5f16_x5fSlots", 
	"_16_Slots",
	0,
	"1",
	"16 slots");
create_form_set("_n1xEV_x5fMAC_x5fTDM_fDRC_x5fLockPeriodSet",
	"_n1xEV_x5fMAC_x5fTDM_f_x5f8_x5fSlots",
	"_n1xEV_x5fMAC_x5fTDM_f_x5f16_x5fSlots",
	"StdForm");
create_item ("1xEV_MAC_TDM","Time-division-multiplexer for MAC Channel RPC bits and DRCLock symbols",
	"x",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_1xEV_MAC_TDM",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_n1xEV_x5fMAC_x5fTDM_lsdf1xevstars",
	SPComponentAnnotFmt,
	"SYM_1xEV_MAC_TDM",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Version","version of cdma2000 High Rate Packet Data Air Interface Specification",
		PARM_INT,
		"_n1xEV_x5fMAC_x5fTDM_fVersionSet",
		UNITLESS_UNIT,
		prm("_n1xEV_x5fMAC_x5fTDM_fC_x5fP9010","C_P9010")),
	create_parm ("DRC_LockPeriod","the time interval in units of slots between transmission of two consecutive DRCLock bit",
		PARM_INT,
		"_n1xEV_x5fMAC_x5fTDM_fDRC_x5fLockPeriodSet",
		UNITLESS_UNIT,
		prm("_n1xEV_x5fMAC_x5fTDM_f_x5f8_x5fSlots","_8_Slots")));
library_group("1xEV, Modems","1xEV, Modems","1xEV_MAC_TDM");
palette_group("1xEV, Modems","1xEV, Modems","1xEV_MAC_TDM");

create_constant_form ("_n1xEV_x5fLgPNCode_fAccess_x5fChannel", 
	"Access Channel",
	0,
	"0",
	"Access Channel");
create_constant_form ("_n1xEV_x5fLgPNCode_fReverse_x5fTraffic_x5fChannel", 
	"Reverse Traffic Channel",
	0,
	"1",
	"Reverse Traffic Channel");
create_form_set("_n1xEV_x5fLgPNCode_fChannelTypeSet",
	"_n1xEV_x5fLgPNCode_fAccess_x5fChannel",
	"_n1xEV_x5fLgPNCode_fReverse_x5fTraffic_x5fChannel",
	"StdForm");
create_item ("1xEV_LgPNCode","Long code generator",
	"x",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_1xEV_LgPNCode",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_n1xEV_x5fLgPNCode_lsdf1xevstars",
	SPComponentAnnotFmt,
	"SYM_1xEV_LgPNCode",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("ChannelType","type of channel",
		PARM_INT,
		"_n1xEV_x5fLgPNCode_fChannelTypeSet",
		UNITLESS_UNIT,
		prm("_n1xEV_x5fLgPNCode_fReverse_x5fTraffic_x5fChannel","Reverse_Traffic_Channel")),
	create_parm ("ATI_low","lower 16 bits of access terminal identifier",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("ATI_high","higher 16 bits access terminal identifier",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("AccessCycleNumber","access cycle number",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("ColorCode","color code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("SectorID","sector ID",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")));
library_group("1xEV, Modems","1xEV, Modems","1xEV_LgPNCode");
palette_group("1xEV, Modems","1xEV, Modems","1xEV_LgPNCode");

create_constant_form ("_n1xEV_x5fFwdMRC_fHalfSlot", 
	"HalfSlot",
	0,
	"0",
	"HalfSlot");
create_constant_form ("_n1xEV_x5fFwdMRC_fOneSlot", 
	"OneSlot",
	0,
	"1",
	"OneSlot");
create_form_set("_n1xEV_x5fFwdMRC_fEstimateWindowSet",
	"_n1xEV_x5fFwdMRC_fHalfSlot",
	"_n1xEV_x5fFwdMRC_fOneSlot",
	"StdForm");
create_item ("1xEV_FwdMRC","Forward Maximal Ratio Combiner",
	"x",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_1xEV_FwdMRC",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_n1xEV_x5fFwdMRC_lsdf1xevstars",
	SPComponentAnnotFmt,
	"SYM_1xEV_FwdMRC",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("EstimateWindow","window size for estimating channel coefficients",
		PARM_INT,
		"_n1xEV_x5fFwdMRC_fEstimateWindowSet",
		UNITLESS_UNIT,
		prm("_n1xEV_x5fFwdMRC_fHalfSlot","HalfSlot")),
	create_parm ("FingerNumber","number of Rake receiver fingers",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")),
	create_parm ("SampPerChip","number of samples per chip",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("FilterOrder","filter order",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","48")));
library_group("1xEV, Receivers","1xEV, Receivers","1xEV_FwdMRC");
palette_group("1xEV, Receivers","1xEV, Receivers","1xEV_FwdMRC");

create_constant_form ("_n1xEV_x5fFwdIntlvr_fR38_x5f4kbps_x5f16_x5fslot", 
	"R38.4kbps 16 slot",
	0,
	"0",
	"R38.4kbps 16 slot");
create_constant_form ("_n1xEV_x5fFwdIntlvr_fR76_x5f8kbps_x5f8_x5fslot", 
	"R76.8kbps 8 slot",
	0,
	"1",
	"R76.8kbps 8 slot");
create_constant_form ("_n1xEV_x5fFwdIntlvr_fR153_x5f6kbps_x5f4_x5fslot", 
	"R153.6kbps 4 slot",
	0,
	"2",
	"R153.6kbps 4 slot");
create_constant_form ("_n1xEV_x5fFwdIntlvr_fR307_x5f2kbps_x5f2_x5fslot", 
	"R307.2kbps 2 slot",
	0,
	"3",
	"R307.2kbps 2 slot");
create_constant_form ("_n1xEV_x5fFwdIntlvr_fR614_x5f4kbps_x5f1_x5fslot", 
	"R614.4kbps 1 slot",
	0,
	"4",
	"R614.4kbps 1 slot");
create_constant_form ("_n1xEV_x5fFwdIntlvr_fR307_x5f2kbps_x5f4_x5fslot", 
	"R307.2kbps 4 slot",
	0,
	"5",
	"R307.2kbps 4 slot");
create_constant_form ("_n1xEV_x5fFwdIntlvr_fR614_x5f4kbps_x5f2_x5fslot", 
	"R614.4kbps 2 slot",
	0,
	"6",
	"R614.4kbps 2 slot");
create_constant_form ("_n1xEV_x5fFwdIntlvr_fR1228_x5f8kbps_x5f1_x5fslot", 
	"R1228.8kbps 1 slot",
	0,
	"7",
	"R1228.8kbps 1 slot");
create_constant_form ("_n1xEV_x5fFwdIntlvr_fR921_x5f6kbps_x5f2_x5fslot", 
	"R921.6kbps 2 slot",
	0,
	"8",
	"R921.6kbps 2 slot");
create_constant_form ("_n1xEV_x5fFwdIntlvr_fR1843_x5f2kbps_x5f1_x5fslot", 
	"R1843.2kbps 1 slot",
	0,
	"9",
	"R1843.2kbps 1 slot");
create_constant_form ("_n1xEV_x5fFwdIntlvr_fR1228_x5f8kbps_x5f2_x5fslot", 
	"R1228.8kbps 2 slot",
	0,
	"10",
	"R1228.8kbps 2 slot");
create_constant_form ("_n1xEV_x5fFwdIntlvr_fR2457_x5f6kbps_x5f1_x5fslot", 
	"R2457.6kbps 1 slot",
	0,
	"11",
	"R2457.6kbps 1 slot");
create_form_set("_n1xEV_x5fFwdIntlvr_fDataRateSet",
	"_n1xEV_x5fFwdIntlvr_fR38_x5f4kbps_x5f16_x5fslot",
	"_n1xEV_x5fFwdIntlvr_fR76_x5f8kbps_x5f8_x5fslot",
	"_n1xEV_x5fFwdIntlvr_fR153_x5f6kbps_x5f4_x5fslot",
	"_n1xEV_x5fFwdIntlvr_fR307_x5f2kbps_x5f2_x5fslot",
	"_n1xEV_x5fFwdIntlvr_fR614_x5f4kbps_x5f1_x5fslot",
	"_n1xEV_x5fFwdIntlvr_fR307_x5f2kbps_x5f4_x5fslot",
	"_n1xEV_x5fFwdIntlvr_fR614_x5f4kbps_x5f2_x5fslot",
	"_n1xEV_x5fFwdIntlvr_fR1228_x5f8kbps_x5f1_x5fslot",
	"_n1xEV_x5fFwdIntlvr_fR921_x5f6kbps_x5f2_x5fslot",
	"_n1xEV_x5fFwdIntlvr_fR1843_x5f2kbps_x5f1_x5fslot",
	"_n1xEV_x5fFwdIntlvr_fR1228_x5f8kbps_x5f2_x5fslot",
	"_n1xEV_x5fFwdIntlvr_fR2457_x5f6kbps_x5f1_x5fslot",
	"StdForm");
create_item ("1xEV_FwdIntlvr","Forward channel interleaver",
	"x",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_1xEV_FwdIntlvr",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_n1xEV_x5fFwdIntlvr_lsdf1xevstars",
	SPComponentAnnotFmt,
	"SYM_1xEV_FwdIntlvr",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("DataRate","forward data rate",
		PARM_INT,
		"_n1xEV_x5fFwdIntlvr_fDataRateSet",
		UNITLESS_UNIT,
		prm("_n1xEV_x5fFwdIntlvr_fR38_x5f4kbps_x5f16_x5fslot","R38_4kbps_16_slot")));
library_group("1xEV, Channel Coding","1xEV, Channel Coding","1xEV_FwdIntlvr");
palette_group("1xEV, Channel Coding","1xEV, Channel Coding","1xEV_FwdIntlvr");

create_constant_form ("_n1xEV_x5fFwdDeintlvr_fR38_x5f4kbps_x5f16_x5fslot", 
	"R38.4kbps 16 slot",
	0,
	"0",
	"R38.4kbps 16 slot");
create_constant_form ("_n1xEV_x5fFwdDeintlvr_fR76_x5f8kbps_x5f8_x5fslot", 
	"R76.8kbps 8 slot",
	0,
	"1",
	"R76.8kbps 8 slot");
create_constant_form ("_n1xEV_x5fFwdDeintlvr_fR153_x5f6kbps_x5f4_x5fslot", 
	"R153.6kbps 4 slot",
	0,
	"2",
	"R153.6kbps 4 slot");
create_constant_form ("_n1xEV_x5fFwdDeintlvr_fR307_x5f2kbps_x5f2_x5fslot", 
	"R307.2kbps 2 slot",
	0,
	"3",
	"R307.2kbps 2 slot");
create_constant_form ("_n1xEV_x5fFwdDeintlvr_fR614_x5f4kbps_x5f1_x5fslot", 
	"R614.4kbps 1 slot",
	0,
	"4",
	"R614.4kbps 1 slot");
create_constant_form ("_n1xEV_x5fFwdDeintlvr_fR307_x5f2kbps_x5f4_x5fslot", 
	"R307.2kbps 4 slot",
	0,
	"5",
	"R307.2kbps 4 slot");
create_constant_form ("_n1xEV_x5fFwdDeintlvr_fR614_x5f4kbps_x5f2_x5fslot", 
	"R614.4kbps 2 slot",
	0,
	"6",
	"R614.4kbps 2 slot");
create_constant_form ("_n1xEV_x5fFwdDeintlvr_fR1228_x5f8kbps_x5f1_x5fslot", 
	"R1228.8kbps 1 slot",
	0,
	"7",
	"R1228.8kbps 1 slot");
create_constant_form ("_n1xEV_x5fFwdDeintlvr_fR921_x5f6kbps_x5f2_x5fslot", 
	"R921.6kbps 2 slot",
	0,
	"8",
	"R921.6kbps 2 slot");
create_constant_form ("_n1xEV_x5fFwdDeintlvr_fR1843_x5f2kbps_x5f1_x5fslot", 
	"R1843.2kbps 1 slot",
	0,
	"9",
	"R1843.2kbps 1 slot");
create_constant_form ("_n1xEV_x5fFwdDeintlvr_fR1228_x5f8kbps_x5f2_x5fslot", 
	"R1228.8kbps 2 slot",
	0,
	"10",
	"R1228.8kbps 2 slot");
create_constant_form ("_n1xEV_x5fFwdDeintlvr_fR2457_x5f6kbps_x5f1_x5fslot", 
	"R2457.6kbps 1 slot",
	0,
	"11",
	"R2457.6kbps 1 slot");
create_form_set("_n1xEV_x5fFwdDeintlvr_fDataRateSet",
	"_n1xEV_x5fFwdDeintlvr_fR38_x5f4kbps_x5f16_x5fslot",
	"_n1xEV_x5fFwdDeintlvr_fR76_x5f8kbps_x5f8_x5fslot",
	"_n1xEV_x5fFwdDeintlvr_fR153_x5f6kbps_x5f4_x5fslot",
	"_n1xEV_x5fFwdDeintlvr_fR307_x5f2kbps_x5f2_x5fslot",
	"_n1xEV_x5fFwdDeintlvr_fR614_x5f4kbps_x5f1_x5fslot",
	"_n1xEV_x5fFwdDeintlvr_fR307_x5f2kbps_x5f4_x5fslot",
	"_n1xEV_x5fFwdDeintlvr_fR614_x5f4kbps_x5f2_x5fslot",
	"_n1xEV_x5fFwdDeintlvr_fR1228_x5f8kbps_x5f1_x5fslot",
	"_n1xEV_x5fFwdDeintlvr_fR921_x5f6kbps_x5f2_x5fslot",
	"_n1xEV_x5fFwdDeintlvr_fR1843_x5f2kbps_x5f1_x5fslot",
	"_n1xEV_x5fFwdDeintlvr_fR1228_x5f8kbps_x5f2_x5fslot",
	"_n1xEV_x5fFwdDeintlvr_fR2457_x5f6kbps_x5f1_x5fslot",
	"StdForm");
create_item ("1xEV_FwdDeintlvr","Forward channel deinterleaver",
	"x",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_1xEV_FwdDeintlvr",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_n1xEV_x5fFwdDeintlvr_lsdf1xevstars",
	SPComponentAnnotFmt,
	"SYM_1xEV_FwdDeintlvr",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("DataRate","forward data rate",
		PARM_INT,
		"_n1xEV_x5fFwdDeintlvr_fDataRateSet",
		UNITLESS_UNIT,
		prm("_n1xEV_x5fFwdDeintlvr_fR38_x5f4kbps_x5f16_x5fslot","R38_4kbps_16_slot")));
library_group("1xEV, Channel Coding","1xEV, Channel Coding","1xEV_FwdDeintlvr");
palette_group("1xEV, Channel Coding","1xEV, Channel Coding","1xEV_FwdDeintlvr");

create_constant_form ("_n1xEV_x5fFwdChnlEstimate_fHalfSlot", 
	"HalfSlot",
	0,
	"0",
	"HalfSlot");
create_constant_form ("_n1xEV_x5fFwdChnlEstimate_fOneSlot", 
	"OneSlot",
	0,
	"1",
	"OneSlot");
create_form_set("_n1xEV_x5fFwdChnlEstimate_fEstimateWindowSet",
	"_n1xEV_x5fFwdChnlEstimate_fHalfSlot",
	"_n1xEV_x5fFwdChnlEstimate_fOneSlot",
	"StdForm");
create_item ("1xEV_FwdChnlEstimate","1xEV Forward channel estimator",
	"x",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_1xEV_FwdChnlEstimate",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_n1xEV_x5fFwdChnlEstimate_lsdf1xevstars",
	SPComponentAnnotFmt,
	"SYM_1xEV_FwdChnlEstimate",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("MaxSearchPathNum","range for searching strongest paths",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","30")),
	create_parm ("EstimateWindow","window size for estimating channel coefficients",
		PARM_INT,
		"_n1xEV_x5fFwdChnlEstimate_fEstimateWindowSet",
		UNITLESS_UNIT,
		prm("_n1xEV_x5fFwdChnlEstimate_fHalfSlot","HalfSlot")),
	create_parm ("FingerNumber","number of Rake receiver fingers",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")),
	create_parm ("SampPerChip","number of samples per chip",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("FilterOrder","filter order",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","48")));
library_group("1xEV, Receivers","1xEV, Receivers","1xEV_FwdChnlEstimate");
palette_group("1xEV, Receivers","1xEV, Receivers","1xEV_FwdChnlEstimate");

create_constant_form ("_n1xEV_x5fDemodulator_fR38_x5f4kbps_x5f16_x5fslot", 
	"R38.4kbps 16 slot",
	0,
	"0",
	"R38.4kbps 16 slot");
create_constant_form ("_n1xEV_x5fDemodulator_fR76_x5f8kbps_x5f8_x5fslot", 
	"R76.8kbps 8 slot",
	0,
	"1",
	"R76.8kbps 8 slot");
create_constant_form ("_n1xEV_x5fDemodulator_fR153_x5f6kbps_x5f4_x5fslot", 
	"R153.6kbps 4 slot",
	0,
	"2",
	"R153.6kbps 4 slot");
create_constant_form ("_n1xEV_x5fDemodulator_fR307_x5f2kbps_x5f2_x5fslot", 
	"R307.2kbps 2 slot",
	0,
	"3",
	"R307.2kbps 2 slot");
create_constant_form ("_n1xEV_x5fDemodulator_fR614_x5f4kbps_x5f1_x5fslot", 
	"R614.4kbps 1 slot",
	0,
	"4",
	"R614.4kbps 1 slot");
create_constant_form ("_n1xEV_x5fDemodulator_fR307_x5f2kbps_x5f4_x5fslot", 
	"R307.2kbps 4 slot",
	0,
	"5",
	"R307.2kbps 4 slot");
create_constant_form ("_n1xEV_x5fDemodulator_fR614_x5f4kbps_x5f2_x5fslot", 
	"R614.4kbps 2 slot",
	0,
	"6",
	"R614.4kbps 2 slot");
create_constant_form ("_n1xEV_x5fDemodulator_fR1228_x5f8kbps_x5f1_x5fslot", 
	"R1228.8kbps 1 slot",
	0,
	"7",
	"R1228.8kbps 1 slot");
create_constant_form ("_n1xEV_x5fDemodulator_fR921_x5f6kbps_x5f2_x5fslot", 
	"R921.6kbps 2 slot",
	0,
	"8",
	"R921.6kbps 2 slot");
create_constant_form ("_n1xEV_x5fDemodulator_fR1843_x5f2kbps_x5f1_x5fslot", 
	"R1843.2kbps 1 slot",
	0,
	"9",
	"R1843.2kbps 1 slot");
create_constant_form ("_n1xEV_x5fDemodulator_fR1228_x5f8kbps_x5f2_x5fslot", 
	"R1228.8kbps 2 slot",
	0,
	"10",
	"R1228.8kbps 2 slot");
create_constant_form ("_n1xEV_x5fDemodulator_fR2457_x5f6kbps_x5f1_x5fslot", 
	"R2457.6kbps 1 slot",
	0,
	"11",
	"R2457.6kbps 1 slot");
create_form_set("_n1xEV_x5fDemodulator_fDataRateSet",
	"_n1xEV_x5fDemodulator_fR38_x5f4kbps_x5f16_x5fslot",
	"_n1xEV_x5fDemodulator_fR76_x5f8kbps_x5f8_x5fslot",
	"_n1xEV_x5fDemodulator_fR153_x5f6kbps_x5f4_x5fslot",
	"_n1xEV_x5fDemodulator_fR307_x5f2kbps_x5f2_x5fslot",
	"_n1xEV_x5fDemodulator_fR614_x5f4kbps_x5f1_x5fslot",
	"_n1xEV_x5fDemodulator_fR307_x5f2kbps_x5f4_x5fslot",
	"_n1xEV_x5fDemodulator_fR614_x5f4kbps_x5f2_x5fslot",
	"_n1xEV_x5fDemodulator_fR1228_x5f8kbps_x5f1_x5fslot",
	"_n1xEV_x5fDemodulator_fR921_x5f6kbps_x5f2_x5fslot",
	"_n1xEV_x5fDemodulator_fR1843_x5f2kbps_x5f1_x5fslot",
	"_n1xEV_x5fDemodulator_fR1228_x5f8kbps_x5f2_x5fslot",
	"_n1xEV_x5fDemodulator_fR2457_x5f6kbps_x5f1_x5fslot",
	"StdForm");
create_constant_form ("_n1xEV_x5fDemodulator_fSoft_x5fdecision", 
	"Soft decision",
	0,
	"0",
	"Soft decision");
create_constant_form ("_n1xEV_x5fDemodulator_fHard_x5fdecision", 
	"Hard decision",
	0,
	"1",
	"Hard decision");
create_form_set("_n1xEV_x5fDemodulator_fDecisionSet",
	"_n1xEV_x5fDemodulator_fSoft_x5fdecision",
	"_n1xEV_x5fDemodulator_fHard_x5fdecision",
	"StdForm");
create_item ("1xEV_Demodulator","Demodulator for QPSK, 8PSK and 16QAM",
	"x",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_1xEV_Demodulator",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_n1xEV_x5fDemodulator_lsdf1xevstars",
	SPComponentAnnotFmt,
	"SYM_1xEV_Demodulator",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("DataRate","data rate of the forward traffic channel",
		PARM_INT,
		"_n1xEV_x5fDemodulator_fDataRateSet",
		UNITLESS_UNIT,
		prm("_n1xEV_x5fDemodulator_fR38_x5f4kbps_x5f16_x5fslot","R38_4kbps_16_slot")),
	create_parm ("Decision","decision method of Turbo decoder",
		PARM_INT,
		"_n1xEV_x5fDemodulator_fDecisionSet",
		UNITLESS_UNIT,
		prm("_n1xEV_x5fDemodulator_fSoft_x5fdecision","Soft_decision")));
library_group("1xEV, Modems","1xEV, Modems","1xEV_Demodulator");
palette_group("1xEV, Modems","1xEV, Modems","1xEV_Demodulator");

create_item ("1xEV_CRC_Encoder","CRC generator",
	"x",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_1xEV_CRC_Encoder",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_n1xEV_x5fCRC_x5fEncoder_lsdf1xevstars",
	SPComponentAnnotFmt,
	"SYM_1xEV_CRC_Encoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("InputLength","input block length",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1002")));
library_group("1xEV, Channel Coding","1xEV, Channel Coding","1xEV_CRC_Encoder");
palette_group("1xEV, Channel Coding","1xEV, Channel Coding","1xEV_CRC_Encoder");

create_item ("1xEV_CRC_Decoder","CRC bits eraser with packet quality check",
	"x",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_1xEV_CRC_Decoder",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_n1xEV_x5fCRC_x5fDecoder_lsdf1xevstars",
	SPComponentAnnotFmt,
	"SYM_1xEV_CRC_Decoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("InputLength","input block length",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1018")));
library_group("1xEV, Channel Coding","1xEV, Channel Coding","1xEV_CRC_Decoder");
palette_group("1xEV, Channel Coding","1xEV, Channel Coding","1xEV_CRC_Decoder");

create_item ("1xEV_BiWalshCode","Bi-Walsh code generator",
	"x",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_1xEV_BiWalshCode",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_n1xEV_x5fBiWalshCode_lsdf1xevstars",
	SPComponentAnnotFmt,
	"SYM_1xEV_BiWalshCode",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("WalshLength","length of Walsh code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","64")));
library_group("1xEV, Modems","1xEV, Modems","1xEV_BiWalshCode");
palette_group("1xEV, Modems","1xEV, Modems","1xEV_BiWalshCode");

create_constant_form ("_n1xEV_x5fBER_fForward_x5flink", 
	"Forward link",
	0,
	"0",
	"Forward link");
create_constant_form ("_n1xEV_x5fBER_fReverse_x5flink", 
	"Reverse link",
	0,
	"1",
	"Reverse link");
create_form_set("_n1xEV_x5fBER_fLinkSet",
	"_n1xEV_x5fBER_fForward_x5flink",
	"_n1xEV_x5fBER_fReverse_x5flink",
	"StdForm");
create_constant_form ("_n1xEV_x5fBER_fR38_x5f4kbps_x5f16_x5fslot", 
	"R38.4kbps 16 slot",
	0,
	"0",
	"R38.4kbps 16 slot");
create_constant_form ("_n1xEV_x5fBER_fR76_x5f8kbps_x5f8_x5fslot", 
	"R76.8kbps 8 slot",
	0,
	"1",
	"R76.8kbps 8 slot");
create_constant_form ("_n1xEV_x5fBER_fR153_x5f6kbps_x5f4_x5fslot", 
	"R153.6kbps 4 slot",
	0,
	"2",
	"R153.6kbps 4 slot");
create_constant_form ("_n1xEV_x5fBER_fR307_x5f2kbps_x5f2_x5fslot", 
	"R307.2kbps 2 slot",
	0,
	"3",
	"R307.2kbps 2 slot");
create_constant_form ("_n1xEV_x5fBER_fR614_x5f4kbps_x5f1_x5fslot", 
	"R614.4kbps 1 slot",
	0,
	"4",
	"R614.4kbps 1 slot");
create_constant_form ("_n1xEV_x5fBER_fR307_x5f2kbps_x5f4_x5fslot", 
	"R307.2kbps 4 slot",
	0,
	"5",
	"R307.2kbps 4 slot");
create_constant_form ("_n1xEV_x5fBER_fR614_x5f4kbps_x5f2_x5fslot", 
	"R614.4kbps 2 slot",
	0,
	"6",
	"R614.4kbps 2 slot");
create_constant_form ("_n1xEV_x5fBER_fR1228_x5f8kbps_x5f1_x5fslot", 
	"R1228.8kbps 1 slot",
	0,
	"7",
	"R1228.8kbps 1 slot");
create_constant_form ("_n1xEV_x5fBER_fR921_x5f6kbps_x5f2_x5fslot", 
	"R921.6kbps 2 slot",
	0,
	"8",
	"R921.6kbps 2 slot");
create_constant_form ("_n1xEV_x5fBER_fR1843_x5f2kbps_x5f1_x5fslot", 
	"R1843.2kbps 1 slot",
	0,
	"9",
	"R1843.2kbps 1 slot");
create_constant_form ("_n1xEV_x5fBER_fR1228_x5f8kbps_x5f2_x5fslot", 
	"R1228.8kbps 2 slot",
	0,
	"10",
	"R1228.8kbps 2 slot");
create_constant_form ("_n1xEV_x5fBER_fR2457_x5f6kbps_x5f1_x5fslot", 
	"R2457.6kbps 1 slot",
	0,
	"11",
	"R2457.6kbps 1 slot");
create_form_set("_n1xEV_x5fBER_fDataRateSet",
	"_n1xEV_x5fBER_fR38_x5f4kbps_x5f16_x5fslot",
	"_n1xEV_x5fBER_fR76_x5f8kbps_x5f8_x5fslot",
	"_n1xEV_x5fBER_fR153_x5f6kbps_x5f4_x5fslot",
	"_n1xEV_x5fBER_fR307_x5f2kbps_x5f2_x5fslot",
	"_n1xEV_x5fBER_fR614_x5f4kbps_x5f1_x5fslot",
	"_n1xEV_x5fBER_fR307_x5f2kbps_x5f4_x5fslot",
	"_n1xEV_x5fBER_fR614_x5f4kbps_x5f2_x5fslot",
	"_n1xEV_x5fBER_fR1228_x5f8kbps_x5f1_x5fslot",
	"_n1xEV_x5fBER_fR921_x5f6kbps_x5f2_x5fslot",
	"_n1xEV_x5fBER_fR1843_x5f2kbps_x5f1_x5fslot",
	"_n1xEV_x5fBER_fR1228_x5f8kbps_x5f2_x5fslot",
	"_n1xEV_x5fBER_fR2457_x5f6kbps_x5f1_x5fslot",
	"StdForm");
create_item ("1xEV_BER","BER and PER measurement",
	"x",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_1xEV_BER",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_n1xEV_x5fBER_lsdf1xevstars",
	SPComponentAnnotFmt,
	"SYM_1xEV_BER",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Link","type of link",
		PARM_INT,
		"_n1xEV_x5fBER_fLinkSet",
		UNITLESS_UNIT,
		prm("_n1xEV_x5fBER_fReverse_x5flink","Reverse_link")),
	create_parm ("DataRate","data rate of the forward traffic channel, valid when Link=Forward link",
		PARM_INT | PARM_NO_DISPLAY,
		"_n1xEV_x5fBER_fDataRateSet",
		UNITLESS_UNIT,
		prm("_n1xEV_x5fBER_fR38_x5f4kbps_x5f16_x5fslot","R38_4kbps_16_slot")),
	create_parm ("SlotState","state of each slot: 0 for idle, 1 for active, valid when Link=Forward link",
		PARM_INTARRAY | PARM_NO_DISPLAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"1 0 0 0\"")),
	create_parm ("PacketLength","packet length",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1002")),
	create_parm ("IgnoreNumber","number of initially ignored firings",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")));
library_group("1xEV, Test","1xEV, Test","1xEV_BER");
palette_group("1xEV, Test","1xEV, Test","1xEV_BER");

