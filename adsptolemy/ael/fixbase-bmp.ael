de_define_library_palette( "Numeric", SCHEM_WIN, "sigproc_net",
	"Numeric Math", "Numeric Math", -1,
	 list( "Numeric", "AddFix", NULL, "Fixed-Point Multiple Input Adder", "BMP_AddFix" ),
	 list( "Numeric", "GainFix", NULL, "Fixed-Point Gain", "BMP_GainFix" ),
	 list( "Numeric", "MpyFix", NULL, "Fixed-Point Multiple Input Multiplier", "BMP_MpyFix" ),
	 list( "Numeric", "MpyFix2", NULL, "2-Input Fixed-Point Multiplier", "BMP_MpyFix2" ),
	 list( "Numeric", "SubFix", NULL, "Fixed-Point Multiple Input Subtractor", "BMP_SubFix" )
);

de_define_library_palette( "Numeric", SCHEM_WIN, "sigproc_net",
	"Numeric Signal Processing", "Numeric Signal Processing", -1,
	 list( "Numeric", "FIR_Fix", NULL, "Fixed-Point FIR Filter", "BMP_FIR_Fix" ),
	 list( "Numeric", "IIR_Fix", NULL, "Fixed IIR Filter", "BMP_IIR_Fix" )
);

de_define_library_palette( "Numeric", SCHEM_WIN, "sigproc_net",
	"Numeric Sources", "Numeric Sources", -1,
	 list( "Numeric", "ConstFix", NULL, "Fixed-Point Constant Output", "BMP_ConstFix" ),
	 list( "Numeric", "RampFix", NULL, "Fixed-Point Ramp Output", "BMP_RampFix" ),
	 list( "Numeric", "RectFix", NULL, "Fixed-Point Rectangular Pulse Output", "BMP_RectFix" )
);

de_define_library_palette( "Signal_Converters", SCHEM_WIN, "sigproc_net",
	"Signal Converters", "Signal Converters", -1,
	 list( "Signal_Converters", "CxToFix", NULL, "Complex to Fixed-Point", "BMP_CxToFix" ),
	 list( "Signal_Converters", "FixToCx", NULL, "Fixed-Point to Complex", "BMP_FixToCx" ),
	 list( "Signal_Converters", "FixToFloat", NULL, "Fixed-Point to Floating-Point", "BMP_FixToFloat" ),
	 list( "Signal_Converters", "FixToInt", NULL, "Fixed-Point to Integer", "BMP_FixToInt" ),
	 list( "Signal_Converters", "FixToTimed", NULL, "Fixed-Point to Timed", "BMP_FixToTimed" ),
	 list( "Signal_Converters", "FloatToFix", NULL, "Floating-Point to Fixed-Point", "BMP_FloatToFix" ),
	 list( "Signal_Converters", "IntToFix", NULL, "Integer to Fixed-Point", "BMP_IntToFix" ),
	 list( "Signal_Converters", "TimedToFix", NULL, "Timed to Fixed", "BMP_TimedToFix" )
);

