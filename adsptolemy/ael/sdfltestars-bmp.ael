de_define_library_palette( "LTE", SCHEM_WIN, "sigproc_net",
	"LTE Channel Coding", "LTE Channel Coding", -1,
	 list( "LTE", "LTE_CRCDecoder", NULL, "CRC decoder", "BMP_LTE_CRCDecoder" ),
	 list( "LTE", "LTE_CRCEncoder", NULL, "Add CRC to each Transport Block", "BMP_LTE_CRCEncoder" ),
	 list( "LTE", "LTE_CodeBlkDeseg", NULL, "LTE Code block de-segmentation", "BMP_LTE_CodeBlkDeseg" ),
	 list( "LTE", "LTE_CodeBlkSeg", NULL, "LTE Code block segmentation", "BMP_LTE_CodeBlkSeg" ),
	 list( "LTE", "LTE_ConvCoder", NULL, "Downlink convolutional coding", "BMP_LTE_ConvCoder" ),
	 list( "LTE", "LTE_DeScrambler", NULL, "LTE Downlink and Uplink DeScrambler", "BMP_LTE_DeScrambler" ),
	 list( "LTE", "LTE_RateDematch", NULL, "Downlink and Uplink SCH Rate Dematching", "BMP_LTE_RateDematch" ),
	 list( "LTE", "LTE_RateMatch", NULL, "Downlink and Uplink SCH Rate Matching", "BMP_LTE_RateMatch" ),
	 list( "LTE", "LTE_Scrambler", NULL, "LTE Downlink and Uplink Scrambler", "BMP_LTE_Scrambler" ),
	 list( "LTE", "LTE_TurboCoder", NULL, "LTE turbo encoder", "BMP_LTE_TurboCoder" ),
	 list( "LTE", "LTE_TurboDecoder", NULL, "LTE turbo decoder", "BMP_LTE_TurboDecoder" ),
	 list( "LTE", "LTE_UL_ChDeInterleaver", NULL, "Uplink PUSCH Channel DeInterleaver", "BMP_LTE_UL_ChDeInterleaver" ),
	 list( "LTE", "LTE_UL_ChInterleaver", NULL, "Uplink Channel Interleaver", "BMP_LTE_UL_ChInterleaver" ),
	 list( "LTE", "LTE_UL_ControlInfoEncoder", NULL, "Uplink Control Information Encoder", "BMP_LTE_UL_ControlInfoEncoder" )
);

de_define_library_palette( "LTE", SCHEM_WIN, "sigproc_net",
	"LTE Channel Model", "LTE Channel Model", -1,
	 list( "LTE", "LTE_MIMO_Channel", NULL, "LTE MIMO channel model", "BMP_LTE_MIMO_Channel" )
);

de_define_library_palette( "LTE", SCHEM_WIN, "sigproc_net",
	"LTE MIMO Precoder", "LTE MIMO Precoder", -1,
	 list( "LTE", "LTE_DL_MIMO_Deprecoder", NULL, "Downlink MIMO Deprecoder", "BMP_LTE_DL_MIMO_Deprecoder" ),
	 list( "LTE", "LTE_DL_MIMO_LayerDemapper", NULL, "Downlink MIMO Layer Demapper", "BMP_LTE_DL_MIMO_LayerDemapper" ),
	 list( "LTE", "LTE_DL_MIMO_LayerMapper", NULL, "Downlink MIMO Layer Mapper", "BMP_LTE_DL_MIMO_LayerMapper" ),
	 list( "LTE", "LTE_DL_MIMO_Precoder", NULL, "Downlink MIMO Precoder", "BMP_LTE_DL_MIMO_Precoder" ),
	 list( "LTE", "LTE_PHICH_Deprecoder", NULL, "PHICH Deprecoder", "BMP_LTE_PHICH_Deprecoder" ),
	 list( "LTE", "LTE_PHICH_LayerDemapper", NULL, "PHICH Layer Demapper", "BMP_LTE_PHICH_LayerDemapper" ),
	 list( "LTE", "LTE_PHICH_LayerMapper", NULL, "PHICH Layer Mapper", "BMP_LTE_PHICH_LayerMapper" ),
	 list( "LTE", "LTE_PHICH_Precoder", NULL, "PHICH Precoder", "BMP_LTE_PHICH_Precoder" )
);

de_define_library_palette( "LTE", SCHEM_WIN, "sigproc_net",
	"LTE Modulation", "LTE Modulation", -1,
	 list( "LTE", "LTE_Demapper", NULL, "De-mapper", "BMP_LTE_Demapper" ),
	 list( "LTE", "LTE_FFT", NULL, "Complex fast Fourier transform", "BMP_LTE_FFT" ),
	 list( "LTE", "LTE_Mapper", NULL, "Mapper", "BMP_LTE_Mapper" ),
	 list( "LTE", "LTE_PHICH_Demodulator", NULL, "Downlink PHICH Demodulator", "BMP_LTE_PHICH_Demodulator" ),
	 list( "LTE", "LTE_PHICH_Modulator", NULL, "Downlink PHICH Modulator", "BMP_LTE_PHICH_Modulator" ),
	 list( "LTE", "LTE_SS_MIMO_Demod", NULL, "MIMO demodulatio for Sync signals (PSS and SSS)", "BMP_LTE_SS_MIMO_Demod" ),
	 list( "LTE", "LTE_SpecShaping", NULL, "LTE Spectrum Shaper", "BMP_LTE_SpecShaping" ),
	 list( "LTE", "LTE_UL_DFT", NULL, "Complex discrete Fourier transform for uplink", "BMP_LTE_UL_DFT" )
);

de_define_library_palette( "LTE", SCHEM_WIN, "sigproc_net",
	"LTE Multiplex", "LTE Multiplex", -1,
	 list( "LTE", "LTE_BusFork2", NULL, "Copy particles from an input bus to each output bus", "BMP_LTE_BusFork2" ),
	 list( "LTE", "LTE_DL_DemuxFrame", NULL, "Downlink Radio Frame De-multiplexer with Frequency Offset Compensator", "BMP_LTE_DL_DemuxFrame" ),
	 list( "LTE", "LTE_DL_DemuxOFDMSym", NULL, "Downlink OFDM Symbol De-multiplexer in one radio frame", "BMP_LTE_DL_DemuxOFDMSym" ),
	 list( "LTE", "LTE_DL_DemuxSlot", NULL, "Downlink Slot De-multiplexer for LTE DL receiver", "BMP_LTE_DL_DemuxSlot" ),
	 list( "LTE", "LTE_DL_MIMO_DemuxCIR", NULL, "Downlink CIR De-multiplexer in one radio frame", "BMP_LTE_DL_MIMO_DemuxCIR" ),
	 list( "LTE", "LTE_DL_MuxFrame", NULL, "Downlink radio frame multiplexer", "BMP_LTE_DL_MuxFrame" ),
	 list( "LTE", "LTE_DL_MuxOFDMSym", NULL, "Downlink OFDM Symbol Multiplexer in one radio frame", "BMP_LTE_DL_MuxOFDMSym" ),
	 list( "LTE", "LTE_DL_MuxSlot", NULL, "Downlink slot multiplexer", "BMP_LTE_DL_MuxSlot" ),
	 list( "LTE", "LTE_UL_DemuxFrame", NULL, "Uplink radio frame de-multiplexer with frequency offset compensator", "BMP_LTE_UL_DemuxFrame" ),
	 list( "LTE", "LTE_UL_DemuxSCFDMASym", NULL, "Uplink SC-FDMA symbol Demultiplexer", "BMP_LTE_UL_DemuxSCFDMASym" ),
	 list( "LTE", "LTE_UL_DemuxSlot", NULL, "Uplink slot de-multiplexer", "BMP_LTE_UL_DemuxSlot" ),
	 list( "LTE", "LTE_UL_MuxFrame", NULL, "Uplink radio frame multiplexer", "BMP_LTE_UL_MuxFrame" ),
	 list( "LTE", "LTE_UL_MuxSCFDMASym", NULL, "Uplink SC-FDMA symbol multiplexer", "BMP_LTE_UL_MuxSCFDMASym" ),
	 list( "LTE", "LTE_UL_MuxSlot", NULL, "Uplink slot multiplexer", "BMP_LTE_UL_MuxSlot" )
);

de_define_library_palette( "LTE", SCHEM_WIN, "sigproc_net",
	"LTE Signaling", "LTE Signaling", -1,
	 list( "LTE", "LTE_BCH_Gen", NULL, "generator for 24 BCH information bits", "BMP_LTE_BCH_Gen" ),
	 list( "LTE", "LTE_DL_CFI", NULL, "Downlink Control Format Indicator", "BMP_LTE_DL_CFI" ),
	 list( "LTE", "LTE_DL_DCI_CRC", NULL, "Downlink Control Information CRC Encoder", "BMP_LTE_DL_DCI_CRC" ),
	 list( "LTE", "LTE_DL_DCI_Gen", NULL, "Downlink Control Information Generator", "BMP_LTE_DL_DCI_Gen" ),
	 list( "LTE", "LTE_DL_DCI_RateMatch", NULL, "Downlink Control Information Rate Matcher", "BMP_LTE_DL_DCI_RateMatch" ),
	 list( "LTE", "LTE_DL_HI", NULL, "HARQ ACK/NACK generator in one radio frame", "BMP_LTE_DL_HI" ),
	 list( "LTE", "LTE_PBCH_CRC", NULL, "PBCH CRC Encoder", "BMP_LTE_PBCH_CRC" ),
	 list( "LTE", "LTE_PBCH_RateMatch", NULL, "PBCH Rate Matcher", "BMP_LTE_PBCH_RateMatch" ),
	 list( "LTE", "LTE_PBCH_Scrambler", NULL, "PBCH Scrambler", "BMP_LTE_PBCH_Scrambler" ),
	 list( "LTE", "LTE_PCFICH_Scrambler", NULL, "PCFICH Scrambler", "BMP_LTE_PCFICH_Scrambler" ),
	 list( "LTE", "LTE_PDCCH_Interleaver", NULL, "PDCCH Interleaver", "BMP_LTE_PDCCH_Interleaver" ),
	 list( "LTE", "LTE_PDCCH_Mux", NULL, "PDCCH Multiplexer", "BMP_LTE_PDCCH_Mux" ),
	 list( "LTE", "LTE_PDCCH_Scrambler", NULL, "PDCCH Scrambler", "BMP_LTE_PDCCH_Scrambler" ),
	 list( "LTE", "LTE_UL_PUCCH", NULL, "PUCCH Generator", "BMP_LTE_UL_PUCCH" )
);

de_define_library_palette( "LTE", SCHEM_WIN, "sigproc_net",
	"LTE Sync Equalization", "LTE Sync Equalization", -1,
	 list( "LTE", "LTE_DL_ChEstimator", NULL, "Downlink channel estimator and interpolator for FDD and TDD", "BMP_LTE_DL_ChEstimator" ),
	 list( "LTE", "LTE_DL_MIMO_FrameSync", NULL, "Downlink time and frequency synchronizer in time domain", "BMP_LTE_DL_MIMO_FrameSync" ),
	 list( "LTE", "LTE_DL_MIMO_FreqSync", NULL, "Timing and freqency estimation in freqency domain", "BMP_LTE_DL_MIMO_FreqSync" ),
	 list( "LTE", "LTE_IQ_Offset", NULL, "Uplink IQ offset compensation", "BMP_LTE_IQ_Offset" ),
	 list( "LTE", "LTE_UL_ChEstimator", NULL, "Uplink Channel Estimator and Interpolator", "BMP_LTE_UL_ChEstimator" ),
	 list( "LTE", "LTE_UL_FrameSync", NULL, "Uplink time and frequency synchronizer in time domain", "BMP_LTE_UL_FrameSync" ),
	 list( "LTE", "LTE_UL_FreqSync", NULL, "Timing and freqency estimation in freqency domain, using the PUSCH RS", "BMP_LTE_UL_FreqSync" )
);

de_define_library_palette( "LTE", SCHEM_WIN, "sigproc_net",
	"LTE Sync Signal", "LTE Sync Signal", -1,
	 list( "LTE", "LTE_DL_Pilot", NULL, "Downlink pilot generator", "BMP_LTE_DL_Pilot" ),
	 list( "LTE", "LTE_PSCH", NULL, "P-SCH generator", "BMP_LTE_PSCH" ),
	 list( "LTE", "LTE_RACH_HalfCarrierShift", NULL, "PRACH Half carrier shift", "BMP_LTE_RACH_HalfCarrierShift" ),
	 list( "LTE", "LTE_RACH_PrmGen", NULL, "RACH preamble sequence generator", "BMP_LTE_RACH_PrmGen" ),
	 list( "LTE", "LTE_RACH_SubcMapping", NULL, "RACH subcarrier mapping", "BMP_LTE_RACH_SubcMapping" ),
	 list( "LTE", "LTE_SSCH", NULL, "LTE downlink SSCH(M) Sequence generator", "BMP_LTE_SSCH" ),
	 list( "LTE", "LTE_UL_CAZAC", NULL, "Uplink CAZAC sequence generator", "BMP_LTE_UL_CAZAC" )
);

