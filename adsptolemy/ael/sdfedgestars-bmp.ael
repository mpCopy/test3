de_define_library_palette( "EDGE", SCHEM_WIN, "sigproc_net",
	"EDGE Channel Coding", "EDGE Channel Coding", -1,
	 list( "EDGE", "EDGE_BitCC", NULL, "Convolutional encoder bit by bit", "BMP_EDGE_BitCC" ),
	 list( "EDGE", "EDGE_BitDeSwapping", NULL, "Bit de-swapping in normal burst", "BMP_EDGE_BitDeSwapping" ),
	 list( "EDGE", "EDGE_BitSwapping", NULL, "Bit swapping in normal burst", "BMP_EDGE_BitSwapping" ),
	 list( "EDGE", "EDGE_BurstDeMapping", NULL, "Normal burst demapping", "BMP_EDGE_BurstDeMapping" ),
	 list( "EDGE", "EDGE_BurstMapping", NULL, "Normal burst mapping", "BMP_EDGE_BurstMapping" ),
	 list( "EDGE", "EDGE_CC_WithTail", NULL, "Convolutional encoder with tail", "BMP_EDGE_CC_WithTail" ),
	 list( "EDGE", "EDGE_Combiner", NULL, "Bits combiner for channel coding", "BMP_EDGE_Combiner" ),
	 list( "EDGE", "EDGE_CycDecoder", NULL, "Systematic cyclic codes decoder", "BMP_EDGE_CycDecoder" ),
	 list( "EDGE", "EDGE_CycEncoder", NULL, "Systematic cyclic codes encoder", "BMP_EDGE_CycEncoder" ),
	 list( "EDGE", "EDGE_DCC_WithTail", NULL, "Viterbi decoder for convolutional code with tail", "BMP_EDGE_DCC_WithTail" ),
	 list( "EDGE", "EDGE_DeInterleaver", NULL, "De-interleaving for packet data traffic channels", "BMP_EDGE_DeInterleaver" ),
	 list( "EDGE", "EDGE_DePuncture", NULL, "Data de-puncturing", "BMP_EDGE_DePuncture" ),
	 list( "EDGE", "EDGE_ExtraSFAddRmv", NULL, "Add or remove extra stealing flags for MCS1 to MCS4", "BMP_EDGE_ExtraSFAddRmv" ),
	 list( "EDGE", "EDGE_HeaderDeIntrlv", NULL, "Header de-interleaver", "BMP_EDGE_HeaderDeIntrlv" ),
	 list( "EDGE", "EDGE_HeaderDePunc", NULL, "Header de-puncture", "BMP_EDGE_HeaderDePunc" ),
	 list( "EDGE", "EDGE_HeaderIntrlv", NULL, "Header interleaver", "BMP_EDGE_HeaderIntrlv" ),
	 list( "EDGE", "EDGE_HeaderPunc", NULL, "Header puncture", "BMP_EDGE_HeaderPunc" ),
	 list( "EDGE", "EDGE_Interleaver", NULL, "Interleaving for packet data traffic channels", "BMP_EDGE_Interleaver" ),
	 list( "EDGE", "EDGE_Puncture", NULL, "Data puncturing", "BMP_EDGE_Puncture" ),
	 list( "EDGE", "EDGE_RSDecoder", NULL, "Reed-Solomon decoder", "BMP_EDGE_RSDecoder" ),
	 list( "EDGE", "EDGE_RSEncoder", NULL, "Reed-Solomon encoder", "BMP_EDGE_RSEncoder" ),
	 list( "EDGE", "EDGE_Splitter", NULL, "Block splitter for channel coding", "BMP_EDGE_Splitter" ),
	 list( "EDGE", "EDGE_TailBits", NULL, "Tailing bits adder or remover", "BMP_EDGE_TailBits" ),
	 list( "EDGE", "EDGE_USFPostDecoder", NULL, "USF postdecoder", "BMP_EDGE_USFPostDecoder" ),
	 list( "EDGE", "EDGE_USFPreEncoder", NULL, "USF pre-encoder", "BMP_EDGE_USFPreEncoder" ),
	 list( "EDGE", "EDGE_ViterbiBitDCC", NULL, "Viterbi decoder bit by bit for convolutional code", "BMP_EDGE_ViterbiBitDCC" )
);

de_define_library_palette( "EDGE", SCHEM_WIN, "sigproc_net",
	"EDGE Equalization", "EDGE Equalization", -1,
	 list( "EDGE", "EDGE_ChannelEstimator", NULL, "Channel estimator", "BMP_EDGE_ChannelEstimator" ),
	 list( "EDGE", "EDGE_DeRotator", NULL, "De-rotator", "BMP_EDGE_DeRotator" ),
	 list( "EDGE", "EDGE_EquCombiner", NULL, "Bidirectional equalization combiner", "BMP_EDGE_EquCombiner" ),
	 list( "EDGE", "EDGE_EquComposeAB", NULL, "Equalization access burst composer", "BMP_EDGE_EquComposeAB" ),
	 list( "EDGE", "EDGE_EquDeComposeAB", NULL, "Equalization access burst decomposer", "BMP_EDGE_EquDeComposeAB" ),
	 list( "EDGE", "EDGE_EquSplitter", NULL, "Bidirectional equalization splitter", "BMP_EDGE_EquSplitter" ),
	 list( "EDGE", "EDGE_EquStateToFloat", NULL, "State index to float translation", "BMP_EDGE_EquStateToFloat" ),
	 list( "EDGE", "EDGE_MatchedFilter", NULL, "Matched filter", "BMP_EDGE_MatchedFilter" ),
	 list( "EDGE", "EDGE_VAProcessor", NULL, "Viterbi algorithm processor", "BMP_EDGE_VAProcessor" )
);

de_define_library_palette( "EDGE", SCHEM_WIN, "sigproc_net",
	"EDGE Framing", "EDGE Framing", -1,
	 list( "EDGE", "EDGE_AccessBurst", NULL, "Access burst construction", "BMP_EDGE_AccessBurst" ),
	 list( "EDGE", "EDGE_AddRamp", NULL, "adding ramp up and ramp down", "BMP_EDGE_AddRamp" ),
	 list( "EDGE", "EDGE_DeAccessBurst", NULL, "Access burst disassembly", "BMP_EDGE_DeAccessBurst" ),
	 list( "EDGE", "EDGE_DeNormalBurst", NULL, "Normal burst disassembly", "BMP_EDGE_DeNormalBurst" ),
	 list( "EDGE", "EDGE_DeSBurst", NULL, "Synchronization burst disassembly", "BMP_EDGE_DeSBurst" ),
	 list( "EDGE", "EDGE_DummyBurst", NULL, "Dummy burst construction", "BMP_EDGE_DummyBurst" ),
	 list( "EDGE", "EDGE_FBurst", NULL, "Frequency correction burst construction", "BMP_EDGE_FBurst" ),
	 list( "EDGE", "EDGE_NormalBurst", NULL, "Normal burst construction for EDGE", "BMP_EDGE_NormalBurst" ),
	 list( "EDGE", "EDGE_SBurst", NULL, "Synchronization burst construction", "BMP_EDGE_SBurst" )
);

de_define_library_palette( "EDGE", SCHEM_WIN, "sigproc_net",
	"EDGE Measurement", "EDGE Measurement", -1,
	 list( "EDGE", "EDGE_BERFER", NULL, "BER and FER performance", "BMP_EDGE_BERFER" ),
	 list( "EDGE", "EDGE_NonLinearAmp", NULL, "Non-linear power amplifier", "BMP_EDGE_NonLinearAmp" ),
	 list( "EDGE", "EDGE_RCWindow_RCFilter", NULL, "Raised-cosine windowed raised-cosine filter", "BMP_EDGE_RCWindow_RCFilter" ),
	 list( "EDGE", "EDGE_SigPowerMeasure", NULL, "Average signal power measurement", "BMP_EDGE_SigPowerMeasure" )
);

de_define_library_palette( "EDGE", SCHEM_WIN, "sigproc_net",
	"EDGE Modems", "EDGE Modems", -1,
	 list( "EDGE", "EDGE_PhaseRotator", NULL, "Phase rotator used in 8PSK modulation", "BMP_EDGE_PhaseRotator" ),
	 list( "EDGE", "EDGE_PulseShapingFltr", NULL, "Pulse shaping filter", "BMP_EDGE_PulseShapingFltr" ),
	 list( "EDGE", "EDGE_RxFilter", NULL, "Receiving filter for EVM measurement", "BMP_EDGE_RxFilter" )
);

de_define_library_palette( "EDGE", SCHEM_WIN, "sigproc_net",
	"EDGE Signal Sources", "EDGE Signal Sources", -1,
	 list( "EDGE", "EDGE_DataPattern", NULL, "Patterned data source for EDGE", "BMP_EDGE_DataPattern" )
);

de_define_library_palette( "EDGE", SCHEM_WIN, "sigproc_net",
	"EDGE Synchronization", "EDGE Synchronization", -1,
	 list( "EDGE", "EDGE_DownSample", NULL, "EDGE burst down-sample", "BMP_EDGE_DownSample" ),
	 list( "EDGE", "EDGE_PhaseRecovery", NULL, "Index of sequence with peak correlation value", "BMP_EDGE_PhaseRecovery" ),
	 list( "EDGE", "EDGE_SymbolPrecede", NULL, "Output the correct content of a frame", "BMP_EDGE_SymbolPrecede" ),
	 list( "EDGE", "EDGE_TrainBitGen", NULL, "Training bits generation", "BMP_EDGE_TrainBitGen" )
);

