set_design_type( sigproc_net );
create_constant_form ("_n_x5fUMB_x5fRL_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_n_x5fUMB_x5fRL_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_n_x5fUMB_x5fRL_x5fEVM_fMirrorSpectrumSet",
	"_n_x5fUMB_x5fRL_x5fEVM_fNO",
	"_n_x5fUMB_x5fRL_x5fEVM_fYES",
	"StdForm");
create_constant_form ("_n_x5fUMB_x5fRL_x5fEVM_fOff", 
	"Off",
	0,
	"0",
	"Off");
create_constant_form ("_n_x5fUMB_x5fRL_x5fEVM_fRMS_x5f_x5fVideo_x5f", 
	"RMS (Video)",
	0,
	"1",
	"RMS (Video)");
create_form_set("_n_x5fUMB_x5fRL_x5fEVM_fAverageTypeSet",
	"_n_x5fUMB_x5fRL_x5fEVM_fOff",
	"_n_x5fUMB_x5fRL_x5fEVM_fRMS_x5f_x5fVideo_x5f",
	"StdForm");
create_constant_form ("_n_x5fUMB_x5fRL_x5fEVM_fFull_x5fSuperframe", 
	"Full Superframe",
	0,
	"0",
	"Full Superframe");
create_constant_form ("_n_x5fUMB_x5fRL_x5fEVM_fCompact_x5fSuperframe", 
	"Compact Superframe",
	0,
	"1",
	"Compact Superframe");
create_form_set("_n_x5fUMB_x5fRL_x5fEVM_fOutputFrameFormatSet",
	"_n_x5fUMB_x5fRL_x5fEVM_fFull_x5fSuperframe",
	"_n_x5fUMB_x5fRL_x5fEVM_fCompact_x5fSuperframe",
	"StdForm");
create_constant_form ("_n_x5fUMB_x5fRL_x5fEVM_fRatio_x5f1", 
	"Ratio 1",
	0,
	"0",
	"Ratio 1");
create_constant_form ("_n_x5fUMB_x5fRL_x5fEVM_fRatio_x5f2", 
	"Ratio 2",
	0,
	"1",
	"Ratio 2");
create_constant_form ("_n_x5fUMB_x5fRL_x5fEVM_fRatio_x5f4", 
	"Ratio 4",
	0,
	"2",
	"Ratio 4");
create_constant_form ("_n_x5fUMB_x5fRL_x5fEVM_fRatio_x5f8", 
	"Ratio 8",
	0,
	"3",
	"Ratio 8");
create_constant_form ("_n_x5fUMB_x5fRL_x5fEVM_fRatio_x5f16", 
	"Ratio 16",
	0,
	"4",
	"Ratio 16");
create_constant_form ("_n_x5fUMB_x5fRL_x5fEVM_fRatio_x5f32", 
	"Ratio 32",
	0,
	"5",
	"Ratio 32");
create_form_set("_n_x5fUMB_x5fRL_x5fEVM_fOversamplingOptionSet",
	"_n_x5fUMB_x5fRL_x5fEVM_fRatio_x5f1",
	"_n_x5fUMB_x5fRL_x5fEVM_fRatio_x5f2",
	"_n_x5fUMB_x5fRL_x5fEVM_fRatio_x5f4",
	"_n_x5fUMB_x5fRL_x5fEVM_fRatio_x5f8",
	"_n_x5fUMB_x5fRL_x5fEVM_fRatio_x5f16",
	"_n_x5fUMB_x5fRL_x5fEVM_fRatio_x5f32",
	"StdForm");
create_constant_form ("_n_x5fUMB_x5fRL_x5fEVM_fFFT_x5f2048", 
	"FFT 2048",
	0,
	"0",
	"FFT 2048");
create_constant_form ("_n_x5fUMB_x5fRL_x5fEVM_fFFT_x5f1024", 
	"FFT 1024",
	0,
	"1",
	"FFT 1024");
create_constant_form ("_n_x5fUMB_x5fRL_x5fEVM_fFFT_x5f512", 
	"FFT 512",
	0,
	"2",
	"FFT 512");
create_constant_form ("_n_x5fUMB_x5fRL_x5fEVM_fFFT_x5f256", 
	"FFT 256",
	0,
	"3",
	"FFT 256");
create_constant_form ("_n_x5fUMB_x5fRL_x5fEVM_fFFT_x5f128", 
	"FFT 128",
	0,
	"4",
	"FFT 128");
create_form_set("_n_x5fUMB_x5fRL_x5fEVM_fFFTSizeSet",
	"_n_x5fUMB_x5fRL_x5fEVM_fFFT_x5f2048",
	"_n_x5fUMB_x5fRL_x5fEVM_fFFT_x5f1024",
	"_n_x5fUMB_x5fRL_x5fEVM_fFFT_x5f512",
	"_n_x5fUMB_x5fRL_x5fEVM_fFFT_x5f256",
	"_n_x5fUMB_x5fRL_x5fEVM_fFFT_x5f128",
	"StdForm");
create_constant_form ("_n_x5fUMB_x5fRL_x5fEVM_fNcp_x5f1", 
	"Ncp 1",
	0,
	"0",
	"Ncp 1");
create_constant_form ("_n_x5fUMB_x5fRL_x5fEVM_fNcp_x5f2", 
	"Ncp 2",
	0,
	"1",
	"Ncp 2");
create_constant_form ("_n_x5fUMB_x5fRL_x5fEVM_fNcp_x5f3", 
	"Ncp 3",
	0,
	"2",
	"Ncp 3");
create_constant_form ("_n_x5fUMB_x5fRL_x5fEVM_fNcp_x5f4", 
	"Ncp 4",
	0,
	"3",
	"Ncp 4");
create_form_set("_n_x5fUMB_x5fRL_x5fEVM_fNcpSet",
	"_n_x5fUMB_x5fRL_x5fEVM_fNcp_x5f1",
	"_n_x5fUMB_x5fRL_x5fEVM_fNcp_x5f2",
	"_n_x5fUMB_x5fRL_x5fEVM_fNcp_x5f3",
	"_n_x5fUMB_x5fRL_x5fEVM_fNcp_x5f4",
	"StdForm");
create_constant_form ("_n_x5fUMB_x5fRL_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_n_x5fUMB_x5fRL_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_n_x5fUMB_x5fRL_x5fEVM_fSuperframeIdxIncreasedSet",
	"_n_x5fUMB_x5fRL_x5fEVM_fNO",
	"_n_x5fUMB_x5fRL_x5fEVM_fYES",
	"StdForm");
create_constant_form ("_n_x5fUMB_x5fRL_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_n_x5fUMB_x5fRL_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_n_x5fUMB_x5fRL_x5fEVM_fGloballySynchronousSet",
	"_n_x5fUMB_x5fRL_x5fEVM_fNO",
	"_n_x5fUMB_x5fRL_x5fEVM_fYES",
	"StdForm");
create_constant_form ("_n_x5fUMB_x5fRL_x5fEVM_fFormat_x5f0", 
	"Format 0",
	0,
	"0",
	"Format 0");
create_constant_form ("_n_x5fUMB_x5fRL_x5fEVM_fFormat_x5f1", 
	"Format 1",
	0,
	"1",
	"Format 1");
create_form_set("_n_x5fUMB_x5fRL_x5fEVM_fRL_x5fDPICHFormatSet",
	"_n_x5fUMB_x5fRL_x5fEVM_fFormat_x5f0",
	"_n_x5fUMB_x5fRL_x5fEVM_fFormat_x5f1",
	"StdForm");
create_constant_form ("_n_x5fUMB_x5fRL_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_n_x5fUMB_x5fRL_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_n_x5fUMB_x5fRL_x5fEVM_fPulseSearchSet",
	"_n_x5fUMB_x5fRL_x5fEVM_fNO",
	"_n_x5fUMB_x5fRL_x5fEVM_fYES",
	"StdForm");
create_constant_form ("_n_x5fUMB_x5fRL_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_n_x5fUMB_x5fRL_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_n_x5fUMB_x5fRL_x5fEVM_fTrackAmplitudeSet",
	"_n_x5fUMB_x5fRL_x5fEVM_fNO",
	"_n_x5fUMB_x5fRL_x5fEVM_fYES",
	"StdForm");
create_constant_form ("_n_x5fUMB_x5fRL_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_n_x5fUMB_x5fRL_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_n_x5fUMB_x5fRL_x5fEVM_fTrackPhaseSet",
	"_n_x5fUMB_x5fRL_x5fEVM_fNO",
	"_n_x5fUMB_x5fRL_x5fEVM_fYES",
	"StdForm");
create_constant_form ("_n_x5fUMB_x5fRL_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_n_x5fUMB_x5fRL_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_n_x5fUMB_x5fRL_x5fEVM_fTrackTimingSet",
	"_n_x5fUMB_x5fRL_x5fEVM_fNO",
	"_n_x5fUMB_x5fRL_x5fEVM_fYES",
	"StdForm");
create_constant_form ("_n_x5fUMB_x5fRL_x5fEVM_fChann_x5fEstimation_x5fSeq_x5fOnly", 
	"Chann Estimation Seq Only",
	0,
	"0",
	"Chann Estimation Seq Only");
create_constant_form ("_n_x5fUMB_x5fRL_x5fEVM_fChann_x5fEstimation_x5fSeq_x5f_x5f_x5fData", 
	"Chann Estimation Seq & Data",
	0,
	"1",
	"Chann Estimation Seq & Data");
create_form_set("_n_x5fUMB_x5fRL_x5fEVM_fEqualizerTrainingSet",
	"_n_x5fUMB_x5fRL_x5fEVM_fChann_x5fEstimation_x5fSeq_x5fOnly",
	"_n_x5fUMB_x5fRL_x5fEVM_fChann_x5fEstimation_x5fSeq_x5f_x5f_x5fData",
	"StdForm");
create_constant_form ("_n_x5fUMB_x5fRL_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_n_x5fUMB_x5fRL_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_n_x5fUMB_x5fRL_x5fEVM_fSaveConstellationSet",
	"_n_x5fUMB_x5fRL_x5fEVM_fNO",
	"_n_x5fUMB_x5fRL_x5fEVM_fYES",
	"StdForm");
create_item ("_UMB_RL_EVM","UMB Reverselink EVM Measurement",
	"U",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_UMB_RL_EVM",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dTSDF_n_x5fUMB_x5fRL_x5fEVM_lsdfumbmeasurements",
	SPComponentAnnotFmt,
	"SYM_UMB_RL_EVM",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("RLoad","Load resistance",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","DefaultRLoad")),
	create_parm ("RTemp","Load resistance physical temperature",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TEMPERATURE_UNIT,
		prm("StdForm","DefaultRTemp")),
	create_parm ("FCarrier","Carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","3407 MHz")),
	create_parm ("MirrorSpectrum","Mirror frequency spectrum?",
		PARM_INT,
		"_n_x5fUMB_x5fRL_x5fEVM_fMirrorSpectrumSet",
		UNITLESS_UNIT,
		prm("_n_x5fUMB_x5fRL_x5fEVM_fNO","NO")),
	create_parm ("Start","Data collection start time",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","DefaultTimeStart")),
	create_parm ("AverageType","Average type",
		PARM_INT,
		"_n_x5fUMB_x5fRL_x5fEVM_fAverageTypeSet",
		UNITLESS_UNIT,
		prm("_n_x5fUMB_x5fRL_x5fEVM_fOff","Off")),
	create_parm ("SuperframesToAverage","Superframes to average (if AverageType is not Off)",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","5")),
	create_parm ("OutputFrameFormat","output superframe format",
		PARM_INT,
		"_n_x5fUMB_x5fRL_x5fEVM_fOutputFrameFormatSet",
		UNITLESS_UNIT,
		prm("_n_x5fUMB_x5fRL_x5fEVM_fFull_x5fSuperframe","Full_Superframe")),
	create_parm ("StartingFrame","the starting frame index in each superframe from which this model will allocate the data",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("NumFrames","the number of frames on which this model will allocate the data starting from the StartingFrame",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","25")),
	create_parm ("OversamplingOption","Oversampling ratio option",
		PARM_INT,
		"_n_x5fUMB_x5fRL_x5fEVM_fOversamplingOptionSet",
		UNITLESS_UNIT,
		prm("_n_x5fUMB_x5fRL_x5fEVM_fRatio_x5f2","Ratio_2")),
	create_parm ("FFTSize","the size of total subcarriers for FFT operation",
		PARM_INT,
		"_n_x5fUMB_x5fRL_x5fEVM_fFFTSizeSet",
		UNITLESS_UNIT,
		prm("_n_x5fUMB_x5fRL_x5fEVM_fFFT_x5f512","FFT_512")),
	create_parm ("GuardSize","the size of guard subcarriers",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","32")),
	create_parm ("Ncp","the index for Cyclic Prefix (Tcp=Ncp*FFTSize*Tchip/16)",
		PARM_INT,
		"_n_x5fUMB_x5fRL_x5fEVM_fNcpSet",
		UNITLESS_UNIT,
		prm("_n_x5fUMB_x5fRL_x5fEVM_fNcp_x5f1","Ncp_1")),
	create_parm ("StartingSuperframe","the superframe index for the starting superframe",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("SuperframeIdxIncreased","whether the superframe index is increased from superframe to superframe",
		PARM_INT,
		"_n_x5fUMB_x5fRL_x5fEVM_fSuperframeIdxIncreasedSet",
		UNITLESS_UNIT,
		prm("_n_x5fUMB_x5fRL_x5fEVM_fYES","YES")),
	create_parm ("GloballySynchronous","whether the sector is synchronized with GPS time",
		PARM_INT,
		"_n_x5fUMB_x5fRL_x5fEVM_fGloballySynchronousSet",
		UNITLESS_UNIT,
		prm("_n_x5fUMB_x5fRL_x5fEVM_fNO","NO")),
	create_parm ("PilotPN","9-bit pilot PN for different sectors",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("CodeOffset","code offset between 0 and 2 for Forward Dedicated Pilot Channel",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("RL_DPICHFormat","the Reverse Dedicated Pilot Channel format for OFDMA Data Channels",
		PARM_INT,
		"_n_x5fUMB_x5fRL_x5fEVM_fRL_x5fDPICHFormatSet",
		UNITLESS_UNIT,
		prm("_n_x5fUMB_x5fRL_x5fEVM_fFormat_x5f0","Format_0")),
	create_parm ("PulseSearch","Perform pulse search?",
		PARM_INT,
		"_n_x5fUMB_x5fRL_x5fEVM_fPulseSearchSet",
		UNITLESS_UNIT,
		prm("_n_x5fUMB_x5fRL_x5fEVM_fYES","YES")),
	create_parm ("SymbolTimingAdjust","Symbol timing adjustment (in % of FFT time)",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-3.125")),
	create_parm ("TrackAmplitude","Track amplitude?",
		PARM_INT,
		"_n_x5fUMB_x5fRL_x5fEVM_fTrackAmplitudeSet",
		UNITLESS_UNIT,
		prm("_n_x5fUMB_x5fRL_x5fEVM_fNO","NO")),
	create_parm ("TrackPhase","Track phase?",
		PARM_INT,
		"_n_x5fUMB_x5fRL_x5fEVM_fTrackPhaseSet",
		UNITLESS_UNIT,
		prm("_n_x5fUMB_x5fRL_x5fEVM_fYES","YES")),
	create_parm ("TrackTiming","Track timing?",
		PARM_INT,
		"_n_x5fUMB_x5fRL_x5fEVM_fTrackTimingSet",
		UNITLESS_UNIT,
		prm("_n_x5fUMB_x5fRL_x5fEVM_fNO","NO")),
	create_parm ("EqualizerTraining","Equalizer training method",
		PARM_INT,
		"_n_x5fUMB_x5fRL_x5fEVM_fEqualizerTrainingSet",
		UNITLESS_UNIT,
		prm("_n_x5fUMB_x5fRL_x5fEVM_fChann_x5fEstimation_x5fSeq_x5fOnly","Chann_Estimation_Seq_Only")),
	create_parm ("SaveConstellation","if set YES, the measured vector used for EVM calculation shall be saved to Data File",
		PARM_INT,
		"_n_x5fUMB_x5fRL_x5fEVM_fSaveConstellationSet",
		UNITLESS_UNIT,
		prm("_n_x5fUMB_x5fRL_x5fEVM_fNO","NO")));
library_group("UMB, Measurements","UMB, Measurements","_UMB_RL_EVM");
palette_group("UMB, Measurements","UMB, Measurements","_UMB_RL_EVM");

create_constant_form ("_nUMB_x5fRL_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nUMB_x5fRL_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nUMB_x5fRL_x5fEVM_fMirrorSpectrumSet",
	"_nUMB_x5fRL_x5fEVM_fNO",
	"_nUMB_x5fRL_x5fEVM_fYES",
	"StdForm");
create_constant_form ("_nUMB_x5fRL_x5fEVM_fOff", 
	"Off",
	0,
	"0",
	"Off");
create_constant_form ("_nUMB_x5fRL_x5fEVM_fRMS_x5f_x5fVideo_x5f", 
	"RMS (Video)",
	0,
	"1",
	"RMS (Video)");
create_form_set("_nUMB_x5fRL_x5fEVM_fAverageTypeSet",
	"_nUMB_x5fRL_x5fEVM_fOff",
	"_nUMB_x5fRL_x5fEVM_fRMS_x5f_x5fVideo_x5f",
	"StdForm");
create_constant_form ("_nUMB_x5fRL_x5fEVM_fFull_x5fSuperframe", 
	"Full Superframe",
	0,
	"0",
	"Full Superframe");
create_constant_form ("_nUMB_x5fRL_x5fEVM_fCompact_x5fSuperframe", 
	"Compact Superframe",
	0,
	"1",
	"Compact Superframe");
create_form_set("_nUMB_x5fRL_x5fEVM_fOutputFrameFormatSet",
	"_nUMB_x5fRL_x5fEVM_fFull_x5fSuperframe",
	"_nUMB_x5fRL_x5fEVM_fCompact_x5fSuperframe",
	"StdForm");
create_constant_form ("_nUMB_x5fRL_x5fEVM_fRatio_x5f1", 
	"Ratio 1",
	0,
	"0",
	"Ratio 1");
create_constant_form ("_nUMB_x5fRL_x5fEVM_fRatio_x5f2", 
	"Ratio 2",
	0,
	"1",
	"Ratio 2");
create_constant_form ("_nUMB_x5fRL_x5fEVM_fRatio_x5f4", 
	"Ratio 4",
	0,
	"2",
	"Ratio 4");
create_constant_form ("_nUMB_x5fRL_x5fEVM_fRatio_x5f8", 
	"Ratio 8",
	0,
	"3",
	"Ratio 8");
create_constant_form ("_nUMB_x5fRL_x5fEVM_fRatio_x5f16", 
	"Ratio 16",
	0,
	"4",
	"Ratio 16");
create_constant_form ("_nUMB_x5fRL_x5fEVM_fRatio_x5f32", 
	"Ratio 32",
	0,
	"5",
	"Ratio 32");
create_form_set("_nUMB_x5fRL_x5fEVM_fOversamplingOptionSet",
	"_nUMB_x5fRL_x5fEVM_fRatio_x5f1",
	"_nUMB_x5fRL_x5fEVM_fRatio_x5f2",
	"_nUMB_x5fRL_x5fEVM_fRatio_x5f4",
	"_nUMB_x5fRL_x5fEVM_fRatio_x5f8",
	"_nUMB_x5fRL_x5fEVM_fRatio_x5f16",
	"_nUMB_x5fRL_x5fEVM_fRatio_x5f32",
	"StdForm");
create_constant_form ("_nUMB_x5fRL_x5fEVM_fFFT_x5f2048", 
	"FFT 2048",
	0,
	"0",
	"FFT 2048");
create_constant_form ("_nUMB_x5fRL_x5fEVM_fFFT_x5f1024", 
	"FFT 1024",
	0,
	"1",
	"FFT 1024");
create_constant_form ("_nUMB_x5fRL_x5fEVM_fFFT_x5f512", 
	"FFT 512",
	0,
	"2",
	"FFT 512");
create_constant_form ("_nUMB_x5fRL_x5fEVM_fFFT_x5f256", 
	"FFT 256",
	0,
	"3",
	"FFT 256");
create_constant_form ("_nUMB_x5fRL_x5fEVM_fFFT_x5f128", 
	"FFT 128",
	0,
	"4",
	"FFT 128");
create_form_set("_nUMB_x5fRL_x5fEVM_fFFTSizeSet",
	"_nUMB_x5fRL_x5fEVM_fFFT_x5f2048",
	"_nUMB_x5fRL_x5fEVM_fFFT_x5f1024",
	"_nUMB_x5fRL_x5fEVM_fFFT_x5f512",
	"_nUMB_x5fRL_x5fEVM_fFFT_x5f256",
	"_nUMB_x5fRL_x5fEVM_fFFT_x5f128",
	"StdForm");
create_constant_form ("_nUMB_x5fRL_x5fEVM_fNcp_x5f1", 
	"Ncp 1",
	0,
	"0",
	"Ncp 1");
create_constant_form ("_nUMB_x5fRL_x5fEVM_fNcp_x5f2", 
	"Ncp 2",
	0,
	"1",
	"Ncp 2");
create_constant_form ("_nUMB_x5fRL_x5fEVM_fNcp_x5f3", 
	"Ncp 3",
	0,
	"2",
	"Ncp 3");
create_constant_form ("_nUMB_x5fRL_x5fEVM_fNcp_x5f4", 
	"Ncp 4",
	0,
	"3",
	"Ncp 4");
create_form_set("_nUMB_x5fRL_x5fEVM_fNcpSet",
	"_nUMB_x5fRL_x5fEVM_fNcp_x5f1",
	"_nUMB_x5fRL_x5fEVM_fNcp_x5f2",
	"_nUMB_x5fRL_x5fEVM_fNcp_x5f3",
	"_nUMB_x5fRL_x5fEVM_fNcp_x5f4",
	"StdForm");
create_constant_form ("_nUMB_x5fRL_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nUMB_x5fRL_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nUMB_x5fRL_x5fEVM_fSuperframeIdxIncreasedSet",
	"_nUMB_x5fRL_x5fEVM_fNO",
	"_nUMB_x5fRL_x5fEVM_fYES",
	"StdForm");
create_constant_form ("_nUMB_x5fRL_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nUMB_x5fRL_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nUMB_x5fRL_x5fEVM_fGloballySynchronousSet",
	"_nUMB_x5fRL_x5fEVM_fNO",
	"_nUMB_x5fRL_x5fEVM_fYES",
	"StdForm");
create_constant_form ("_nUMB_x5fRL_x5fEVM_fFormat_x5f0", 
	"Format 0",
	0,
	"0",
	"Format 0");
create_constant_form ("_nUMB_x5fRL_x5fEVM_fFormat_x5f1", 
	"Format 1",
	0,
	"1",
	"Format 1");
create_form_set("_nUMB_x5fRL_x5fEVM_fRL_x5fDPICHFormatSet",
	"_nUMB_x5fRL_x5fEVM_fFormat_x5f0",
	"_nUMB_x5fRL_x5fEVM_fFormat_x5f1",
	"StdForm");
create_constant_form ("_nUMB_x5fRL_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nUMB_x5fRL_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nUMB_x5fRL_x5fEVM_fPulseSearchSet",
	"_nUMB_x5fRL_x5fEVM_fNO",
	"_nUMB_x5fRL_x5fEVM_fYES",
	"StdForm");
create_constant_form ("_nUMB_x5fRL_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nUMB_x5fRL_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nUMB_x5fRL_x5fEVM_fTrackAmplitudeSet",
	"_nUMB_x5fRL_x5fEVM_fNO",
	"_nUMB_x5fRL_x5fEVM_fYES",
	"StdForm");
create_constant_form ("_nUMB_x5fRL_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nUMB_x5fRL_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nUMB_x5fRL_x5fEVM_fTrackPhaseSet",
	"_nUMB_x5fRL_x5fEVM_fNO",
	"_nUMB_x5fRL_x5fEVM_fYES",
	"StdForm");
create_constant_form ("_nUMB_x5fRL_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nUMB_x5fRL_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nUMB_x5fRL_x5fEVM_fTrackTimingSet",
	"_nUMB_x5fRL_x5fEVM_fNO",
	"_nUMB_x5fRL_x5fEVM_fYES",
	"StdForm");
create_constant_form ("_nUMB_x5fRL_x5fEVM_fChann_x5fEstimation_x5fSeq_x5fOnly", 
	"Chann Estimation Seq Only",
	0,
	"0",
	"Chann Estimation Seq Only");
create_constant_form ("_nUMB_x5fRL_x5fEVM_fChann_x5fEstimation_x5fSeq_x5f_x5f_x5fData", 
	"Chann Estimation Seq & Data",
	0,
	"1",
	"Chann Estimation Seq & Data");
create_form_set("_nUMB_x5fRL_x5fEVM_fEqualizerTrainingSet",
	"_nUMB_x5fRL_x5fEVM_fChann_x5fEstimation_x5fSeq_x5fOnly",
	"_nUMB_x5fRL_x5fEVM_fChann_x5fEstimation_x5fSeq_x5f_x5f_x5fData",
	"StdForm");
create_constant_form ("_nUMB_x5fRL_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nUMB_x5fRL_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nUMB_x5fRL_x5fEVM_fSaveConstellationSet",
	"_nUMB_x5fRL_x5fEVM_fNO",
	"_nUMB_x5fRL_x5fEVM_fYES",
	"StdForm");
create_item ("UMB_RL_EVM","UMB Reverselink EVM Measurement",
	"U",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_UMB_RL_EVM",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"UMB_RL_EVM",
	SPDesignAnnotFmt,
	"SYM_UMB_RL_EVM",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("RLoad","Load resistance",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","DefaultRLoad")),
	create_parm ("RTemp","Load resistance physical temperature",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TEMPERATURE_UNIT,
		prm("StdForm","DefaultRTemp")),
	create_parm ("FCarrier","Carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","3407 MHz")),
	create_parm ("MirrorSpectrum","Mirror frequency spectrum?",
		PARM_INT,
		"_nUMB_x5fRL_x5fEVM_fMirrorSpectrumSet",
		UNITLESS_UNIT,
		prm("_nUMB_x5fRL_x5fEVM_fNO","NO")),
	create_parm ("Start","Data collection start time",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","DefaultTimeStart")),
	create_parm ("AverageType","Average type",
		PARM_INT,
		"_nUMB_x5fRL_x5fEVM_fAverageTypeSet",
		UNITLESS_UNIT,
		prm("_nUMB_x5fRL_x5fEVM_fOff","Off")),
	create_parm ("SuperframesToAverage","Superframes to average (if AverageType is not Off)",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","5")),
	create_parm ("OutputFrameFormat","output superframe format",
		PARM_INT,
		"_nUMB_x5fRL_x5fEVM_fOutputFrameFormatSet",
		UNITLESS_UNIT,
		prm("_nUMB_x5fRL_x5fEVM_fFull_x5fSuperframe","Full_Superframe")),
	create_parm ("StartingFrame","the starting frame index in each superframe from which this model will allocate the data",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("NumFrames","the number of frames on which this model will allocate the data starting from the StartingFrame",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","25")),
	create_parm ("OversamplingOption","Oversampling ratio option",
		PARM_INT,
		"_nUMB_x5fRL_x5fEVM_fOversamplingOptionSet",
		UNITLESS_UNIT,
		prm("_nUMB_x5fRL_x5fEVM_fRatio_x5f2","Ratio_2")),
	create_parm ("FFTSize","the size of total subcarriers for FFT operation",
		PARM_INT,
		"_nUMB_x5fRL_x5fEVM_fFFTSizeSet",
		UNITLESS_UNIT,
		prm("_nUMB_x5fRL_x5fEVM_fFFT_x5f512","FFT_512")),
	create_parm ("GuardSize","the size of guard subcarriers",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","32")),
	create_parm ("Ncp","the index for Cyclic Prefix (Tcp=Ncp*FFTSize*Tchip/16)",
		PARM_INT,
		"_nUMB_x5fRL_x5fEVM_fNcpSet",
		UNITLESS_UNIT,
		prm("_nUMB_x5fRL_x5fEVM_fNcp_x5f1","Ncp_1")),
	create_parm ("StartingSuperframe","the superframe index for the starting superframe",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("SuperframeIdxIncreased","whether the superframe index is increased from superframe to superframe",
		PARM_INT,
		"_nUMB_x5fRL_x5fEVM_fSuperframeIdxIncreasedSet",
		UNITLESS_UNIT,
		prm("_nUMB_x5fRL_x5fEVM_fYES","YES")),
	create_parm ("GloballySynchronous","whether the sector is synchronized with GPS time",
		PARM_INT,
		"_nUMB_x5fRL_x5fEVM_fGloballySynchronousSet",
		UNITLESS_UNIT,
		prm("_nUMB_x5fRL_x5fEVM_fNO","NO")),
	create_parm ("PilotPN","9-bit pilot PN for different sectors",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("CodeOffset","code offset between 0 and 2 for Forward Dedicated Pilot Channel",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("RL_DPICHFormat","the Reverse Dedicated Pilot Channel format for OFDMA Data Channels",
		PARM_INT,
		"_nUMB_x5fRL_x5fEVM_fRL_x5fDPICHFormatSet",
		UNITLESS_UNIT,
		prm("_nUMB_x5fRL_x5fEVM_fFormat_x5f0","Format_0")),
	create_parm ("PulseSearch","Perform pulse search?",
		PARM_INT,
		"_nUMB_x5fRL_x5fEVM_fPulseSearchSet",
		UNITLESS_UNIT,
		prm("_nUMB_x5fRL_x5fEVM_fYES","YES")),
	create_parm ("SymbolTimingAdjust","Symbol timing adjustment (in % of FFT time)",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-3.125")),
	create_parm ("TrackAmplitude","Track amplitude?",
		PARM_INT,
		"_nUMB_x5fRL_x5fEVM_fTrackAmplitudeSet",
		UNITLESS_UNIT,
		prm("_nUMB_x5fRL_x5fEVM_fNO","NO")),
	create_parm ("TrackPhase","Track phase?",
		PARM_INT,
		"_nUMB_x5fRL_x5fEVM_fTrackPhaseSet",
		UNITLESS_UNIT,
		prm("_nUMB_x5fRL_x5fEVM_fYES","YES")),
	create_parm ("TrackTiming","Track timing?",
		PARM_INT,
		"_nUMB_x5fRL_x5fEVM_fTrackTimingSet",
		UNITLESS_UNIT,
		prm("_nUMB_x5fRL_x5fEVM_fNO","NO")),
	create_parm ("EqualizerTraining","Equalizer training method",
		PARM_INT,
		"_nUMB_x5fRL_x5fEVM_fEqualizerTrainingSet",
		UNITLESS_UNIT,
		prm("_nUMB_x5fRL_x5fEVM_fChann_x5fEstimation_x5fSeq_x5fOnly","Chann_Estimation_Seq_Only")),
	create_parm ("SaveConstellation","if set YES, the measured vector used for EVM calculation shall be saved to Data File",
		PARM_INT,
		"_nUMB_x5fRL_x5fEVM_fSaveConstellationSet",
		UNITLESS_UNIT,
		prm("_nUMB_x5fRL_x5fEVM_fNO","NO")));
library_group("UMB, Measurements","UMB, Measurements","UMB_RL_EVM");
palette_group("UMB, Measurements","UMB, Measurements","UMB_RL_EVM");

create_constant_form ("_n_x5fUMB_x5fFL_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_n_x5fUMB_x5fFL_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_n_x5fUMB_x5fFL_x5fEVM_fMirrorSpectrumSet",
	"_n_x5fUMB_x5fFL_x5fEVM_fNO",
	"_n_x5fUMB_x5fFL_x5fEVM_fYES",
	"StdForm");
create_constant_form ("_n_x5fUMB_x5fFL_x5fEVM_fOff", 
	"Off",
	0,
	"0",
	"Off");
create_constant_form ("_n_x5fUMB_x5fFL_x5fEVM_fRMS_x5f_x5fVideo_x5f", 
	"RMS (Video)",
	0,
	"1",
	"RMS (Video)");
create_form_set("_n_x5fUMB_x5fFL_x5fEVM_fAverageTypeSet",
	"_n_x5fUMB_x5fFL_x5fEVM_fOff",
	"_n_x5fUMB_x5fFL_x5fEVM_fRMS_x5f_x5fVideo_x5f",
	"StdForm");
create_constant_form ("_n_x5fUMB_x5fFL_x5fEVM_fFull_x5fSuperframe", 
	"Full Superframe",
	0,
	"0",
	"Full Superframe");
create_constant_form ("_n_x5fUMB_x5fFL_x5fEVM_fCompact_x5fSuperframe", 
	"Compact Superframe",
	0,
	"1",
	"Compact Superframe");
create_form_set("_n_x5fUMB_x5fFL_x5fEVM_fOutputFrameFormatSet",
	"_n_x5fUMB_x5fFL_x5fEVM_fFull_x5fSuperframe",
	"_n_x5fUMB_x5fFL_x5fEVM_fCompact_x5fSuperframe",
	"StdForm");
create_constant_form ("_n_x5fUMB_x5fFL_x5fEVM_fRatio_x5f1", 
	"Ratio 1",
	0,
	"0",
	"Ratio 1");
create_constant_form ("_n_x5fUMB_x5fFL_x5fEVM_fRatio_x5f2", 
	"Ratio 2",
	0,
	"1",
	"Ratio 2");
create_constant_form ("_n_x5fUMB_x5fFL_x5fEVM_fRatio_x5f4", 
	"Ratio 4",
	0,
	"2",
	"Ratio 4");
create_constant_form ("_n_x5fUMB_x5fFL_x5fEVM_fRatio_x5f8", 
	"Ratio 8",
	0,
	"3",
	"Ratio 8");
create_constant_form ("_n_x5fUMB_x5fFL_x5fEVM_fRatio_x5f16", 
	"Ratio 16",
	0,
	"4",
	"Ratio 16");
create_constant_form ("_n_x5fUMB_x5fFL_x5fEVM_fRatio_x5f32", 
	"Ratio 32",
	0,
	"5",
	"Ratio 32");
create_form_set("_n_x5fUMB_x5fFL_x5fEVM_fOversamplingOptionSet",
	"_n_x5fUMB_x5fFL_x5fEVM_fRatio_x5f1",
	"_n_x5fUMB_x5fFL_x5fEVM_fRatio_x5f2",
	"_n_x5fUMB_x5fFL_x5fEVM_fRatio_x5f4",
	"_n_x5fUMB_x5fFL_x5fEVM_fRatio_x5f8",
	"_n_x5fUMB_x5fFL_x5fEVM_fRatio_x5f16",
	"_n_x5fUMB_x5fFL_x5fEVM_fRatio_x5f32",
	"StdForm");
create_constant_form ("_n_x5fUMB_x5fFL_x5fEVM_fFFT_x5f2048", 
	"FFT 2048",
	0,
	"0",
	"FFT 2048");
create_constant_form ("_n_x5fUMB_x5fFL_x5fEVM_fFFT_x5f1024", 
	"FFT 1024",
	0,
	"1",
	"FFT 1024");
create_constant_form ("_n_x5fUMB_x5fFL_x5fEVM_fFFT_x5f512", 
	"FFT 512",
	0,
	"2",
	"FFT 512");
create_constant_form ("_n_x5fUMB_x5fFL_x5fEVM_fFFT_x5f256", 
	"FFT 256",
	0,
	"3",
	"FFT 256");
create_constant_form ("_n_x5fUMB_x5fFL_x5fEVM_fFFT_x5f128", 
	"FFT 128",
	0,
	"4",
	"FFT 128");
create_form_set("_n_x5fUMB_x5fFL_x5fEVM_fFFTSizeSet",
	"_n_x5fUMB_x5fFL_x5fEVM_fFFT_x5f2048",
	"_n_x5fUMB_x5fFL_x5fEVM_fFFT_x5f1024",
	"_n_x5fUMB_x5fFL_x5fEVM_fFFT_x5f512",
	"_n_x5fUMB_x5fFL_x5fEVM_fFFT_x5f256",
	"_n_x5fUMB_x5fFL_x5fEVM_fFFT_x5f128",
	"StdForm");
create_constant_form ("_n_x5fUMB_x5fFL_x5fEVM_fNcp_x5f1", 
	"Ncp 1",
	0,
	"0",
	"Ncp 1");
create_constant_form ("_n_x5fUMB_x5fFL_x5fEVM_fNcp_x5f2", 
	"Ncp 2",
	0,
	"1",
	"Ncp 2");
create_constant_form ("_n_x5fUMB_x5fFL_x5fEVM_fNcp_x5f3", 
	"Ncp 3",
	0,
	"2",
	"Ncp 3");
create_constant_form ("_n_x5fUMB_x5fFL_x5fEVM_fNcp_x5f4", 
	"Ncp 4",
	0,
	"3",
	"Ncp 4");
create_form_set("_n_x5fUMB_x5fFL_x5fEVM_fNcpSet",
	"_n_x5fUMB_x5fFL_x5fEVM_fNcp_x5f1",
	"_n_x5fUMB_x5fFL_x5fEVM_fNcp_x5f2",
	"_n_x5fUMB_x5fFL_x5fEVM_fNcp_x5f3",
	"_n_x5fUMB_x5fFL_x5fEVM_fNcp_x5f4",
	"StdForm");
create_constant_form ("_n_x5fUMB_x5fFL_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_n_x5fUMB_x5fFL_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_n_x5fUMB_x5fFL_x5fEVM_fSuperframeIdxIncreasedSet",
	"_n_x5fUMB_x5fFL_x5fEVM_fNO",
	"_n_x5fUMB_x5fFL_x5fEVM_fYES",
	"StdForm");
create_constant_form ("_n_x5fUMB_x5fFL_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_n_x5fUMB_x5fFL_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_n_x5fUMB_x5fFL_x5fEVM_fGloballySynchronousSet",
	"_n_x5fUMB_x5fFL_x5fEVM_fNO",
	"_n_x5fUMB_x5fFL_x5fEVM_fYES",
	"StdForm");
create_constant_form ("_n_x5fUMB_x5fFL_x5fEVM_fFormat2", 
	"Format2",
	0,
	"0",
	"Format2");
create_form_set("_n_x5fUMB_x5fFL_x5fEVM_fFL_x5fDPICHFormatSet",
	"_n_x5fUMB_x5fFL_x5fEVM_fFormat2",
	"StdForm");
create_constant_form ("_n_x5fUMB_x5fFL_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_n_x5fUMB_x5fFL_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_n_x5fUMB_x5fFL_x5fEVM_fPulseSearchSet",
	"_n_x5fUMB_x5fFL_x5fEVM_fNO",
	"_n_x5fUMB_x5fFL_x5fEVM_fYES",
	"StdForm");
create_constant_form ("_n_x5fUMB_x5fFL_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_n_x5fUMB_x5fFL_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_n_x5fUMB_x5fFL_x5fEVM_fTrackAmplitudeSet",
	"_n_x5fUMB_x5fFL_x5fEVM_fNO",
	"_n_x5fUMB_x5fFL_x5fEVM_fYES",
	"StdForm");
create_constant_form ("_n_x5fUMB_x5fFL_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_n_x5fUMB_x5fFL_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_n_x5fUMB_x5fFL_x5fEVM_fTrackPhaseSet",
	"_n_x5fUMB_x5fFL_x5fEVM_fNO",
	"_n_x5fUMB_x5fFL_x5fEVM_fYES",
	"StdForm");
create_constant_form ("_n_x5fUMB_x5fFL_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_n_x5fUMB_x5fFL_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_n_x5fUMB_x5fFL_x5fEVM_fTrackTimingSet",
	"_n_x5fUMB_x5fFL_x5fEVM_fNO",
	"_n_x5fUMB_x5fFL_x5fEVM_fYES",
	"StdForm");
create_constant_form ("_n_x5fUMB_x5fFL_x5fEVM_fChann_x5fEstimation_x5fSeq_x5fOnly", 
	"Chann Estimation Seq Only",
	0,
	"0",
	"Chann Estimation Seq Only");
create_constant_form ("_n_x5fUMB_x5fFL_x5fEVM_fChann_x5fEstimation_x5fSeq_x5f_x5f_x5fData", 
	"Chann Estimation Seq & Data",
	0,
	"1",
	"Chann Estimation Seq & Data");
create_form_set("_n_x5fUMB_x5fFL_x5fEVM_fEqualizerTrainingSet",
	"_n_x5fUMB_x5fFL_x5fEVM_fChann_x5fEstimation_x5fSeq_x5fOnly",
	"_n_x5fUMB_x5fFL_x5fEVM_fChann_x5fEstimation_x5fSeq_x5f_x5f_x5fData",
	"StdForm");
create_constant_form ("_n_x5fUMB_x5fFL_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_n_x5fUMB_x5fFL_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_n_x5fUMB_x5fFL_x5fEVM_fSaveConstellationSet",
	"_n_x5fUMB_x5fFL_x5fEVM_fNO",
	"_n_x5fUMB_x5fFL_x5fEVM_fYES",
	"StdForm");
create_item ("_UMB_FL_EVM","UMB Forwardlink EVM Measurement",
	"U",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_UMB_FL_EVM",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dTSDF_n_x5fUMB_x5fFL_x5fEVM_lsdfumbmeasurements",
	SPComponentAnnotFmt,
	"SYM_UMB_FL_EVM",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("RLoad","Load resistance",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","DefaultRLoad")),
	create_parm ("RTemp","Load resistance physical temperature",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TEMPERATURE_UNIT,
		prm("StdForm","DefaultRTemp")),
	create_parm ("FCarrier","Carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","3407 MHz")),
	create_parm ("MirrorSpectrum","Mirror frequency spectrum?",
		PARM_INT,
		"_n_x5fUMB_x5fFL_x5fEVM_fMirrorSpectrumSet",
		UNITLESS_UNIT,
		prm("_n_x5fUMB_x5fFL_x5fEVM_fNO","NO")),
	create_parm ("Start","Data collection start time",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","DefaultTimeStart")),
	create_parm ("AverageType","Average type",
		PARM_INT,
		"_n_x5fUMB_x5fFL_x5fEVM_fAverageTypeSet",
		UNITLESS_UNIT,
		prm("_n_x5fUMB_x5fFL_x5fEVM_fOff","Off")),
	create_parm ("SuperframesToAverage","Superframes to average (if AverageType is not Off)",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","5")),
	create_parm ("OutputFrameFormat","output superframe format",
		PARM_INT,
		"_n_x5fUMB_x5fFL_x5fEVM_fOutputFrameFormatSet",
		UNITLESS_UNIT,
		prm("_n_x5fUMB_x5fFL_x5fEVM_fFull_x5fSuperframe","Full_Superframe")),
	create_parm ("StartingFrame","the starting frame index in each superframe from which this model will allocate the data",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("NumFrames","the number of frames on which this model will allocate the data starting from the StartingFrame",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","25")),
	create_parm ("OversamplingOption","Oversampling ratio option",
		PARM_INT,
		"_n_x5fUMB_x5fFL_x5fEVM_fOversamplingOptionSet",
		UNITLESS_UNIT,
		prm("_n_x5fUMB_x5fFL_x5fEVM_fRatio_x5f2","Ratio_2")),
	create_parm ("FFTSize","the size of total subcarriers for FFT operation",
		PARM_INT,
		"_n_x5fUMB_x5fFL_x5fEVM_fFFTSizeSet",
		UNITLESS_UNIT,
		prm("_n_x5fUMB_x5fFL_x5fEVM_fFFT_x5f512","FFT_512")),
	create_parm ("GuardSize","the size of guard subcarriers",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","32")),
	create_parm ("Ncp","the index for Cyclic Prefix (Tcp=Ncp*FFTSize*Tchip/16)",
		PARM_INT,
		"_n_x5fUMB_x5fFL_x5fEVM_fNcpSet",
		UNITLESS_UNIT,
		prm("_n_x5fUMB_x5fFL_x5fEVM_fNcp_x5f1","Ncp_1")),
	create_parm ("StartingSuperframe","the superframe index for the starting superframe",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("SuperframeIdxIncreased","whether the superframe index is increased from superframe to superframe",
		PARM_INT,
		"_n_x5fUMB_x5fFL_x5fEVM_fSuperframeIdxIncreasedSet",
		UNITLESS_UNIT,
		prm("_n_x5fUMB_x5fFL_x5fEVM_fYES","YES")),
	create_parm ("GloballySynchronous","whether the sector is synchronized with GPS time",
		PARM_INT,
		"_n_x5fUMB_x5fFL_x5fEVM_fGloballySynchronousSet",
		UNITLESS_UNIT,
		prm("_n_x5fUMB_x5fFL_x5fEVM_fNO","NO")),
	create_parm ("PilotPN","9-bit pilot PN for different sectors",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("CodeOffset","code offset between 0 and 2 for Forward Dedicated Pilot Channel",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("FL_DPICHFormat","the Forward Dedicated Pilot Channel format for Forward Data Channel",
		PARM_INT,
		"_n_x5fUMB_x5fFL_x5fEVM_fFL_x5fDPICHFormatSet",
		UNITLESS_UNIT,
		prm("_n_x5fUMB_x5fFL_x5fEVM_fFormat2","Format2")),
	create_parm ("PulseSearch","Perform pulse search?",
		PARM_INT,
		"_n_x5fUMB_x5fFL_x5fEVM_fPulseSearchSet",
		UNITLESS_UNIT,
		prm("_n_x5fUMB_x5fFL_x5fEVM_fYES","YES")),
	create_parm ("SymbolTimingAdjust","Symbol timing adjustment (in % of FFT time)",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-3.125")),
	create_parm ("TrackAmplitude","Track amplitude?",
		PARM_INT,
		"_n_x5fUMB_x5fFL_x5fEVM_fTrackAmplitudeSet",
		UNITLESS_UNIT,
		prm("_n_x5fUMB_x5fFL_x5fEVM_fNO","NO")),
	create_parm ("TrackPhase","Track phase?",
		PARM_INT,
		"_n_x5fUMB_x5fFL_x5fEVM_fTrackPhaseSet",
		UNITLESS_UNIT,
		prm("_n_x5fUMB_x5fFL_x5fEVM_fYES","YES")),
	create_parm ("TrackTiming","Track timing?",
		PARM_INT,
		"_n_x5fUMB_x5fFL_x5fEVM_fTrackTimingSet",
		UNITLESS_UNIT,
		prm("_n_x5fUMB_x5fFL_x5fEVM_fNO","NO")),
	create_parm ("EqualizerTraining","Equalizer training method",
		PARM_INT,
		"_n_x5fUMB_x5fFL_x5fEVM_fEqualizerTrainingSet",
		UNITLESS_UNIT,
		prm("_n_x5fUMB_x5fFL_x5fEVM_fChann_x5fEstimation_x5fSeq_x5fOnly","Chann_Estimation_Seq_Only")),
	create_parm ("SaveConstellation","if set YES, the measured vector used for EVM calculation shall be saved to Data File",
		PARM_INT,
		"_n_x5fUMB_x5fFL_x5fEVM_fSaveConstellationSet",
		UNITLESS_UNIT,
		prm("_n_x5fUMB_x5fFL_x5fEVM_fNO","NO")));
library_group("UMB, Measurements","UMB, Measurements","_UMB_FL_EVM");
palette_group("UMB, Measurements","UMB, Measurements","_UMB_FL_EVM");

create_constant_form ("_nUMB_x5fFL_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nUMB_x5fFL_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nUMB_x5fFL_x5fEVM_fMirrorSpectrumSet",
	"_nUMB_x5fFL_x5fEVM_fNO",
	"_nUMB_x5fFL_x5fEVM_fYES",
	"StdForm");
create_constant_form ("_nUMB_x5fFL_x5fEVM_fOff", 
	"Off",
	0,
	"0",
	"Off");
create_constant_form ("_nUMB_x5fFL_x5fEVM_fRMS_x5f_x5fVideo_x5f", 
	"RMS (Video)",
	0,
	"1",
	"RMS (Video)");
create_form_set("_nUMB_x5fFL_x5fEVM_fAverageTypeSet",
	"_nUMB_x5fFL_x5fEVM_fOff",
	"_nUMB_x5fFL_x5fEVM_fRMS_x5f_x5fVideo_x5f",
	"StdForm");
create_constant_form ("_nUMB_x5fFL_x5fEVM_fFull_x5fSuperframe", 
	"Full Superframe",
	0,
	"0",
	"Full Superframe");
create_constant_form ("_nUMB_x5fFL_x5fEVM_fCompact_x5fSuperframe", 
	"Compact Superframe",
	0,
	"1",
	"Compact Superframe");
create_form_set("_nUMB_x5fFL_x5fEVM_fOutputFrameFormatSet",
	"_nUMB_x5fFL_x5fEVM_fFull_x5fSuperframe",
	"_nUMB_x5fFL_x5fEVM_fCompact_x5fSuperframe",
	"StdForm");
create_constant_form ("_nUMB_x5fFL_x5fEVM_fRatio_x5f1", 
	"Ratio 1",
	0,
	"0",
	"Ratio 1");
create_constant_form ("_nUMB_x5fFL_x5fEVM_fRatio_x5f2", 
	"Ratio 2",
	0,
	"1",
	"Ratio 2");
create_constant_form ("_nUMB_x5fFL_x5fEVM_fRatio_x5f4", 
	"Ratio 4",
	0,
	"2",
	"Ratio 4");
create_constant_form ("_nUMB_x5fFL_x5fEVM_fRatio_x5f8", 
	"Ratio 8",
	0,
	"3",
	"Ratio 8");
create_constant_form ("_nUMB_x5fFL_x5fEVM_fRatio_x5f16", 
	"Ratio 16",
	0,
	"4",
	"Ratio 16");
create_constant_form ("_nUMB_x5fFL_x5fEVM_fRatio_x5f32", 
	"Ratio 32",
	0,
	"5",
	"Ratio 32");
create_form_set("_nUMB_x5fFL_x5fEVM_fOversamplingOptionSet",
	"_nUMB_x5fFL_x5fEVM_fRatio_x5f1",
	"_nUMB_x5fFL_x5fEVM_fRatio_x5f2",
	"_nUMB_x5fFL_x5fEVM_fRatio_x5f4",
	"_nUMB_x5fFL_x5fEVM_fRatio_x5f8",
	"_nUMB_x5fFL_x5fEVM_fRatio_x5f16",
	"_nUMB_x5fFL_x5fEVM_fRatio_x5f32",
	"StdForm");
create_constant_form ("_nUMB_x5fFL_x5fEVM_fFFT_x5f2048", 
	"FFT 2048",
	0,
	"0",
	"FFT 2048");
create_constant_form ("_nUMB_x5fFL_x5fEVM_fFFT_x5f1024", 
	"FFT 1024",
	0,
	"1",
	"FFT 1024");
create_constant_form ("_nUMB_x5fFL_x5fEVM_fFFT_x5f512", 
	"FFT 512",
	0,
	"2",
	"FFT 512");
create_constant_form ("_nUMB_x5fFL_x5fEVM_fFFT_x5f256", 
	"FFT 256",
	0,
	"3",
	"FFT 256");
create_constant_form ("_nUMB_x5fFL_x5fEVM_fFFT_x5f128", 
	"FFT 128",
	0,
	"4",
	"FFT 128");
create_form_set("_nUMB_x5fFL_x5fEVM_fFFTSizeSet",
	"_nUMB_x5fFL_x5fEVM_fFFT_x5f2048",
	"_nUMB_x5fFL_x5fEVM_fFFT_x5f1024",
	"_nUMB_x5fFL_x5fEVM_fFFT_x5f512",
	"_nUMB_x5fFL_x5fEVM_fFFT_x5f256",
	"_nUMB_x5fFL_x5fEVM_fFFT_x5f128",
	"StdForm");
create_constant_form ("_nUMB_x5fFL_x5fEVM_fNcp_x5f1", 
	"Ncp 1",
	0,
	"0",
	"Ncp 1");
create_constant_form ("_nUMB_x5fFL_x5fEVM_fNcp_x5f2", 
	"Ncp 2",
	0,
	"1",
	"Ncp 2");
create_constant_form ("_nUMB_x5fFL_x5fEVM_fNcp_x5f3", 
	"Ncp 3",
	0,
	"2",
	"Ncp 3");
create_constant_form ("_nUMB_x5fFL_x5fEVM_fNcp_x5f4", 
	"Ncp 4",
	0,
	"3",
	"Ncp 4");
create_form_set("_nUMB_x5fFL_x5fEVM_fNcpSet",
	"_nUMB_x5fFL_x5fEVM_fNcp_x5f1",
	"_nUMB_x5fFL_x5fEVM_fNcp_x5f2",
	"_nUMB_x5fFL_x5fEVM_fNcp_x5f3",
	"_nUMB_x5fFL_x5fEVM_fNcp_x5f4",
	"StdForm");
create_constant_form ("_nUMB_x5fFL_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nUMB_x5fFL_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nUMB_x5fFL_x5fEVM_fSuperframeIdxIncreasedSet",
	"_nUMB_x5fFL_x5fEVM_fNO",
	"_nUMB_x5fFL_x5fEVM_fYES",
	"StdForm");
create_constant_form ("_nUMB_x5fFL_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nUMB_x5fFL_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nUMB_x5fFL_x5fEVM_fGloballySynchronousSet",
	"_nUMB_x5fFL_x5fEVM_fNO",
	"_nUMB_x5fFL_x5fEVM_fYES",
	"StdForm");
create_constant_form ("_nUMB_x5fFL_x5fEVM_fFormat2", 
	"Format2",
	0,
	"0",
	"Format2");
create_form_set("_nUMB_x5fFL_x5fEVM_fFL_x5fDPICHFormatSet",
	"_nUMB_x5fFL_x5fEVM_fFormat2",
	"StdForm");
create_constant_form ("_nUMB_x5fFL_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nUMB_x5fFL_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nUMB_x5fFL_x5fEVM_fPulseSearchSet",
	"_nUMB_x5fFL_x5fEVM_fNO",
	"_nUMB_x5fFL_x5fEVM_fYES",
	"StdForm");
create_constant_form ("_nUMB_x5fFL_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nUMB_x5fFL_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nUMB_x5fFL_x5fEVM_fTrackAmplitudeSet",
	"_nUMB_x5fFL_x5fEVM_fNO",
	"_nUMB_x5fFL_x5fEVM_fYES",
	"StdForm");
create_constant_form ("_nUMB_x5fFL_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nUMB_x5fFL_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nUMB_x5fFL_x5fEVM_fTrackPhaseSet",
	"_nUMB_x5fFL_x5fEVM_fNO",
	"_nUMB_x5fFL_x5fEVM_fYES",
	"StdForm");
create_constant_form ("_nUMB_x5fFL_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nUMB_x5fFL_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nUMB_x5fFL_x5fEVM_fTrackTimingSet",
	"_nUMB_x5fFL_x5fEVM_fNO",
	"_nUMB_x5fFL_x5fEVM_fYES",
	"StdForm");
create_constant_form ("_nUMB_x5fFL_x5fEVM_fChann_x5fEstimation_x5fSeq_x5fOnly", 
	"Chann Estimation Seq Only",
	0,
	"0",
	"Chann Estimation Seq Only");
create_constant_form ("_nUMB_x5fFL_x5fEVM_fChann_x5fEstimation_x5fSeq_x5f_x5f_x5fData", 
	"Chann Estimation Seq & Data",
	0,
	"1",
	"Chann Estimation Seq & Data");
create_form_set("_nUMB_x5fFL_x5fEVM_fEqualizerTrainingSet",
	"_nUMB_x5fFL_x5fEVM_fChann_x5fEstimation_x5fSeq_x5fOnly",
	"_nUMB_x5fFL_x5fEVM_fChann_x5fEstimation_x5fSeq_x5f_x5f_x5fData",
	"StdForm");
create_constant_form ("_nUMB_x5fFL_x5fEVM_fNO", 
	"NO",
	0,
	"0",
	"NO");
create_constant_form ("_nUMB_x5fFL_x5fEVM_fYES", 
	"YES",
	0,
	"1",
	"YES");
create_form_set("_nUMB_x5fFL_x5fEVM_fSaveConstellationSet",
	"_nUMB_x5fFL_x5fEVM_fNO",
	"_nUMB_x5fFL_x5fEVM_fYES",
	"StdForm");
create_item ("UMB_FL_EVM","UMB Forwardlink EVM Measurement",
	"U",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_UMB_FL_EVM",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"UMB_FL_EVM",
	SPDesignAnnotFmt,
	"SYM_UMB_FL_EVM",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("RLoad","Load resistance",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","DefaultRLoad")),
	create_parm ("RTemp","Load resistance physical temperature",
		PARM_REAL | PARM_NO_DISPLAY | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TEMPERATURE_UNIT,
		prm("StdForm","DefaultRTemp")),
	create_parm ("FCarrier","Carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","3407 MHz")),
	create_parm ("MirrorSpectrum","Mirror frequency spectrum?",
		PARM_INT,
		"_nUMB_x5fFL_x5fEVM_fMirrorSpectrumSet",
		UNITLESS_UNIT,
		prm("_nUMB_x5fFL_x5fEVM_fNO","NO")),
	create_parm ("Start","Data collection start time",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","DefaultTimeStart")),
	create_parm ("AverageType","Average type",
		PARM_INT,
		"_nUMB_x5fFL_x5fEVM_fAverageTypeSet",
		UNITLESS_UNIT,
		prm("_nUMB_x5fFL_x5fEVM_fOff","Off")),
	create_parm ("SuperframesToAverage","Superframes to average (if AverageType is not Off)",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","5")),
	create_parm ("OutputFrameFormat","output superframe format",
		PARM_INT,
		"_nUMB_x5fFL_x5fEVM_fOutputFrameFormatSet",
		UNITLESS_UNIT,
		prm("_nUMB_x5fFL_x5fEVM_fFull_x5fSuperframe","Full_Superframe")),
	create_parm ("StartingFrame","the starting frame index in each superframe from which this model will allocate the data",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("NumFrames","the number of frames on which this model will allocate the data starting from the StartingFrame",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","25")),
	create_parm ("OversamplingOption","Oversampling ratio option",
		PARM_INT,
		"_nUMB_x5fFL_x5fEVM_fOversamplingOptionSet",
		UNITLESS_UNIT,
		prm("_nUMB_x5fFL_x5fEVM_fRatio_x5f2","Ratio_2")),
	create_parm ("FFTSize","the size of total subcarriers for FFT operation",
		PARM_INT,
		"_nUMB_x5fFL_x5fEVM_fFFTSizeSet",
		UNITLESS_UNIT,
		prm("_nUMB_x5fFL_x5fEVM_fFFT_x5f512","FFT_512")),
	create_parm ("GuardSize","the size of guard subcarriers",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","32")),
	create_parm ("Ncp","the index for Cyclic Prefix (Tcp=Ncp*FFTSize*Tchip/16)",
		PARM_INT,
		"_nUMB_x5fFL_x5fEVM_fNcpSet",
		UNITLESS_UNIT,
		prm("_nUMB_x5fFL_x5fEVM_fNcp_x5f1","Ncp_1")),
	create_parm ("StartingSuperframe","the superframe index for the starting superframe",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("SuperframeIdxIncreased","whether the superframe index is increased from superframe to superframe",
		PARM_INT,
		"_nUMB_x5fFL_x5fEVM_fSuperframeIdxIncreasedSet",
		UNITLESS_UNIT,
		prm("_nUMB_x5fFL_x5fEVM_fYES","YES")),
	create_parm ("GloballySynchronous","whether the sector is synchronized with GPS time",
		PARM_INT,
		"_nUMB_x5fFL_x5fEVM_fGloballySynchronousSet",
		UNITLESS_UNIT,
		prm("_nUMB_x5fFL_x5fEVM_fNO","NO")),
	create_parm ("PilotPN","9-bit pilot PN for different sectors",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("CodeOffset","code offset between 0 and 2 for Forward Dedicated Pilot Channel",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("FL_DPICHFormat","the Forward Dedicated Pilot Channel format for Forward Data Channel",
		PARM_INT,
		"_nUMB_x5fFL_x5fEVM_fFL_x5fDPICHFormatSet",
		UNITLESS_UNIT,
		prm("_nUMB_x5fFL_x5fEVM_fFormat2","Format2")),
	create_parm ("PulseSearch","Perform pulse search?",
		PARM_INT,
		"_nUMB_x5fFL_x5fEVM_fPulseSearchSet",
		UNITLESS_UNIT,
		prm("_nUMB_x5fFL_x5fEVM_fYES","YES")),
	create_parm ("SymbolTimingAdjust","Symbol timing adjustment (in % of FFT time)",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","-3.125")),
	create_parm ("TrackAmplitude","Track amplitude?",
		PARM_INT,
		"_nUMB_x5fFL_x5fEVM_fTrackAmplitudeSet",
		UNITLESS_UNIT,
		prm("_nUMB_x5fFL_x5fEVM_fNO","NO")),
	create_parm ("TrackPhase","Track phase?",
		PARM_INT,
		"_nUMB_x5fFL_x5fEVM_fTrackPhaseSet",
		UNITLESS_UNIT,
		prm("_nUMB_x5fFL_x5fEVM_fYES","YES")),
	create_parm ("TrackTiming","Track timing?",
		PARM_INT,
		"_nUMB_x5fFL_x5fEVM_fTrackTimingSet",
		UNITLESS_UNIT,
		prm("_nUMB_x5fFL_x5fEVM_fNO","NO")),
	create_parm ("EqualizerTraining","Equalizer training method",
		PARM_INT,
		"_nUMB_x5fFL_x5fEVM_fEqualizerTrainingSet",
		UNITLESS_UNIT,
		prm("_nUMB_x5fFL_x5fEVM_fChann_x5fEstimation_x5fSeq_x5fOnly","Chann_Estimation_Seq_Only")),
	create_parm ("SaveConstellation","if set YES, the measured vector used for EVM calculation shall be saved to Data File",
		PARM_INT,
		"_nUMB_x5fFL_x5fEVM_fSaveConstellationSet",
		UNITLESS_UNIT,
		prm("_nUMB_x5fFL_x5fEVM_fNO","NO")));
library_group("UMB, Measurements","UMB, Measurements","UMB_FL_EVM");
palette_group("UMB, Measurements","UMB, Measurements","UMB_FL_EVM");

