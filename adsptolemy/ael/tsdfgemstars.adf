set_design_type( sigproc_net );

create_item ("SinkRespSyn","Response Sink",
	"S",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_SinkRespSyn",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nSinkStimSyn_ltsdfgemstars_aSinkRespSyn",
	SPComponentAnnotFmt,
	"SYM_SinkRespSyn",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Start","sample number at which to start recording",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","DefaultNumericStart")),
	create_parm ("Stop","sample number at which to stop recording",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","DefaultNumericStop")));


create_item ("SDCCx4","4-Input Symbolic Defined Component with Complex Output",
	"S",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_SDCCx4",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nSDCCx_ltsdfgemstars_pinput_x3d4_aSDCCx4",
	SPComponentAnnotFmt,
	"SYM_SDCCx4",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Expression","Expression, function of inputs",
		PARM_COMPLEX,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0+j*0.0")));


create_item ("SDCCx3","3-Input Symbolic Defined Component with Complex Output",
	"S",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_SDCCx3",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nSDCCx_ltsdfgemstars_pinput_x3d3_aSDCCx3",
	SPComponentAnnotFmt,
	"SYM_SDCCx3",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Expression","Expression, function of inputs",
		PARM_COMPLEX,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0+j*0.0")));


create_item ("SDCCx2","2-Input Symbolic Defined Component with Complex Output",
	"S",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_SDCCx2",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nSDCCx_ltsdfgemstars_pinput_x3d2_aSDCCx2",
	SPComponentAnnotFmt,
	"SYM_SDCCx2",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Expression","Expression, function of inputs",
		PARM_COMPLEX,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0+j*0.0")));


create_item ("SDCCx1","1-Input Symbolic Defined Component with Complex Output",
	"S",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_SDCCx1",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nSDCCx_ltsdfgemstars_pinput_x3d1_aSDCCx1",
	SPComponentAnnotFmt,
	"SYM_SDCCx1",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Expression","Expression, function of inputs",
		PARM_COMPLEX,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0+j*0.0")));


create_item ("SDC4","4-Input Symbolic Defined Component",
	"S",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_SDC4",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nSDC_ltsdfgemstars_pinput_x3d4_aSDC4",
	SPComponentAnnotFmt,
	"SYM_SDC4",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Expression","Expression, function of inputs",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")));


create_item ("SDC3","3-Input Symbolic Defined Component",
	"S",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_SDC3",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nSDC_ltsdfgemstars_pinput_x3d3_aSDC3",
	SPComponentAnnotFmt,
	"SYM_SDC3",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Expression","Expression, function of inputs",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")));


create_item ("SDC2","2-Input Symbolic Defined Component",
	"S",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_SDC2",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nSDC_ltsdfgemstars_pinput_x3d2_aSDC2",
	SPComponentAnnotFmt,
	"SYM_SDC2",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Expression","Expression, function of inputs",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")));


create_item ("SDC1","1-Input Symbolic Defined Component",
	"S",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_SDC1",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nSDC_ltsdfgemstars_pinput_x3d1_aSDC1",
	SPComponentAnnotFmt,
	"SYM_SDC1",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Expression","Expression, function of inputs",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")));


create_text_form ("_nTimedFir_fs2p_x5ffile", 
	"File with s2p extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "s2p"), prefix_path_to_data_file);

create_form_set ( "_nTimedFir_fFile_x5fFileSet",
	"_nTimedFir_fs2p_x5ffile");

create_constant_form ("_nTimedFir_fDataset", 
	"Dataset",
	0,
	"0",
	"Dataset");

create_constant_form ("_nTimedFir_fTouchstone", 
	"Touchstone",
	0,
	"1",
	"Touchstone");

create_constant_form ("_nTimedFir_fCITIfile", 
	"CITIfile",
	0,
	"2",
	"CITIfile");

create_form_set("_nTimedFir_fTypeSet",
	"_nTimedFir_fDataset",
	"_nTimedFir_fTouchstone",
	"_nTimedFir_fCITIfile",
	"StdForm");

create_constant_form ("_nTimedFir_fLinear", 
	"Linear",
	0,
	"0",
	"Linear");

create_constant_form ("_nTimedFir_fCubic_x5fSpline", 
	"Cubic Spline",
	0,
	"1",
	"Cubic Spline");

create_constant_form ("_nTimedFir_fCubic", 
	"Cubic",
	0,
	"2",
	"Cubic");

create_form_set("_nTimedFir_fInterpModeSet",
	"_nTimedFir_fLinear",
	"_nTimedFir_fCubic_x5fSpline",
	"_nTimedFir_fCubic",
	"StdForm");

create_item ("TimedFir","Complex FIR filter with timed ports",
	"T",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_TimedFir",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dTSDF_nTimedFir_ltsdfgemstars",
	SPComponentAnnotFmt,
	"SYM_TimedFir",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("File","File name for S21 data",
		PARM_STRING,
		"_nTimedFir_fFile_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nTimedFir_fs2p_x5ffile","\"myfile.s2p\"")),
	create_parm ("Type","File type",
		PARM_INT,
		"_nTimedFir_fTypeSet",
		UNITLESS_UNIT,
		prm("_nTimedFir_fTouchstone","Touchstone")),
	create_parm ("InterpMode","Interpolation mode",
		PARM_INT,
		"_nTimedFir_fInterpModeSet",
		UNITLESS_UNIT,
		prm("_nTimedFir_fLinear","Linear")),
	create_parm ("N","Number of points for impulse response",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","128")),
	create_parm ("RIn","Input resistance",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","DefaultRIn")),
	create_parm ("ROut","Output resistance",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","DefaultROut")),
	create_parm ("RTemp","physical temperature, in degrees C",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		TEMPERATURE_UNIT,
		prm("StdForm","DefaultRTemp")),
	create_parm ("Taps","filter tap values",
		PARM_COMPLEXARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")));


create_constant_form ("_nTimedApiSigFileWrite_fNO", 
	"NO",
	0,
	"0",
	"NO");

create_constant_form ("_nTimedApiSigFileWrite_fYES", 
	"YES",
	0,
	"1",
	"YES");

create_form_set("_nTimedApiSigFileWrite_fControlSimulationSet",
	"_nTimedApiSigFileWrite_fNO",
	"_nTimedApiSigFileWrite_fYES",
	"StdForm");

create_text_form ("_nTimedApiSigFileWrite_fsig_x5ffile", 
	"File with sig extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "sig"), prefix_path_to_data_file);

create_form_set ( "_nTimedApiSigFileWrite_fFileName_x5fFileSet",
	"_nTimedApiSigFileWrite_fsig_x5ffile");

create_item ("TimedApiSigFileWrite","SPW Format Specific Output Data File",
	"T",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_TimedApiSigFileWrite",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dTSDF_nTimedApiSigFileWrite_ltsdfgemstars",
	SPComponentAnnotFmt,
	"SYM_TimedApiSigFileWrite",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("RLoad","Load resistance",
		PARM_REAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","DefaultRLoad")),
	create_parm ("RTemp","Resistor physical temperature, in degrees C",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		TEMPERATURE_UNIT,
		prm("StdForm","DefaultRTemp")),
	create_parm ("Start","Start time for data recording",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","DefaultTimeStart")),
	create_parm ("Stop","Stop time for data recording",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","DefaultTimeStop")),
	create_parm ("ControlSimulation","if set to YES, 'Stop' time determines how long the simulation will run",
		PARM_INT,
		"_nTimedApiSigFileWrite_fControlSimulationSet",
		UNITLESS_UNIT,
		prm("_nTimedApiSigFileWrite_fYES","YES")),
	create_parm ("FCarrier","Carrier Frequency to be passed by Golden Gate, this will be tested against input carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","0")),
	create_parm ("SimulatorName","External Simulator Name to be used in warning messages",
		PARM_STRING,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"GoldenGate\"")),
	create_parm ("FileName","Sig File name",
		PARM_STRING,
		"_nTimedApiSigFileWrite_fFileName_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nTimedApiSigFileWrite_fsig_x5ffile","\"\"")));


create_item ("SinkStimSyn","Stimulus Sink",
	"S",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_SinkStimSyn",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nSinkStimSyn_ltsdfgemstars",
	SPComponentAnnotFmt,
	"SYM_SinkStimSyn",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Start","sample number at which to start recording",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","DefaultNumericStart")),
	create_parm ("Stop","sample number at which to stop recording",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","DefaultNumericStop")));


create_item ("TimedSDC","Timed Symbolic Defined Component",
	"T",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_TimedSDC",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dTSDF_nTimedSDC_ltsdfgemstars",
	SPComponentAnnotFmt,
	"SYM_TimedSDC",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("FCarrier","Carrier frequency expression, function of inputs' carrier frequencies",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","0.0")),
	create_parm ("Expression","Expression, function of inputs and 'time'",
		PARM_COMPLEX,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0+j*0.0")));


create_item ("SDCCx","Symbolic Defined Component with Complex Output",
	"S",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_SDCCx",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nSDCCx_ltsdfgemstars",
	SPComponentAnnotFmt,
	"SYM_SDCCx",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Expression","Expression, function of inputs",
		PARM_COMPLEX,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0+j*0.0")));


create_item ("SDC","Symbolic Defined Component",
	"S",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_SDC",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nSDC_ltsdfgemstars",
	SPComponentAnnotFmt,
	"SYM_SDC",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Expression","Expression, function of inputs",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")));


create_item ("NumericExpression","Numeric Expression Data output",
	"N",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_NumericExpression",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nNumericExpression_ltsdfgemstars",
	SPComponentAnnotFmt,
	"SYM_NumericExpression",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Expression","expression, which can be function of 'Nsample'",
		PARM_COMPLEX,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0+j*0.0")));


create_item ("TimedExpression","Timed Expression Data source",
	"T",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_TimedExpression",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dTSDF_nTimedExpression_ltsdfgemstars",
	SPComponentAnnotFmt,
	"SYM_TimedExpression",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("TStep","simulation time step",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","0.0001")),
	create_parm ("FCarrier","carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","0.0")),
	create_parm ("Expression","expression, which can be function of 'time'",
		PARM_COMPLEX,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0+j*0.0")));


create_constant_form ("_nNumericSource_fNO", 
	"NO",
	0,
	"0",
	"NO");

create_constant_form ("_nNumericSource_fYES", 
	"YES",
	0,
	"1",
	"YES");

create_form_set("_nNumericSource_fControlSimulationSet",
	"_nNumericSource_fNO",
	"_nNumericSource_fYES",
	"StdForm");

create_constant_form ("_nNumericSource_fNO", 
	"NO",
	0,
	"0",
	"NO");

create_constant_form ("_nNumericSource_fYES", 
	"YES",
	0,
	"1",
	"YES");

create_form_set("_nNumericSource_fPeriodicSet",
	"_nNumericSource_fNO",
	"_nNumericSource_fYES",
	"StdForm");

create_text_form ("_nNumericSource_fds_x5ffile", 
	"File with ds extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "ds"), prefix_path_to_data_file);

create_form_set ( "_nNumericSource_fDataSet_x5fFileSet",
	"_nNumericSource_fds_x5ffile");

create_item ("NumericSource","Numeric signal generator using data set",
	"N",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_NumericSource",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nNumericSource_ltsdfgemstars",
	SPComponentAnnotFmt,
	"SYM_NumericSource",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("ControlSimulation","if set to YES, Period ( or if Period=0 then the index of last data sample in the file) determines how long the simulation will run",
		PARM_INT,
		"_nNumericSource_fControlSimulationSet",
		UNITLESS_UNIT,
		prm("_nNumericSource_fNO","NO")),
	create_parm ("Periodic","if YES then output is periodic",
		PARM_INT,
		"_nNumericSource_fPeriodicSet",
		UNITLESS_UNIT,
		prm("_nNumericSource_fYES","YES")),
	create_parm ("Period","period of the output waveform if Periodic=YES",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("DataSet","dataSet file to construct Expression from",
		PARM_STRING,
		"_nNumericSource_fDataSet_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nNumericSource_fds_x5ffile","\"\"")),
	create_parm ("Expression","variable/sink name from dataset or a valid dataSet expression ( data can be multi dimensional from 1-D to 3-D )",
		PARM_STRING,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")));


create_constant_form ("_nEVM_x5fWithRefIn_fEVM_x5frms", 
	"EVM_rms",
	0,
	"0",
	"EVM_rms");

create_constant_form ("_nEVM_x5fWithRefIn_fEVM_x5fpeak", 
	"EVM_peak",
	0,
	"1",
	"EVM_peak");

create_constant_form ("_nEVM_x5fWithRefIn_fEVM_x5f95th_x5fpercentile", 
	"EVM_95th_percentile",
	0,
	"2",
	"EVM_95th_percentile");

create_form_set("_nEVM_x5fWithRefIn_fMeasTypeSet",
	"_nEVM_x5fWithRefIn_fEVM_x5frms",
	"_nEVM_x5fWithRefIn_fEVM_x5fpeak",
	"_nEVM_x5fWithRefIn_fEVM_x5f95th_x5fpercentile",
	"StdForm");

create_constant_form ("_nEVM_x5fWithRefIn_fEVM_x5fRatio", 
	"EVM_Ratio",
	0,
	"0",
	"EVM as ratio");

create_constant_form ("_nEVM_x5fWithRefIn_fEVM_x5fPercent", 
	"EVM_Percent",
	0,
	"1",
	"EVM as percent");

create_form_set("_nEVM_x5fWithRefIn_fEVMValueSet",
	"_nEVM_x5fWithRefIn_fEVM_x5fRatio",
	"_nEVM_x5fWithRefIn_fEVM_x5fPercent",
	"StdForm");

create_item ("EVM_WithRefIn","EVM measurement with reference signal input",
	"E",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_EVM_WithRefIn",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nEVM_x5fWithRefIn_ltsdfgemstars",
	SPComponentAnnotFmt,
	"SYM_EVM_WithRefIn",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("StartSym","Start symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","20")),
	create_parm ("SymBurstLen","Number of symbols in each burst to be measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","100")),
	create_parm ("SampPerSym","Number of samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")),
	create_parm ("SymDelayBound","Upper bound, in symbols, of delay detection",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")),
	create_parm ("NumBursts","Number of bursts to be measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","5")),
	create_parm ("MeasType","Type of measurement",
		PARM_INT,
		"_nEVM_x5fWithRefIn_fMeasTypeSet",
		UNITLESS_UNIT,
		prm("_nEVM_x5fWithRefIn_fEVM_x5frms","EVM_rms")),
	create_parm ("SymbolRate","Symbol rate",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","1e3")),
	create_parm ("EVMValue","EVM value expression options",
		PARM_INT,
		"_nEVM_x5fWithRefIn_fEVMValueSet",
		UNITLESS_UNIT,
		prm("_nEVM_x5fWithRefIn_fEVM_x5fRatio","EVM_Ratio")));


create_constant_form ("_n_x5fberMC4_fNone", 
	"None",
	0,
	"0",
	"None");

create_constant_form ("_n_x5fberMC4_fRectangular", 
	"Rectangular",
	0,
	"1",
	"Rectangular");

create_form_set("_n_x5fberMC4_fPlotSet",
	"_n_x5fberMC4_fNone",
	"_n_x5fberMC4_fRectangular",
	"StdForm");

create_constant_form ("_n_x5fberMC4_fNO", 
	"NO",
	0,
	"0",
	"NO");

create_constant_form ("_n_x5fberMC4_fYES", 
	"YES",
	0,
	"1",
	"YES");

create_form_set("_n_x5fberMC4_fControlSimulationSet",
	"_n_x5fberMC4_fNO",
	"_n_x5fberMC4_fYES",
	"StdForm");

create_constant_form ("_n_x5fberMC4_fautomatically", 
	"automatically",
	0,
	"0",
	"automatically");

create_constant_form ("_n_x5fberMC4_fmanually", 
	"manually",
	0,
	"1",
	"manually");

create_form_set("_n_x5fberMC4_fThresholdSettingSet",
	"_n_x5fberMC4_fautomatically",
	"_n_x5fberMC4_fmanually",
	"StdForm");

create_constant_form ("_n_x5fberMC4_fber_x5fvs_x5ftime", 
	"ber vs time",
	0,
	"0",
	"ber vs time");

create_constant_form ("_n_x5fberMC4_fber_x5fvs_x5ftime_x5fevery_x5f10_x5fsymbols", 
	"ber vs time every 10 symbols",
	0,
	"1",
	"ber vs time every 10 symbols");

create_constant_form ("_n_x5fberMC4_fber_x5fvs_x5ftime_x5fevery_x5f100_x5fsymbols", 
	"ber vs time every 100 symbols",
	0,
	"2",
	"ber vs time every 100 symbols");

create_constant_form ("_n_x5fberMC4_fber_x5fvs_x5ftime_x5fevery_x5f1000_x5fsymbols", 
	"ber vs time every 1000 symbols",
	0,
	"3",
	"ber vs time every 1000 symbols");

create_constant_form ("_n_x5fberMC4_fber_x5fonly", 
	"ber only",
	0,
	"4",
	"ber only");

create_form_set("_n_x5fberMC4_fberOutputSet",
	"_n_x5fberMC4_fber_x5fvs_x5ftime",
	"_n_x5fberMC4_fber_x5fvs_x5ftime_x5fevery_x5f10_x5fsymbols",
	"_n_x5fberMC4_fber_x5fvs_x5ftime_x5fevery_x5f100_x5fsymbols",
	"_n_x5fberMC4_fber_x5fvs_x5ftime_x5fevery_x5f1000_x5fsymbols",
	"_n_x5fberMC4_fber_x5fonly",
	"StdForm");

create_item ("_berMC4","Error Probability measurement using Monte Carlo Method, 4 inputs",
	"b",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_berMC4",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dTSDF_n_x5fberMC4_ltsdfgemstars",
	SPComponentAnnotFmt,
	"SYM_berMC4",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Plot","If simulation is setup to open data display after simulation and if Plot is not set to 'None', then plot the data for this sink",
		PARM_INT,
		"_n_x5fberMC4_fPlotSet",
		UNITLESS_UNIT,
		prm("_n_x5fberMC4_fNone","None")),
	create_parm ("RLoad","Load resistance",
		PARM_REAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","DefaultRLoad")),
	create_parm ("RTemp","Resistor physical temperature, in degrees C",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		TEMPERATURE_UNIT,
		prm("StdForm","DefaultRTemp")),
	create_parm ("Start","Start time for data recording",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","DefaultTimeStart")),
	create_parm ("Stop","Stop time for data recording",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","DefaultTimeStop")),
	create_parm ("ControlSimulation","if set to YES, 'Stop' time determines how long the simulation will run",
		PARM_INT,
		"_n_x5fberMC4_fControlSimulationSet",
		UNITLESS_UNIT,
		prm("_n_x5fberMC4_fYES","YES")),
	create_parm ("SymbolTime","symbol time",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","1.0")),
	create_parm ("EstRelVariance","estimation relative variance (if set to 0.0 simulation will run until Stop is reached)",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("NumThreshold","number of threshold",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("ThresholdSetting","type of threshold settings",
		PARM_INT,
		"_n_x5fberMC4_fThresholdSettingSet",
		UNITLESS_UNIT,
		prm("_n_x5fberMC4_fautomatically","automatically")),
	create_parm ("Threshold","threshold values when user selects manually setting",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"0\"")),
	create_parm ("DelayBound","upper bound of delay for Synchronizing inputs if DelayBound = -1, the Synchronizer is turned off",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","-1.0")),
	create_parm ("berOutput","Type of ber output",
		PARM_INT,
		"_n_x5fberMC4_fberOutputSet",
		UNITLESS_UNIT,
		prm("_n_x5fberMC4_fber_x5fonly","ber_only")),
	create_parm ("StatusUpdatePeriod","Status update period in number of bits",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1000")));


create_constant_form ("_nberMC4_fNone", 
	"None",
	0,
	"0",
	"None");

create_constant_form ("_nberMC4_fRectangular", 
	"Rectangular",
	0,
	"1",
	"Rectangular");

create_form_set("_nberMC4_fPlotSet",
	"_nberMC4_fNone",
	"_nberMC4_fRectangular",
	"StdForm");

create_constant_form ("_nberMC4_fNO", 
	"NO",
	0,
	"0",
	"NO");

create_constant_form ("_nberMC4_fYES", 
	"YES",
	0,
	"1",
	"YES");

create_form_set("_nberMC4_fControlSimulationSet",
	"_nberMC4_fNO",
	"_nberMC4_fYES",
	"StdForm");

create_constant_form ("_nberMC4_fautomatically", 
	"automatically",
	0,
	"0",
	"automatically");

create_constant_form ("_nberMC4_fmanually", 
	"manually",
	0,
	"1",
	"manually");

create_form_set("_nberMC4_fThresholdSettingSet",
	"_nberMC4_fautomatically",
	"_nberMC4_fmanually",
	"StdForm");

create_constant_form ("_nberMC4_fber_x5fvs_x5ftime", 
	"ber vs time",
	0,
	"0",
	"ber vs time");

create_constant_form ("_nberMC4_fber_x5fvs_x5ftime_x5fevery_x5f10_x5fsymbols", 
	"ber vs time every 10 symbols",
	0,
	"1",
	"ber vs time every 10 symbols");

create_constant_form ("_nberMC4_fber_x5fvs_x5ftime_x5fevery_x5f100_x5fsymbols", 
	"ber vs time every 100 symbols",
	0,
	"2",
	"ber vs time every 100 symbols");

create_constant_form ("_nberMC4_fber_x5fvs_x5ftime_x5fevery_x5f1000_x5fsymbols", 
	"ber vs time every 1000 symbols",
	0,
	"3",
	"ber vs time every 1000 symbols");

create_constant_form ("_nberMC4_fber_x5fonly", 
	"ber only",
	0,
	"4",
	"ber only");

create_form_set("_nberMC4_fberOutputSet",
	"_nberMC4_fber_x5fvs_x5ftime",
	"_nberMC4_fber_x5fvs_x5ftime_x5fevery_x5f10_x5fsymbols",
	"_nberMC4_fber_x5fvs_x5ftime_x5fevery_x5f100_x5fsymbols",
	"_nberMC4_fber_x5fvs_x5ftime_x5fevery_x5f1000_x5fsymbols",
	"_nberMC4_fber_x5fonly",
	"StdForm");

create_item ("berMC4","Error Probability measurement using Monte Carlo Method, 4 inputs",
	"b",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_berMC4",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"berMC4",
	SPDesignAnnotFmt,
	"SYM_berMC4",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Plot","If simulation is setup to open data display after simulation and if Plot is not set to 'None', then plot the data for this sink",
		PARM_INT,
		"_nberMC4_fPlotSet",
		UNITLESS_UNIT,
		prm("_nberMC4_fNone","None")),
	create_parm ("RLoad","Load resistance",
		PARM_REAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","DefaultRLoad")),
	create_parm ("RTemp","Resistor physical temperature, in degrees C",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		TEMPERATURE_UNIT,
		prm("StdForm","DefaultRTemp")),
	create_parm ("Start","Start time for data recording",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","DefaultTimeStart")),
	create_parm ("Stop","Stop time for data recording",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","DefaultTimeStop")),
	create_parm ("ControlSimulation","if set to YES, 'Stop' time determines how long the simulation will run",
		PARM_INT,
		"_nberMC4_fControlSimulationSet",
		UNITLESS_UNIT,
		prm("_nberMC4_fYES","YES")),
	create_parm ("SymbolTime","symbol time",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","1.0")),
	create_parm ("EstRelVariance","estimation relative variance (if set to 0.0 simulation will run until Stop is reached)",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("NumThreshold","number of threshold",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("ThresholdSetting","type of threshold settings",
		PARM_INT,
		"_nberMC4_fThresholdSettingSet",
		UNITLESS_UNIT,
		prm("_nberMC4_fautomatically","automatically")),
	create_parm ("Threshold","threshold values when user selects manually setting",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"0\"")),
	create_parm ("DelayBound","upper bound of delay for Synchronizing inputs if DelayBound = -1, the Synchronizer is turned off",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","-1.0")),
	create_parm ("berOutput","Type of ber output",
		PARM_INT,
		"_nberMC4_fberOutputSet",
		UNITLESS_UNIT,
		prm("_nberMC4_fber_x5fonly","ber_only")),
	create_parm ("StatusUpdatePeriod","Status update period in number of bits",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1000")));


create_constant_form ("_n_x5fberMC_fNone", 
	"None",
	0,
	"0",
	"None");

create_constant_form ("_n_x5fberMC_fRectangular", 
	"Rectangular",
	0,
	"1",
	"Rectangular");

create_form_set("_n_x5fberMC_fPlotSet",
	"_n_x5fberMC_fNone",
	"_n_x5fberMC_fRectangular",
	"StdForm");

create_constant_form ("_n_x5fberMC_fNO", 
	"NO",
	0,
	"0",
	"NO");

create_constant_form ("_n_x5fberMC_fYES", 
	"YES",
	0,
	"1",
	"YES");

create_form_set("_n_x5fberMC_fControlSimulationSet",
	"_n_x5fberMC_fNO",
	"_n_x5fberMC_fYES",
	"StdForm");

create_constant_form ("_n_x5fberMC_fautomatically", 
	"automatically",
	0,
	"0",
	"automatically");

create_constant_form ("_n_x5fberMC_fmanually", 
	"manually",
	0,
	"1",
	"manually");

create_form_set("_n_x5fberMC_fThresholdSettingSet",
	"_n_x5fberMC_fautomatically",
	"_n_x5fberMC_fmanually",
	"StdForm");

create_constant_form ("_n_x5fberMC_fber_x5fvs_x5ftime", 
	"ber vs time",
	0,
	"0",
	"ber vs time");

create_constant_form ("_n_x5fberMC_fber_x5fvs_x5ftime_x5fevery_x5f10_x5fsymbols", 
	"ber vs time every 10 symbols",
	0,
	"1",
	"ber vs time every 10 symbols");

create_constant_form ("_n_x5fberMC_fber_x5fvs_x5ftime_x5fevery_x5f100_x5fsymbols", 
	"ber vs time every 100 symbols",
	0,
	"2",
	"ber vs time every 100 symbols");

create_constant_form ("_n_x5fberMC_fber_x5fvs_x5ftime_x5fevery_x5f1000_x5fsymbols", 
	"ber vs time every 1000 symbols",
	0,
	"3",
	"ber vs time every 1000 symbols");

create_constant_form ("_n_x5fberMC_fber_x5fonly", 
	"ber only",
	0,
	"4",
	"ber only");

create_form_set("_n_x5fberMC_fberOutputSet",
	"_n_x5fberMC_fber_x5fvs_x5ftime",
	"_n_x5fberMC_fber_x5fvs_x5ftime_x5fevery_x5f10_x5fsymbols",
	"_n_x5fberMC_fber_x5fvs_x5ftime_x5fevery_x5f100_x5fsymbols",
	"_n_x5fberMC_fber_x5fvs_x5ftime_x5fevery_x5f1000_x5fsymbols",
	"_n_x5fberMC_fber_x5fonly",
	"StdForm");

create_item ("_berMC","Error Probability measurement using Monte Carlo Method, 2 inputs",
	"b",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_berMC",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dTSDF_n_x5fberMC_ltsdfgemstars",
	SPComponentAnnotFmt,
	"SYM_berMC",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Plot","If simulation is setup to open data display after simulation and if Plot is not set to 'None', then plot the data for this sink",
		PARM_INT,
		"_n_x5fberMC_fPlotSet",
		UNITLESS_UNIT,
		prm("_n_x5fberMC_fNone","None")),
	create_parm ("RLoad","Load resistance",
		PARM_REAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","DefaultRLoad")),
	create_parm ("RTemp","Resistor physical temperature, in degrees C",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		TEMPERATURE_UNIT,
		prm("StdForm","DefaultRTemp")),
	create_parm ("Start","Start time for data recording",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","DefaultTimeStart")),
	create_parm ("Stop","Stop time for data recording",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","DefaultTimeStop")),
	create_parm ("ControlSimulation","if set to YES, 'Stop' time determines how long the simulation will run",
		PARM_INT,
		"_n_x5fberMC_fControlSimulationSet",
		UNITLESS_UNIT,
		prm("_n_x5fberMC_fYES","YES")),
	create_parm ("SymbolTime","symbol time",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","1.0")),
	create_parm ("EstRelVariance","estimation relative variance (if set to 0.0 simulation will run until Stop is reached)",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("NumThreshold","number of threshold",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("ThresholdSetting","type of threshold settings",
		PARM_INT,
		"_n_x5fberMC_fThresholdSettingSet",
		UNITLESS_UNIT,
		prm("_n_x5fberMC_fautomatically","automatically")),
	create_parm ("Threshold","threshold values when user selects manually setting",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"0\"")),
	create_parm ("DelayBound","upper bound of delay for Synchronizing inputs if DelayBound = -1, the Synchronizer is turned off",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","-1.0")),
	create_parm ("berOutput","Type of ber output",
		PARM_INT,
		"_n_x5fberMC_fberOutputSet",
		UNITLESS_UNIT,
		prm("_n_x5fberMC_fber_x5fonly","ber_only")),
	create_parm ("StatusUpdatePeriod","Status update period in number of bits",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1000")));


create_constant_form ("_nberMC_fNone", 
	"None",
	0,
	"0",
	"None");

create_constant_form ("_nberMC_fRectangular", 
	"Rectangular",
	0,
	"1",
	"Rectangular");

create_form_set("_nberMC_fPlotSet",
	"_nberMC_fNone",
	"_nberMC_fRectangular",
	"StdForm");

create_constant_form ("_nberMC_fNO", 
	"NO",
	0,
	"0",
	"NO");

create_constant_form ("_nberMC_fYES", 
	"YES",
	0,
	"1",
	"YES");

create_form_set("_nberMC_fControlSimulationSet",
	"_nberMC_fNO",
	"_nberMC_fYES",
	"StdForm");

create_constant_form ("_nberMC_fautomatically", 
	"automatically",
	0,
	"0",
	"automatically");

create_constant_form ("_nberMC_fmanually", 
	"manually",
	0,
	"1",
	"manually");

create_form_set("_nberMC_fThresholdSettingSet",
	"_nberMC_fautomatically",
	"_nberMC_fmanually",
	"StdForm");

create_constant_form ("_nberMC_fber_x5fvs_x5ftime", 
	"ber vs time",
	0,
	"0",
	"ber vs time");

create_constant_form ("_nberMC_fber_x5fvs_x5ftime_x5fevery_x5f10_x5fsymbols", 
	"ber vs time every 10 symbols",
	0,
	"1",
	"ber vs time every 10 symbols");

create_constant_form ("_nberMC_fber_x5fvs_x5ftime_x5fevery_x5f100_x5fsymbols", 
	"ber vs time every 100 symbols",
	0,
	"2",
	"ber vs time every 100 symbols");

create_constant_form ("_nberMC_fber_x5fvs_x5ftime_x5fevery_x5f1000_x5fsymbols", 
	"ber vs time every 1000 symbols",
	0,
	"3",
	"ber vs time every 1000 symbols");

create_constant_form ("_nberMC_fber_x5fonly", 
	"ber only",
	0,
	"4",
	"ber only");

create_form_set("_nberMC_fberOutputSet",
	"_nberMC_fber_x5fvs_x5ftime",
	"_nberMC_fber_x5fvs_x5ftime_x5fevery_x5f10_x5fsymbols",
	"_nberMC_fber_x5fvs_x5ftime_x5fevery_x5f100_x5fsymbols",
	"_nberMC_fber_x5fvs_x5ftime_x5fevery_x5f1000_x5fsymbols",
	"_nberMC_fber_x5fonly",
	"StdForm");

create_item ("berMC","Error Probability measurement using Monte Carlo Method, 2 inputs",
	"b",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_berMC",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"berMC",
	SPDesignAnnotFmt,
	"SYM_berMC",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Plot","If simulation is setup to open data display after simulation and if Plot is not set to 'None', then plot the data for this sink",
		PARM_INT,
		"_nberMC_fPlotSet",
		UNITLESS_UNIT,
		prm("_nberMC_fNone","None")),
	create_parm ("RLoad","Load resistance",
		PARM_REAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","DefaultRLoad")),
	create_parm ("RTemp","Resistor physical temperature, in degrees C",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		TEMPERATURE_UNIT,
		prm("StdForm","DefaultRTemp")),
	create_parm ("Start","Start time for data recording",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","DefaultTimeStart")),
	create_parm ("Stop","Stop time for data recording",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","DefaultTimeStop")),
	create_parm ("ControlSimulation","if set to YES, 'Stop' time determines how long the simulation will run",
		PARM_INT,
		"_nberMC_fControlSimulationSet",
		UNITLESS_UNIT,
		prm("_nberMC_fYES","YES")),
	create_parm ("SymbolTime","symbol time",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","1.0")),
	create_parm ("EstRelVariance","estimation relative variance (if set to 0.0 simulation will run until Stop is reached)",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("NumThreshold","number of threshold",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("ThresholdSetting","type of threshold settings",
		PARM_INT,
		"_nberMC_fThresholdSettingSet",
		UNITLESS_UNIT,
		prm("_nberMC_fautomatically","automatically")),
	create_parm ("Threshold","threshold values when user selects manually setting",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"0\"")),
	create_parm ("DelayBound","upper bound of delay for Synchronizing inputs if DelayBound = -1, the Synchronizer is turned off",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","-1.0")),
	create_parm ("berOutput","Type of ber output",
		PARM_INT,
		"_nberMC_fberOutputSet",
		UNITLESS_UNIT,
		prm("_nberMC_fber_x5fonly","ber_only")),
	create_parm ("StatusUpdatePeriod","Status update period in number of bits",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1000")));


create_constant_form ("_n_x5fberIS_fNone", 
	"None",
	0,
	"0",
	"None");

create_constant_form ("_n_x5fberIS_fRectangular", 
	"Rectangular",
	0,
	"1",
	"Rectangular");

create_form_set("_n_x5fberIS_fPlotSet",
	"_n_x5fberIS_fNone",
	"_n_x5fberIS_fRectangular",
	"StdForm");

create_constant_form ("_n_x5fberIS_fautomatically", 
	"automatically",
	0,
	"0",
	"automatically");

create_constant_form ("_n_x5fberIS_fmanually", 
	"manually",
	0,
	"1",
	"manually");

create_form_set("_n_x5fberIS_fThresholdSettingSet",
	"_n_x5fberIS_fautomatically",
	"_n_x5fberIS_fmanually",
	"StdForm");

create_constant_form ("_n_x5fberIS_fber_x5fvs_x5ftime", 
	"ber vs time",
	0,
	"0",
	"ber vs time");

create_constant_form ("_n_x5fberIS_fber_x5fvs_x5ftime_x5fevery_x5f10_x5fsymbols", 
	"ber vs time every 10 symbols",
	0,
	"1",
	"ber vs time every 10 symbols");

create_constant_form ("_n_x5fberIS_fber_x5fvs_x5ftime_x5fevery_x5f100_x5fsymbols", 
	"ber vs time every 100 symbols",
	0,
	"2",
	"ber vs time every 100 symbols");

create_constant_form ("_n_x5fberIS_fber_x5fvs_x5ftime_x5fevery_x5f1000_x5fsymbols", 
	"ber vs time every 1000 symbols",
	0,
	"3",
	"ber vs time every 1000 symbols");

create_constant_form ("_n_x5fberIS_fber_x5fonly", 
	"ber only",
	0,
	"4",
	"ber only");

create_form_set("_n_x5fberIS_fberOutputSet",
	"_n_x5fberIS_fber_x5fvs_x5ftime",
	"_n_x5fberIS_fber_x5fvs_x5ftime_x5fevery_x5f10_x5fsymbols",
	"_n_x5fberIS_fber_x5fvs_x5ftime_x5fevery_x5f100_x5fsymbols",
	"_n_x5fberIS_fber_x5fvs_x5ftime_x5fevery_x5f1000_x5fsymbols",
	"_n_x5fberIS_fber_x5fonly",
	"StdForm");

create_constant_form ("_n_x5fberIS_fPAM", 
	"PAM",
	0,
	"0",
	"PAM");

create_constant_form ("_n_x5fberIS_fQAM", 
	"QAM",
	0,
	"1",
	"QAM");

create_constant_form ("_n_x5fberIS_fQPSK", 
	"QPSK",
	0,
	"2",
	"QPSK");

create_constant_form ("_n_x5fberIS_fDQPSK", 
	"DQPSK",
	0,
	"3",
	"DQPSK");

create_constant_form ("_n_x5fberIS_fPI4DQPSK", 
	"PI4DQPSK",
	0,
	"4",
	"PI4DQPSK");

create_form_set("_n_x5fberIS_fSystemTypeSet",
	"_n_x5fberIS_fPAM",
	"_n_x5fberIS_fQAM",
	"_n_x5fberIS_fQPSK",
	"_n_x5fberIS_fDQPSK",
	"_n_x5fberIS_fPI4DQPSK",
	"StdForm");

create_item ("_berIS","Error Probability measurement using Improved Importance Sampling",
	"b",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_berIS",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dTSDF_n_x5fberIS_ltsdfgemstars",
	SPComponentAnnotFmt,
	"SYM_berIS",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Plot","If simulation is setup to open data display after simulation and if Plot is not set to 'None', then plot the data for this sink",
		PARM_INT,
		"_n_x5fberIS_fPlotSet",
		UNITLESS_UNIT,
		prm("_n_x5fberIS_fNone","None")),
	create_parm ("RLoad","Load resistance",
		PARM_REAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","DefaultRLoad")),
	create_parm ("RTemp","Resitor physical temperature, in degrees C",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		TEMPERATURE_UNIT,
		prm("StdForm","DefaultRTemp")),
	create_parm ("Start","Start time for sampling signals",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","DefaultTimeStart")),
	create_parm ("SymbolTime","Symbol time",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","1.0")),
	create_parm ("NumThreshold","Number of thresholds for the error detection",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("ThresholdSetting","Type of threshold settings",
		PARM_INT,
		"_n_x5fberIS_fThresholdSettingSet",
		UNITLESS_UNIT,
		prm("_n_x5fberIS_fautomatically","automatically")),
	create_parm ("Threshold","Threshold values when user selects manually setting",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"0\"")),
	create_parm ("DelayBound","Upper bound of delay for Synchronizing inputs if DelayBound <= 0, the Synchronizer is turned off",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","-1.0")),
	create_parm ("berOutput","Type of ber output",
		PARM_INT,
		"_n_x5fberIS_fberOutputSet",
		UNITLESS_UNIT,
		prm("_n_x5fberIS_fber_x5fonly","ber_only")),
	create_parm ("NBw","Noise bandwidth",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","3.0")),
	create_parm ("SystemType","System type",
		PARM_INT,
		"_n_x5fberIS_fSystemTypeSet",
		UNITLESS_UNIT,
		prm("_n_x5fberIS_fPAM","PAM")),
	create_parm ("EstVar","Estimation relative variance",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.1")),
	create_parm ("EsOverNo","Energy per Symbol over Noise Density in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3.0")),
	create_parm ("EsOverNoRange","EsOverNo range",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("NumSwpsForEsOverNo","Number of sweep points for EsOverNo",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));


create_constant_form ("_nberIS_fNone", 
	"None",
	0,
	"0",
	"None");

create_constant_form ("_nberIS_fRectangular", 
	"Rectangular",
	0,
	"1",
	"Rectangular");

create_form_set("_nberIS_fPlotSet",
	"_nberIS_fNone",
	"_nberIS_fRectangular",
	"StdForm");

create_constant_form ("_nberIS_fautomatically", 
	"automatically",
	0,
	"0",
	"automatically");

create_constant_form ("_nberIS_fmanually", 
	"manually",
	0,
	"1",
	"manually");

create_form_set("_nberIS_fThresholdSettingSet",
	"_nberIS_fautomatically",
	"_nberIS_fmanually",
	"StdForm");

create_constant_form ("_nberIS_fber_x5fvs_x5ftime", 
	"ber vs time",
	0,
	"0",
	"ber vs time");

create_constant_form ("_nberIS_fber_x5fvs_x5ftime_x5fevery_x5f10_x5fsymbols", 
	"ber vs time every 10 symbols",
	0,
	"1",
	"ber vs time every 10 symbols");

create_constant_form ("_nberIS_fber_x5fvs_x5ftime_x5fevery_x5f100_x5fsymbols", 
	"ber vs time every 100 symbols",
	0,
	"2",
	"ber vs time every 100 symbols");

create_constant_form ("_nberIS_fber_x5fvs_x5ftime_x5fevery_x5f1000_x5fsymbols", 
	"ber vs time every 1000 symbols",
	0,
	"3",
	"ber vs time every 1000 symbols");

create_constant_form ("_nberIS_fber_x5fonly", 
	"ber only",
	0,
	"4",
	"ber only");

create_form_set("_nberIS_fberOutputSet",
	"_nberIS_fber_x5fvs_x5ftime",
	"_nberIS_fber_x5fvs_x5ftime_x5fevery_x5f10_x5fsymbols",
	"_nberIS_fber_x5fvs_x5ftime_x5fevery_x5f100_x5fsymbols",
	"_nberIS_fber_x5fvs_x5ftime_x5fevery_x5f1000_x5fsymbols",
	"_nberIS_fber_x5fonly",
	"StdForm");

create_constant_form ("_nberIS_fPAM", 
	"PAM",
	0,
	"0",
	"PAM");

create_constant_form ("_nberIS_fQAM", 
	"QAM",
	0,
	"1",
	"QAM");

create_constant_form ("_nberIS_fQPSK", 
	"QPSK",
	0,
	"2",
	"QPSK");

create_constant_form ("_nberIS_fDQPSK", 
	"DQPSK",
	0,
	"3",
	"DQPSK");

create_constant_form ("_nberIS_fPI4DQPSK", 
	"PI4DQPSK",
	0,
	"4",
	"PI4DQPSK");

create_form_set("_nberIS_fSystemTypeSet",
	"_nberIS_fPAM",
	"_nberIS_fQAM",
	"_nberIS_fQPSK",
	"_nberIS_fDQPSK",
	"_nberIS_fPI4DQPSK",
	"StdForm");

create_item ("berIS","Error Probability measurement using Improved Importance Sampling",
	"b",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_berIS",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"berIS",
	SPDesignAnnotFmt,
	"SYM_berIS",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Plot","If simulation is setup to open data display after simulation and if Plot is not set to 'None', then plot the data for this sink",
		PARM_INT,
		"_nberIS_fPlotSet",
		UNITLESS_UNIT,
		prm("_nberIS_fNone","None")),
	create_parm ("RLoad","Load resistance",
		PARM_REAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","DefaultRLoad")),
	create_parm ("RTemp","Resitor physical temperature, in degrees C",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		TEMPERATURE_UNIT,
		prm("StdForm","DefaultRTemp")),
	create_parm ("Start","Start time for sampling signals",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","DefaultTimeStart")),
	create_parm ("SymbolTime","Symbol time",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","1.0")),
	create_parm ("NumThreshold","Number of thresholds for the error detection",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("ThresholdSetting","Type of threshold settings",
		PARM_INT,
		"_nberIS_fThresholdSettingSet",
		UNITLESS_UNIT,
		prm("_nberIS_fautomatically","automatically")),
	create_parm ("Threshold","Threshold values when user selects manually setting",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"0\"")),
	create_parm ("DelayBound","Upper bound of delay for Synchronizing inputs if DelayBound <= 0, the Synchronizer is turned off",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","-1.0")),
	create_parm ("berOutput","Type of ber output",
		PARM_INT,
		"_nberIS_fberOutputSet",
		UNITLESS_UNIT,
		prm("_nberIS_fber_x5fonly","ber_only")),
	create_parm ("NBw","Noise bandwidth",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","3.0")),
	create_parm ("SystemType","System type",
		PARM_INT,
		"_nberIS_fSystemTypeSet",
		UNITLESS_UNIT,
		prm("_nberIS_fPAM","PAM")),
	create_parm ("EstVar","Estimation relative variance",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.1")),
	create_parm ("EsOverNo","Energy per Symbol over Noise Density in dB",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3.0")),
	create_parm ("EsOverNoRange","EsOverNo range",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("NumSwpsForEsOverNo","Number of sweep points for EsOverNo",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));


create_item ("Cosim","Constant Timed Signal Generator",
	"C",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_Cosim",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dTSDF_nCosim_ltsdfgemstars",
	SPComponentAnnotFmt,
	"SYM_Cosim",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);


create_constant_form ("_n_x5fSinad_fNone", 
	"None",
	0,
	"0",
	"None");

create_constant_form ("_n_x5fSinad_fRectangular", 
	"Rectangular",
	0,
	"1",
	"Rectangular");

create_form_set("_n_x5fSinad_fPlotSet",
	"_n_x5fSinad_fNone",
	"_n_x5fSinad_fRectangular",
	"StdForm");

create_constant_form ("_n_x5fSinad_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");

create_constant_form ("_n_x5fSinad_fON", 
	"ON",
	0,
	"1",
	"ON");

create_form_set("_n_x5fSinad_fHanningWindowSet",
	"_n_x5fSinad_fOFF",
	"_n_x5fSinad_fON",
	"StdForm");

create_item ("_Sinad","SINAD measurement",
	"S",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_Sinad",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dTSDF_n_x5fSinad_ltsdfgemstars",
	SPComponentAnnotFmt,
	"SYM_Sinad",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Plot","If simulation is setup to open data display after simulation and if Plot is not set to 'None', then plot the data for this sink",
		PARM_INT,
		"_n_x5fSinad_fPlotSet",
		UNITLESS_UNIT,
		prm("_n_x5fSinad_fNone","None")),
	create_parm ("RLoad","Load resistance",
		PARM_REAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","DefaultRLoad")),
	create_parm ("RTemp","Resistor physical temperature, in degrees C",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		TEMPERATURE_UNIT,
		prm("StdForm","DefaultRTemp")),
	create_parm ("Start","Start time for data recording",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","DefaultTimeStart")),
	create_parm ("Stop","Stop time for data recording",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","DefaultTimeStop")),
	create_parm ("SignalFrequency","signal Frequency of interest",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","1.0e6")),
	create_parm ("BandRejectSpan","band reject filter bandwidth",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","0.0")),
	create_parm ("HanningWindow","windowing of signal with a Hanning window",
		PARM_INT,
		"_n_x5fSinad_fHanningWindowSet",
		UNITLESS_UNIT,
		prm("_n_x5fSinad_fON","ON")));


create_constant_form ("_nSinad_fNone", 
	"None",
	0,
	"0",
	"None");

create_constant_form ("_nSinad_fRectangular", 
	"Rectangular",
	0,
	"1",
	"Rectangular");

create_form_set("_nSinad_fPlotSet",
	"_nSinad_fNone",
	"_nSinad_fRectangular",
	"StdForm");

create_constant_form ("_nSinad_fOFF", 
	"OFF",
	0,
	"0",
	"OFF");

create_constant_form ("_nSinad_fON", 
	"ON",
	0,
	"1",
	"ON");

create_form_set("_nSinad_fHanningWindowSet",
	"_nSinad_fOFF",
	"_nSinad_fON",
	"StdForm");

create_item ("Sinad","SINAD measurement",
	"S",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_Sinad",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"Sinad",
	SPDesignAnnotFmt,
	"SYM_Sinad",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Plot","If simulation is setup to open data display after simulation and if Plot is not set to 'None', then plot the data for this sink",
		PARM_INT,
		"_nSinad_fPlotSet",
		UNITLESS_UNIT,
		prm("_nSinad_fNone","None")),
	create_parm ("RLoad","Load resistance",
		PARM_REAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","DefaultRLoad")),
	create_parm ("RTemp","Resistor physical temperature, in degrees C",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		TEMPERATURE_UNIT,
		prm("StdForm","DefaultRTemp")),
	create_parm ("Start","Start time for data recording",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","DefaultTimeStart")),
	create_parm ("Stop","Stop time for data recording",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","DefaultTimeStop")),
	create_parm ("SignalFrequency","signal Frequency of interest",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","1.0e6")),
	create_parm ("BandRejectSpan","band reject filter bandwidth",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","0.0")),
	create_parm ("HanningWindow","windowing of signal with a Hanning window",
		PARM_INT,
		"_nSinad_fHanningWindowSet",
		UNITLESS_UNIT,
		prm("_nSinad_fON","ON")));


create_constant_form ("_nTimedSource_fNO", 
	"NO",
	0,
	"0",
	"NO");

create_constant_form ("_nTimedSource_fYES", 
	"YES",
	0,
	"1",
	"YES");

create_form_set("_nTimedSource_fControlSimulationSet",
	"_nTimedSource_fNO",
	"_nTimedSource_fYES",
	"StdForm");

create_constant_form ("_nTimedSource_fNO", 
	"NO",
	0,
	"0",
	"NO");

create_constant_form ("_nTimedSource_fYES", 
	"YES",
	0,
	"1",
	"YES");

create_form_set("_nTimedSource_fPeriodicSet",
	"_nTimedSource_fNO",
	"_nTimedSource_fYES",
	"StdForm");

create_text_form ("_nTimedSource_fds_x5ffile", 
	"File with ds extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "ds"), prefix_path_to_data_file);

create_form_set ( "_nTimedSource_fDataSet_x5fFileSet",
	"_nTimedSource_fds_x5ffile");

create_item ("TimedSource","Time domain signal generator using data set",
	"T",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_TimedSource",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dTSDF_nTimedSource_ltsdfgemstars",
	SPComponentAnnotFmt,
	"SYM_TimedSource",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("TStep","simulation time step ( if TStep=0 the time step is calculated using the independent variable values of the first two data samples in the data file )",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","0.0001")),
	create_parm ("ControlSimulation","if set to YES, Period ( or if Period=0 the timestamp on last data in the file) determines how long the simulation will run",
		PARM_INT,
		"_nTimedSource_fControlSimulationSet",
		UNITLESS_UNIT,
		prm("_nTimedSource_fNO","NO")),
	create_parm ("Periodic","if YES then output is periodic",
		PARM_INT,
		"_nTimedSource_fPeriodicSet",
		UNITLESS_UNIT,
		prm("_nTimedSource_fYES","YES")),
	create_parm ("Period","period of the output waveform if Periodic=YES",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","0")),
	create_parm ("FCarrier","carrier Frequency (for complex data FCarrier must be > 0.)",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","0.0")),
	create_parm ("DataSet","dataSet file to construct Expression from",
		PARM_STRING,
		"_nTimedSource_fDataSet_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nTimedSource_fds_x5ffile","\"\"")),
	create_parm ("Expression","variable/sink name from dataset or a valid DataSet expression ( data must be single dimensional )",
		PARM_STRING,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")));


create_constant_form ("_nTimedDataRead_fNO", 
	"NO",
	0,
	"0",
	"NO");

create_constant_form ("_nTimedDataRead_fYES", 
	"YES",
	0,
	"1",
	"YES");

create_form_set("_nTimedDataRead_fControlSimulationSet",
	"_nTimedDataRead_fNO",
	"_nTimedDataRead_fYES",
	"StdForm");

create_constant_form ("_nTimedDataRead_fNO", 
	"NO",
	0,
	"0",
	"NO");

create_constant_form ("_nTimedDataRead_fYES", 
	"YES",
	0,
	"1",
	"YES");

create_form_set("_nTimedDataRead_fPeriodicSet",
	"_nTimedDataRead_fNO",
	"_nTimedDataRead_fYES",
	"StdForm");

create_text_form ("_nTimedDataRead_ftim", 
	"File with tim extension",
	"ReadFileForm", 0, "%v FileType=0", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "tim"), prefix_path_to_data_file);

create_text_form ("_nTimedDataRead_fbintim", 
	"File with bintim extension",
	"ReadFileForm", 0, "%v FileType=1", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "bintim"), prefix_path_to_data_file);

create_text_form ("_nTimedDataRead_fascsig", 
	"File with ascsig extension",
	"ReadFileForm", 0, "%v FileType=2", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "ascsig"), prefix_path_to_data_file);

create_text_form ("_nTimedDataRead_fsig", 
	"File with sig extension",
	"ReadFileForm", 0, "%v FileType=3", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "sig"), prefix_path_to_data_file);

create_form_set ( "_nTimedDataRead_fFileName_x5fFileSet",
	"_nTimedDataRead_ftim",
	"_nTimedDataRead_fbintim",
	"_nTimedDataRead_fascsig",
	"_nTimedDataRead_fsig");

create_item ("TimedDataRead","Time Domain Signal Generator with File-Based Data",
	"T",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_TimedDataRead",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dTSDF_nTimedDataRead_ltsdfgemstars",
	SPComponentAnnotFmt,
	"SYM_TimedDataRead",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("TStep","simulation time step ( if TStep=0 the time step is calculated using the independent variable values of the first two data samples in the data file )",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","0.0001")),
	create_parm ("ControlSimulation","if set to YES, Period ( or if Period=0 the timestamp on last data in the file) determines how long the simulation will run",
		PARM_INT,
		"_nTimedDataRead_fControlSimulationSet",
		UNITLESS_UNIT,
		prm("_nTimedDataRead_fNO","NO")),
	create_parm ("Periodic","if YES then output is periodic",
		PARM_INT,
		"_nTimedDataRead_fPeriodicSet",
		UNITLESS_UNIT,
		prm("_nTimedDataRead_fYES","YES")),
	create_parm ("Period","period of the output waveform if Periodic=YES",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","0")),
	create_parm ("FileName","input file",
		PARM_STRING,
		"_nTimedDataRead_fFileName_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nTimedDataRead_ftim","\"\"")),
	create_parm ("FCarrier","carrier Frequency (for complex data FCarrier must be > 0.)",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","0.0")));


create_constant_form ("_nTimedDataWrite2_fNO", 
	"NO",
	0,
	"0",
	"NO");

create_constant_form ("_nTimedDataWrite2_fYES", 
	"YES",
	0,
	"1",
	"YES");

create_form_set("_nTimedDataWrite2_fControlSimulationSet",
	"_nTimedDataWrite2_fNO",
	"_nTimedDataWrite2_fYES",
	"StdForm");

create_text_form ("_nTimedDataWrite2_ftim_x5ffile", 
	"File with tim extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "tim"), prefix_path_to_data_file);

create_text_form ("_nTimedDataWrite2_fbintim_x5ffile", 
	"File with bintim extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "bintim"), prefix_path_to_data_file);

create_text_form ("_nTimedDataWrite2_fascsig_x5ffile", 
	"File with ascsig extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "ascsig"), prefix_path_to_data_file);

create_text_form ("_nTimedDataWrite2_fsig_x5ffile", 
	"File with sig extension",
	"ReadFileForm", 0, "%v", "%v", get_file_name_list_with_ext, NULL,
	list("DATA_FILES", "sig"), prefix_path_to_data_file);

create_form_set ( "_nTimedDataWrite2_fFileName_x5fFileSet",
	"_nTimedDataWrite2_ftim_x5ffile",
	"_nTimedDataWrite2_fbintim_x5ffile",
	"_nTimedDataWrite2_fascsig_x5ffile",
	"_nTimedDataWrite2_fsig_x5ffile");

create_constant_form ("_nTimedDataWrite2_fTime_x5fASCII", 
	"Time_ASCII",
	0,
	"0",
	"tim");

create_constant_form ("_nTimedDataWrite2_fTime_x5fbinary", 
	"Time_binary",
	0,
	"1",
	"bintim");

create_constant_form ("_nTimedDataWrite2_fSPW_x5fASCII", 
	"SPW_ASCII",
	0,
	"2",
	"ascsig");

create_constant_form ("_nTimedDataWrite2_fSPW_x5fbinary", 
	"SPW_binary",
	0,
	"3",
	"sig");

create_form_set("_nTimedDataWrite2_fFileTypeSet",
	"_nTimedDataWrite2_fTime_x5fASCII",
	"_nTimedDataWrite2_fTime_x5fbinary",
	"_nTimedDataWrite2_fSPW_x5fASCII",
	"_nTimedDataWrite2_fSPW_x5fbinary",
	"StdForm");

create_item ("TimedDataWrite2","Format Specific Output Data File",
	"T",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_TimedDataWrite2",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dTSDF_nTimedDataWrite2_ltsdfgemstars",
	SPComponentAnnotFmt,
	"SYM_TimedDataWrite2",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("RLoad","Load resistance",
		PARM_REAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","DefaultRLoad")),
	create_parm ("RTemp","Resistor physical temperature, in degrees C",
		PARM_REAL | PARM_NO_DISPLAY,
		"StdFormSet",
		TEMPERATURE_UNIT,
		prm("StdForm","DefaultRTemp")),
	create_parm ("Start","Start time for data recording",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","DefaultTimeStart")),
	create_parm ("Stop","Stop time for data recording",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","DefaultTimeStop")),
	create_parm ("ControlSimulation","if set to YES, 'Stop' time determines how long the simulation will run",
		PARM_INT,
		"_nTimedDataWrite2_fControlSimulationSet",
		UNITLESS_UNIT,
		prm("_nTimedDataWrite2_fYES","YES")),
	create_parm ("FileName","filename that you assign before beginning signal analysis to create a data file",
		PARM_STRING,
		"_nTimedDataWrite2_fFileName_x5fFileSet",
		UNITLESS_UNIT,
		prm("_nTimedDataWrite2_ftim_x5ffile","\"\"")),
	create_parm ("FileType","output file type options",
		PARM_INT,
		"_nTimedDataWrite2_fFileTypeSet",
		UNITLESS_UNIT,
		prm("_nTimedDataWrite2_fTime_x5fASCII","Time_ASCII")));
