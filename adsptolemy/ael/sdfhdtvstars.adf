set_design_type( sigproc_net );

create_constant_form ("_nDTV_x5fDVBHTPS_fQPSK", 
	"QPSK",
	0,
	"0",
	"QPSK");

create_constant_form ("_nDTV_x5fDVBHTPS_fQAM_x5f16", 
	"QAM-16",
	0,
	"1",
	"QAM-16");

create_constant_form ("_nDTV_x5fDVBHTPS_fQAM_x5f64", 
	"QAM-64",
	0,
	"2",
	"QAM-64");

create_constant_form ("_nDTV_x5fDVBHTPS_fReserved_x5fCon", 
	"Reserved Con",
	0,
	"3",
	"Reserved Con");

create_form_set("_nDTV_x5fDVBHTPS_fConstellationSet",
	"_nDTV_x5fDVBHTPS_fQPSK",
	"_nDTV_x5fDVBHTPS_fQAM_x5f16",
	"_nDTV_x5fDVBHTPS_fQAM_x5f64",
	"_nDTV_x5fDVBHTPS_fReserved_x5fCon",
	"StdForm");

create_constant_form ("_nDTV_x5fDVBHTPS_fNative", 
	"Native",
	0,
	"0",
	"Native");

create_constant_form ("_nDTV_x5fDVBHTPS_fIn_x5fdepth", 
	"In-depth",
	0,
	"1",
	"In-depth");

create_form_set("_nDTV_x5fDVBHTPS_fInnerInterlvSet",
	"_nDTV_x5fDVBHTPS_fNative",
	"_nDTV_x5fDVBHTPS_fIn_x5fdepth",
	"StdForm");

create_constant_form ("_nDTV_x5fDVBHTPS_fNon_x5fhierarchical", 
	"Non-hierarchical",
	0,
	"0",
	"Non-hierarchical");

create_constant_form ("_nDTV_x5fDVBHTPS_fAlpha_x5f1", 
	"Alpha 1",
	0,
	"1",
	"Alpha 1");

create_constant_form ("_nDTV_x5fDVBHTPS_fAlpha_x5f2", 
	"Alpha 2",
	0,
	"2",
	"Alpha 2");

create_constant_form ("_nDTV_x5fDVBHTPS_fAlpha_x5f4", 
	"Alpha 4",
	0,
	"3",
	"Alpha 4");

create_form_set("_nDTV_x5fDVBHTPS_fHierarchySet",
	"_nDTV_x5fDVBHTPS_fNon_x5fhierarchical",
	"_nDTV_x5fDVBHTPS_fAlpha_x5f1",
	"_nDTV_x5fDVBHTPS_fAlpha_x5f2",
	"_nDTV_x5fDVBHTPS_fAlpha_x5f4",
	"StdForm");

create_constant_form ("_nDTV_x5fDVBHTPS_fHP_x5f1_x5f2", 
	"HP 1/2",
	0,
	"0",
	"1/2");

create_constant_form ("_nDTV_x5fDVBHTPS_fHP_x5f2_x5f3", 
	"HP 2/3",
	0,
	"1",
	"2/3");

create_constant_form ("_nDTV_x5fDVBHTPS_fHP_x5f3_x5f4", 
	"HP 3/4",
	0,
	"2",
	"3/4");

create_constant_form ("_nDTV_x5fDVBHTPS_fHP_x5f5_x5f6", 
	"HP 5/6",
	0,
	"3",
	"5/6");

create_constant_form ("_nDTV_x5fDVBHTPS_fHP_x5f7_x5f8", 
	"HP 7/8",
	0,
	"4",
	"7/8");

create_constant_form ("_nDTV_x5fDVBHTPS_fReserved_x5fC1_x5fHP", 
	"Reserved C1 HP",
	0,
	"5",
	"Res1");

create_constant_form ("_nDTV_x5fDVBHTPS_fReserved_x5fC2_x5fHP", 
	"Reserved C2 HP",
	0,
	"6",
	"Res2");

create_constant_form ("_nDTV_x5fDVBHTPS_fReserved_x5fC3_x5fHP", 
	"Reserved C3 HP",
	0,
	"7",
	"Res3");

create_form_set("_nDTV_x5fDVBHTPS_fCodeRateHPSet",
	"_nDTV_x5fDVBHTPS_fHP_x5f1_x5f2",
	"_nDTV_x5fDVBHTPS_fHP_x5f2_x5f3",
	"_nDTV_x5fDVBHTPS_fHP_x5f3_x5f4",
	"_nDTV_x5fDVBHTPS_fHP_x5f5_x5f6",
	"_nDTV_x5fDVBHTPS_fHP_x5f7_x5f8",
	"_nDTV_x5fDVBHTPS_fReserved_x5fC1_x5fHP",
	"_nDTV_x5fDVBHTPS_fReserved_x5fC2_x5fHP",
	"_nDTV_x5fDVBHTPS_fReserved_x5fC3_x5fHP",
	"StdForm");

create_constant_form ("_nDTV_x5fDVBHTPS_fLP_x5f1_x5f2", 
	"LP 1/2",
	0,
	"0",
	"1/2");

create_constant_form ("_nDTV_x5fDVBHTPS_fLP_x5f2_x5f3", 
	"LP 2/3",
	0,
	"1",
	"2/3");

create_constant_form ("_nDTV_x5fDVBHTPS_fLP_x5f3_x5f4", 
	"LP 3/4",
	0,
	"2",
	"3/4");

create_constant_form ("_nDTV_x5fDVBHTPS_fLP_x5f5_x5f6", 
	"LP 5/6",
	0,
	"3",
	"5/6");

create_constant_form ("_nDTV_x5fDVBHTPS_fLP_x5f7_x5f8", 
	"LP 7/8",
	0,
	"4",
	"7/8");

create_constant_form ("_nDTV_x5fDVBHTPS_fReserved_x5fC1_x5fLP", 
	"Reserved C1 LP",
	0,
	"5",
	"Res1");

create_constant_form ("_nDTV_x5fDVBHTPS_fReserved_x5fC2_x5fLP", 
	"Reserved C2 LP",
	0,
	"6",
	"Res2");

create_constant_form ("_nDTV_x5fDVBHTPS_fReserved_x5fC3_x5fLP", 
	"Reserved C3 LP",
	0,
	"7",
	"Res3");

create_form_set("_nDTV_x5fDVBHTPS_fCodeRateLPSet",
	"_nDTV_x5fDVBHTPS_fLP_x5f1_x5f2",
	"_nDTV_x5fDVBHTPS_fLP_x5f2_x5f3",
	"_nDTV_x5fDVBHTPS_fLP_x5f3_x5f4",
	"_nDTV_x5fDVBHTPS_fLP_x5f5_x5f6",
	"_nDTV_x5fDVBHTPS_fLP_x5f7_x5f8",
	"_nDTV_x5fDVBHTPS_fReserved_x5fC1_x5fLP",
	"_nDTV_x5fDVBHTPS_fReserved_x5fC2_x5fLP",
	"_nDTV_x5fDVBHTPS_fReserved_x5fC3_x5fLP",
	"StdForm");

create_constant_form ("_nDTV_x5fDVBHTPS_fG_x5f1_x5f32", 
	"G 1/32",
	0,
	"0",
	"1/32");

create_constant_form ("_nDTV_x5fDVBHTPS_fG_x5f1_x5f16", 
	"G 1/16",
	0,
	"1",
	"1/16");

create_constant_form ("_nDTV_x5fDVBHTPS_fG_x5f1_x5f8", 
	"G 1/8",
	0,
	"2",
	"1/8");

create_constant_form ("_nDTV_x5fDVBHTPS_fG_x5f1_x5f4", 
	"G 1/4",
	0,
	"3",
	"1/4");

create_form_set("_nDTV_x5fDVBHTPS_fGuardIntervalSet",
	"_nDTV_x5fDVBHTPS_fG_x5f1_x5f32",
	"_nDTV_x5fDVBHTPS_fG_x5f1_x5f16",
	"_nDTV_x5fDVBHTPS_fG_x5f1_x5f8",
	"_nDTV_x5fDVBHTPS_fG_x5f1_x5f4",
	"StdForm");

create_constant_form ("_nDTV_x5fDVBHTPS_fDVB_x5f2k_x5fmode", 
	"DVB 2k mode",
	0,
	"0",
	"2K");

create_constant_form ("_nDTV_x5fDVBHTPS_fDVB_x5f8k_x5fmode", 
	"DVB 8k mode",
	0,
	"1",
	"8K");

create_constant_form ("_nDTV_x5fDVBHTPS_fDVB_x5f4k_x5fmode", 
	"DVB 4k mode",
	0,
	"2",
	"4K");

create_constant_form ("_nDTV_x5fDVBHTPS_fReserved_x5fM", 
	"Reserved M",
	0,
	"3",
	"Res");

create_form_set("_nDTV_x5fDVBHTPS_fModeSet",
	"_nDTV_x5fDVBHTPS_fDVB_x5f2k_x5fmode",
	"_nDTV_x5fDVBHTPS_fDVB_x5f8k_x5fmode",
	"_nDTV_x5fDVBHTPS_fDVB_x5f4k_x5fmode",
	"_nDTV_x5fDVBHTPS_fReserved_x5fM",
	"StdForm");

create_constant_form ("_nDTV_x5fDVBHTPS_fTimeSlicing_x5fNot_x5fused", 
	"TimeSlicing Not-used",
	0,
	"0",
	"Not-used");

create_constant_form ("_nDTV_x5fDVBHTPS_fTimeSlicing_x5fUsed", 
	"TimeSlicing Used",
	0,
	"1",
	"Used");

create_form_set("_nDTV_x5fDVBHTPS_fTimeSlicingSet",
	"_nDTV_x5fDVBHTPS_fTimeSlicing_x5fNot_x5fused",
	"_nDTV_x5fDVBHTPS_fTimeSlicing_x5fUsed",
	"StdForm");

create_constant_form ("_nDTV_x5fDVBHTPS_fMPE_x5fFEC_x5fNot_x5fused", 
	"MPE_FEC Not-used",
	0,
	"0",
	"Not-used");

create_constant_form ("_nDTV_x5fDVBHTPS_fMPE_x5fFEC_x5fused", 
	"MPE_FEC used",
	0,
	"1",
	"Used");

create_form_set("_nDTV_x5fDVBHTPS_fMPE_x5fFECSet",
	"_nDTV_x5fDVBHTPS_fMPE_x5fFEC_x5fNot_x5fused",
	"_nDTV_x5fDVBHTPS_fMPE_x5fFEC_x5fused",
	"StdForm");

create_constant_form ("_nDTV_x5fDVBHTPS_fInfo_x5f53Bits", 
	"Info 53Bits",
	0,
	"0",
	"Info 53Bits");

create_constant_form ("_nDTV_x5fDVBHTPS_fInfo_x5f54Bits", 
	"Info 54Bits",
	0,
	"1",
	"Info 54Bits");

create_constant_form ("_nDTV_x5fDVBHTPS_fInfo_x5f53_x5fand_x5fParity_x5f14", 
	"Info 53 and Parity 14",
	0,
	"2",
	"Info 53 and Parity 14");

create_constant_form ("_nDTV_x5fDVBHTPS_fInfo_x5f54_x5fand_x5fParity_x5f14", 
	"Info 54 and Parity 14",
	0,
	"3",
	"Info 54 and Parity 14");

create_form_set("_nDTV_x5fDVBHTPS_fTPS_x5fBitsOptionSet",
	"_nDTV_x5fDVBHTPS_fInfo_x5f53Bits",
	"_nDTV_x5fDVBHTPS_fInfo_x5f54Bits",
	"_nDTV_x5fDVBHTPS_fInfo_x5f53_x5fand_x5fParity_x5f14",
	"_nDTV_x5fDVBHTPS_fInfo_x5f54_x5fand_x5fParity_x5f14",
	"StdForm");

create_item ("DTV_DVBHTPS","Modulated transmission parameter signal information",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_DVBHTPS",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fDVBHTPS_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_DVBHTPS",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("LengthIndicator","TPS length indicator (23 for version 1.2.1, 31 for version 1.5.1, 33 for DVB-H, 6 bits)",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","33")),
	create_parm ("Constellation","Modulation scheme in DVB-H (2 bits)",
		PARM_INT,
		"_nDTV_x5fDVBHTPS_fConstellationSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fDVBHTPS_fQPSK","QPSK")),
	create_parm ("InnerInterlv","Inner interleave type (1 bit)",
		PARM_INT,
		"_nDTV_x5fDVBHTPS_fInnerInterlvSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fDVBHTPS_fIn_x5fdepth","In_depth")),
	create_parm ("Hierarchy","Signalling format for alpha values (2 bits)",
		PARM_INT,
		"_nDTV_x5fDVBHTPS_fHierarchySet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fDVBHTPS_fNon_x5fhierarchical","Non_hierarchical")),
	create_parm ("CodeRateHP","High priority stream current convolutional code rate (3 bits)",
		PARM_INT,
		"_nDTV_x5fDVBHTPS_fCodeRateHPSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fDVBHTPS_fHP_x5f1_x5f2","HP_1_2")),
	create_parm ("CodeRateLP","Low priority stream current convolutional code rate (3 bits)",
		PARM_INT,
		"_nDTV_x5fDVBHTPS_fCodeRateLPSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fDVBHTPS_fLP_x5f1_x5f2","LP_1_2")),
	create_parm ("GuardInterval","Guard interval (frac FFT size, 2 bits)",
		PARM_INT,
		"_nDTV_x5fDVBHTPS_fGuardIntervalSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fDVBHTPS_fG_x5f1_x5f32","G_1_32")),
	create_parm ("Mode","Transmission mode (2 bits)",
		PARM_INT,
		"_nDTV_x5fDVBHTPS_fModeSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fDVBHTPS_fDVB_x5f4k_x5fmode","DVB_4k_mode")),
	create_parm ("Cell_ID","Cell identifier (between 0 and 65535, 8 bits x2)",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("TimeSlicing","Time slicing for DVB-H signalling (1 bit)",
		PARM_INT,
		"_nDTV_x5fDVBHTPS_fTimeSlicingSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fDVBHTPS_fTimeSlicing_x5fNot_x5fused","TimeSlicing_Not_used")),
	create_parm ("MPE_FEC","MPE-FEC for DVB-H signalling (1 bit)",
		PARM_INT,
		"_nDTV_x5fDVBHTPS_fMPE_x5fFECSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fDVBHTPS_fMPE_x5fFEC_x5fNot_x5fused","MPE_FEC_Not_used")),
	create_parm ("FutureUse","reserved for future use (by default, all 4 bits are set to 0)",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"0 0 0 0\"")),
	create_parm ("TPS_BitsOption","Select output type for pin TPS_Bits",
		PARM_INT | PARM_NO_DISPLAY,
		"_nDTV_x5fDVBHTPS_fTPS_x5fBitsOptionSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fDVBHTPS_fInfo_x5f53Bits","Info_53Bits")));


create_constant_form ("_nDTV_x5fDVBHInnerDeinterlv_fDVB_x5f2k_x5fmode", 
	"DVB 2k mode",
	0,
	"0",
	"2K");

create_constant_form ("_nDTV_x5fDVBHInnerDeinterlv_fDVB_x5f8k_x5fmode", 
	"DVB 8k mode",
	0,
	"1",
	"8K");

create_constant_form ("_nDTV_x5fDVBHInnerDeinterlv_fDVB_x5f4k_x5fmode", 
	"DVB 4k mode",
	0,
	"2",
	"4K");

create_form_set("_nDTV_x5fDVBHInnerDeinterlv_fModeSet",
	"_nDTV_x5fDVBHInnerDeinterlv_fDVB_x5f2k_x5fmode",
	"_nDTV_x5fDVBHInnerDeinterlv_fDVB_x5f8k_x5fmode",
	"_nDTV_x5fDVBHInnerDeinterlv_fDVB_x5f4k_x5fmode",
	"StdForm");

create_constant_form ("_nDTV_x5fDVBHInnerDeinterlv_fQPSK", 
	"QPSK",
	0,
	"0",
	"QPSK");

create_constant_form ("_nDTV_x5fDVBHInnerDeinterlv_fQAM_x5f16", 
	"QAM-16",
	0,
	"1",
	"QAM-16");

create_constant_form ("_nDTV_x5fDVBHInnerDeinterlv_fQAM_x5f64", 
	"QAM-64",
	0,
	"2",
	"QAM-64");

create_form_set("_nDTV_x5fDVBHInnerDeinterlv_fMappingModeSet",
	"_nDTV_x5fDVBHInnerDeinterlv_fQPSK",
	"_nDTV_x5fDVBHInnerDeinterlv_fQAM_x5f16",
	"_nDTV_x5fDVBHInnerDeinterlv_fQAM_x5f64",
	"StdForm");

create_constant_form ("_nDTV_x5fDVBHInnerDeinterlv_fNon_x5fHierarchical", 
	"Non-Hierarchical",
	0,
	"0",
	"Non-Hierarchical");

create_constant_form ("_nDTV_x5fDVBHInnerDeinterlv_fHierarchical", 
	"Hierarchical",
	0,
	"1",
	"Hierarchical");

create_form_set("_nDTV_x5fDVBHInnerDeinterlv_fHierarchySet",
	"_nDTV_x5fDVBHInnerDeinterlv_fNon_x5fHierarchical",
	"_nDTV_x5fDVBHInnerDeinterlv_fHierarchical",
	"StdForm");

create_constant_form ("_nDTV_x5fDVBHInnerDeinterlv_fNative", 
	"Native",
	0,
	"0",
	"Native");

create_constant_form ("_nDTV_x5fDVBHInnerDeinterlv_fIn_x5fdepth", 
	"In-depth",
	0,
	"1",
	"In-depth");

create_form_set("_nDTV_x5fDVBHInnerDeinterlv_fInterlvTypeSet",
	"_nDTV_x5fDVBHInnerDeinterlv_fNative",
	"_nDTV_x5fDVBHInnerDeinterlv_fIn_x5fdepth",
	"StdForm");

create_item ("DTV_DVBHInnerDeinterlv","DVB-H inner deinterleaver",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_DVBHInnerDeinterlv",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fDVBHInnerDeinterlv_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_DVBHInnerDeinterlv",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Mode","Transmission mode",
		PARM_INT,
		"_nDTV_x5fDVBHInnerDeinterlv_fModeSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fDVBHInnerDeinterlv_fDVB_x5f4k_x5fmode","DVB_4k_mode")),
	create_parm ("MappingMode","Signal constellation and mapping",
		PARM_INT,
		"_nDTV_x5fDVBHInnerDeinterlv_fMappingModeSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fDVBHInnerDeinterlv_fQPSK","QPSK")),
	create_parm ("Hierarchy","Hierarchical transmission flag",
		PARM_INT,
		"_nDTV_x5fDVBHInnerDeinterlv_fHierarchySet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fDVBHInnerDeinterlv_fNon_x5fHierarchical","Non_Hierarchical")),
	create_parm ("InterlvType","Symbol interleaving type for 2K and 4K mode",
		PARM_INT,
		"_nDTV_x5fDVBHInnerDeinterlv_fInterlvTypeSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fDVBHInnerDeinterlv_fIn_x5fdepth","In_depth")));


create_constant_form ("_nDTV_x5fDVBHInnerInterlv_fDVB_x5f2k_x5fmode", 
	"DVB 2k mode",
	0,
	"0",
	"2K");

create_constant_form ("_nDTV_x5fDVBHInnerInterlv_fDVB_x5f8k_x5fmode", 
	"DVB 8k mode",
	0,
	"1",
	"8K");

create_constant_form ("_nDTV_x5fDVBHInnerInterlv_fDVB_x5f4k_x5fmode", 
	"DVB 4k mode",
	0,
	"2",
	"4K");

create_form_set("_nDTV_x5fDVBHInnerInterlv_fModeSet",
	"_nDTV_x5fDVBHInnerInterlv_fDVB_x5f2k_x5fmode",
	"_nDTV_x5fDVBHInnerInterlv_fDVB_x5f8k_x5fmode",
	"_nDTV_x5fDVBHInnerInterlv_fDVB_x5f4k_x5fmode",
	"StdForm");

create_constant_form ("_nDTV_x5fDVBHInnerInterlv_fQPSK", 
	"QPSK",
	0,
	"0",
	"QPSK");

create_constant_form ("_nDTV_x5fDVBHInnerInterlv_fQAM_x5f16", 
	"QAM-16",
	0,
	"1",
	"QAM-16");

create_constant_form ("_nDTV_x5fDVBHInnerInterlv_fQAM_x5f64", 
	"QAM-64",
	0,
	"2",
	"QAM-64");

create_form_set("_nDTV_x5fDVBHInnerInterlv_fMappingModeSet",
	"_nDTV_x5fDVBHInnerInterlv_fQPSK",
	"_nDTV_x5fDVBHInnerInterlv_fQAM_x5f16",
	"_nDTV_x5fDVBHInnerInterlv_fQAM_x5f64",
	"StdForm");

create_constant_form ("_nDTV_x5fDVBHInnerInterlv_fNon_x5fHierarchical", 
	"Non-Hierarchical",
	0,
	"0",
	"Non-Hierarchical");

create_constant_form ("_nDTV_x5fDVBHInnerInterlv_fHierarchical", 
	"Hierarchical",
	0,
	"1",
	"Hierarchical");

create_form_set("_nDTV_x5fDVBHInnerInterlv_fHierarchySet",
	"_nDTV_x5fDVBHInnerInterlv_fNon_x5fHierarchical",
	"_nDTV_x5fDVBHInnerInterlv_fHierarchical",
	"StdForm");

create_constant_form ("_nDTV_x5fDVBHInnerInterlv_fNative", 
	"Native",
	0,
	"0",
	"Native");

create_constant_form ("_nDTV_x5fDVBHInnerInterlv_fIn_x5fdepth", 
	"In-depth",
	0,
	"1",
	"In-depth");

create_form_set("_nDTV_x5fDVBHInnerInterlv_fInterlvTypeSet",
	"_nDTV_x5fDVBHInnerInterlv_fNative",
	"_nDTV_x5fDVBHInnerInterlv_fIn_x5fdepth",
	"StdForm");

create_item ("DTV_DVBHInnerInterlv","DVB-H inner interleaver",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_DVBHInnerInterlv",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fDVBHInnerInterlv_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_DVBHInnerInterlv",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Mode","Transmission mode",
		PARM_INT,
		"_nDTV_x5fDVBHInnerInterlv_fModeSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fDVBHInnerInterlv_fDVB_x5f4k_x5fmode","DVB_4k_mode")),
	create_parm ("MappingMode","Signal constellation and mapping",
		PARM_INT,
		"_nDTV_x5fDVBHInnerInterlv_fMappingModeSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fDVBHInnerInterlv_fQPSK","QPSK")),
	create_parm ("Hierarchy","Hierarchical transmission flag",
		PARM_INT,
		"_nDTV_x5fDVBHInnerInterlv_fHierarchySet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fDVBHInnerInterlv_fNon_x5fHierarchical","Non_Hierarchical")),
	create_parm ("InterlvType","Symbol interleaving type for 2K and 4K mode",
		PARM_INT,
		"_nDTV_x5fDVBHInnerInterlv_fInterlvTypeSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fDVBHInnerInterlv_fIn_x5fdepth","In_depth")));


create_item ("DTV_DVB2DChEstimator","Channel estimator and two-dimension channel interpolator for DVB-T",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_DVB2DChEstimator",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fDVB2DChEstimator_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_DVB2DChEstimator",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Carriers","number of carriers in one OFDM symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1705")),
	create_parm ("Order","FFT points=2^Order",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","11")),
	create_parm ("SPperiod","distance in carriers between nearby scattered pilots",
		PARM_INT | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","12")),
	create_parm ("SPstart","start position of scattered pilots in carriers",
		PARM_INT | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("SPoffset","offset value of scattered pilots in each symbol",
		PARM_INT | PARM_NO_DISPLAY | PARM_NOT_EDITED | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")),
	create_parm ("SPphase","initial phase of scattered pilots",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("GuardInterval","guard interval (fractional FFT size)",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1/4")));


create_constant_form ("_nDTV_x5fDelay_fZero", 
	"Zero",
	0,
	"0",
	"Zero");

create_constant_form ("_nDTV_x5fDelay_fNonZero", 
	"NonZero",
	0,
	"1",
	"NonZero");

create_form_set("_nDTV_x5fDelay_fInitialTypeSet",
	"_nDTV_x5fDelay_fZero",
	"_nDTV_x5fDelay_fNonZero",
	"StdForm");

create_item ("DTV_Delay","Delay including random initialization value",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_Delay",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fDelay_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_Delay",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("N","delay depth",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("InitialType","initial value type",
		PARM_INT,
		"_nDTV_x5fDelay_fInitialTypeSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fDelay_fZero","Zero")));


create_item ("DTV_ConvDecoder","Bit by bit viterbi decoder for DTV convolutional code",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_ConvDecoder",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fConvDecoder_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_ConvDecoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("TrunLen","path memory truncation length (bytes)",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","10")));


create_constant_form ("_nDTV_x5fCIRNorm_fDVB_x5f2k_x5fmode", 
	"DVB 2k mode",
	0,
	"0",
	"DVB 2k mode");

create_constant_form ("_nDTV_x5fCIRNorm_fDVB_x5f8k_x5fmode", 
	"DVB 8k mode",
	0,
	"1",
	"DVB 8k mode");

create_constant_form ("_nDTV_x5fCIRNorm_fDVB_x5f4k_x5fmode", 
	"DVB 4k mode",
	0,
	"2",
	"DVB 4k mode");

create_form_set("_nDTV_x5fCIRNorm_fModeSet",
	"_nDTV_x5fCIRNorm_fDVB_x5f2k_x5fmode",
	"_nDTV_x5fCIRNorm_fDVB_x5f8k_x5fmode",
	"_nDTV_x5fCIRNorm_fDVB_x5f4k_x5fmode",
	"StdForm");

create_constant_form ("_nDTV_x5fCIRNorm_fSoft", 
	"Soft",
	0,
	"0",
	"Soft");

create_constant_form ("_nDTV_x5fCIRNorm_fHard", 
	"Hard",
	0,
	"1",
	"Hard");

create_constant_form ("_nDTV_x5fCIRNorm_fCochannel", 
	"Cochannel",
	0,
	"2",
	"Cochannel");

create_form_set("_nDTV_x5fCIRNorm_fSoftDecisionSet",
	"_nDTV_x5fCIRNorm_fSoft",
	"_nDTV_x5fCIRNorm_fHard",
	"_nDTV_x5fCIRNorm_fCochannel",
	"StdForm");

create_item ("DTV_CIRNorm","Soft output for soft decision decoder",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_CIRNorm",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fCIRNorm_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_CIRNorm",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Mode","transmission mode",
		PARM_INT,
		"_nDTV_x5fCIRNorm_fModeSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fCIRNorm_fDVB_x5f2k_x5fmode","DVB_2k_mode")),
	create_parm ("SoftDecision","soft decision viterbi decoding type",
		PARM_INT,
		"_nDTV_x5fCIRNorm_fSoftDecisionSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fCIRNorm_fSoft","Soft")));


create_item ("DTV_ConvCoder","Convolutional coding the input bits",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_ConvCoder",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fConvCoder_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_ConvCoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);


create_constant_form ("_nDTV_x5fDemapper_fQPSK", 
	"QPSK",
	0,
	"0",
	"QPSK");

create_constant_form ("_nDTV_x5fDemapper_fQAM_x5f16", 
	"QAM-16",
	0,
	"1",
	"QAM-16");

create_constant_form ("_nDTV_x5fDemapper_fQAM_x5f64", 
	"QAM-64",
	0,
	"2",
	"QAM-64");

create_form_set("_nDTV_x5fDemapper_fMappingModeSet",
	"_nDTV_x5fDemapper_fQPSK",
	"_nDTV_x5fDemapper_fQAM_x5f16",
	"_nDTV_x5fDemapper_fQAM_x5f64",
	"StdForm");

create_item ("DTV_Demapper","Soft demapper for uniform and non-uniform QPSK, 16QAM and 64QAM",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_Demapper",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fDemapper_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_Demapper",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("MappingMode","signal constellations and mapping",
		PARM_INT,
		"_nDTV_x5fDemapper_fMappingModeSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fDemapper_fQAM_x5f16","QAM_16")),
	create_parm ("Alpha","non-uniform factor for DVB-T",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));


create_constant_form ("_nDTV_x5fMapper_fQPSK", 
	"QPSK",
	0,
	"0",
	"QPSK");

create_constant_form ("_nDTV_x5fMapper_fQAM_x5f16", 
	"QAM-16",
	0,
	"1",
	"QAM-16");

create_constant_form ("_nDTV_x5fMapper_fQAM_x5f64", 
	"QAM-64",
	0,
	"2",
	"QAM-64");

create_form_set("_nDTV_x5fMapper_fMappingModeSet",
	"_nDTV_x5fMapper_fQPSK",
	"_nDTV_x5fMapper_fQAM_x5f16",
	"_nDTV_x5fMapper_fQAM_x5f64",
	"StdForm");

create_item ("DTV_Mapper","Uniform and non-uniform mapping for DVB-T and ISDB-T",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_Mapper",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fMapper_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_Mapper",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("MappingMode","signal constellations and mapping",
		PARM_INT,
		"_nDTV_x5fMapper_fMappingModeSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fMapper_fQAM_x5f16","QAM_16")),
	create_parm ("Alpha","non-uniform factor for DVB-T",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));


create_item ("DTV_QAM16Coder","Uniform and non-uniform 16-QAM encoder for DVB-T and ISDB-T",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_QAM16Coder",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fQAM16Coder_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_QAM16Coder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Alpha","non-uniform factor for DVB-T",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));


create_constant_form ("_nDTV_x5fPuncDecoder_fDTV_x5f1_x5f2", 
	"DTV 1/2",
	0,
	"0",
	"DTV 1/2");

create_constant_form ("_nDTV_x5fPuncDecoder_fDTV_x5f2_x5f3", 
	"DTV 2/3",
	0,
	"1",
	"DTV 2/3");

create_constant_form ("_nDTV_x5fPuncDecoder_fDTV_x5f3_x5f4", 
	"DTV 3/4",
	0,
	"2",
	"DTV 3/4");

create_constant_form ("_nDTV_x5fPuncDecoder_fDTV_x5f5_x5f6", 
	"DTV 5/6",
	0,
	"3",
	"DTV 5/6");

create_constant_form ("_nDTV_x5fPuncDecoder_fDTV_x5f7_x5f8", 
	"DTV 7/8",
	0,
	"4",
	"DTV 7/8");

create_form_set("_nDTV_x5fPuncDecoder_fPuncConvTypeSet",
	"_nDTV_x5fPuncDecoder_fDTV_x5f1_x5f2",
	"_nDTV_x5fPuncDecoder_fDTV_x5f2_x5f3",
	"_nDTV_x5fPuncDecoder_fDTV_x5f3_x5f4",
	"_nDTV_x5fPuncDecoder_fDTV_x5f5_x5f6",
	"_nDTV_x5fPuncDecoder_fDTV_x5f7_x5f8",
	"StdForm");

create_item ("DTV_PuncDecoder","Puncture decoder",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_PuncDecoder",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fPuncDecoder_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_PuncDecoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PuncConvType","Punctured convolutional code type",
		PARM_INT,
		"_nDTV_x5fPuncDecoder_fPuncConvTypeSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fPuncDecoder_fDTV_x5f1_x5f2","DTV_1_2")));


create_constant_form ("_nDTV_x5fPuncCoder_fDTV_x5f1_x5f2", 
	"DTV 1/2",
	0,
	"0",
	"DTV 1/2");

create_constant_form ("_nDTV_x5fPuncCoder_fDTV_x5f2_x5f3", 
	"DTV 2/3",
	0,
	"1",
	"DTV 2/3");

create_constant_form ("_nDTV_x5fPuncCoder_fDTV_x5f3_x5f4", 
	"DTV 3/4",
	0,
	"2",
	"DTV 3/4");

create_constant_form ("_nDTV_x5fPuncCoder_fDTV_x5f5_x5f6", 
	"DTV 5/6",
	0,
	"3",
	"DTV 5/6");

create_constant_form ("_nDTV_x5fPuncCoder_fDTV_x5f7_x5f8", 
	"DTV 7/8",
	0,
	"4",
	"DTV 7/8");

create_form_set("_nDTV_x5fPuncCoder_fPuncConvTypeSet",
	"_nDTV_x5fPuncCoder_fDTV_x5f1_x5f2",
	"_nDTV_x5fPuncCoder_fDTV_x5f2_x5f3",
	"_nDTV_x5fPuncCoder_fDTV_x5f3_x5f4",
	"_nDTV_x5fPuncCoder_fDTV_x5f5_x5f6",
	"_nDTV_x5fPuncCoder_fDTV_x5f7_x5f8",
	"StdForm");

create_item ("DTV_PuncCoder","Puncture coder",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_PuncCoder",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fPuncCoder_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_PuncCoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PuncConvType","punctured convolutional code type",
		PARM_INT,
		"_nDTV_x5fPuncCoder_fPuncConvTypeSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fPuncCoder_fDTV_x5f1_x5f2","DTV_1_2")));


create_item ("DTV_PNreset","PN code source with reset input",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_PNreset",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fPNreset_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_PNreset",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Polynomial","generator polynomial (X^0+X^1+...+X^M)",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"1 0 0 0 0 0 0 0 0 0 0 0 0 0 1 1\"")),
	create_parm ("Initial","initial and reset value in registers",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"1 0 0 1 0 1 0 1 0 0 0 0 0 0 0\"")),
	create_parm ("SignalPoint","output register after each shift",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")));


create_constant_form ("_nDTV_x5fPackTMCC_fW0", 
	"W0",
	0,
	"0",
	"W0");

create_constant_form ("_nDTV_x5fPackTMCC_fW1", 
	"W1",
	0,
	"1",
	"W1");

create_form_set("_nDTV_x5fPackTMCC_fSynchWordSet",
	"_nDTV_x5fPackTMCC_fW0",
	"_nDTV_x5fPackTMCC_fW1",
	"StdForm");

create_constant_form ("_nDTV_x5fPackTMCC_fDifferential", 
	"Differential",
	0,
	"0",
	"Differential");

create_constant_form ("_nDTV_x5fPackTMCC_fCoherent", 
	"Coherent",
	0,
	"1",
	"Coherent");

create_form_set("_nDTV_x5fPackTMCC_fSegDescSet",
	"_nDTV_x5fPackTMCC_fDifferential",
	"_nDTV_x5fPackTMCC_fCoherent",
	"StdForm");

create_item ("DTV_PackTMCC","Complete TMCC bits (204 bits)",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_PackTMCC",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fPackTMCC_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_PackTMCC",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Length","length of TMCC transmission format",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","204")),
	create_parm ("InformLength","length of TMCC information after CDSC",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","184")),
	create_parm ("InitiBit","initialization bit for the DBPSK modulation (1 bit)",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm"," 1 ")),
	create_parm ("SynchWord","synchronization word (16 bits)",
		PARM_INT,
		"_nDTV_x5fPackTMCC_fSynchWordSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fPackTMCC_fW0","W0")),
	create_parm ("SegDesc","segment descriptor (3 bits)",
		PARM_INT,
		"_nDTV_x5fPackTMCC_fSegDescSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fPackTMCC_fDifferential","Differential")));


create_item ("DTV_OFDMEqualizer","OFDM equalizer by the channel estimation",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_OFDMEqualizer",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fOFDMEqualizer_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_OFDMEqualizer",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Carriers","number of active carriers in one OFDM symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1705")));


create_item ("DTV_MuxDiffSegs","ISDB-T multiplex differential segments",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_MuxDiffSegs",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fMuxDiffSegs_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_MuxDiffSegs",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Carriers","number of carriers in one segment",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","432")),
	create_parm ("Segments","number of segments",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("Start_Seg","initial number of segment (0 to Segments-1)",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")));


create_item ("DTV_MuxCohSegs","ISDB-T multiplex coherent segments",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_MuxCohSegs",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fMuxCohSegs_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_MuxCohSegs",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Carriers","number of carriers in one segment",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","432")),
	create_parm ("Segments","number of segments",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("Start_Seg","initial number of segment (0 to Segments-1)",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("SPnumber","number of scattered pilots in each segment",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","36")),
	create_parm ("SPperiod","distance in carriers between nearby scattered pilots",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","12")),
	create_parm ("SPstart","start position of scattered pilots in carriers",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("SPoffset","offset value of SPstart in each symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")),
	create_parm ("SPphase","initial phase of scattered pilots",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")));


create_item ("DTV_MLEstimator","ML Estimation and Synchronization of OFDM Symbol",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_MLEstimator",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fMLEstimator_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_MLEstimator",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Length","length of OFDM symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8192")),
	create_parm ("Guard","length of guard interval",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","256")),
	create_parm ("Ru","scale of the square term in ML algorithm",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.95")));


create_item ("DTV_LoadIFFTBuff","Layer data stream loader into IFFT buffer with transmission spectrum adjustment for ISDB-T",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_LoadIFFTBuff",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fLoadIFFTBuff_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_LoadIFFTBuff",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Carriers","number of carriers in one segment",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","432")),
	create_parm ("Segments","number of segments",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","13")),
	create_parm ("InSequence","segment sequence at input",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"0 1 2 3 4 5 6 7 8 9 10 11 12\"")),
	create_parm ("OutSequence","segment sequence at output",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"11 9 7 5 3 1 0 2 4 6 8 10 12\"")),
	create_parm ("Order","IFFT points=2^Order",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","13")));


create_item ("DTV_LoadFFTBuff","Received data loader from channel to FFT buffer",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_LoadFFTBuff",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fLoadFFTBuff_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_LoadFFTBuff",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("InLength","length of input sequence",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","2048")),
	create_parm ("Order","FFT points=2^Order",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","11")),
	create_parm ("MinDelay","min delay from 0 to InLength-1",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("MaxDelay","max delay from 0 to InLength-1",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","2047")),
	create_parm ("Offset","offset from ML peak to symbol start point",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","256")));


create_item ("DTV_LFSRCoder","LFSR cyclic coder",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_LFSRCoder",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fLFSRCoder_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_LFSRCoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Code","length of code bits",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","184")),
	create_parm ("Info","length of information bits",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","102")),
	create_parm ("Polynomial","generation polynomial's suffix (X^P[0]+X^P[1]+...X^P[m])",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"0 4 10 18 22 24 34 36 40 48 52 56 66 67 71 76 77 82\"")));


create_constant_form ("_nDTV_x5fInterSegInterlv_fInterleave", 
	"Interleave",
	0,
	"0",
	"Interleave");

create_constant_form ("_nDTV_x5fInterSegInterlv_fDeinterleave", 
	"Deinterleave",
	0,
	"1",
	"Deinterleave");

create_form_set("_nDTV_x5fInterSegInterlv_fOptionSet",
	"_nDTV_x5fInterSegInterlv_fInterleave",
	"_nDTV_x5fInterSegInterlv_fDeinterleave",
	"StdForm");

create_item ("DTV_InterSegInterlv","Inter-segment interleaving of OFDM symbols",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_InterSegInterlv",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fInterSegInterlv_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_InterSegInterlv",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Segments","depth of block interleaver",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("Carriers","width of block interleaver",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","384")),
	create_parm ("Option","operating option: Interleaving, Deinterleaving",
		PARM_INT,
		"_nDTV_x5fInterSegInterlv_fOptionSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fInterSegInterlv_fInterleave","Interleave")));


create_constant_form ("_nDTV_x5fInterlvInt_fConst", 
	"Const",
	0,
	"0",
	"Const");

create_constant_form ("_nDTV_x5fInterlvInt_fRandom", 
	"Random",
	0,
	"1",
	"Random");

create_form_set("_nDTV_x5fInterlvInt_fInitialTypeSet",
	"_nDTV_x5fInterlvInt_fConst",
	"_nDTV_x5fInterlvInt_fRandom",
	"StdForm");

create_item ("DTV_InterlvInt","Interleaver and de-interleaver for integer",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_InterlvInt",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fInterlvInt_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_InterlvInt",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Delays","delay of each branch",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"0 1 2\"")),
	create_parm ("Initial_value","initial value in interleaver delay FIFOs",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("Multiplier","multiple branch number",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("InitialType","interleaver delay FIFOs initial value type",
		PARM_INT,
		"_nDTV_x5fInterlvInt_fInitialTypeSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fInterlvInt_fConst","Const")));


create_item ("DTV_InterlvFloat","Interleaver and de-interleaver for float",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_InterlvFloat",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fInterlvFloat_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_InterlvFloat",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Delays","delay of each branch",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"0 1 2 3\"")),
	create_parm ("Initial_value","initial value in interleaver delay FIFOs",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0")),
	create_parm ("Multiplier","multiple branch number",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));


create_item ("DTV_InsertGuard","Guard interval inserter",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_InsertGuard",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fInsertGuard_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_InsertGuard",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Length","length of input symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8192")),
	create_parm ("Guard","length of guard interval",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","512")));


create_item ("DTV_DVBTPSMod","Transmission parameter signal differential modulation",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_DVBTPSMod",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fDVBTPSMod_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_DVBTPSMod",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Length","length of TPS bits per OFDM frame",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","68")));


create_item ("DTV_DVBTPSDemod","Transmission parameter signal differential demodulation",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_DVBTPSDemod",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fDVBTPSDemod_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_DVBTPSDemod",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Length","length of TPS bits per OFDM frame",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","68")));


create_constant_form ("_nDTV_x5fDVBTPS_fW0", 
	"W0",
	0,
	"0",
	"W0");

create_constant_form ("_nDTV_x5fDVBTPS_fW1", 
	"W1",
	0,
	"1",
	"W1");

create_form_set("_nDTV_x5fDVBTPS_fSyncSet",
	"_nDTV_x5fDVBTPS_fW0",
	"_nDTV_x5fDVBTPS_fW1",
	"StdForm");

create_constant_form ("_nDTV_x5fDVBTPS_fF1", 
	"F1",
	0,
	"0",
	"F1");

create_constant_form ("_nDTV_x5fDVBTPS_fF2", 
	"F2",
	0,
	"1",
	"F2");

create_constant_form ("_nDTV_x5fDVBTPS_fF3", 
	"F3",
	0,
	"2",
	"F3");

create_constant_form ("_nDTV_x5fDVBTPS_fF4", 
	"F4",
	0,
	"3",
	"F4");

create_form_set("_nDTV_x5fDVBTPS_fFrameNumberSet",
	"_nDTV_x5fDVBTPS_fF1",
	"_nDTV_x5fDVBTPS_fF2",
	"_nDTV_x5fDVBTPS_fF3",
	"_nDTV_x5fDVBTPS_fF4",
	"StdForm");

create_constant_form ("_nDTV_x5fDVBTPS_fQPSK", 
	"QPSK",
	0,
	"0",
	"QPSK");

create_constant_form ("_nDTV_x5fDVBTPS_fQAM_x5f16", 
	"QAM 16",
	0,
	"1",
	"QAM 16");

create_constant_form ("_nDTV_x5fDVBTPS_fQAM_x5f64", 
	"QAM 64",
	0,
	"2",
	"QAM 64");

create_constant_form ("_nDTV_x5fDVBTPS_freserved_x5fM", 
	"reserved M",
	0,
	"3",
	"reserved M");

create_form_set("_nDTV_x5fDVBTPS_fConstellationSet",
	"_nDTV_x5fDVBTPS_fQPSK",
	"_nDTV_x5fDVBTPS_fQAM_x5f16",
	"_nDTV_x5fDVBTPS_fQAM_x5f64",
	"_nDTV_x5fDVBTPS_freserved_x5fM",
	"StdForm");

create_constant_form ("_nDTV_x5fDVBTPS_fNon_x5fhierarchical", 
	"Non hierarchical",
	0,
	"0",
	"Non hierarchical");

create_constant_form ("_nDTV_x5fDVBTPS_falpha_x5f1", 
	"alpha 1",
	0,
	"1",
	"alpha 1");

create_constant_form ("_nDTV_x5fDVBTPS_falpha_x5f2", 
	"alpha 2",
	0,
	"2",
	"alpha 2");

create_constant_form ("_nDTV_x5fDVBTPS_falpha_x5f4", 
	"alpha 4",
	0,
	"3",
	"alpha 4");

create_constant_form ("_nDTV_x5fDVBTPS_freserved_x5fH1", 
	"reserved H1",
	0,
	"4",
	"reserved H1");

create_constant_form ("_nDTV_x5fDVBTPS_freserved_x5fH2", 
	"reserved H2",
	0,
	"5",
	"reserved H2");

create_constant_form ("_nDTV_x5fDVBTPS_freserved_x5fH3", 
	"reserved H3",
	0,
	"6",
	"reserved H3");

create_constant_form ("_nDTV_x5fDVBTPS_freserved_x5fH4", 
	"reserved H4",
	0,
	"7",
	"reserved H4");

create_form_set("_nDTV_x5fDVBTPS_fHierarchyInformSet",
	"_nDTV_x5fDVBTPS_fNon_x5fhierarchical",
	"_nDTV_x5fDVBTPS_falpha_x5f1",
	"_nDTV_x5fDVBTPS_falpha_x5f2",
	"_nDTV_x5fDVBTPS_falpha_x5f4",
	"_nDTV_x5fDVBTPS_freserved_x5fH1",
	"_nDTV_x5fDVBTPS_freserved_x5fH2",
	"_nDTV_x5fDVBTPS_freserved_x5fH3",
	"_nDTV_x5fDVBTPS_freserved_x5fH4",
	"StdForm");

create_constant_form ("_nDTV_x5fDVBTPS_fHP_x5f1_x5f2", 
	"HP 1/2",
	0,
	"0",
	"HP 1/2");

create_constant_form ("_nDTV_x5fDVBTPS_fHP_x5f2_x5f3", 
	"HP 2/3",
	0,
	"1",
	"HP 2/3");

create_constant_form ("_nDTV_x5fDVBTPS_fHP_x5f3_x5f4", 
	"HP 3/4",
	0,
	"2",
	"HP 3/4");

create_constant_form ("_nDTV_x5fDVBTPS_fHP_x5f5_x5f6", 
	"HP 5/6",
	0,
	"3",
	"HP 5/6");

create_constant_form ("_nDTV_x5fDVBTPS_fHP_x5f7_x5f8", 
	"HP 7/8",
	0,
	"4",
	"HP 7/8");

create_constant_form ("_nDTV_x5fDVBTPS_fReserved_x5fC1_x5fHP", 
	"Reserved C1 HP",
	0,
	"5",
	"Reserved C1 HP");

create_constant_form ("_nDTV_x5fDVBTPS_fReserved_x5fC2_x5fHP", 
	"Reserved C2 HP",
	0,
	"6",
	"Reserved C2 HP");

create_constant_form ("_nDTV_x5fDVBTPS_fReserved_x5fC3_x5fHP", 
	"Reserved C3 HP",
	0,
	"7",
	"Reserved C3 HP");

create_form_set("_nDTV_x5fDVBTPS_fCodeRateHPSet",
	"_nDTV_x5fDVBTPS_fHP_x5f1_x5f2",
	"_nDTV_x5fDVBTPS_fHP_x5f2_x5f3",
	"_nDTV_x5fDVBTPS_fHP_x5f3_x5f4",
	"_nDTV_x5fDVBTPS_fHP_x5f5_x5f6",
	"_nDTV_x5fDVBTPS_fHP_x5f7_x5f8",
	"_nDTV_x5fDVBTPS_fReserved_x5fC1_x5fHP",
	"_nDTV_x5fDVBTPS_fReserved_x5fC2_x5fHP",
	"_nDTV_x5fDVBTPS_fReserved_x5fC3_x5fHP",
	"StdForm");

create_constant_form ("_nDTV_x5fDVBTPS_fLP_x5f1_x5f2", 
	"LP 1/2",
	0,
	"0",
	"LP 1/2");

create_constant_form ("_nDTV_x5fDVBTPS_fLP_x5f2_x5f3", 
	"LP 2/3",
	0,
	"1",
	"LP 2/3");

create_constant_form ("_nDTV_x5fDVBTPS_fLP_x5f3_x5f4", 
	"LP 3/4",
	0,
	"2",
	"LP 3/4");

create_constant_form ("_nDTV_x5fDVBTPS_fLP_x5f5_x5f6", 
	"LP 5/6",
	0,
	"3",
	"LP 5/6");

create_constant_form ("_nDTV_x5fDVBTPS_fLP_x5f7_x5f8", 
	"LP 7/8",
	0,
	"4",
	"LP 7/8");

create_constant_form ("_nDTV_x5fDVBTPS_fReserved_x5fC1_x5fLP", 
	"Reserved C1 LP",
	0,
	"5",
	"Reserved C1 LP");

create_constant_form ("_nDTV_x5fDVBTPS_fReserved_x5fC2_x5fLP", 
	"Reserved C2 LP",
	0,
	"6",
	"Reserved C2 LP");

create_constant_form ("_nDTV_x5fDVBTPS_fReserved_x5fC3_x5fLP", 
	"Reserved C3 LP",
	0,
	"7",
	"Reserved C3 LP");

create_form_set("_nDTV_x5fDVBTPS_fCodeRateLPSet",
	"_nDTV_x5fDVBTPS_fLP_x5f1_x5f2",
	"_nDTV_x5fDVBTPS_fLP_x5f2_x5f3",
	"_nDTV_x5fDVBTPS_fLP_x5f3_x5f4",
	"_nDTV_x5fDVBTPS_fLP_x5f5_x5f6",
	"_nDTV_x5fDVBTPS_fLP_x5f7_x5f8",
	"_nDTV_x5fDVBTPS_fReserved_x5fC1_x5fLP",
	"_nDTV_x5fDVBTPS_fReserved_x5fC2_x5fLP",
	"_nDTV_x5fDVBTPS_fReserved_x5fC3_x5fLP",
	"StdForm");

create_constant_form ("_nDTV_x5fDVBTPS_fG_x5f1_x5f32", 
	"G 1/32",
	0,
	"0",
	"G 1/32");

create_constant_form ("_nDTV_x5fDVBTPS_fG_x5f1_x5f16", 
	"G 1/16",
	0,
	"1",
	"G 1/16");

create_constant_form ("_nDTV_x5fDVBTPS_fG_x5f1_x5f8", 
	"G 1/8",
	0,
	"2",
	"G 1/8");

create_constant_form ("_nDTV_x5fDVBTPS_fG_x5f1_x5f4", 
	"G 1/4",
	0,
	"3",
	"G 1/4");

create_form_set("_nDTV_x5fDVBTPS_fGuardIntervalSet",
	"_nDTV_x5fDVBTPS_fG_x5f1_x5f32",
	"_nDTV_x5fDVBTPS_fG_x5f1_x5f16",
	"_nDTV_x5fDVBTPS_fG_x5f1_x5f8",
	"_nDTV_x5fDVBTPS_fG_x5f1_x5f4",
	"StdForm");

create_constant_form ("_nDTV_x5fDVBTPS_fmode_x5f2k", 
	"mode 2k",
	0,
	"0",
	"mode 2k");

create_constant_form ("_nDTV_x5fDVBTPS_fmode_x5f8k", 
	"mode 8k",
	0,
	"1",
	"mode 8k");

create_constant_form ("_nDTV_x5fDVBTPS_freserved_x5fT1", 
	"reserved T1",
	0,
	"2",
	"reserved T1");

create_constant_form ("_nDTV_x5fDVBTPS_freserved_x5fT2", 
	"reserved T2",
	0,
	"3",
	"reserved T2");

create_form_set("_nDTV_x5fDVBTPS_fTransmissionModeSet",
	"_nDTV_x5fDVBTPS_fmode_x5f2k",
	"_nDTV_x5fDVBTPS_fmode_x5f8k",
	"_nDTV_x5fDVBTPS_freserved_x5fT1",
	"_nDTV_x5fDVBTPS_freserved_x5fT2",
	"StdForm");

create_item ("DTV_DVBTPS","Transmission parameter signal information bits",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_DVBTPS",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fDVBTPS_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_DVBTPS",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Length","length of TPS information bits",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","54")),
	create_parm ("InitiBit","initialization bit for DBPSK modulation (1 bit)",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm"," 1 ")),
	create_parm ("Sync","synchronization word (16 bits)",
		PARM_INT,
		"_nDTV_x5fDVBTPS_fSyncSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fDVBTPS_fW0","W0")),
	create_parm ("LengthIndicator","TPS length indicator (6 bits)",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"0 1 0 1 1 1\"")),
	create_parm ("FrameNumber","frame number in one super frame (2 bits)",
		PARM_INT,
		"_nDTV_x5fDVBTPS_fFrameNumberSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fDVBTPS_fF1","F1")),
	create_parm ("Constellation","modulation scheme in DVB-T (2bits)",
		PARM_INT,
		"_nDTV_x5fDVBTPS_fConstellationSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fDVBTPS_fQPSK","QPSK")),
	create_parm ("HierarchyInform","signaling format for alpha values (3 bits)",
		PARM_INT,
		"_nDTV_x5fDVBTPS_fHierarchyInformSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fDVBTPS_fNon_x5fhierarchical","Non_hierarchical")),
	create_parm ("CodeRateHP","high priority stream current code rate (3 bits)",
		PARM_INT,
		"_nDTV_x5fDVBTPS_fCodeRateHPSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fDVBTPS_fHP_x5f1_x5f2","HP_1_2")),
	create_parm ("CodeRateLP","low priority stream current code rate (3 bits)",
		PARM_INT,
		"_nDTV_x5fDVBTPS_fCodeRateLPSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fDVBTPS_fLP_x5f1_x5f2","LP_1_2")),
	create_parm ("GuardInterval","guard interval values (2 bits)",
		PARM_INT,
		"_nDTV_x5fDVBTPS_fGuardIntervalSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fDVBTPS_fG_x5f1_x5f32","G_1_32")),
	create_parm ("TransmissionMode","transmission mode (2 bits)",
		PARM_INT,
		"_nDTV_x5fDVBTPS_fTransmissionModeSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fDVBTPS_fmode_x5f2k","mode_2k")),
	create_parm ("FutureUse","reserved for future use (currently, all 14 bits are set to 0)",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\" 0 0 0 0 0 0 0 0 0 0 0 0 0 0\"")));


create_constant_form ("_nDTV_x5fDVBSymInterlvCx_fDVB_x5f2k_x5fmode", 
	"DVB 2k mode",
	0,
	"0",
	"DVB 2k mode");

create_constant_form ("_nDTV_x5fDVBSymInterlvCx_fDVB_x5f8k_x5fmode", 
	"DVB 8k mode",
	0,
	"1",
	"DVB 8k mode");

create_form_set("_nDTV_x5fDVBSymInterlvCx_fModeSet",
	"_nDTV_x5fDVBSymInterlvCx_fDVB_x5f2k_x5fmode",
	"_nDTV_x5fDVBSymInterlvCx_fDVB_x5f8k_x5fmode",
	"StdForm");

create_constant_form ("_nDTV_x5fDVBSymInterlvCx_fInterleaving", 
	"Interleaving",
	0,
	"0",
	"Interleaving");

create_constant_form ("_nDTV_x5fDVBSymInterlvCx_fDe_x5finterleaving", 
	"De-interleaving",
	0,
	"1",
	"De-interleaving");

create_form_set("_nDTV_x5fDVBSymInterlvCx_fOptionSet",
	"_nDTV_x5fDVBSymInterlvCx_fInterleaving",
	"_nDTV_x5fDVBSymInterlvCx_fDe_x5finterleaving",
	"StdForm");

create_item ("DTV_DVBSymInterlvCx","Symbol interleaver",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_DVBSymInterlvCx",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fDVBSymInterlvCx_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_DVBSymInterlvCx",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Mode","DVB OFDM mode",
		PARM_INT,
		"_nDTV_x5fDVBSymInterlvCx_fModeSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fDVBSymInterlvCx_fDVB_x5f2k_x5fmode","DVB_2k_mode")),
	create_parm ("Option","operation option",
		PARM_INT,
		"_nDTV_x5fDVBSymInterlvCx_fOptionSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fDVBSymInterlvCx_fInterleaving","Interleaving")));


create_constant_form ("_nDTV_x5fDVBSymInterlv6b_fDVB_x5f2k_x5fmode", 
	"DVB 2k mode",
	0,
	"0",
	"DVB 2k mode");

create_constant_form ("_nDTV_x5fDVBSymInterlv6b_fDVB_x5f8k_x5fmode", 
	"DVB 8k mode",
	0,
	"1",
	"DVB 8k mode");

create_form_set("_nDTV_x5fDVBSymInterlv6b_fModeSet",
	"_nDTV_x5fDVBSymInterlv6b_fDVB_x5f2k_x5fmode",
	"_nDTV_x5fDVBSymInterlv6b_fDVB_x5f8k_x5fmode",
	"StdForm");

create_item ("DTV_DVBSymInterlv6b","Symbol interleaver with 6 branches",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_DVBSymInterlv6b",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fDVBSymInterlv6b_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_DVBSymInterlv6b",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Mode","DVB OFDM mode",
		PARM_INT,
		"_nDTV_x5fDVBSymInterlv6b_fModeSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fDVBSymInterlv6b_fDVB_x5f2k_x5fmode","DVB_2k_mode")));


create_constant_form ("_nDTV_x5fDVBSymInterlv4b_fDVB_x5f2k_x5fmode", 
	"DVB 2k mode",
	0,
	"0",
	"DVB 2k mode");

create_constant_form ("_nDTV_x5fDVBSymInterlv4b_fDVB_x5f8k_x5fmode", 
	"DVB 8k mode",
	0,
	"1",
	"DVB 8k mode");

create_form_set("_nDTV_x5fDVBSymInterlv4b_fModeSet",
	"_nDTV_x5fDVBSymInterlv4b_fDVB_x5f2k_x5fmode",
	"_nDTV_x5fDVBSymInterlv4b_fDVB_x5f8k_x5fmode",
	"StdForm");

create_item ("DTV_DVBSymInterlv4b","Symbol interleaver with 4 branches",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_DVBSymInterlv4b",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fDVBSymInterlv4b_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_DVBSymInterlv4b",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Mode","DVB OFDM mode",
		PARM_INT,
		"_nDTV_x5fDVBSymInterlv4b_fModeSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fDVBSymInterlv4b_fDVB_x5f2k_x5fmode","DVB_2k_mode")));


create_constant_form ("_nDTV_x5fDVBSymInterlv2b_fDVB_x5f2k_x5fmode", 
	"DVB 2k mode",
	0,
	"0",
	"DVB 2k mode");

create_constant_form ("_nDTV_x5fDVBSymInterlv2b_fDVB_x5f8k_x5fmode", 
	"DVB 8k mode",
	0,
	"1",
	"DVB 8k mode");

create_form_set("_nDTV_x5fDVBSymInterlv2b_fModeSet",
	"_nDTV_x5fDVBSymInterlv2b_fDVB_x5f2k_x5fmode",
	"_nDTV_x5fDVBSymInterlv2b_fDVB_x5f8k_x5fmode",
	"StdForm");

create_item ("DTV_DVBSymInterlv2b","Symbol interleaver with 2 branches",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_DVBSymInterlv2b",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fDVBSymInterlv2b_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_DVBSymInterlv2b",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Mode","DVB OFDM mode",
		PARM_INT,
		"_nDTV_x5fDVBSymInterlv2b_fModeSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fDVBSymInterlv2b_fDVB_x5f2k_x5fmode","DVB_2k_mode")));


create_constant_form ("_nDTV_x5fDVBSymDeinterlv6b_fDVB_x5f2k_x5fmode", 
	"DVB 2k mode",
	0,
	"0",
	"DVB 2k mode");

create_constant_form ("_nDTV_x5fDVBSymDeinterlv6b_fDVB_x5f8k_x5fmode", 
	"DVB 8k mode",
	0,
	"1",
	"DVB 8k mode");

create_form_set("_nDTV_x5fDVBSymDeinterlv6b_fModeSet",
	"_nDTV_x5fDVBSymDeinterlv6b_fDVB_x5f2k_x5fmode",
	"_nDTV_x5fDVBSymDeinterlv6b_fDVB_x5f8k_x5fmode",
	"StdForm");

create_item ("DTV_DVBSymDeinterlv6b","Symbol de-interleaver with 6 branches",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_DVBSymDeinterlv6b",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fDVBSymDeinterlv6b_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_DVBSymDeinterlv6b",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Mode","DVB OFDM mode",
		PARM_INT,
		"_nDTV_x5fDVBSymDeinterlv6b_fModeSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fDVBSymDeinterlv6b_fDVB_x5f2k_x5fmode","DVB_2k_mode")));


create_constant_form ("_nDTV_x5fDVBSymDeinterlv4b_fDVB_x5f2k_x5fmode", 
	"DVB 2k mode",
	0,
	"0",
	"DVB 2k mode");

create_constant_form ("_nDTV_x5fDVBSymDeinterlv4b_fDVB_x5f8k_x5fmode", 
	"DVB 8k mode",
	0,
	"1",
	"DVB 8k mode");

create_form_set("_nDTV_x5fDVBSymDeinterlv4b_fModeSet",
	"_nDTV_x5fDVBSymDeinterlv4b_fDVB_x5f2k_x5fmode",
	"_nDTV_x5fDVBSymDeinterlv4b_fDVB_x5f8k_x5fmode",
	"StdForm");

create_item ("DTV_DVBSymDeinterlv4b","Symbol de-interleaver with 4 branches",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_DVBSymDeinterlv4b",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fDVBSymDeinterlv4b_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_DVBSymDeinterlv4b",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Mode","DVB OFDM mode",
		PARM_INT,
		"_nDTV_x5fDVBSymDeinterlv4b_fModeSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fDVBSymDeinterlv4b_fDVB_x5f2k_x5fmode","DVB_2k_mode")));


create_constant_form ("_nDTV_x5fDVBSymDeinterlv2b_fDVB_x5f2k_x5fmode", 
	"DVB 2k mode",
	0,
	"0",
	"DVB 2k mode");

create_constant_form ("_nDTV_x5fDVBSymDeinterlv2b_fDVB_x5f8k_x5fmode", 
	"DVB 8k mode",
	0,
	"1",
	"DVB 8k mode");

create_form_set("_nDTV_x5fDVBSymDeinterlv2b_fModeSet",
	"_nDTV_x5fDVBSymDeinterlv2b_fDVB_x5f2k_x5fmode",
	"_nDTV_x5fDVBSymDeinterlv2b_fDVB_x5f8k_x5fmode",
	"StdForm");

create_item ("DTV_DVBSymDeinterlv2b","Symbol de-interleaver with 2 branches",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_DVBSymDeinterlv2b",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fDVBSymDeinterlv2b_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_DVBSymDeinterlv2b",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Mode","DVB OFDM mode",
		PARM_INT,
		"_nDTV_x5fDVBSymDeinterlv2b_fModeSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fDVBSymDeinterlv2b_fDVB_x5f2k_x5fmode","DVB_2k_mode")));


create_item ("DTV_DVBMuxOFDMSym","OFDM symbol multiplexer for DVB-T",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_DVBMuxOFDMSym",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fDVBMuxOFDMSym_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_DVBMuxOFDMSym",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Carriers","number of carriers in one OFDM symbol(1705,3409 or 6817)",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1705")),
	create_parm ("Data","number of input data in one OFDM symbol(1512,3024 or 6048)",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1512")),
	create_parm ("SPperiod","distance in carriers between nearby scattered pilots",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","12")),
	create_parm ("SPstart","start position of scattered pilots in carriers",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("SPoffset","offset value of SPstart in each symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")));


create_item ("DTV_DVBLoadIFFTBuff","Data stream loader into IFFT buffer for DVB-T",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_DVBLoadIFFTBuff",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fDVBLoadIFFTBuff_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_DVBLoadIFFTBuff",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Carriers","number of carriers in one OFDM symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1705")),
	create_parm ("Order","IFFT points=2^Order",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","13")));


create_item ("DTV_DVBDemuxOFDMSym","Data and TPS demux for DVB-T symbol",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_DVBDemuxOFDMSym",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fDVBDemuxOFDMSym_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_DVBDemuxOFDMSym",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Carriers","number of carriers in one OFDM symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1705")),
	create_parm ("Data","number of input data in one OFDM symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1512")),
	create_parm ("SPperiod","distance in carriers between nearby scattered pilots",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","12")),
	create_parm ("SPstart","start position of scattered pilots in carriers",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("SPoffset","offset value of scattered pilots in each symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")),
	create_parm ("SPphase","initial phase of scattered pilots",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")));


create_item ("DTV_DVBChEstimator","Linear channel estimator and channel interpolator for DVB-T",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_DVBChEstimator",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fDVBChEstimator_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_DVBChEstimator",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Carriers","number of carriers in one OFDM symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1705")),
	create_parm ("Order","FFT points=2^Order",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","11")),
	create_parm ("SPperiod","distance in carriers between nearby scattered pilots",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","12")),
	create_parm ("SPstart","start position of scattered pilots in carriers",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("SPoffset","offset value of scattered pilots in each symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")),
	create_parm ("SPphase","initial phase of scattered pilots",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")));


create_constant_form ("_nDTV_x5fDVBChannel_fFixed_x5fReception_x5fF1", 
	"Fixed Reception F1",
	0,
	"0",
	"Fixed Reception F1");

create_constant_form ("_nDTV_x5fDVBChannel_fPortable_x5fReception_x5fP1", 
	"Portable Reception P1",
	0,
	"1",
	"Portable Reception P1");

create_form_set("_nDTV_x5fDVBChannel_fChannelModelSet",
	"_nDTV_x5fDVBChannel_fFixed_x5fReception_x5fF1",
	"_nDTV_x5fDVBChannel_fPortable_x5fReception_x5fP1",
	"StdForm");

create_item ("DTV_DVBChannel","DVB channel model for transmission",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_DVBChannel",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fDVBChannel_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_DVBChannel",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("ChannelModel","test path environment",
		PARM_INT,
		"_nDTV_x5fDVBChannel_fChannelModelSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fDVBChannel_fFixed_x5fReception_x5fF1","Fixed_Reception_F1")),
	create_parm ("SampleTime","time interval per symbol",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","0.123046875e-6")));


create_constant_form ("_nDTV_x5fDVBBitBlockInterlv_fInterleaving", 
	"Interleaving",
	0,
	"0",
	"Interleaving");

create_constant_form ("_nDTV_x5fDVBBitBlockInterlv_fDe_x5finterleaving", 
	"De-interleaving",
	0,
	"1",
	"De-interleaving");

create_form_set("_nDTV_x5fDVBBitBlockInterlv_fOptionSet",
	"_nDTV_x5fDVBBitBlockInterlv_fInterleaving",
	"_nDTV_x5fDVBBitBlockInterlv_fDe_x5finterleaving",
	"StdForm");

create_item ("DTV_DVBBitBlockInterlv","DVB bit interleaver",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_DVBBitBlockInterlv",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fDVBBitBlockInterlv_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_DVBBitBlockInterlv",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("BlockSize","size of bit block to be interleaved",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","126")),
	create_parm ("Offset","offset of permutation in interleaver",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("Option","operation option",
		PARM_INT,
		"_nDTV_x5fDVBBitBlockInterlv_fOptionSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fDVBBitBlockInterlv_fInterleaving","Interleaving")));


create_constant_form ("_nDTV_x5fDQPSKDecoder_fNO", 
	"NO ",
	0,
	"0",
	"NO ");

create_constant_form ("_nDTV_x5fDQPSKDecoder_fYES", 
	"YES",
	0,
	"1",
	"YES");

create_form_set("_nDTV_x5fDQPSKDecoder_fRenormSet",
	"_nDTV_x5fDQPSKDecoder_fNO",
	"_nDTV_x5fDQPSKDecoder_fYES",
	"StdForm");

create_item ("DTV_DQPSKDecoder","DQPSK decoder with soft decision",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_DQPSKDecoder",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fDQPSKDecoder_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_DQPSKDecoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Delay","delay of feedback (as length of register)",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","384")),
	create_parm ("Renorm","option to re-normalize reference phase (set to the nearest symbol point)",
		PARM_INT,
		"_nDTV_x5fDQPSKDecoder_fRenormSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fDQPSKDecoder_fNO","NO")));


create_item ("DTV_DQPSKCoder","DQPSK baseband modulator",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_DQPSKCoder",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fDQPSKCoder_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_DQPSKCoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Delay","delay of feedback (as length of register)",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","384")));


create_item ("DTV_DistCtrl3","3-output distributor with output particle number control",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_DistCtrl3",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fDistCtrl3_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_DistCtrl3",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("NumOutput1","number of particles directed to output 1",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("NumOutput2","number of particles directed to output 2",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("NumOutput3","number of particles directed to output 3",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));


create_item ("DTV_DistCtrl2","2-output distributor with output particle number control",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_DistCtrl2",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fDistCtrl2_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_DistCtrl2",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("NumOutput1","number of particles directed to output 1",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("NumOutput2","number of particles directed to output 2",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));


create_item ("DTV_DemuxTMCC","TMCC bit decomposer into 20 and 184 bits)",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_DemuxTMCC",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fDemuxTMCC_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_DemuxTMCC",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Length","length of TMCC format",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","204")));


create_item ("DTV_DemuxDiffSegs","OFDM de-segment for differential modulation",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_DemuxDiffSegs",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fDemuxDiffSegs_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_DemuxDiffSegs",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Carriers","number of carriers in one segment",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","432")),
	create_parm ("Segments","number of segments",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("Start_Seg","initial number of segment (0 to Segments-1)",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")));


create_item ("DTV_DemuxCohSegs","OFDM de-segment for coherent modulation",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_DemuxCohSegs",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fDemuxCohSegs_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_DemuxCohSegs",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Carriers","number of carriers in one segment",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","432")),
	create_parm ("Segments","number of segments",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("Start_Seg","initial number of segment (0 to Segments-1)",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("SPnumber","number of scattered pilots in each segment",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","36")),
	create_parm ("SPperiod","distance in carriers between nearby scattered pilots",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","12")),
	create_parm ("SPstart","start position of scattered pilots in carriers",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("SPoffset","offset value of SPstart in each symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")),
	create_parm ("SPphase","initial phase of scattered pilots",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")));


create_item ("DTV_CommCtrl3","3-input commutator with input particle number control",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_CommCtrl3",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fCommCtrl3_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_CommCtrl3",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("NumInput1","number of particles from input 1",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("NumInput2","number of particles from input 2",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("NumInput3","number of particles from input 3",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));


create_item ("DTV_CommCtrl2","2-input commutator with input particle number control",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_CommCtrl2",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fCommCtrl2_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_CommCtrl2",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("NumInput1","number of particles from input 1",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("NumInput2","number of particles from input 2",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));


create_item ("DTV_ChEstimator","OFDM symbol channel estimator and channel interpolator for ISDB-T",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_ChEstimator",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fChEstimator_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_ChEstimator",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Layers","number of layers",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("Carriers","number of carriers in one OFDM symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","432")),
	create_parm ("Segments","number of segments in each layer",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"13 \"")),
	create_parm ("InSequence","segment sequence at input",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"11 9 7 5 3 1 0 2 4 6 8 10 12 \"")),
	create_parm ("OutSequence","segment sequence at output",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"0 1 2 3 4 5 6 7 8 9 10 11 12 \"")),
	create_parm ("Order","FFT points=2^Order",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","13")),
	create_parm ("CPnumber","number of continual pilots in each segment for each layer",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"0 \"")),
	create_parm ("SPnumber","number of scattered pilots in each segment",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"36 \"")),
	create_parm ("SPperiod","distance in carriers between nearby scattered pilots in each segments for each layer",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"12 \"")),
	create_parm ("SPstart","start position of scattered pilots in carriers",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"0 \"")),
	create_parm ("SPoffset","offset value of SPstart in each symbol",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"3 \"")),
	create_parm ("SPphase","initial phase of scattered pilots  for each layer",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"0 \"")));


create_item ("DTV_CDSCDecoder","Complete differential set code (273,191) decoder",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_CDSCDecoder",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fCDSCDecoder_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_CDSCDecoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("CodeLength","length of code bits",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","184")),
	create_parm ("Thresholds","thresholds for error detection",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"16 15 14 13 12 11 10 9\"")));


create_constant_form ("_nDTV_x5fCarrierScrambler_fScramble", 
	"Scramble",
	0,
	"0",
	"Scramble");

create_constant_form ("_nDTV_x5fCarrierScrambler_fDescramble", 
	"Descramble",
	0,
	"1",
	"Descramble");

create_form_set("_nDTV_x5fCarrierScrambler_fOptionSet",
	"_nDTV_x5fCarrierScrambler_fScramble",
	"_nDTV_x5fCarrierScrambler_fDescramble",
	"StdForm");

create_item ("DTV_CarrierScrambler","Carrier scrambler and descrambler",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_CarrierScrambler",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fCarrierScrambler_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_CarrierScrambler",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Carriers","number of carriers for each segment in OFDM modulation mode",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","96")),
	create_parm ("Option","carrier option:Scramble, Descramble",
		PARM_INT,
		"_nDTV_x5fCarrierScrambler_fOptionSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fCarrierScrambler_fScramble","Scramble")),
	create_parm ("Sequence","customized carrier mapping index, or empty to use the ISDB defaults",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")));


create_item ("DTV_CarrierRotator","Particle rotation within segment",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_CarrierRotator",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fCarrierRotator_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_CarrierRotator",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Carriers","block length of particles for one segment",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","384")),
	create_parm ("StartPoint","start particle number in segment",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"0 1 2 3\"")),
	create_parm ("Phase","initial phase of segment sequence",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")));


create_item ("DTV_BER","Bit error rate for ISDB-T and DVB-T",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_BER",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fBER_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_BER",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Length","length of input byte block",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","188")),
	create_parm ("Delay","delay of byte blocks",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","512")));


create_item ("DTV_BCHDecoder","BCH decoder",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_BCHDecoder",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fBCHDecoder_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_BCHDecoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("FieldOrder","order of Galois field",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","7")),
	create_parm ("InfoLength","information bit data length",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","113")),
	create_parm ("BlockLength","length of block code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","127")),
	create_parm ("ErrorNum","error protection capability",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","2")));


create_item ("DTV_BCHCoder","BCH coder",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_BCHCoder",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fBCHCoder_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_BCHCoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("FieldOrder","order of Galois field",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","7")),
	create_parm ("InfoLength","information bit data length",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","113")),
	create_parm ("BlockLength","length of block code",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","127")),
	create_parm ("ErrorNum","error protection capability",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","2")));


create_item ("DTV_AddFixPhase","Fixed phase addition to the OFDM symbol",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_AddFixPhase",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fAddFixPhase_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_AddFixPhase",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Length","length of input symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8192")),
	create_parm ("Guard","length of guard interval",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","512")),
	create_parm ("Offset","fixed phase offset",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.25")));


create_item ("DTV_TMCCMod","TMCC differential modulation",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_TMCCMod",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fTMCCMod_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_TMCCMod",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Length","length of TMCC bits per OFDM frame",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","204")));


create_constant_form ("_nDTV_x5fTMCCInfo_fISDB_x5fT", 
	"ISDB-T",
	0,
	"0",
	"ISDB-T");

create_constant_form ("_nDTV_x5fTMCCInfo_fReserved_x5fDes_x5f1", 
	"Reserved Des 1",
	0,
	"1",
	"Reserved Des 1");

create_constant_form ("_nDTV_x5fTMCCInfo_fReserved_x5fDes_x5f2", 
	"Reserved Des 2",
	0,
	"2",
	"Reserved Des 2");

create_constant_form ("_nDTV_x5fTMCCInfo_fReserved_x5fDes_x5f3", 
	"Reserved Des 3",
	0,
	"3",
	"Reserved Des 3");

create_form_set("_nDTV_x5fTMCCInfo_fDescriptionSet",
	"_nDTV_x5fTMCCInfo_fISDB_x5fT",
	"_nDTV_x5fTMCCInfo_fReserved_x5fDes_x5f1",
	"_nDTV_x5fTMCCInfo_fReserved_x5fDes_x5f2",
	"_nDTV_x5fTMCCInfo_fReserved_x5fDes_x5f3",
	"StdForm");

create_constant_form ("_nDTV_x5fTMCCInfo_fOrdinary", 
	"Ordinary",
	0,
	"0",
	"Ordinary");

create_constant_form ("_nDTV_x5fTMCCInfo_fFrames_x5f15", 
	"Frames 15",
	0,
	"1",
	"Frames 15");

create_constant_form ("_nDTV_x5fTMCCInfo_fFrames_x5f14", 
	"Frames 14",
	0,
	"2",
	"Frames 14");

create_constant_form ("_nDTV_x5fTMCCInfo_fFrames_x5f13", 
	"Frames 13",
	0,
	"3",
	"Frames 13");

create_constant_form ("_nDTV_x5fTMCCInfo_fFrames_x5f12", 
	"Frames 12",
	0,
	"4",
	"Frames 12");

create_constant_form ("_nDTV_x5fTMCCInfo_fFrames_x5f11", 
	"Frames 11",
	0,
	"5",
	"Frames 11");

create_constant_form ("_nDTV_x5fTMCCInfo_fFrames_x5f10", 
	"Frames 10",
	0,
	"6",
	"Frames 10");

create_constant_form ("_nDTV_x5fTMCCInfo_fFrames_x5f9", 
	"Frames 9",
	0,
	"7",
	"Frames 9");

create_constant_form ("_nDTV_x5fTMCCInfo_fFrames_x5f8", 
	"Frames 8",
	0,
	"8",
	"Frames 8");

create_constant_form ("_nDTV_x5fTMCCInfo_fFrames_x5f7", 
	"Frames 7",
	0,
	"9",
	"Frames 7");

create_constant_form ("_nDTV_x5fTMCCInfo_fFrames_x5f6", 
	"Frames 6",
	0,
	"10",
	"Frames 6");

create_constant_form ("_nDTV_x5fTMCCInfo_fFrames_x5f5", 
	"Frames 5",
	0,
	"11",
	"Frames 5");

create_constant_form ("_nDTV_x5fTMCCInfo_fFrames_x5f4", 
	"Frames 4",
	0,
	"12",
	"Frames 4");

create_constant_form ("_nDTV_x5fTMCCInfo_fFrames_x5f3", 
	"Frames 3",
	0,
	"13",
	"Frames 3");

create_constant_form ("_nDTV_x5fTMCCInfo_fFrames_x5f2", 
	"Frames 2",
	0,
	"14",
	"Frames 2");

create_constant_form ("_nDTV_x5fTMCCInfo_fFrames_x5f1", 
	"Frames 1",
	0,
	"15",
	"Frames 1");

create_form_set("_nDTV_x5fTMCCInfo_fCountSet",
	"_nDTV_x5fTMCCInfo_fOrdinary",
	"_nDTV_x5fTMCCInfo_fFrames_x5f15",
	"_nDTV_x5fTMCCInfo_fFrames_x5f14",
	"_nDTV_x5fTMCCInfo_fFrames_x5f13",
	"_nDTV_x5fTMCCInfo_fFrames_x5f12",
	"_nDTV_x5fTMCCInfo_fFrames_x5f11",
	"_nDTV_x5fTMCCInfo_fFrames_x5f10",
	"_nDTV_x5fTMCCInfo_fFrames_x5f9",
	"_nDTV_x5fTMCCInfo_fFrames_x5f8",
	"_nDTV_x5fTMCCInfo_fFrames_x5f7",
	"_nDTV_x5fTMCCInfo_fFrames_x5f6",
	"_nDTV_x5fTMCCInfo_fFrames_x5f5",
	"_nDTV_x5fTMCCInfo_fFrames_x5f4",
	"_nDTV_x5fTMCCInfo_fFrames_x5f3",
	"_nDTV_x5fTMCCInfo_fFrames_x5f2",
	"_nDTV_x5fTMCCInfo_fFrames_x5f1",
	"StdForm");

create_constant_form ("_nDTV_x5fTMCCInfo_fOrdinary_x5fControl", 
	"Ordinary Control",
	0,
	"0",
	"Ordinary Control");

create_constant_form ("_nDTV_x5fTMCCInfo_fSwitch_x5fon", 
	"Switch-on",
	0,
	"1",
	"Switch-on");

create_form_set("_nDTV_x5fTMCCInfo_fFlagSet",
	"_nDTV_x5fTMCCInfo_fOrdinary_x5fControl",
	"_nDTV_x5fTMCCInfo_fSwitch_x5fon",
	"StdForm");

create_constant_form ("_nDTV_x5fTMCCInfo_fUnused_x5fCur_x5fFlag", 
	"Unused Cur Flag",
	0,
	"0",
	"Unused Cur Flag");

create_constant_form ("_nDTV_x5fTMCCInfo_fUsed_x5fCur_x5fFlag", 
	"Used Cur Flag",
	0,
	"1",
	"Used Cur Flag");

create_form_set("_nDTV_x5fTMCCInfo_fCurFlagSet",
	"_nDTV_x5fTMCCInfo_fUnused_x5fCur_x5fFlag",
	"_nDTV_x5fTMCCInfo_fUsed_x5fCur_x5fFlag",
	"StdForm");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurA_x5fDQPSK", 
	"CurA DQPSK",
	0,
	"0",
	"CurA DQPSK");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurA_x5fQPSK", 
	"CurA QPSK",
	0,
	"1",
	"CurA QPSK");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurA_x5f16QAM", 
	"CurA 16QAM",
	0,
	"2",
	"CurA 16QAM");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurA_x5f64QAM", 
	"CurA 64QAM",
	0,
	"3",
	"CurA 64QAM");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurA_x5fReserved_x5fMod_x5f1", 
	"CurA Reserved Mod 1",
	0,
	"4",
	"CurA Reserved Mod 1");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurA_x5fReserved_x5fMod_x5f2", 
	"CurA Reserved Mod 2",
	0,
	"5",
	"CurA Reserved Mod 2");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurA_x5fReserved_x5fMod_x5f3", 
	"CurA Reserved Mod 3",
	0,
	"6",
	"CurA Reserved Mod 3");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurA_x5fUnused_x5fLayer_x5fMod", 
	"CurA Unused Layer Mod",
	0,
	"7",
	"CurA Unused Layer Mod");

create_form_set("_nDTV_x5fTMCCInfo_fCurA_x5fModSet",
	"_nDTV_x5fTMCCInfo_fCurA_x5fDQPSK",
	"_nDTV_x5fTMCCInfo_fCurA_x5fQPSK",
	"_nDTV_x5fTMCCInfo_fCurA_x5f16QAM",
	"_nDTV_x5fTMCCInfo_fCurA_x5f64QAM",
	"_nDTV_x5fTMCCInfo_fCurA_x5fReserved_x5fMod_x5f1",
	"_nDTV_x5fTMCCInfo_fCurA_x5fReserved_x5fMod_x5f2",
	"_nDTV_x5fTMCCInfo_fCurA_x5fReserved_x5fMod_x5f3",
	"_nDTV_x5fTMCCInfo_fCurA_x5fUnused_x5fLayer_x5fMod",
	"StdForm");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurA_x5f1_x5f2", 
	"CurA 1/2",
	0,
	"0",
	"CurA 1/2");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurA_x5f2_x5f3", 
	"CurA 2/3",
	0,
	"1",
	"CurA 2/3");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurA_x5f3_x5f4", 
	"CurA 3/4",
	0,
	"2",
	"CurA 3/4");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurA_x5f5_x5f6", 
	"CurA 5/6",
	0,
	"3",
	"CurA 5/6");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurA_x5f7_x5f8", 
	"CurA 7/8",
	0,
	"4",
	"CurA 7/8");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurA_x5fReserved_x5fCod_x5f1", 
	"CurA Reserved Cod 1",
	0,
	"5",
	"CurA Reserved Cod 1");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurA_x5fReserved_x5fCod_x5f2", 
	"CurA Reserved Cod 2",
	0,
	"6",
	"CurA Reserved Cod 2");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurA_x5fUnused_x5fLayer_x5fCod", 
	"CurA Unused Layer Cod",
	0,
	"7",
	"CurA Unused Layer Cod");

create_form_set("_nDTV_x5fTMCCInfo_fCurA_x5fRateSet",
	"_nDTV_x5fTMCCInfo_fCurA_x5f1_x5f2",
	"_nDTV_x5fTMCCInfo_fCurA_x5f2_x5f3",
	"_nDTV_x5fTMCCInfo_fCurA_x5f3_x5f4",
	"_nDTV_x5fTMCCInfo_fCurA_x5f5_x5f6",
	"_nDTV_x5fTMCCInfo_fCurA_x5f7_x5f8",
	"_nDTV_x5fTMCCInfo_fCurA_x5fReserved_x5fCod_x5f1",
	"_nDTV_x5fTMCCInfo_fCurA_x5fReserved_x5fCod_x5f2",
	"_nDTV_x5fTMCCInfo_fCurA_x5fUnused_x5fLayer_x5fCod",
	"StdForm");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurA_x5fInt_x5f0_x5f0_x5f0", 
	"CurA Int 0 0 0",
	0,
	"0",
	"CurA Int 0 0 0");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurA_x5fInt_x5f4_x5f2_x5f1", 
	"CurA Int 4 2 1",
	0,
	"1",
	"CurA Int 4 2 1");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurA_x5fInt_x5f8_x5f4_x5f2", 
	"CurA Int 8 4 2",
	0,
	"2",
	"CurA Int 8 4 2");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurA_x5fInt_x5f16_x5f8_x5f4", 
	"CurA Int 16 8 4",
	0,
	"3",
	"CurA Int 16 8 4");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurA_x5fInt_x5f32_x5f16_x5f8", 
	"CurA Int 32 16 8",
	0,
	"4",
	"CurA Int 32 16 8");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurA_x5fReserved_x5fInt_x5f1", 
	"CurA Reserved Int 1",
	0,
	"5",
	"CurA Reserved Int 1");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurA_x5fReserved_x5fInt_x5f2", 
	"CurA Reserved Int 2",
	0,
	"6",
	"CurA Reserved Int 2");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurA_x5fUnused_x5fLayer_x5fInt", 
	"CurA Unused Layer Int",
	0,
	"7",
	"CurA Unused Layer Int");

create_form_set("_nDTV_x5fTMCCInfo_fCurA_x5fInterlvSet",
	"_nDTV_x5fTMCCInfo_fCurA_x5fInt_x5f0_x5f0_x5f0",
	"_nDTV_x5fTMCCInfo_fCurA_x5fInt_x5f4_x5f2_x5f1",
	"_nDTV_x5fTMCCInfo_fCurA_x5fInt_x5f8_x5f4_x5f2",
	"_nDTV_x5fTMCCInfo_fCurA_x5fInt_x5f16_x5f8_x5f4",
	"_nDTV_x5fTMCCInfo_fCurA_x5fInt_x5f32_x5f16_x5f8",
	"_nDTV_x5fTMCCInfo_fCurA_x5fReserved_x5fInt_x5f1",
	"_nDTV_x5fTMCCInfo_fCurA_x5fReserved_x5fInt_x5f2",
	"_nDTV_x5fTMCCInfo_fCurA_x5fUnused_x5fLayer_x5fInt",
	"StdForm");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurA_x5fReserved_x5fSeg_x5f1", 
	"CurA Reserved Seg 1",
	0,
	"0",
	"CurA Reserved Seg 1");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurA_x5fSeg_x5f1", 
	"CurA Seg 1",
	0,
	"1",
	"CurA Seg 1");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurA_x5fSeg_x5f2", 
	"CurA Seg 2",
	0,
	"2",
	"CurA Seg 2");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurA_x5fSeg_x5f3", 
	"CurA Seg 3",
	0,
	"3",
	"CurA Seg 3");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurA_x5fSeg_x5f4", 
	"CurA Seg 4",
	0,
	"4",
	"CurA Seg 4");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurA_x5fSeg_x5f5", 
	"CurA Seg 5",
	0,
	"5",
	"CurA Seg 5");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurA_x5fSeg_x5f6", 
	"CurA Seg 6",
	0,
	"6",
	"CurA Seg 6");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurA_x5fSeg_x5f7", 
	"CurA Seg 7",
	0,
	"7",
	"CurA Seg 7");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurA_x5fSeg_x5f8", 
	"CurA Seg 8",
	0,
	"8",
	"CurA Seg 8");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurA_x5fSeg_x5f9", 
	"CurA Seg 9",
	0,
	"9",
	"CurA Seg 9");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurA_x5fSeg_x5f10", 
	"CurA Seg 10",
	0,
	"10",
	"CurA Seg 10");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurA_x5fSeg_x5f11", 
	"CurA Seg 11",
	0,
	"11",
	"CurA Seg 11");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurA_x5fSeg_x5f12", 
	"CurA Seg 12",
	0,
	"12",
	"CurA Seg 12");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurA_x5fSeg_x5f13", 
	"CurA Seg 13",
	0,
	"13",
	"CurA Seg 13");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurA_x5fReserved_x5fSeg_x5f2", 
	"CurA Reserved Seg 2",
	0,
	"14",
	"CurA Reserved Seg 2");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurA_x5fUnused_x5fLayer_x5fSeg", 
	"CurA Unused Layer Seg",
	0,
	"15",
	"CurA Unused Layer Seg");

create_form_set("_nDTV_x5fTMCCInfo_fCurA_x5fNumSegSet",
	"_nDTV_x5fTMCCInfo_fCurA_x5fReserved_x5fSeg_x5f1",
	"_nDTV_x5fTMCCInfo_fCurA_x5fSeg_x5f1",
	"_nDTV_x5fTMCCInfo_fCurA_x5fSeg_x5f2",
	"_nDTV_x5fTMCCInfo_fCurA_x5fSeg_x5f3",
	"_nDTV_x5fTMCCInfo_fCurA_x5fSeg_x5f4",
	"_nDTV_x5fTMCCInfo_fCurA_x5fSeg_x5f5",
	"_nDTV_x5fTMCCInfo_fCurA_x5fSeg_x5f6",
	"_nDTV_x5fTMCCInfo_fCurA_x5fSeg_x5f7",
	"_nDTV_x5fTMCCInfo_fCurA_x5fSeg_x5f8",
	"_nDTV_x5fTMCCInfo_fCurA_x5fSeg_x5f9",
	"_nDTV_x5fTMCCInfo_fCurA_x5fSeg_x5f10",
	"_nDTV_x5fTMCCInfo_fCurA_x5fSeg_x5f11",
	"_nDTV_x5fTMCCInfo_fCurA_x5fSeg_x5f12",
	"_nDTV_x5fTMCCInfo_fCurA_x5fSeg_x5f13",
	"_nDTV_x5fTMCCInfo_fCurA_x5fReserved_x5fSeg_x5f2",
	"_nDTV_x5fTMCCInfo_fCurA_x5fUnused_x5fLayer_x5fSeg",
	"StdForm");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurB_x5fDQPSK", 
	"CurB DQPSK",
	0,
	"0",
	"CurB DQPSK");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurB_x5fQPSK", 
	"CurB QPSK",
	0,
	"1",
	"CurB QPSK");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurB_x5f16QAM", 
	"CurB 16QAM",
	0,
	"2",
	"CurB 16QAM");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurB_x5f64QAM", 
	"CurB 64QAM",
	0,
	"3",
	"CurB 64QAM");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurB_x5fReserved_x5fMod_x5f1", 
	"CurB Reserved Mod 1",
	0,
	"4",
	"CurB Reserved Mod 1");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurB_x5fReserved_x5fMod_x5f2", 
	"CurB Reserved Mod 2",
	0,
	"5",
	"CurB Reserved Mod 2");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurB_x5fReserved_x5fMod_x5f3", 
	"CurB Reserved Mod 3",
	0,
	"6",
	"CurB Reserved Mod 3");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurB_x5fUnused_x5fLayer_x5fMod", 
	"CurB Unused Layer Mod",
	0,
	"7",
	"CurB Unused Layer Mod");

create_form_set("_nDTV_x5fTMCCInfo_fCurB_x5fModSet",
	"_nDTV_x5fTMCCInfo_fCurB_x5fDQPSK",
	"_nDTV_x5fTMCCInfo_fCurB_x5fQPSK",
	"_nDTV_x5fTMCCInfo_fCurB_x5f16QAM",
	"_nDTV_x5fTMCCInfo_fCurB_x5f64QAM",
	"_nDTV_x5fTMCCInfo_fCurB_x5fReserved_x5fMod_x5f1",
	"_nDTV_x5fTMCCInfo_fCurB_x5fReserved_x5fMod_x5f2",
	"_nDTV_x5fTMCCInfo_fCurB_x5fReserved_x5fMod_x5f3",
	"_nDTV_x5fTMCCInfo_fCurB_x5fUnused_x5fLayer_x5fMod",
	"StdForm");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurB_x5f1_x5f2", 
	"CurB 1/2",
	0,
	"0",
	"CurB 1/2");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurB_x5f2_x5f3", 
	"CurB 2/3",
	0,
	"1",
	"CurB 2/3");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurB_x5f3_x5f4", 
	"CurB 3/4",
	0,
	"2",
	"CurB 3/4");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurB_x5f5_x5f6", 
	"CurB 5/6",
	0,
	"3",
	"CurB 5/6");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurB_x5f7_x5f8", 
	"CurB 7/8",
	0,
	"4",
	"CurB 7/8");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurB_x5fReserved_x5fCod_x5f1", 
	"CurB Reserved Cod 1",
	0,
	"5",
	"CurB Reserved Cod 1");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurB_x5fReserved_x5fCod_x5f2", 
	"CurB Reserved Cod 2",
	0,
	"6",
	"CurB Reserved Cod 2");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurB_x5fUnused_x5fLayer_x5fCod", 
	"CurB Unused Layer Cod",
	0,
	"7",
	"CurB Unused Layer Cod");

create_form_set("_nDTV_x5fTMCCInfo_fCurB_x5fRateSet",
	"_nDTV_x5fTMCCInfo_fCurB_x5f1_x5f2",
	"_nDTV_x5fTMCCInfo_fCurB_x5f2_x5f3",
	"_nDTV_x5fTMCCInfo_fCurB_x5f3_x5f4",
	"_nDTV_x5fTMCCInfo_fCurB_x5f5_x5f6",
	"_nDTV_x5fTMCCInfo_fCurB_x5f7_x5f8",
	"_nDTV_x5fTMCCInfo_fCurB_x5fReserved_x5fCod_x5f1",
	"_nDTV_x5fTMCCInfo_fCurB_x5fReserved_x5fCod_x5f2",
	"_nDTV_x5fTMCCInfo_fCurB_x5fUnused_x5fLayer_x5fCod",
	"StdForm");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurB_x5fInt_x5f0_x5f0_x5f0", 
	"CurB Int 0 0 0",
	0,
	"0",
	"CurB Int 0 0 0");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurB_x5fInt_x5f4_x5f2_x5f1", 
	"CurB Int 4 2 1",
	0,
	"1",
	"CurB Int 4 2 1");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurB_x5fInt_x5f8_x5f4_x5f2", 
	"CurB Int 8 4 2",
	0,
	"2",
	"CurB Int 8 4 2");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurB_x5fInt_x5f16_x5f8_x5f4", 
	"CurB Int 16 8 4",
	0,
	"3",
	"CurB Int 16 8 4");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurB_x5fInt_x5f32_x5f16_x5f8", 
	"CurB Int 32 16 8",
	0,
	"4",
	"CurB Int 32 16 8");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurB_x5fReserved_x5fInt_x5f1", 
	"CurB Reserved Int 1",
	0,
	"5",
	"CurB Reserved Int 1");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurB_x5fReserved_x5fInt_x5f2", 
	"CurB Reserved Int 2",
	0,
	"6",
	"CurB Reserved Int 2");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurB_x5fUnused_x5fLayer_x5fInt", 
	"CurB Unused Layer Int",
	0,
	"7",
	"CurB Unused Layer Int");

create_form_set("_nDTV_x5fTMCCInfo_fCurB_x5fInterlvSet",
	"_nDTV_x5fTMCCInfo_fCurB_x5fInt_x5f0_x5f0_x5f0",
	"_nDTV_x5fTMCCInfo_fCurB_x5fInt_x5f4_x5f2_x5f1",
	"_nDTV_x5fTMCCInfo_fCurB_x5fInt_x5f8_x5f4_x5f2",
	"_nDTV_x5fTMCCInfo_fCurB_x5fInt_x5f16_x5f8_x5f4",
	"_nDTV_x5fTMCCInfo_fCurB_x5fInt_x5f32_x5f16_x5f8",
	"_nDTV_x5fTMCCInfo_fCurB_x5fReserved_x5fInt_x5f1",
	"_nDTV_x5fTMCCInfo_fCurB_x5fReserved_x5fInt_x5f2",
	"_nDTV_x5fTMCCInfo_fCurB_x5fUnused_x5fLayer_x5fInt",
	"StdForm");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurB_x5fReserved_x5fSeg_x5f1", 
	"CurB Reserved Seg 1",
	0,
	"0",
	"CurB Reserved Seg 1");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurB_x5fSeg_x5f1", 
	"CurB Seg 1",
	0,
	"1",
	"CurB Seg 1");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurB_x5fSeg_x5f2", 
	"CurB Seg 2",
	0,
	"2",
	"CurB Seg 2");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurB_x5fSeg_x5f3", 
	"CurB Seg 3",
	0,
	"3",
	"CurB Seg 3");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurB_x5fSeg_x5f4", 
	"CurB Seg 4",
	0,
	"4",
	"CurB Seg 4");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurB_x5fSeg_x5f5", 
	"CurB Seg 5",
	0,
	"5",
	"CurB Seg 5");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurB_x5fSeg_x5f6", 
	"CurB Seg 6",
	0,
	"6",
	"CurB Seg 6");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurB_x5fSeg_x5f7", 
	"CurB Seg 7",
	0,
	"7",
	"CurB Seg 7");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurB_x5fSeg_x5f8", 
	"CurB Seg 8",
	0,
	"8",
	"CurB Seg 8");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurB_x5fSeg_x5f9", 
	"CurB Seg 9",
	0,
	"9",
	"CurB Seg 9");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurB_x5fSeg_x5f10", 
	"CurB Seg 10",
	0,
	"10",
	"CurB Seg 10");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurB_x5fSeg_x5f11", 
	"CurB Seg 11",
	0,
	"11",
	"CurB Seg 11");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurB_x5fSeg_x5f12", 
	"CurB Seg 12",
	0,
	"12",
	"CurB Seg 12");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurB_x5fSeg_x5f13", 
	"CurB Seg 13",
	0,
	"13",
	"CurB Seg 13");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurB_x5fReserved_x5fSeg_x5f2", 
	"CurB Reserved Seg 2",
	0,
	"14",
	"CurB Reserved Seg 2");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurB_x5fUnused_x5fLayer_x5fSeg", 
	"CurB Unused Layer Seg",
	0,
	"15",
	"CurB Unused Layer Seg");

create_form_set("_nDTV_x5fTMCCInfo_fCurB_x5fNumSegSet",
	"_nDTV_x5fTMCCInfo_fCurB_x5fReserved_x5fSeg_x5f1",
	"_nDTV_x5fTMCCInfo_fCurB_x5fSeg_x5f1",
	"_nDTV_x5fTMCCInfo_fCurB_x5fSeg_x5f2",
	"_nDTV_x5fTMCCInfo_fCurB_x5fSeg_x5f3",
	"_nDTV_x5fTMCCInfo_fCurB_x5fSeg_x5f4",
	"_nDTV_x5fTMCCInfo_fCurB_x5fSeg_x5f5",
	"_nDTV_x5fTMCCInfo_fCurB_x5fSeg_x5f6",
	"_nDTV_x5fTMCCInfo_fCurB_x5fSeg_x5f7",
	"_nDTV_x5fTMCCInfo_fCurB_x5fSeg_x5f8",
	"_nDTV_x5fTMCCInfo_fCurB_x5fSeg_x5f9",
	"_nDTV_x5fTMCCInfo_fCurB_x5fSeg_x5f10",
	"_nDTV_x5fTMCCInfo_fCurB_x5fSeg_x5f11",
	"_nDTV_x5fTMCCInfo_fCurB_x5fSeg_x5f12",
	"_nDTV_x5fTMCCInfo_fCurB_x5fSeg_x5f13",
	"_nDTV_x5fTMCCInfo_fCurB_x5fReserved_x5fSeg_x5f2",
	"_nDTV_x5fTMCCInfo_fCurB_x5fUnused_x5fLayer_x5fSeg",
	"StdForm");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurC_x5fDQPSK", 
	"CurC DQPSK",
	0,
	"0",
	"CurC DQPSK");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurC_x5fQPSK", 
	"CurC QPSK",
	0,
	"1",
	"CurC QPSK");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurC_x5f16QAM", 
	"CurC 16QAM",
	0,
	"2",
	"CurC 16QAM");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurC_x5f64QAM", 
	"CurC 64QAM",
	0,
	"3",
	"CurC 64QAM");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurC_x5fReserved_x5fMod_x5f1", 
	"CurC Reserved Mod 1",
	0,
	"4",
	"CurC Reserved Mod 1");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurC_x5fReserved_x5fMod_x5f2", 
	"CurC Reserved Mod 2",
	0,
	"5",
	"CurC Reserved Mod 2");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurC_x5fReserved_x5fMod_x5f3", 
	"CurC Reserved Mod 3",
	0,
	"6",
	"CurC Reserved Mod 3");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurC_x5fUnused_x5fLayer_x5fMod", 
	"CurC Unused Layer Mod",
	0,
	"7",
	"CurC Unused Layer Mod");

create_form_set("_nDTV_x5fTMCCInfo_fCurC_x5fModSet",
	"_nDTV_x5fTMCCInfo_fCurC_x5fDQPSK",
	"_nDTV_x5fTMCCInfo_fCurC_x5fQPSK",
	"_nDTV_x5fTMCCInfo_fCurC_x5f16QAM",
	"_nDTV_x5fTMCCInfo_fCurC_x5f64QAM",
	"_nDTV_x5fTMCCInfo_fCurC_x5fReserved_x5fMod_x5f1",
	"_nDTV_x5fTMCCInfo_fCurC_x5fReserved_x5fMod_x5f2",
	"_nDTV_x5fTMCCInfo_fCurC_x5fReserved_x5fMod_x5f3",
	"_nDTV_x5fTMCCInfo_fCurC_x5fUnused_x5fLayer_x5fMod",
	"StdForm");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurC_x5f1_x5f2", 
	"CurC 1/2",
	0,
	"0",
	"CurC 1/2");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurC_x5f2_x5f3", 
	"CurC 2/3",
	0,
	"1",
	"CurC 2/3");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurC_x5f3_x5f4", 
	"CurC 3/4",
	0,
	"2",
	"CurC 3/4");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurC_x5f5_x5f6", 
	"CurC 5/6",
	0,
	"3",
	"CurC 5/6");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurC_x5f7_x5f8", 
	"CurC 7/8",
	0,
	"4",
	"CurC 7/8");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurC_x5fReserved_x5fCod_x5f1", 
	"CurC Reserved Cod 1",
	0,
	"5",
	"CurC Reserved Cod 1");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurC_x5fReserved_x5fCod_x5f2", 
	"CurC Reserved Cod 2",
	0,
	"6",
	"CurC Reserved Cod 2");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurC_x5fUnused_x5fLayer_x5fCod", 
	"CurC Unused Layer Cod",
	0,
	"7",
	"CurC Unused Layer Cod");

create_form_set("_nDTV_x5fTMCCInfo_fCurC_x5fRateSet",
	"_nDTV_x5fTMCCInfo_fCurC_x5f1_x5f2",
	"_nDTV_x5fTMCCInfo_fCurC_x5f2_x5f3",
	"_nDTV_x5fTMCCInfo_fCurC_x5f3_x5f4",
	"_nDTV_x5fTMCCInfo_fCurC_x5f5_x5f6",
	"_nDTV_x5fTMCCInfo_fCurC_x5f7_x5f8",
	"_nDTV_x5fTMCCInfo_fCurC_x5fReserved_x5fCod_x5f1",
	"_nDTV_x5fTMCCInfo_fCurC_x5fReserved_x5fCod_x5f2",
	"_nDTV_x5fTMCCInfo_fCurC_x5fUnused_x5fLayer_x5fCod",
	"StdForm");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurC_x5fInt_x5f0_x5f0_x5f0", 
	"CurC Int 0 0 0",
	0,
	"0",
	"CurC Int 0 0 0");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurC_x5fInt_x5f4_x5f2_x5f1", 
	"CurC Int 4 2 1",
	0,
	"1",
	"CurC Int 4 2 1");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurC_x5fInt_x5f8_x5f4_x5f2", 
	"CurC Int 8 4 2",
	0,
	"2",
	"CurC Int 8 4 2");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurC_x5fInt_x5f16_x5f8_x5f4", 
	"CurC Int 16 8 4",
	0,
	"3",
	"CurC Int 16 8 4");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurC_x5fInt_x5f32_x5f16_x5f8", 
	"CurC Int 32 16 8",
	0,
	"4",
	"CurC Int 32 16 8");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurC_x5fReserved_x5fInt_x5f1", 
	"CurC Reserved Int 1",
	0,
	"5",
	"CurC Reserved Int 1");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurC_x5fReserved_x5fInt_x5f2", 
	"CurC Reserved Int 2",
	0,
	"6",
	"CurC Reserved Int 2");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurC_x5fUnused_x5fLayer_x5fInt", 
	"CurC Unused Layer Int",
	0,
	"7",
	"CurC Unused Layer Int");

create_form_set("_nDTV_x5fTMCCInfo_fCurC_x5fInterlvSet",
	"_nDTV_x5fTMCCInfo_fCurC_x5fInt_x5f0_x5f0_x5f0",
	"_nDTV_x5fTMCCInfo_fCurC_x5fInt_x5f4_x5f2_x5f1",
	"_nDTV_x5fTMCCInfo_fCurC_x5fInt_x5f8_x5f4_x5f2",
	"_nDTV_x5fTMCCInfo_fCurC_x5fInt_x5f16_x5f8_x5f4",
	"_nDTV_x5fTMCCInfo_fCurC_x5fInt_x5f32_x5f16_x5f8",
	"_nDTV_x5fTMCCInfo_fCurC_x5fReserved_x5fInt_x5f1",
	"_nDTV_x5fTMCCInfo_fCurC_x5fReserved_x5fInt_x5f2",
	"_nDTV_x5fTMCCInfo_fCurC_x5fUnused_x5fLayer_x5fInt",
	"StdForm");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurC_x5fReserved_x5fSeg_x5f1", 
	"CurC Reserved Seg 1",
	0,
	"0",
	"CurC Reserved Seg 1");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurC_x5fSeg_x5f1", 
	"CurC Seg 1",
	0,
	"1",
	"CurC Seg 1");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurC_x5fSeg_x5f2", 
	"CurC Seg 2",
	0,
	"2",
	"CurC Seg 2");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurC_x5fSeg_x5f3", 
	"CurC Seg 3",
	0,
	"3",
	"CurC Seg 3");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurC_x5fSeg_x5f4", 
	"CurC Seg 4",
	0,
	"4",
	"CurC Seg 4");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurC_x5fSeg_x5f5", 
	"CurC Seg 5",
	0,
	"5",
	"CurC Seg 5");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurC_x5fSeg_x5f6", 
	"CurC Seg 6",
	0,
	"6",
	"CurC Seg 6");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurC_x5fSeg_x5f7", 
	"CurC Seg 7",
	0,
	"7",
	"CurC Seg 7");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurC_x5fSeg_x5f8", 
	"CurC Seg 8",
	0,
	"8",
	"CurC Seg 8");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurC_x5fSeg_x5f9", 
	"CurC Seg 9",
	0,
	"9",
	"CurC Seg 9");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurC_x5fSeg_x5f10", 
	"CurC Seg 10",
	0,
	"10",
	"CurC Seg 10");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurC_x5fSeg_x5f11", 
	"CurC Seg 11",
	0,
	"11",
	"CurC Seg 11");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurC_x5fSeg_x5f12", 
	"CurC Seg 12",
	0,
	"12",
	"CurC Seg 12");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurC_x5fSeg_x5f13", 
	"CurC Seg 13",
	0,
	"13",
	"CurC Seg 13");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurC_x5fReserved_x5fSeg_x5f2", 
	"CurC Reserved Seg 2",
	0,
	"14",
	"CurC Reserved Seg 2");

create_constant_form ("_nDTV_x5fTMCCInfo_fCurC_x5fUnused_x5fLayer_x5fSeg", 
	"CurC Unused Layer Seg",
	0,
	"15",
	"CurC Unused Layer Seg");

create_form_set("_nDTV_x5fTMCCInfo_fCurC_x5fNumSegSet",
	"_nDTV_x5fTMCCInfo_fCurC_x5fReserved_x5fSeg_x5f1",
	"_nDTV_x5fTMCCInfo_fCurC_x5fSeg_x5f1",
	"_nDTV_x5fTMCCInfo_fCurC_x5fSeg_x5f2",
	"_nDTV_x5fTMCCInfo_fCurC_x5fSeg_x5f3",
	"_nDTV_x5fTMCCInfo_fCurC_x5fSeg_x5f4",
	"_nDTV_x5fTMCCInfo_fCurC_x5fSeg_x5f5",
	"_nDTV_x5fTMCCInfo_fCurC_x5fSeg_x5f6",
	"_nDTV_x5fTMCCInfo_fCurC_x5fSeg_x5f7",
	"_nDTV_x5fTMCCInfo_fCurC_x5fSeg_x5f8",
	"_nDTV_x5fTMCCInfo_fCurC_x5fSeg_x5f9",
	"_nDTV_x5fTMCCInfo_fCurC_x5fSeg_x5f10",
	"_nDTV_x5fTMCCInfo_fCurC_x5fSeg_x5f11",
	"_nDTV_x5fTMCCInfo_fCurC_x5fSeg_x5f12",
	"_nDTV_x5fTMCCInfo_fCurC_x5fSeg_x5f13",
	"_nDTV_x5fTMCCInfo_fCurC_x5fReserved_x5fSeg_x5f2",
	"_nDTV_x5fTMCCInfo_fCurC_x5fUnused_x5fLayer_x5fSeg",
	"StdForm");

create_constant_form ("_nDTV_x5fTMCCInfo_fUnused_x5fNext_x5fFlag", 
	"Unused Next Flag",
	0,
	"0",
	"Unused Next Flag");

create_constant_form ("_nDTV_x5fTMCCInfo_fUsed_x5fNext", 
	"Used Next",
	0,
	"1",
	"Used Next");

create_form_set("_nDTV_x5fTMCCInfo_fNextFlagSet",
	"_nDTV_x5fTMCCInfo_fUnused_x5fNext_x5fFlag",
	"_nDTV_x5fTMCCInfo_fUsed_x5fNext",
	"StdForm");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextA_x5fDQPSK", 
	"NextA DQPSK",
	0,
	"0",
	"NextA DQPSK");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextA_x5fQPSK", 
	"NextA QPSK",
	0,
	"1",
	"NextA QPSK");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextA_x5f16QAM", 
	"NextA 16QAM",
	0,
	"2",
	"NextA 16QAM");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextA_x5f64QAM", 
	"NextA 64QAM",
	0,
	"3",
	"NextA 64QAM");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextA_x5fReserved_x5fMod_x5f1", 
	"NextA Reserved Mod 1",
	0,
	"4",
	"NextA Reserved Mod 1");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextA_x5fReserved_x5fMod_x5f2", 
	"NextA Reserved Mod 2",
	0,
	"5",
	"NextA Reserved Mod 2");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextA_x5fReserved_x5fMod_x5f3", 
	"NextA Reserved Mod 3",
	0,
	"6",
	"NextA Reserved Mod 3");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextA_x5fUnused_x5fLayer_x5fMod", 
	"NextA Unused Layer Mod",
	0,
	"7",
	"NextA Unused Layer Mod");

create_form_set("_nDTV_x5fTMCCInfo_fNextA_x5fModSet",
	"_nDTV_x5fTMCCInfo_fNextA_x5fDQPSK",
	"_nDTV_x5fTMCCInfo_fNextA_x5fQPSK",
	"_nDTV_x5fTMCCInfo_fNextA_x5f16QAM",
	"_nDTV_x5fTMCCInfo_fNextA_x5f64QAM",
	"_nDTV_x5fTMCCInfo_fNextA_x5fReserved_x5fMod_x5f1",
	"_nDTV_x5fTMCCInfo_fNextA_x5fReserved_x5fMod_x5f2",
	"_nDTV_x5fTMCCInfo_fNextA_x5fReserved_x5fMod_x5f3",
	"_nDTV_x5fTMCCInfo_fNextA_x5fUnused_x5fLayer_x5fMod",
	"StdForm");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextA_x5f1_x5f2", 
	"NextA 1/2",
	0,
	"0",
	"NextA 1/2");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextA_x5f2_x5f3", 
	"NextA 2/3",
	0,
	"1",
	"NextA 2/3");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextA_x5f3_x5f4", 
	"NextA 3/4",
	0,
	"2",
	"NextA 3/4");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextA_x5f5_x5f6", 
	"NextA 5/6",
	0,
	"3",
	"NextA 5/6");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextA_x5f7_x5f8", 
	"NextA 7/8",
	0,
	"4",
	"NextA 7/8");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextA_x5fReserved_x5fCod_x5f1", 
	"NextA Reserved Cod 1",
	0,
	"5",
	"NextA Reserved Cod 1");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextA_x5fReserved_x5fCod_x5f2", 
	"NextA Reserved Cod 2",
	0,
	"6",
	"NextA Reserved Cod 2");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextA_x5fUnused_x5fLayer_x5fCod", 
	"NextA Unused Layer Cod",
	0,
	"7",
	"NextA Unused Layer Cod");

create_form_set("_nDTV_x5fTMCCInfo_fNextA_x5fRateSet",
	"_nDTV_x5fTMCCInfo_fNextA_x5f1_x5f2",
	"_nDTV_x5fTMCCInfo_fNextA_x5f2_x5f3",
	"_nDTV_x5fTMCCInfo_fNextA_x5f3_x5f4",
	"_nDTV_x5fTMCCInfo_fNextA_x5f5_x5f6",
	"_nDTV_x5fTMCCInfo_fNextA_x5f7_x5f8",
	"_nDTV_x5fTMCCInfo_fNextA_x5fReserved_x5fCod_x5f1",
	"_nDTV_x5fTMCCInfo_fNextA_x5fReserved_x5fCod_x5f2",
	"_nDTV_x5fTMCCInfo_fNextA_x5fUnused_x5fLayer_x5fCod",
	"StdForm");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextA_x5fInt_x5f0_x5f0_x5f0", 
	"NextA Int 0 0 0",
	0,
	"0",
	"NextA Int 0 0 0");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextA_x5fInt_x5f4_x5f2_x5f1", 
	"NextA Int 4 2 1",
	0,
	"1",
	"NextA Int 4 2 1");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextA_x5fInt_x5f8_x5f4_x5f2", 
	"NextA Int 8 4 2",
	0,
	"2",
	"NextA Int 8 4 2");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextA_x5fInt_x5f16_x5f8_x5f4", 
	"NextA Int 16 8 4",
	0,
	"3",
	"NextA Int 16 8 4");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextA_x5fInt_x5f32_x5f16_x5f8", 
	"NextA Int 32 16 8",
	0,
	"4",
	"NextA Int 32 16 8");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextA_x5fReserved_x5fInt_x5f1", 
	"NextA Reserved Int 1",
	0,
	"5",
	"NextA Reserved Int 1");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextA_x5fReserved_x5fInt_x5f2", 
	"NextA Reserved Int 2",
	0,
	"6",
	"NextA Reserved Int 2");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextA_x5fUnused_x5fLayer_x5fInt", 
	"NextA Unused Layer Int",
	0,
	"7",
	"NextA Unused Layer Int");

create_form_set("_nDTV_x5fTMCCInfo_fNextA_x5fInterlvSet",
	"_nDTV_x5fTMCCInfo_fNextA_x5fInt_x5f0_x5f0_x5f0",
	"_nDTV_x5fTMCCInfo_fNextA_x5fInt_x5f4_x5f2_x5f1",
	"_nDTV_x5fTMCCInfo_fNextA_x5fInt_x5f8_x5f4_x5f2",
	"_nDTV_x5fTMCCInfo_fNextA_x5fInt_x5f16_x5f8_x5f4",
	"_nDTV_x5fTMCCInfo_fNextA_x5fInt_x5f32_x5f16_x5f8",
	"_nDTV_x5fTMCCInfo_fNextA_x5fReserved_x5fInt_x5f1",
	"_nDTV_x5fTMCCInfo_fNextA_x5fReserved_x5fInt_x5f2",
	"_nDTV_x5fTMCCInfo_fNextA_x5fUnused_x5fLayer_x5fInt",
	"StdForm");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextA_x5fReserved_x5fSeg_x5f1", 
	"NextA Reserved Seg 1",
	0,
	"0",
	"NextA Reserved Seg 1");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextA_x5fSeg_x5f1", 
	"NextA Seg 1",
	0,
	"1",
	"NextA Seg 1");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextA_x5fSeg_x5f2", 
	"NextA Seg 2",
	0,
	"2",
	"NextA Seg 2");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextA_x5fSeg_x5f3", 
	"NextA Seg 3",
	0,
	"3",
	"NextA Seg 3");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextA_x5fSeg_x5f4", 
	"NextA Seg 4",
	0,
	"4",
	"NextA Seg 4");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextA_x5fSeg_x5f5", 
	"NextA Seg 5",
	0,
	"5",
	"NextA Seg 5");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextA_x5fSeg_x5f6", 
	"NextA Seg 6",
	0,
	"6",
	"NextA Seg 6");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextA_x5fSeg_x5f7", 
	"NextA Seg 7",
	0,
	"7",
	"NextA Seg 7");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextA_x5fSeg_x5f8", 
	"NextA Seg 8",
	0,
	"8",
	"NextA Seg 8");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextA_x5fSeg_x5f9", 
	"NextA Seg 9",
	0,
	"9",
	"NextA Seg 9");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextA_x5fSeg_x5f10", 
	"NextA Seg 10",
	0,
	"10",
	"NextA Seg 10");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextA_x5fSeg_x5f11", 
	"NextA Seg 11",
	0,
	"11",
	"NextA Seg 11");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextA_x5fSeg_x5f12", 
	"NextA Seg 12",
	0,
	"12",
	"NextA Seg 12");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextA_x5fSeg_x5f13", 
	"NextA Seg 13",
	0,
	"13",
	"NextA Seg 13");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextA_x5fReserved_x5fSeg_x5f2", 
	"NextA Reserved Seg 2",
	0,
	"14",
	"NextA Reserved Seg 2");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextA_x5fUnused_x5fLayer_x5fSeg", 
	"NextA Unused Layer Seg",
	0,
	"15",
	"NextA Unused Layer Seg");

create_form_set("_nDTV_x5fTMCCInfo_fNextA_x5fNumSegSet",
	"_nDTV_x5fTMCCInfo_fNextA_x5fReserved_x5fSeg_x5f1",
	"_nDTV_x5fTMCCInfo_fNextA_x5fSeg_x5f1",
	"_nDTV_x5fTMCCInfo_fNextA_x5fSeg_x5f2",
	"_nDTV_x5fTMCCInfo_fNextA_x5fSeg_x5f3",
	"_nDTV_x5fTMCCInfo_fNextA_x5fSeg_x5f4",
	"_nDTV_x5fTMCCInfo_fNextA_x5fSeg_x5f5",
	"_nDTV_x5fTMCCInfo_fNextA_x5fSeg_x5f6",
	"_nDTV_x5fTMCCInfo_fNextA_x5fSeg_x5f7",
	"_nDTV_x5fTMCCInfo_fNextA_x5fSeg_x5f8",
	"_nDTV_x5fTMCCInfo_fNextA_x5fSeg_x5f9",
	"_nDTV_x5fTMCCInfo_fNextA_x5fSeg_x5f10",
	"_nDTV_x5fTMCCInfo_fNextA_x5fSeg_x5f11",
	"_nDTV_x5fTMCCInfo_fNextA_x5fSeg_x5f12",
	"_nDTV_x5fTMCCInfo_fNextA_x5fSeg_x5f13",
	"_nDTV_x5fTMCCInfo_fNextA_x5fReserved_x5fSeg_x5f2",
	"_nDTV_x5fTMCCInfo_fNextA_x5fUnused_x5fLayer_x5fSeg",
	"StdForm");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextB_x5fDQPSK", 
	"NextB DQPSK",
	0,
	"0",
	"NextB DQPSK");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextB_x5fQPSK", 
	"NextB QPSK",
	0,
	"1",
	"NextB QPSK");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextB_x5f16QAM", 
	"NextB 16QAM",
	0,
	"2",
	"NextB 16QAM");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextB_x5f64QAM", 
	"NextB 64QAM",
	0,
	"3",
	"NextB 64QAM");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextB_x5fReserved_x5fMod_x5f1", 
	"NextB Reserved Mod 1",
	0,
	"4",
	"NextB Reserved Mod 1");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextB_x5fReserved_x5fMod_x5f2", 
	"NextB Reserved Mod 2",
	0,
	"5",
	"NextB Reserved Mod 2");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextB_x5fReserved_x5fMod_x5f3", 
	"NextB Reserved Mod 3",
	0,
	"6",
	"NextB Reserved Mod 3");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextB_x5fUnused_x5fLayer_x5fMod", 
	"NextB Unused Layer Mod",
	0,
	"7",
	"NextB Unused Layer Mod");

create_form_set("_nDTV_x5fTMCCInfo_fNextB_x5fModSet",
	"_nDTV_x5fTMCCInfo_fNextB_x5fDQPSK",
	"_nDTV_x5fTMCCInfo_fNextB_x5fQPSK",
	"_nDTV_x5fTMCCInfo_fNextB_x5f16QAM",
	"_nDTV_x5fTMCCInfo_fNextB_x5f64QAM",
	"_nDTV_x5fTMCCInfo_fNextB_x5fReserved_x5fMod_x5f1",
	"_nDTV_x5fTMCCInfo_fNextB_x5fReserved_x5fMod_x5f2",
	"_nDTV_x5fTMCCInfo_fNextB_x5fReserved_x5fMod_x5f3",
	"_nDTV_x5fTMCCInfo_fNextB_x5fUnused_x5fLayer_x5fMod",
	"StdForm");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextB_x5f1_x5f2", 
	"NextB 1/2",
	0,
	"0",
	"NextB 1/2");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextB_x5f2_x5f3", 
	"NextB 2/3",
	0,
	"1",
	"NextB 2/3");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextB_x5f3_x5f4", 
	"NextB 3/4",
	0,
	"2",
	"NextB 3/4");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextB_x5f5_x5f6", 
	"NextB 5/6",
	0,
	"3",
	"NextB 5/6");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextB_x5f7_x5f8", 
	"NextB 7/8",
	0,
	"4",
	"NextB 7/8");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextB_x5fReserved_x5fCod_x5f1", 
	"NextB Reserved Cod 1",
	0,
	"5",
	"NextB Reserved Cod 1");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextB_x5fReserved_x5fCod_x5f2", 
	"NextB Reserved Cod 2",
	0,
	"6",
	"NextB Reserved Cod 2");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextB_x5fUnused_x5fLayer_x5fCod", 
	"NextB Unused Layer Cod",
	0,
	"7",
	"NextB Unused Layer Cod");

create_form_set("_nDTV_x5fTMCCInfo_fNextB_x5fRateSet",
	"_nDTV_x5fTMCCInfo_fNextB_x5f1_x5f2",
	"_nDTV_x5fTMCCInfo_fNextB_x5f2_x5f3",
	"_nDTV_x5fTMCCInfo_fNextB_x5f3_x5f4",
	"_nDTV_x5fTMCCInfo_fNextB_x5f5_x5f6",
	"_nDTV_x5fTMCCInfo_fNextB_x5f7_x5f8",
	"_nDTV_x5fTMCCInfo_fNextB_x5fReserved_x5fCod_x5f1",
	"_nDTV_x5fTMCCInfo_fNextB_x5fReserved_x5fCod_x5f2",
	"_nDTV_x5fTMCCInfo_fNextB_x5fUnused_x5fLayer_x5fCod",
	"StdForm");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextB_x5fInt_x5f0_x5f0_x5f0", 
	"NextB Int 0 0 0",
	0,
	"0",
	"NextB Int 0 0 0");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextB_x5fInt_x5f4_x5f2_x5f1", 
	"NextB Int 4 2 1",
	0,
	"1",
	"NextB Int 4 2 1");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextB_x5fInt_x5f8_x5f4_x5f2", 
	"NextB Int 8 4 2",
	0,
	"2",
	"NextB Int 8 4 2");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextB_x5fInt_x5f16_x5f8_x5f4", 
	"NextB Int 16 8 4",
	0,
	"3",
	"NextB Int 16 8 4");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextB_x5fInt_x5f32_x5f16_x5f8", 
	"NextB Int 32 16 8",
	0,
	"4",
	"NextB Int 32 16 8");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextB_x5fReserved_x5fInt_x5f1", 
	"NextB Reserved Int 1",
	0,
	"5",
	"NextB Reserved Int 1");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextB_x5fReserved_x5fInt_x5f2", 
	"NextB Reserved Int 2",
	0,
	"6",
	"NextB Reserved Int 2");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextB_x5fUnused_x5fLayer_x5fInt", 
	"NextB Unused Layer Int",
	0,
	"7",
	"NextB Unused Layer Int");

create_form_set("_nDTV_x5fTMCCInfo_fNextB_x5fInterlvSet",
	"_nDTV_x5fTMCCInfo_fNextB_x5fInt_x5f0_x5f0_x5f0",
	"_nDTV_x5fTMCCInfo_fNextB_x5fInt_x5f4_x5f2_x5f1",
	"_nDTV_x5fTMCCInfo_fNextB_x5fInt_x5f8_x5f4_x5f2",
	"_nDTV_x5fTMCCInfo_fNextB_x5fInt_x5f16_x5f8_x5f4",
	"_nDTV_x5fTMCCInfo_fNextB_x5fInt_x5f32_x5f16_x5f8",
	"_nDTV_x5fTMCCInfo_fNextB_x5fReserved_x5fInt_x5f1",
	"_nDTV_x5fTMCCInfo_fNextB_x5fReserved_x5fInt_x5f2",
	"_nDTV_x5fTMCCInfo_fNextB_x5fUnused_x5fLayer_x5fInt",
	"StdForm");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextB_x5fReserved_x5fSeg_x5f1", 
	"NextB Reserved Seg 1",
	0,
	"0",
	"NextB Reserved Seg 1");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextB_x5fSeg_x5f1", 
	"NextB Seg 1",
	0,
	"1",
	"NextB Seg 1");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextB_x5fSeg_x5f2", 
	"NextB Seg 2",
	0,
	"2",
	"NextB Seg 2");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextB_x5fSeg_x5f3", 
	"NextB Seg 3",
	0,
	"3",
	"NextB Seg 3");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextB_x5fSeg_x5f4", 
	"NextB Seg 4",
	0,
	"4",
	"NextB Seg 4");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextB_x5fSeg_x5f5", 
	"NextB Seg 5",
	0,
	"5",
	"NextB Seg 5");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextB_x5fSeg_x5f6", 
	"NextB Seg 6",
	0,
	"6",
	"NextB Seg 6");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextB_x5fSeg_x5f7", 
	"NextB Seg 7",
	0,
	"7",
	"NextB Seg 7");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextB_x5fSeg_x5f8", 
	"NextB Seg 8",
	0,
	"8",
	"NextB Seg 8");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextB_x5fSeg_x5f9", 
	"NextB Seg 9",
	0,
	"9",
	"NextB Seg 9");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextB_x5fSeg_x5f10", 
	"NextB Seg 10",
	0,
	"10",
	"NextB Seg 10");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextB_x5fSeg_x5f11", 
	"NextB Seg 11",
	0,
	"11",
	"NextB Seg 11");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextB_x5fSeg_x5f12", 
	"NextB Seg 12",
	0,
	"12",
	"NextB Seg 12");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextB_x5fSeg_x5f13", 
	"NextB Seg 13",
	0,
	"13",
	"NextB Seg 13");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextB_x5fReserved_x5fSeg_x5f2", 
	"NextB Reserved Seg 2",
	0,
	"14",
	"NextB Reserved Seg 2");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextB_x5fUnused_x5fLayer_x5fSeg", 
	"NextB Unused Layer Seg",
	0,
	"15",
	"NextB Unused Layer Seg");

create_form_set("_nDTV_x5fTMCCInfo_fNextB_x5fNumSegSet",
	"_nDTV_x5fTMCCInfo_fNextB_x5fReserved_x5fSeg_x5f1",
	"_nDTV_x5fTMCCInfo_fNextB_x5fSeg_x5f1",
	"_nDTV_x5fTMCCInfo_fNextB_x5fSeg_x5f2",
	"_nDTV_x5fTMCCInfo_fNextB_x5fSeg_x5f3",
	"_nDTV_x5fTMCCInfo_fNextB_x5fSeg_x5f4",
	"_nDTV_x5fTMCCInfo_fNextB_x5fSeg_x5f5",
	"_nDTV_x5fTMCCInfo_fNextB_x5fSeg_x5f6",
	"_nDTV_x5fTMCCInfo_fNextB_x5fSeg_x5f7",
	"_nDTV_x5fTMCCInfo_fNextB_x5fSeg_x5f8",
	"_nDTV_x5fTMCCInfo_fNextB_x5fSeg_x5f9",
	"_nDTV_x5fTMCCInfo_fNextB_x5fSeg_x5f10",
	"_nDTV_x5fTMCCInfo_fNextB_x5fSeg_x5f11",
	"_nDTV_x5fTMCCInfo_fNextB_x5fSeg_x5f12",
	"_nDTV_x5fTMCCInfo_fNextB_x5fSeg_x5f13",
	"_nDTV_x5fTMCCInfo_fNextB_x5fReserved_x5fSeg_x5f2",
	"_nDTV_x5fTMCCInfo_fNextB_x5fUnused_x5fLayer_x5fSeg",
	"StdForm");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextC_x5fDQPSK", 
	"NextC DQPSK",
	0,
	"0",
	"NextC DQPSK");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextC_x5fQPSK", 
	"NextC QPSK",
	0,
	"1",
	"NextC QPSK");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextC_x5f16QAM", 
	"NextC 16QAM",
	0,
	"2",
	"NextC 16QAM");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextC_x5f64QAM", 
	"NextC 64QAM",
	0,
	"3",
	"NextC 64QAM");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextC_x5fReserved_x5fMod_x5f1", 
	"NextC Reserved Mod 1",
	0,
	"4",
	"NextC Reserved Mod 1");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextC_x5fReserved_x5fMod_x5f2", 
	"NextC Reserved Mod 2",
	0,
	"5",
	"NextC Reserved Mod 2");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextC_x5fReserved_x5fMod_x5f3", 
	"NextC Reserved Mod 3",
	0,
	"6",
	"NextC Reserved Mod 3");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextC_x5fUnused_x5fLayer_x5fMod", 
	"NextC Unused Layer Mod",
	0,
	"7",
	"NextC Unused Layer Mod");

create_form_set("_nDTV_x5fTMCCInfo_fNextC_x5fModSet",
	"_nDTV_x5fTMCCInfo_fNextC_x5fDQPSK",
	"_nDTV_x5fTMCCInfo_fNextC_x5fQPSK",
	"_nDTV_x5fTMCCInfo_fNextC_x5f16QAM",
	"_nDTV_x5fTMCCInfo_fNextC_x5f64QAM",
	"_nDTV_x5fTMCCInfo_fNextC_x5fReserved_x5fMod_x5f1",
	"_nDTV_x5fTMCCInfo_fNextC_x5fReserved_x5fMod_x5f2",
	"_nDTV_x5fTMCCInfo_fNextC_x5fReserved_x5fMod_x5f3",
	"_nDTV_x5fTMCCInfo_fNextC_x5fUnused_x5fLayer_x5fMod",
	"StdForm");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextC_x5f1_x5f2", 
	"NextC 1/2",
	0,
	"0",
	"NextC 1/2");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextC_x5f2_x5f3", 
	"NextC 2/3",
	0,
	"1",
	"NextC 2/3");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextC_x5f3_x5f4", 
	"NextC 3/4",
	0,
	"2",
	"NextC 3/4");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextC_x5f5_x5f6", 
	"NextC 5/6",
	0,
	"3",
	"NextC 5/6");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextC_x5f7_x5f8", 
	"NextC 7/8",
	0,
	"4",
	"NextC 7/8");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextC_x5fReserved_x5fCod_x5f1", 
	"NextC Reserved Cod 1",
	0,
	"5",
	"NextC Reserved Cod 1");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextC_x5fReserved_x5fCod_x5f2", 
	"NextC Reserved Cod 2",
	0,
	"6",
	"NextC Reserved Cod 2");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextC_x5fUnused_x5fLayer_x5fCod", 
	"NextC Unused Layer Cod",
	0,
	"7",
	"NextC Unused Layer Cod");

create_form_set("_nDTV_x5fTMCCInfo_fNextC_x5fRateSet",
	"_nDTV_x5fTMCCInfo_fNextC_x5f1_x5f2",
	"_nDTV_x5fTMCCInfo_fNextC_x5f2_x5f3",
	"_nDTV_x5fTMCCInfo_fNextC_x5f3_x5f4",
	"_nDTV_x5fTMCCInfo_fNextC_x5f5_x5f6",
	"_nDTV_x5fTMCCInfo_fNextC_x5f7_x5f8",
	"_nDTV_x5fTMCCInfo_fNextC_x5fReserved_x5fCod_x5f1",
	"_nDTV_x5fTMCCInfo_fNextC_x5fReserved_x5fCod_x5f2",
	"_nDTV_x5fTMCCInfo_fNextC_x5fUnused_x5fLayer_x5fCod",
	"StdForm");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextC_x5fInt_x5f0_x5f0_x5f0", 
	"NextC Int 0 0 0",
	0,
	"0",
	"NextC Int 0 0 0");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextC_x5fInt_x5f4_x5f2_x5f1", 
	"NextC Int 4 2 1",
	0,
	"1",
	"NextC Int 4 2 1");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextC_x5fInt_x5f8_x5f4_x5f2", 
	"NextC Int 8 4 2",
	0,
	"2",
	"NextC Int 8 4 2");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextC_x5fInt_x5f16_x5f8_x5f4", 
	"NextC Int 16 8 4",
	0,
	"3",
	"NextC Int 16 8 4");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextC_x5fInt_x5f32_x5f16_x5f8", 
	"NextC Int 32 16 8",
	0,
	"4",
	"NextC Int 32 16 8");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextC_x5fReserved_x5fInt_x5f1", 
	"NextC Reserved Int 1",
	0,
	"5",
	"NextC Reserved Int 1");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextC_x5fReserved_x5fInt_x5f2", 
	"NextC Reserved Int 2",
	0,
	"6",
	"NextC Reserved Int 2");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextC_x5fUnused_x5fLayer_x5fInt", 
	"NextC Unused Layer Int",
	0,
	"7",
	"NextC Unused Layer Int");

create_form_set("_nDTV_x5fTMCCInfo_fNextC_x5fInterlvSet",
	"_nDTV_x5fTMCCInfo_fNextC_x5fInt_x5f0_x5f0_x5f0",
	"_nDTV_x5fTMCCInfo_fNextC_x5fInt_x5f4_x5f2_x5f1",
	"_nDTV_x5fTMCCInfo_fNextC_x5fInt_x5f8_x5f4_x5f2",
	"_nDTV_x5fTMCCInfo_fNextC_x5fInt_x5f16_x5f8_x5f4",
	"_nDTV_x5fTMCCInfo_fNextC_x5fInt_x5f32_x5f16_x5f8",
	"_nDTV_x5fTMCCInfo_fNextC_x5fReserved_x5fInt_x5f1",
	"_nDTV_x5fTMCCInfo_fNextC_x5fReserved_x5fInt_x5f2",
	"_nDTV_x5fTMCCInfo_fNextC_x5fUnused_x5fLayer_x5fInt",
	"StdForm");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextC_x5fReserved_x5fSeg_x5f1", 
	"NextC Reserved Seg 1",
	0,
	"0",
	"NextC Reserved Seg 1");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextC_x5fSeg_x5f1", 
	"NextC Seg 1",
	0,
	"1",
	"NextC Seg 1");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextC_x5fSeg_x5f2", 
	"NextC Seg 2",
	0,
	"2",
	"NextC Seg 2");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextC_x5fSeg_x5f3", 
	"NextC Seg 3",
	0,
	"3",
	"NextC Seg 3");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextC_x5fSeg_x5f4", 
	"NextC Seg 4",
	0,
	"4",
	"NextC Seg 4");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextC_x5fSeg_x5f5", 
	"NextC Seg 5",
	0,
	"5",
	"NextC Seg 5");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextC_x5fSeg_x5f6", 
	"NextC Seg 6",
	0,
	"6",
	"NextC Seg 6");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextC_x5fSeg_x5f7", 
	"NextC Seg 7",
	0,
	"7",
	"NextC Seg 7");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextC_x5fSeg_x5f8", 
	"NextC Seg 8",
	0,
	"8",
	"NextC Seg 8");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextC_x5fSeg_x5f9", 
	"NextC Seg 9",
	0,
	"9",
	"NextC Seg 9");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextC_x5fSeg_x5f10", 
	"NextC Seg 10",
	0,
	"10",
	"NextC Seg 10");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextC_x5fSeg_x5f11", 
	"NextC Seg 11",
	0,
	"11",
	"NextC Seg 11");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextC_x5fSeg_x5f12", 
	"NextC Seg 12",
	0,
	"12",
	"NextC Seg 12");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextC_x5fSeg_x5f13", 
	"NextC Seg 13",
	0,
	"13",
	"NextC Seg 13");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextC_x5fReserved_x5fSeg_x5f2", 
	"NextC Reserved Seg 2",
	0,
	"14",
	"NextC Reserved Seg 2");

create_constant_form ("_nDTV_x5fTMCCInfo_fNextC_x5fUnused_x5fLayer_x5fSeg", 
	"NextC Unused Layer Seg",
	0,
	"15",
	"NextC Unused Layer Seg");

create_form_set("_nDTV_x5fTMCCInfo_fNextC_x5fNumSegSet",
	"_nDTV_x5fTMCCInfo_fNextC_x5fReserved_x5fSeg_x5f1",
	"_nDTV_x5fTMCCInfo_fNextC_x5fSeg_x5f1",
	"_nDTV_x5fTMCCInfo_fNextC_x5fSeg_x5f2",
	"_nDTV_x5fTMCCInfo_fNextC_x5fSeg_x5f3",
	"_nDTV_x5fTMCCInfo_fNextC_x5fSeg_x5f4",
	"_nDTV_x5fTMCCInfo_fNextC_x5fSeg_x5f5",
	"_nDTV_x5fTMCCInfo_fNextC_x5fSeg_x5f6",
	"_nDTV_x5fTMCCInfo_fNextC_x5fSeg_x5f7",
	"_nDTV_x5fTMCCInfo_fNextC_x5fSeg_x5f8",
	"_nDTV_x5fTMCCInfo_fNextC_x5fSeg_x5f9",
	"_nDTV_x5fTMCCInfo_fNextC_x5fSeg_x5f10",
	"_nDTV_x5fTMCCInfo_fNextC_x5fSeg_x5f11",
	"_nDTV_x5fTMCCInfo_fNextC_x5fSeg_x5f12",
	"_nDTV_x5fTMCCInfo_fNextC_x5fSeg_x5f13",
	"_nDTV_x5fTMCCInfo_fNextC_x5fReserved_x5fSeg_x5f2",
	"_nDTV_x5fTMCCInfo_fNextC_x5fUnused_x5fLayer_x5fSeg",
	"StdForm");

create_item ("DTV_TMCCInfo","TMCC information for 102 bits from b20 to b121 in TMCC bit assignment",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_TMCCInfo",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fTMCCInfo_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_TMCCInfo",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Length","length of TMCC information bits",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","102")),
	create_parm ("Description","system description (2 bits)",
		PARM_INT,
		"_nDTV_x5fTMCCInfo_fDescriptionSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fTMCCInfo_fISDB_x5fT","ISDB_T")),
	create_parm ("Count","index for transmission parameter change (4 bits)",
		PARM_INT,
		"_nDTV_x5fTMCCInfo_fCountSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fTMCCInfo_fOrdinary","Ordinary")),
	create_parm ("Flag","control flag for alert broadcasting (1 bit)",
		PARM_INT,
		"_nDTV_x5fTMCCInfo_fFlagSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fTMCCInfo_fOrdinary_x5fControl","Ordinary_Control")),
	create_parm ("CurFlag","current partial reception layer (1 bit)",
		PARM_INT,
		"_nDTV_x5fTMCCInfo_fCurFlagSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fTMCCInfo_fUsed_x5fCur_x5fFlag","Used_Cur_Flag")),
	create_parm ("CurA_Mod","current modulation for Layer A (3 bits)",
		PARM_INT,
		"_nDTV_x5fTMCCInfo_fCurA_x5fModSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fTMCCInfo_fCurA_x5fDQPSK","CurA_DQPSK")),
	create_parm ("CurA_Rate","current code rate for Layer A ( 3 bits)",
		PARM_INT,
		"_nDTV_x5fTMCCInfo_fCurA_x5fRateSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fTMCCInfo_fCurA_x5f1_x5f2","CurA_1_2")),
	create_parm ("CurA_Interlv","current time interleaver for Layer A (3 bits)",
		PARM_INT,
		"_nDTV_x5fTMCCInfo_fCurA_x5fInterlvSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fTMCCInfo_fCurA_x5fInt_x5f8_x5f4_x5f2","CurA_Int_8_4_2")),
	create_parm ("CurA_NumSeg","current number of segments for Layer A (4 bits)",
		PARM_INT,
		"_nDTV_x5fTMCCInfo_fCurA_x5fNumSegSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fTMCCInfo_fCurA_x5fSeg_x5f13","CurA_Seg_13")),
	create_parm ("CurB_Mod","current modulation for Layer B (3 bits)",
		PARM_INT,
		"_nDTV_x5fTMCCInfo_fCurB_x5fModSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fTMCCInfo_fCurB_x5f16QAM","CurB_16QAM")),
	create_parm ("CurB_Rate","current code rate for Layer B ( 3 bits)",
		PARM_INT,
		"_nDTV_x5fTMCCInfo_fCurB_x5fRateSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fTMCCInfo_fCurB_x5f1_x5f2","CurB_1_2")),
	create_parm ("CurB_Interlv","current time interleaver for Layer B (3 bits)",
		PARM_INT,
		"_nDTV_x5fTMCCInfo_fCurB_x5fInterlvSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fTMCCInfo_fCurB_x5fInt_x5f8_x5f4_x5f2","CurB_Int_8_4_2")),
	create_parm ("CurB_NumSeg","current number of segments for Layer B (4 bits)",
		PARM_INT,
		"_nDTV_x5fTMCCInfo_fCurB_x5fNumSegSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fTMCCInfo_fCurB_x5fUnused_x5fLayer_x5fSeg","CurB_Unused_Layer_Seg")),
	create_parm ("CurC_Mod","current modulation for Layer C (3 bits)",
		PARM_INT,
		"_nDTV_x5fTMCCInfo_fCurC_x5fModSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fTMCCInfo_fCurC_x5f64QAM","CurC_64QAM")),
	create_parm ("CurC_Rate","current code rate for Layer C ( 3 bits)",
		PARM_INT,
		"_nDTV_x5fTMCCInfo_fCurC_x5fRateSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fTMCCInfo_fCurC_x5f1_x5f2","CurC_1_2")),
	create_parm ("CurC_Interlv","current time interleaver for Layer C (3 bits)",
		PARM_INT,
		"_nDTV_x5fTMCCInfo_fCurC_x5fInterlvSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fTMCCInfo_fCurC_x5fInt_x5f8_x5f4_x5f2","CurC_Int_8_4_2")),
	create_parm ("CurC_NumSeg","current number of segments for Layer C (4 bits)",
		PARM_INT,
		"_nDTV_x5fTMCCInfo_fCurC_x5fNumSegSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fTMCCInfo_fCurC_x5fSeg_x5f6","CurC_Seg_6")),
	create_parm ("NextFlag","next partial reception layer (1 bit)",
		PARM_INT,
		"_nDTV_x5fTMCCInfo_fNextFlagSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fTMCCInfo_fUnused_x5fNext_x5fFlag","Unused_Next_Flag")),
	create_parm ("NextA_Mod","next modulation for Layer A (3 bits)",
		PARM_INT,
		"_nDTV_x5fTMCCInfo_fNextA_x5fModSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fTMCCInfo_fNextA_x5fQPSK","NextA_QPSK")),
	create_parm ("NextA_Rate","next code rate for Layer A ( 3 bits)",
		PARM_INT,
		"_nDTV_x5fTMCCInfo_fNextA_x5fRateSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fTMCCInfo_fNextA_x5f1_x5f2","NextA_1_2")),
	create_parm ("NextA_Interlv","next time interleaving for Layer A (3 bits)",
		PARM_INT,
		"_nDTV_x5fTMCCInfo_fNextA_x5fInterlvSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fTMCCInfo_fNextA_x5fInt_x5f8_x5f4_x5f2","NextA_Int_8_4_2")),
	create_parm ("NextA_NumSeg","next number of segments for Layer A (4 bits)",
		PARM_INT,
		"_nDTV_x5fTMCCInfo_fNextA_x5fNumSegSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fTMCCInfo_fNextA_x5fReserved_x5fSeg_x5f1","NextA_Reserved_Seg_1")),
	create_parm ("NextB_Mod","next modulation for Layer B (3 bits)",
		PARM_INT,
		"_nDTV_x5fTMCCInfo_fNextB_x5fModSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fTMCCInfo_fNextB_x5f16QAM","NextB_16QAM")),
	create_parm ("NextB_Rate","next code rate for Layer B ( 3 bits)",
		PARM_INT,
		"_nDTV_x5fTMCCInfo_fNextB_x5fRateSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fTMCCInfo_fNextB_x5f1_x5f2","NextB_1_2")),
	create_parm ("NextB_Interlv","next time interleaving for Layer B (3 bits)",
		PARM_INT,
		"_nDTV_x5fTMCCInfo_fNextB_x5fInterlvSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fTMCCInfo_fNextB_x5fInt_x5f8_x5f4_x5f2","NextB_Int_8_4_2")),
	create_parm ("NextB_NumSeg","next number of segments for Layer B (4 bits)",
		PARM_INT,
		"_nDTV_x5fTMCCInfo_fNextB_x5fNumSegSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fTMCCInfo_fNextB_x5fSeg_x5f6","NextB_Seg_6")),
	create_parm ("NextC_Mod","next modulation for Layer C (3 bits)",
		PARM_INT,
		"_nDTV_x5fTMCCInfo_fNextC_x5fModSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fTMCCInfo_fNextC_x5fQPSK","NextC_QPSK")),
	create_parm ("NextC_Rate","next code rate for Layer C ( 3 bits)",
		PARM_INT,
		"_nDTV_x5fTMCCInfo_fNextC_x5fRateSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fTMCCInfo_fNextC_x5f1_x5f2","NextC_1_2")),
	create_parm ("NextC_Interlv","next time interleaving for Layer C (3 bits)",
		PARM_INT,
		"_nDTV_x5fTMCCInfo_fNextC_x5fInterlvSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fTMCCInfo_fNextC_x5fInt_x5f8_x5f4_x5f2","NextC_Int_8_4_2")),
	create_parm ("NextC_NumSeg","next number of segments for Layer C (4 bits)",
		PARM_INT,
		"_nDTV_x5fTMCCInfo_fNextC_x5fNumSegSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fTMCCInfo_fNextC_x5fSeg_x5f5","NextC_Seg_5")),
	create_parm ("FutureUse","reserved for future use (all set to '1' 15 bits)",
		PARM_INTARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\" 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 \"")));


create_item ("DTV_TMCCDemod","TMCC differential demodulation",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_TMCCDemod",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fTMCCDemod_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_TMCCDemod",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Length","length of TMCC bits per OFDM frame",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","204")));


create_constant_form ("_nDTV_x5fTimeInterlv_fInterleave", 
	"Interleave",
	0,
	"0",
	"Interleave");

create_constant_form ("_nDTV_x5fTimeInterlv_fDeinterleave", 
	"Deinterleave",
	0,
	"1",
	"Deinterleave");

create_form_set("_nDTV_x5fTimeInterlv_fOptionSet",
	"_nDTV_x5fTimeInterlv_fInterleave",
	"_nDTV_x5fTimeInterlv_fDeinterleave",
	"StdForm");

create_constant_form ("_nDTV_x5fTimeInterlv_fConst", 
	"Const",
	0,
	"0",
	"Const");

create_constant_form ("_nDTV_x5fTimeInterlv_fQPSK", 
	"QPSK",
	0,
	"1",
	"QPSK");

create_constant_form ("_nDTV_x5fTimeInterlv_fQAM_x5f16", 
	"QAM 16",
	0,
	"2",
	"QAM 16");

create_constant_form ("_nDTV_x5fTimeInterlv_fQAM_x5f64", 
	"QAM 64",
	0,
	"3",
	"QAM 64");

create_form_set("_nDTV_x5fTimeInterlv_fInitialTypeSet",
	"_nDTV_x5fTimeInterlv_fConst",
	"_nDTV_x5fTimeInterlv_fQPSK",
	"_nDTV_x5fTimeInterlv_fQAM_x5f16",
	"_nDTV_x5fTimeInterlv_fQAM_x5f64",
	"StdForm");

create_item ("DTV_TimeInterlv","Interleaver and deinterleaver of complex data",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_TimeInterlv",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fTimeInterlv_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_TimeInterlv",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Carriers","numbers of carriers in each segment for specific OFDM modulation mode",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","96")),
	create_parm ("Segments","number of segments to be interleaved simultaneously",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","13")),
	create_parm ("Option","option for interleaving or de-interleaving",
		PARM_INT,
		"_nDTV_x5fTimeInterlv_fOptionSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fTimeInterlv_fInterleave","Interleave")),
	create_parm ("Initial_value","initial value in interleaver delay FIFOs",
		PARM_COMPLEX,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0+j*0.0")),
	create_parm ("I","factor to multiply when caculating delay period for interleaver branches",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("InitialType","interleaver delay FIFOs initial value type",
		PARM_INT,
		"_nDTV_x5fTimeInterlv_fInitialTypeSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fTimeInterlv_fConst","Const")));


create_constant_form ("_nDTV_x5fSynTwoLayTSP_fA_x5fDQPSK", 
	"A DQPSK",
	0,
	"0",
	"A DQPSK");

create_constant_form ("_nDTV_x5fSynTwoLayTSP_fA_x5fQPSK", 
	"A QPSK",
	0,
	"1",
	"A QPSK");

create_constant_form ("_nDTV_x5fSynTwoLayTSP_fA_x5f16QAM", 
	"A 16QAM",
	0,
	"2",
	"A 16QAM");

create_constant_form ("_nDTV_x5fSynTwoLayTSP_fA_x5f64QAM", 
	"A 64QAM",
	0,
	"3",
	"A 64QAM");

create_form_set("_nDTV_x5fSynTwoLayTSP_fLayerA_x5fModulationSet",
	"_nDTV_x5fSynTwoLayTSP_fA_x5fDQPSK",
	"_nDTV_x5fSynTwoLayTSP_fA_x5fQPSK",
	"_nDTV_x5fSynTwoLayTSP_fA_x5f16QAM",
	"_nDTV_x5fSynTwoLayTSP_fA_x5f64QAM",
	"StdForm");

create_constant_form ("_nDTV_x5fSynTwoLayTSP_fA_x5f1_x5f2", 
	"A 1/2",
	0,
	"0",
	"A 1/2");

create_constant_form ("_nDTV_x5fSynTwoLayTSP_fA_x5f2_x5f3", 
	"A 2/3",
	0,
	"1",
	"A 2/3");

create_constant_form ("_nDTV_x5fSynTwoLayTSP_fA_x5f3_x5f4", 
	"A 3/4",
	0,
	"2",
	"A 3/4");

create_constant_form ("_nDTV_x5fSynTwoLayTSP_fA_x5f5_x5f6", 
	"A 5/6",
	0,
	"3",
	"A 5/6");

create_constant_form ("_nDTV_x5fSynTwoLayTSP_fA_x5f7_x5f8", 
	"A 7/8",
	0,
	"4",
	"A 7/8");

create_form_set("_nDTV_x5fSynTwoLayTSP_fLayerA_x5fConvolutional_x5fCodeSet",
	"_nDTV_x5fSynTwoLayTSP_fA_x5f1_x5f2",
	"_nDTV_x5fSynTwoLayTSP_fA_x5f2_x5f3",
	"_nDTV_x5fSynTwoLayTSP_fA_x5f3_x5f4",
	"_nDTV_x5fSynTwoLayTSP_fA_x5f5_x5f6",
	"_nDTV_x5fSynTwoLayTSP_fA_x5f7_x5f8",
	"StdForm");

create_constant_form ("_nDTV_x5fSynTwoLayTSP_fB_x5fDQPSK", 
	"B DQPSK",
	0,
	"0",
	"B DQPSK");

create_constant_form ("_nDTV_x5fSynTwoLayTSP_fB_x5fQPSK", 
	"B QPSK",
	0,
	"1",
	"B QPSK");

create_constant_form ("_nDTV_x5fSynTwoLayTSP_fB_x5f16QAM", 
	"B 16QAM",
	0,
	"2",
	"B 16QAM");

create_constant_form ("_nDTV_x5fSynTwoLayTSP_fB_x5f64QAM", 
	"B 64QAM",
	0,
	"3",
	"B 64QAM");

create_form_set("_nDTV_x5fSynTwoLayTSP_fLayerB_x5fModulationSet",
	"_nDTV_x5fSynTwoLayTSP_fB_x5fDQPSK",
	"_nDTV_x5fSynTwoLayTSP_fB_x5fQPSK",
	"_nDTV_x5fSynTwoLayTSP_fB_x5f16QAM",
	"_nDTV_x5fSynTwoLayTSP_fB_x5f64QAM",
	"StdForm");

create_constant_form ("_nDTV_x5fSynTwoLayTSP_fB_x5f1_x5f2", 
	"B 1/2",
	0,
	"0",
	"B 1/2");

create_constant_form ("_nDTV_x5fSynTwoLayTSP_fB_x5f2_x5f3", 
	"B 2/3",
	0,
	"1",
	"B 2/3");

create_constant_form ("_nDTV_x5fSynTwoLayTSP_fB_x5f3_x5f4", 
	"B 3/4",
	0,
	"2",
	"B 3/4");

create_constant_form ("_nDTV_x5fSynTwoLayTSP_fB_x5f5_x5f6", 
	"B 5/6",
	0,
	"3",
	"B 5/6");

create_constant_form ("_nDTV_x5fSynTwoLayTSP_fB_x5f7_x5f8", 
	"B 7/8",
	0,
	"4",
	"B 7/8");

create_form_set("_nDTV_x5fSynTwoLayTSP_fLayerB_x5fConvolutional_x5fCodeSet",
	"_nDTV_x5fSynTwoLayTSP_fB_x5f1_x5f2",
	"_nDTV_x5fSynTwoLayTSP_fB_x5f2_x5f3",
	"_nDTV_x5fSynTwoLayTSP_fB_x5f3_x5f4",
	"_nDTV_x5fSynTwoLayTSP_fB_x5f5_x5f6",
	"_nDTV_x5fSynTwoLayTSP_fB_x5f7_x5f8",
	"StdForm");

create_item ("DTV_SynTwoLayTSP","Synthesizer for 2-layer TSP into one TSP stream",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_SynTwoLayTSP",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fSynTwoLayTSP_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_SynTwoLayTSP",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Length","number of bytes in one TSP",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","204")),
	create_parm ("SegmentsA","number of segments in layer A",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","5")),
	create_parm ("LayerA_Modulation","modulation mode for layer A",
		PARM_INT,
		"_nDTV_x5fSynTwoLayTSP_fLayerA_x5fModulationSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fSynTwoLayTSP_fA_x5fDQPSK","A_DQPSK")),
	create_parm ("LayerA_Convolutional_Code","convolutional code rate for layer A",
		PARM_INT,
		"_nDTV_x5fSynTwoLayTSP_fLayerA_x5fConvolutional_x5fCodeSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fSynTwoLayTSP_fA_x5f1_x5f2","A_1_2")),
	create_parm ("SegmentsB","number of segments in layer B",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("LayerB_Modulation","modulation mode for Layer B",
		PARM_INT,
		"_nDTV_x5fSynTwoLayTSP_fLayerB_x5fModulationSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fSynTwoLayTSP_fB_x5fDQPSK","B_DQPSK")),
	create_parm ("LayerB_Convolutional_Code","convolutional code rate for layer B",
		PARM_INT,
		"_nDTV_x5fSynTwoLayTSP_fLayerB_x5fConvolutional_x5fCodeSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fSynTwoLayTSP_fB_x5f7_x5f8","B_7_8")));


create_item ("DTV_SynTwoLayData","Synthesizer for 2-layer data into one stream",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_SynTwoLayData",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fSynTwoLayData_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_SynTwoLayData",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Carriers","number of carriers in one segment",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","432")),
	create_parm ("SegmentsA","number of segments in layer A",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("SegmentsB","number of segments in layer B",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));


create_constant_form ("_nDTV_x5fSynThreeLayTSP_fA_x5fDQPSK", 
	"A DQPSK",
	0,
	"0",
	"A DQPSK");

create_constant_form ("_nDTV_x5fSynThreeLayTSP_fA_x5fQPSK", 
	"A QPSK",
	0,
	"1",
	"A QPSK");

create_constant_form ("_nDTV_x5fSynThreeLayTSP_fA_x5f16QAM", 
	"A 16QAM",
	0,
	"2",
	"A 16QAM");

create_constant_form ("_nDTV_x5fSynThreeLayTSP_fA_x5f64QAM", 
	"A 64QAM",
	0,
	"3",
	"A 64QAM");

create_form_set("_nDTV_x5fSynThreeLayTSP_fLayerA_x5fModulationSet",
	"_nDTV_x5fSynThreeLayTSP_fA_x5fDQPSK",
	"_nDTV_x5fSynThreeLayTSP_fA_x5fQPSK",
	"_nDTV_x5fSynThreeLayTSP_fA_x5f16QAM",
	"_nDTV_x5fSynThreeLayTSP_fA_x5f64QAM",
	"StdForm");

create_constant_form ("_nDTV_x5fSynThreeLayTSP_fA_x5f1_x5f2", 
	"A 1/2",
	0,
	"0",
	"A 1/2");

create_constant_form ("_nDTV_x5fSynThreeLayTSP_fA_x5f2_x5f3", 
	"A 2/3",
	0,
	"1",
	"A 2/3");

create_constant_form ("_nDTV_x5fSynThreeLayTSP_fA_x5f3_x5f4", 
	"A 3/4",
	0,
	"2",
	"A 3/4");

create_constant_form ("_nDTV_x5fSynThreeLayTSP_fA_x5f5_x5f6", 
	"A 5/6",
	0,
	"3",
	"A 5/6");

create_constant_form ("_nDTV_x5fSynThreeLayTSP_fA_x5f7_x5f8", 
	"A 7/8",
	0,
	"4",
	"A 7/8");

create_form_set("_nDTV_x5fSynThreeLayTSP_fLayerA_x5fConvolutional_x5fCodeSet",
	"_nDTV_x5fSynThreeLayTSP_fA_x5f1_x5f2",
	"_nDTV_x5fSynThreeLayTSP_fA_x5f2_x5f3",
	"_nDTV_x5fSynThreeLayTSP_fA_x5f3_x5f4",
	"_nDTV_x5fSynThreeLayTSP_fA_x5f5_x5f6",
	"_nDTV_x5fSynThreeLayTSP_fA_x5f7_x5f8",
	"StdForm");

create_constant_form ("_nDTV_x5fSynThreeLayTSP_fB_x5fDQPSK", 
	"B DQPSK",
	0,
	"0",
	"B DQPSK");

create_constant_form ("_nDTV_x5fSynThreeLayTSP_fB_x5fQPSK", 
	"B QPSK",
	0,
	"1",
	"B QPSK");

create_constant_form ("_nDTV_x5fSynThreeLayTSP_fB_x5f16QAM", 
	"B 16QAM",
	0,
	"2",
	"B 16QAM");

create_constant_form ("_nDTV_x5fSynThreeLayTSP_fB_x5f64QAM", 
	"B 64QAM",
	0,
	"3",
	"B 64QAM");

create_form_set("_nDTV_x5fSynThreeLayTSP_fLayerB_x5fModulationSet",
	"_nDTV_x5fSynThreeLayTSP_fB_x5fDQPSK",
	"_nDTV_x5fSynThreeLayTSP_fB_x5fQPSK",
	"_nDTV_x5fSynThreeLayTSP_fB_x5f16QAM",
	"_nDTV_x5fSynThreeLayTSP_fB_x5f64QAM",
	"StdForm");

create_constant_form ("_nDTV_x5fSynThreeLayTSP_fB_x5f1_x5f2", 
	"B 1/2",
	0,
	"0",
	"B 1/2");

create_constant_form ("_nDTV_x5fSynThreeLayTSP_fB_x5f2_x5f3", 
	"B 2/3",
	0,
	"1",
	"B 2/3");

create_constant_form ("_nDTV_x5fSynThreeLayTSP_fB_x5f3_x5f4", 
	"B 3/4",
	0,
	"2",
	"B 3/4");

create_constant_form ("_nDTV_x5fSynThreeLayTSP_fB_x5f5_x5f6", 
	"B 5/6",
	0,
	"3",
	"B 5/6");

create_constant_form ("_nDTV_x5fSynThreeLayTSP_fB_x5f7_x5f8", 
	"B 7/8",
	0,
	"4",
	"B 7/8");

create_form_set("_nDTV_x5fSynThreeLayTSP_fLayerB_x5fConvolutional_x5fCodeSet",
	"_nDTV_x5fSynThreeLayTSP_fB_x5f1_x5f2",
	"_nDTV_x5fSynThreeLayTSP_fB_x5f2_x5f3",
	"_nDTV_x5fSynThreeLayTSP_fB_x5f3_x5f4",
	"_nDTV_x5fSynThreeLayTSP_fB_x5f5_x5f6",
	"_nDTV_x5fSynThreeLayTSP_fB_x5f7_x5f8",
	"StdForm");

create_constant_form ("_nDTV_x5fSynThreeLayTSP_fC_x5fDQPSK", 
	"C DQPSK",
	0,
	"0",
	"C DQPSK");

create_constant_form ("_nDTV_x5fSynThreeLayTSP_fC_x5fQPSK", 
	"C QPSK",
	0,
	"1",
	"C QPSK");

create_constant_form ("_nDTV_x5fSynThreeLayTSP_fC_x5f16QAM", 
	"C 16QAM",
	0,
	"2",
	"C 16QAM");

create_constant_form ("_nDTV_x5fSynThreeLayTSP_fC_x5f64QAM", 
	"C 64QAM",
	0,
	"3",
	"C 64QAM");

create_form_set("_nDTV_x5fSynThreeLayTSP_fLayerC_x5fModulationSet",
	"_nDTV_x5fSynThreeLayTSP_fC_x5fDQPSK",
	"_nDTV_x5fSynThreeLayTSP_fC_x5fQPSK",
	"_nDTV_x5fSynThreeLayTSP_fC_x5f16QAM",
	"_nDTV_x5fSynThreeLayTSP_fC_x5f64QAM",
	"StdForm");

create_constant_form ("_nDTV_x5fSynThreeLayTSP_fC_x5f1_x5f2", 
	"C 1/2",
	0,
	"0",
	"C 1/2");

create_constant_form ("_nDTV_x5fSynThreeLayTSP_fC_x5f2_x5f3", 
	"C 2/3",
	0,
	"1",
	"C 2/3");

create_constant_form ("_nDTV_x5fSynThreeLayTSP_fC_x5f3_x5f4", 
	"C 3/4",
	0,
	"2",
	"C 3/4");

create_constant_form ("_nDTV_x5fSynThreeLayTSP_fC_x5f5_x5f6", 
	"C 5/6",
	0,
	"3",
	"C 5/6");

create_constant_form ("_nDTV_x5fSynThreeLayTSP_fC_x5f7_x5f8", 
	"C 7/8",
	0,
	"4",
	"C 7/8");

create_form_set("_nDTV_x5fSynThreeLayTSP_fLayerC_x5fConvolutional_x5fCodeSet",
	"_nDTV_x5fSynThreeLayTSP_fC_x5f1_x5f2",
	"_nDTV_x5fSynThreeLayTSP_fC_x5f2_x5f3",
	"_nDTV_x5fSynThreeLayTSP_fC_x5f3_x5f4",
	"_nDTV_x5fSynThreeLayTSP_fC_x5f5_x5f6",
	"_nDTV_x5fSynThreeLayTSP_fC_x5f7_x5f8",
	"StdForm");

create_item ("DTV_SynThreeLayTSP","Synthesizer for 3-layer TSP into one TSP stream",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_SynThreeLayTSP",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fSynThreeLayTSP_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_SynThreeLayTSP",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Length","number of bytes in one TSP",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","204")),
	create_parm ("SegmentsA","number of segments in layer A",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("LayerA_Modulation","modulation mode for layer A",
		PARM_INT,
		"_nDTV_x5fSynThreeLayTSP_fLayerA_x5fModulationSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fSynThreeLayTSP_fA_x5fDQPSK","A_DQPSK")),
	create_parm ("LayerA_Convolutional_Code","convolutional code rate for layer A",
		PARM_INT,
		"_nDTV_x5fSynThreeLayTSP_fLayerA_x5fConvolutional_x5fCodeSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fSynThreeLayTSP_fA_x5f1_x5f2","A_1_2")),
	create_parm ("SegmentsB","number of segments in layer B",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","5")),
	create_parm ("LayerB_Modulation","modulation mode for layer B",
		PARM_INT,
		"_nDTV_x5fSynThreeLayTSP_fLayerB_x5fModulationSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fSynThreeLayTSP_fB_x5fQPSK","B_QPSK")),
	create_parm ("LayerB_Convolutional_Code","convolutional code rate for layer B",
		PARM_INT,
		"_nDTV_x5fSynThreeLayTSP_fLayerB_x5fConvolutional_x5fCodeSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fSynThreeLayTSP_fB_x5f7_x5f8","B_7_8")),
	create_parm ("SegmentsC","number of segments in layer C",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","7")),
	create_parm ("LayerC_Modulation","modulation mode for layer C",
		PARM_INT,
		"_nDTV_x5fSynThreeLayTSP_fLayerC_x5fModulationSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fSynThreeLayTSP_fC_x5f64QAM","C_64QAM")),
	create_parm ("LayerC_Convolutional_Code","convolutional code rate for layer C",
		PARM_INT,
		"_nDTV_x5fSynThreeLayTSP_fLayerC_x5fConvolutional_x5fCodeSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fSynThreeLayTSP_fC_x5f7_x5f8","C_7_8")));


create_item ("DTV_SynThreeLayData","Synthesizer for 3-layer data into one stream",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_SynThreeLayData",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fSynThreeLayData_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_SynThreeLayData",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Carriers","number of carriers in one segment",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","432")),
	create_parm ("SegmentsA","number of segments in layer A",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("SegmentsB","number of segments in layer B",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("SegmentsC","number of segments in layer C",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));


create_item ("DTV_SynLayTMCC3","Synthesizer for 3-layer TMCC received into one TMCC format",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_SynLayTMCC3",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fSynLayTMCC3_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_SynLayTMCC3",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SegmentsA","number of segments in layer A",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("SegmentsB","number of segments in layer B",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("SegmentsC","number of segments in layer C",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));


create_item ("DTV_SynLayTMCC2","Synthesizer for 2-layer TMCC received into one TMCC format",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_SynLayTMCC2",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fSynLayTMCC2_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_SynLayTMCC2",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SegmentsA","number of segments in layer A",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("SegmentsB","number of segments in layer B",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));


create_item ("DTV_SynLayTMCC1","Synthesizer for 1-layer TMCC received into one TMCC format",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_SynLayTMCC1",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fSynLayTMCC1_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_SynLayTMCC1",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Segments","number of segments",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));


create_constant_form ("_nDTV_x5fSplitTwoLayTSP_fA_x5fDQPSK", 
	"A DQPSK",
	0,
	"0",
	"A DQPSK");

create_constant_form ("_nDTV_x5fSplitTwoLayTSP_fA_x5fQPSK", 
	"A QPSK",
	0,
	"1",
	"A QPSK");

create_constant_form ("_nDTV_x5fSplitTwoLayTSP_fA_x5f16QAM", 
	"A 16QAM",
	0,
	"2",
	"A 16QAM");

create_constant_form ("_nDTV_x5fSplitTwoLayTSP_fA_x5f64QAM", 
	"A 64QAM",
	0,
	"3",
	"A 64QAM");

create_form_set("_nDTV_x5fSplitTwoLayTSP_fLayerA_x5fModulationSet",
	"_nDTV_x5fSplitTwoLayTSP_fA_x5fDQPSK",
	"_nDTV_x5fSplitTwoLayTSP_fA_x5fQPSK",
	"_nDTV_x5fSplitTwoLayTSP_fA_x5f16QAM",
	"_nDTV_x5fSplitTwoLayTSP_fA_x5f64QAM",
	"StdForm");

create_constant_form ("_nDTV_x5fSplitTwoLayTSP_fA_x5f1_x5f2", 
	"A 1/2",
	0,
	"0",
	"A 1/2");

create_constant_form ("_nDTV_x5fSplitTwoLayTSP_fA_x5f2_x5f3", 
	"A 2/3",
	0,
	"1",
	"A 2/3");

create_constant_form ("_nDTV_x5fSplitTwoLayTSP_fA_x5f3_x5f4", 
	"A 3/4",
	0,
	"2",
	"A 3/4");

create_constant_form ("_nDTV_x5fSplitTwoLayTSP_fA_x5f5_x5f6", 
	"A 5/6",
	0,
	"3",
	"A 5/6");

create_constant_form ("_nDTV_x5fSplitTwoLayTSP_fA_x5f7_x5f8", 
	"A 7/8",
	0,
	"4",
	"A 7/8");

create_form_set("_nDTV_x5fSplitTwoLayTSP_fLayerA_x5fConvolutional_x5fCodeSet",
	"_nDTV_x5fSplitTwoLayTSP_fA_x5f1_x5f2",
	"_nDTV_x5fSplitTwoLayTSP_fA_x5f2_x5f3",
	"_nDTV_x5fSplitTwoLayTSP_fA_x5f3_x5f4",
	"_nDTV_x5fSplitTwoLayTSP_fA_x5f5_x5f6",
	"_nDTV_x5fSplitTwoLayTSP_fA_x5f7_x5f8",
	"StdForm");

create_constant_form ("_nDTV_x5fSplitTwoLayTSP_fB_x5fDQPSK", 
	"B DQPSK",
	0,
	"0",
	"B DQPSK");

create_constant_form ("_nDTV_x5fSplitTwoLayTSP_fB_x5fQPSK", 
	"B QPSK",
	0,
	"1",
	"B QPSK");

create_constant_form ("_nDTV_x5fSplitTwoLayTSP_fB_x5f16QAM", 
	"B 16QAM",
	0,
	"2",
	"B 16QAM");

create_constant_form ("_nDTV_x5fSplitTwoLayTSP_fB_x5f64QAM", 
	"B 64QAM",
	0,
	"3",
	"B 64QAM");

create_form_set("_nDTV_x5fSplitTwoLayTSP_fLayerB_x5fModulationSet",
	"_nDTV_x5fSplitTwoLayTSP_fB_x5fDQPSK",
	"_nDTV_x5fSplitTwoLayTSP_fB_x5fQPSK",
	"_nDTV_x5fSplitTwoLayTSP_fB_x5f16QAM",
	"_nDTV_x5fSplitTwoLayTSP_fB_x5f64QAM",
	"StdForm");

create_constant_form ("_nDTV_x5fSplitTwoLayTSP_fB_x5f1_x5f2", 
	"B 1/2",
	0,
	"0",
	"B 1/2");

create_constant_form ("_nDTV_x5fSplitTwoLayTSP_fB_x5f2_x5f3", 
	"B 2/3",
	0,
	"1",
	"B 2/3");

create_constant_form ("_nDTV_x5fSplitTwoLayTSP_fB_x5f3_x5f4", 
	"B 3/4",
	0,
	"2",
	"B 3/4");

create_constant_form ("_nDTV_x5fSplitTwoLayTSP_fB_x5f5_x5f6", 
	"B 5/6",
	0,
	"3",
	"B 5/6");

create_constant_form ("_nDTV_x5fSplitTwoLayTSP_fB_x5f7_x5f8", 
	"B 7/8",
	0,
	"4",
	"B 7/8");

create_form_set("_nDTV_x5fSplitTwoLayTSP_fLayerB_x5fConvolutional_x5fCodeSet",
	"_nDTV_x5fSplitTwoLayTSP_fB_x5f1_x5f2",
	"_nDTV_x5fSplitTwoLayTSP_fB_x5f2_x5f3",
	"_nDTV_x5fSplitTwoLayTSP_fB_x5f3_x5f4",
	"_nDTV_x5fSplitTwoLayTSP_fB_x5f5_x5f6",
	"_nDTV_x5fSplitTwoLayTSP_fB_x5f7_x5f8",
	"StdForm");

create_item ("DTV_SplitTwoLayTSP","TSP stream splitter into 2-layer TSP stream",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_SplitTwoLayTSP",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fSplitTwoLayTSP_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_SplitTwoLayTSP",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Length","number of bytes in one TSP",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","204")),
	create_parm ("SegmentsA","number of segments in layer A",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","5")),
	create_parm ("LayerA_Modulation","modulation mode for layer A",
		PARM_INT,
		"_nDTV_x5fSplitTwoLayTSP_fLayerA_x5fModulationSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fSplitTwoLayTSP_fA_x5fDQPSK","A_DQPSK")),
	create_parm ("LayerA_Convolutional_Code","convolutional code rate for layer A",
		PARM_INT,
		"_nDTV_x5fSplitTwoLayTSP_fLayerA_x5fConvolutional_x5fCodeSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fSplitTwoLayTSP_fA_x5f1_x5f2","A_1_2")),
	create_parm ("SegmentsB","number of segments in layer B",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("LayerB_Modulation","modulation mode for layer B",
		PARM_INT,
		"_nDTV_x5fSplitTwoLayTSP_fLayerB_x5fModulationSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fSplitTwoLayTSP_fB_x5fDQPSK","B_DQPSK")),
	create_parm ("LayerB_Convolutional_Code","convolutional code rate for layer B",
		PARM_INT,
		"_nDTV_x5fSplitTwoLayTSP_fLayerB_x5fConvolutional_x5fCodeSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fSplitTwoLayTSP_fB_x5f7_x5f8","B_7_8")));


create_item ("DTV_SplitTwoLayData","Data stream splitter into 2-layer data",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_SplitTwoLayData",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fSplitTwoLayData_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_SplitTwoLayData",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Carriers","number of carriers in one segment",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","432")),
	create_parm ("SegmentsA","number of segments in layer A",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("SegmentsB","number of segments in layer B",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));


create_constant_form ("_nDTV_x5fSplitThreeLayTSP_fA_x5fDQPSK", 
	"A DQPSK",
	0,
	"0",
	"A DQPSK");

create_constant_form ("_nDTV_x5fSplitThreeLayTSP_fA_x5fQPSK", 
	"A QPSK",
	0,
	"1",
	"A QPSK");

create_constant_form ("_nDTV_x5fSplitThreeLayTSP_fA_x5f16QAM", 
	"A 16QAM",
	0,
	"2",
	"A 16QAM");

create_constant_form ("_nDTV_x5fSplitThreeLayTSP_fA_x5f64QAM", 
	"A 64QAM",
	0,
	"3",
	"A 64QAM");

create_form_set("_nDTV_x5fSplitThreeLayTSP_fLayerA_x5fModulationSet",
	"_nDTV_x5fSplitThreeLayTSP_fA_x5fDQPSK",
	"_nDTV_x5fSplitThreeLayTSP_fA_x5fQPSK",
	"_nDTV_x5fSplitThreeLayTSP_fA_x5f16QAM",
	"_nDTV_x5fSplitThreeLayTSP_fA_x5f64QAM",
	"StdForm");

create_constant_form ("_nDTV_x5fSplitThreeLayTSP_fA_x5f1_x5f2", 
	"A 1/2",
	0,
	"0",
	"A 1/2");

create_constant_form ("_nDTV_x5fSplitThreeLayTSP_fA_x5f2_x5f3", 
	"A 2/3",
	0,
	"1",
	"A 2/3");

create_constant_form ("_nDTV_x5fSplitThreeLayTSP_fA_x5f3_x5f4", 
	"A 3/4",
	0,
	"2",
	"A 3/4");

create_constant_form ("_nDTV_x5fSplitThreeLayTSP_fA_x5f5_x5f6", 
	"A 5/6",
	0,
	"3",
	"A 5/6");

create_constant_form ("_nDTV_x5fSplitThreeLayTSP_fA_x5f7_x5f8", 
	"A 7/8",
	0,
	"4",
	"A 7/8");

create_form_set("_nDTV_x5fSplitThreeLayTSP_fLayerA_x5fConvolutional_x5fCodeSet",
	"_nDTV_x5fSplitThreeLayTSP_fA_x5f1_x5f2",
	"_nDTV_x5fSplitThreeLayTSP_fA_x5f2_x5f3",
	"_nDTV_x5fSplitThreeLayTSP_fA_x5f3_x5f4",
	"_nDTV_x5fSplitThreeLayTSP_fA_x5f5_x5f6",
	"_nDTV_x5fSplitThreeLayTSP_fA_x5f7_x5f8",
	"StdForm");

create_constant_form ("_nDTV_x5fSplitThreeLayTSP_fB_x5fDQPSK", 
	"B DQPSK",
	0,
	"0",
	"B DQPSK");

create_constant_form ("_nDTV_x5fSplitThreeLayTSP_fB_x5fQPSK", 
	"B QPSK",
	0,
	"1",
	"B QPSK");

create_constant_form ("_nDTV_x5fSplitThreeLayTSP_fB_x5f16QAM", 
	"B 16QAM",
	0,
	"2",
	"B 16QAM");

create_constant_form ("_nDTV_x5fSplitThreeLayTSP_fB_x5f64QAM", 
	"B 64QAM",
	0,
	"3",
	"B 64QAM");

create_form_set("_nDTV_x5fSplitThreeLayTSP_fLayerB_x5fModulationSet",
	"_nDTV_x5fSplitThreeLayTSP_fB_x5fDQPSK",
	"_nDTV_x5fSplitThreeLayTSP_fB_x5fQPSK",
	"_nDTV_x5fSplitThreeLayTSP_fB_x5f16QAM",
	"_nDTV_x5fSplitThreeLayTSP_fB_x5f64QAM",
	"StdForm");

create_constant_form ("_nDTV_x5fSplitThreeLayTSP_fB_x5f1_x5f2", 
	"B 1/2",
	0,
	"0",
	"B 1/2");

create_constant_form ("_nDTV_x5fSplitThreeLayTSP_fB_x5f2_x5f3", 
	"B 2/3",
	0,
	"1",
	"B 2/3");

create_constant_form ("_nDTV_x5fSplitThreeLayTSP_fB_x5f3_x5f4", 
	"B 3/4",
	0,
	"2",
	"B 3/4");

create_constant_form ("_nDTV_x5fSplitThreeLayTSP_fB_x5f5_x5f6", 
	"B 5/6",
	0,
	"3",
	"B 5/6");

create_constant_form ("_nDTV_x5fSplitThreeLayTSP_fB_x5f7_x5f8", 
	"B 7/8",
	0,
	"4",
	"B 7/8");

create_form_set("_nDTV_x5fSplitThreeLayTSP_fLayerB_x5fConvolutional_x5fCodeSet",
	"_nDTV_x5fSplitThreeLayTSP_fB_x5f1_x5f2",
	"_nDTV_x5fSplitThreeLayTSP_fB_x5f2_x5f3",
	"_nDTV_x5fSplitThreeLayTSP_fB_x5f3_x5f4",
	"_nDTV_x5fSplitThreeLayTSP_fB_x5f5_x5f6",
	"_nDTV_x5fSplitThreeLayTSP_fB_x5f7_x5f8",
	"StdForm");

create_constant_form ("_nDTV_x5fSplitThreeLayTSP_fC_x5fDQPSK", 
	"C DQPSK",
	0,
	"0",
	"C DQPSK");

create_constant_form ("_nDTV_x5fSplitThreeLayTSP_fC_x5fQPSK", 
	"C QPSK",
	0,
	"1",
	"C QPSK");

create_constant_form ("_nDTV_x5fSplitThreeLayTSP_fC_x5f16QAM", 
	"C 16QAM",
	0,
	"2",
	"C 16QAM");

create_constant_form ("_nDTV_x5fSplitThreeLayTSP_fC_x5f64QAM", 
	"C 64QAM",
	0,
	"3",
	"C 64QAM");

create_form_set("_nDTV_x5fSplitThreeLayTSP_fLayerC_x5fModulationSet",
	"_nDTV_x5fSplitThreeLayTSP_fC_x5fDQPSK",
	"_nDTV_x5fSplitThreeLayTSP_fC_x5fQPSK",
	"_nDTV_x5fSplitThreeLayTSP_fC_x5f16QAM",
	"_nDTV_x5fSplitThreeLayTSP_fC_x5f64QAM",
	"StdForm");

create_constant_form ("_nDTV_x5fSplitThreeLayTSP_fC_x5f1_x5f2", 
	"C 1/2",
	0,
	"0",
	"C 1/2");

create_constant_form ("_nDTV_x5fSplitThreeLayTSP_fC_x5f2_x5f3", 
	"C 2/3",
	0,
	"1",
	"C 2/3");

create_constant_form ("_nDTV_x5fSplitThreeLayTSP_fC_x5f3_x5f4", 
	"C 3/4",
	0,
	"2",
	"C 3/4");

create_constant_form ("_nDTV_x5fSplitThreeLayTSP_fC_x5f5_x5f6", 
	"C 5/6",
	0,
	"3",
	"C 5/6");

create_constant_form ("_nDTV_x5fSplitThreeLayTSP_fC_x5f7_x5f8", 
	"C 7/8",
	0,
	"4",
	"C 7/8");

create_form_set("_nDTV_x5fSplitThreeLayTSP_fLayerC_x5fConvolutional_x5fCodeSet",
	"_nDTV_x5fSplitThreeLayTSP_fC_x5f1_x5f2",
	"_nDTV_x5fSplitThreeLayTSP_fC_x5f2_x5f3",
	"_nDTV_x5fSplitThreeLayTSP_fC_x5f3_x5f4",
	"_nDTV_x5fSplitThreeLayTSP_fC_x5f5_x5f6",
	"_nDTV_x5fSplitThreeLayTSP_fC_x5f7_x5f8",
	"StdForm");

create_item ("DTV_SplitThreeLayTSP","TSP stream splitter into 3-layer TSP stream",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_SplitThreeLayTSP",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fSplitThreeLayTSP_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_SplitThreeLayTSP",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Length","number of bytes in one TSP",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","204")),
	create_parm ("SegmentsA","number of segments in layer A",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("LayerA_Modulation","modulation mode for layer A",
		PARM_INT,
		"_nDTV_x5fSplitThreeLayTSP_fLayerA_x5fModulationSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fSplitThreeLayTSP_fA_x5fDQPSK","A_DQPSK")),
	create_parm ("LayerA_Convolutional_Code","convolutional code rate for layer A",
		PARM_INT,
		"_nDTV_x5fSplitThreeLayTSP_fLayerA_x5fConvolutional_x5fCodeSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fSplitThreeLayTSP_fA_x5f1_x5f2","A_1_2")),
	create_parm ("SegmentsB","number of segments in layer B",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","5")),
	create_parm ("LayerB_Modulation","modulation mode for Layer B",
		PARM_INT,
		"_nDTV_x5fSplitThreeLayTSP_fLayerB_x5fModulationSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fSplitThreeLayTSP_fB_x5fQPSK","B_QPSK")),
	create_parm ("LayerB_Convolutional_Code","convolutional code rate for layer B",
		PARM_INT,
		"_nDTV_x5fSplitThreeLayTSP_fLayerB_x5fConvolutional_x5fCodeSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fSplitThreeLayTSP_fB_x5f7_x5f8","B_7_8")),
	create_parm ("SegmentsC","number of segments in layer C",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","7")),
	create_parm ("LayerC_Modulation","modulation mode for layer C",
		PARM_INT,
		"_nDTV_x5fSplitThreeLayTSP_fLayerC_x5fModulationSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fSplitThreeLayTSP_fC_x5f64QAM","C_64QAM")),
	create_parm ("LayerC_Convolutional_Code","convolutional code rate for layer C",
		PARM_INT,
		"_nDTV_x5fSplitThreeLayTSP_fLayerC_x5fConvolutional_x5fCodeSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fSplitThreeLayTSP_fC_x5f7_x5f8","C_7_8")));


create_item ("DTV_SplitThreeLayData","Data stream splitter into 3-layer data",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_SplitThreeLayData",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fSplitThreeLayData_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_SplitThreeLayData",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Carriers","number of carriers in one segment",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","432")),
	create_parm ("SegmentsA","number of segments in layer A",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("SegmentsB","number of segments in layer B",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("SegmentsC","number of segments in layer C",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));


create_constant_form ("_nDTV_x5fRSDecoder_fForward", 
	"Forward",
	0,
	"0",
	"Forward");

create_constant_form ("_nDTV_x5fRSDecoder_fReverse", 
	"Reverse",
	0,
	"1",
	"Reverse");

create_form_set("_nDTV_x5fRSDecoder_fDataSequenceSet",
	"_nDTV_x5fRSDecoder_fForward",
	"_nDTV_x5fRSDecoder_fReverse",
	"StdForm");

create_constant_form ("_nDTV_x5fRSDecoder_fHead", 
	"Head",
	0,
	"0",
	"Head");

create_constant_form ("_nDTV_x5fRSDecoder_fTail", 
	"Tail",
	0,
	"1",
	"Tail");

create_form_set("_nDTV_x5fRSDecoder_fSpacePlaceSet",
	"_nDTV_x5fRSDecoder_fHead",
	"_nDTV_x5fRSDecoder_fTail",
	"StdForm");

create_constant_form ("_nDTV_x5fRSDecoder_fforward", 
	"forward",
	0,
	"0",
	"forward");

create_constant_form ("_nDTV_x5fRSDecoder_freverse", 
	"reverse",
	0,
	"1",
	"reverse");

create_form_set("_nDTV_x5fRSDecoder_fParitySequenceSet",
	"_nDTV_x5fRSDecoder_fforward",
	"_nDTV_x5fRSDecoder_freverse",
	"StdForm");

create_constant_form ("_nDTV_x5fRSDecoder_fyes", 
	"yes",
	0,
	"0",
	"yes");

create_constant_form ("_nDTV_x5fRSDecoder_fno", 
	"no",
	0,
	"1",
	"no");

create_form_set("_nDTV_x5fRSDecoder_fEncode47HSet",
	"_nDTV_x5fRSDecoder_fyes",
	"_nDTV_x5fRSDecoder_fno",
	"StdForm");

create_item ("DTV_RSDecoder","Reed-Solomon decoder",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_RSDecoder",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fRSDecoder_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_RSDecoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("M","Galois field (2^M) size definition",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("K","size of output block (data)",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","188")),
	create_parm ("N","size of input block (data + parity)",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","204")),
	create_parm ("Error","stop simulation option",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0")),
	create_parm ("DataSequence","data array sequence",
		PARM_INT,
		"_nDTV_x5fRSDecoder_fDataSequenceSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fRSDecoder_fForward","Forward")),
	create_parm ("SpacePlace","place of zero byte (00h) in data array",
		PARM_INT,
		"_nDTV_x5fRSDecoder_fSpacePlaceSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fRSDecoder_fHead","Head")),
	create_parm ("ParitySequence","parity array sequence",
		PARM_INT,
		"_nDTV_x5fRSDecoder_fParitySequenceSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fRSDecoder_fforward","forward")),
	create_parm ("Encode47H","place 47H in data array",
		PARM_INT,
		"_nDTV_x5fRSDecoder_fEncode47HSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fRSDecoder_fyes","yes")));


create_constant_form ("_nDTV_x5fRSCoder_fForward", 
	"Forward",
	0,
	"0",
	"Forward");

create_constant_form ("_nDTV_x5fRSCoder_fReverse", 
	"Reverse",
	0,
	"1",
	"Reverse");

create_form_set("_nDTV_x5fRSCoder_fDataSequenceSet",
	"_nDTV_x5fRSCoder_fForward",
	"_nDTV_x5fRSCoder_fReverse",
	"StdForm");

create_constant_form ("_nDTV_x5fRSCoder_fHead", 
	"Head",
	0,
	"0",
	"Head");

create_constant_form ("_nDTV_x5fRSCoder_fTail", 
	"Tail",
	0,
	"1",
	"Tail");

create_form_set("_nDTV_x5fRSCoder_fSpacePlaceSet",
	"_nDTV_x5fRSCoder_fHead",
	"_nDTV_x5fRSCoder_fTail",
	"StdForm");

create_constant_form ("_nDTV_x5fRSCoder_fforward", 
	"forward",
	0,
	"0",
	"forward");

create_constant_form ("_nDTV_x5fRSCoder_freverse", 
	"reverse",
	0,
	"1",
	"reverse");

create_form_set("_nDTV_x5fRSCoder_fParitySequenceSet",
	"_nDTV_x5fRSCoder_fforward",
	"_nDTV_x5fRSCoder_freverse",
	"StdForm");

create_constant_form ("_nDTV_x5fRSCoder_fyes", 
	"yes",
	0,
	"0",
	"yes");

create_constant_form ("_nDTV_x5fRSCoder_fno", 
	"no",
	0,
	"1",
	"no");

create_form_set("_nDTV_x5fRSCoder_fEncode47HSet",
	"_nDTV_x5fRSCoder_fyes",
	"_nDTV_x5fRSCoder_fno",
	"StdForm");

create_item ("DTV_RSCoder","Reed-Solomon encoder",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_RSCoder",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fRSCoder_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_RSCoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("M","Galois field (2^M) size definition",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8")),
	create_parm ("K","input code word length",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","188")),
	create_parm ("N","output word size (K+parity)",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","204")),
	create_parm ("DataSequence","data array sequence",
		PARM_INT,
		"_nDTV_x5fRSCoder_fDataSequenceSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fRSCoder_fForward","Forward")),
	create_parm ("SpacePlace","place of zero byte (00h) in data array",
		PARM_INT,
		"_nDTV_x5fRSCoder_fSpacePlaceSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fRSCoder_fHead","Head")),
	create_parm ("ParitySequence","parity array sequence",
		PARM_INT,
		"_nDTV_x5fRSCoder_fParitySequenceSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fRSCoder_fforward","forward")),
	create_parm ("Encode47H","place 47H in data array",
		PARM_INT,
		"_nDTV_x5fRSCoder_fEncode47HSet",
		UNITLESS_UNIT,
		prm("_nDTV_x5fRSCoder_fyes","yes")));


create_item ("DTV_RemovePhase","Compensator for phase offset due to carrier frequency offset",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_RemovePhase",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fRemovePhase_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_RemovePhase",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Length","length of input symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8192")));


create_item ("DTV_QPSKDecoder","QPSK decoder",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_QPSKDecoder",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fQPSKDecoder_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_QPSKDecoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);


create_item ("DTV_QPSKCoder","QPSK coder",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_QPSKCoder",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fQPSKCoder_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_QPSKCoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);


create_item ("DTV_QAM64Decoder","Uniform and non-uniform 64-QAM decoder for DVB-T and ISDB-T",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_QAM64Decoder",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fQAM64Decoder_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_QAM64Decoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Alpha","non-uniform factor for DVB-T",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));


create_item ("DTV_QAM64Coder","Uniform and non-uniform 64-QAM encoder for DVB-T and ISDB-T",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_QAM64Coder",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fQAM64Coder_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_QAM64Coder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Alpha","non-uniform factor for DVB-T",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));


create_item ("DTV_QAM16Decoder","Uniform and non-uniform 16-QAM decoder for DVB-T and ISDB-T",
	"D",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_DTV_QAM16Decoder",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nDTV_x5fQAM16Decoder_lsdfhdtvstars",
	SPComponentAnnotFmt,
	"SYM_DTV_QAM16Decoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Alpha","non-uniform factor for DVB-T",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")));
