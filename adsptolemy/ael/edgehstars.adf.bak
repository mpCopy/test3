set_design_type( sigproc_net );
create_constant_form ("_nEDGE_x5fRom_fSampleRate_x5f4", 
	"SampleRate 4",
	0,
	"0",
	"4");
create_constant_form ("_nEDGE_x5fRom_fSampleRate_x5f8", 
	"SampleRate 8",
	0,
	"1",
	"8");
create_constant_form ("_nEDGE_x5fRom_fSampleRate_x5f16", 
	"SampleRate 16",
	0,
	"2",
	"16");
create_form_set("_nEDGE_x5fRom_fSampleRateSet",
	"_nEDGE_x5fRom_fSampleRate_x5f4",
	"_nEDGE_x5fRom_fSampleRate_x5f8",
	"_nEDGE_x5fRom_fSampleRate_x5f16",
	"StdForm");
create_item ("EDGE_Rom","Generation of I and Q branches of modulated signal",
	"E",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_EDGE_Rom",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nEDGE_x5fRom_ledgehstars",
	SPComponentAnnotFmt,
	"SYM_EDGE_Rom",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("SampleRate","Number of samples in one bit interval",
		PARM_INT,
		"_nEDGE_x5fRom_fSampleRateSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fRom_fSampleRate_x5f16","SampleRate_16")));
library_group("Testing (for development use only)","Testing (for development use only)","EDGE_Rom");
palette_group("Testing (for development use only)","Testing (for development use only)","EDGE_Rom");

create_constant_form ("_nEDGE_x5fFreqErr_ffrequency_x5ferror", 
	"frequency error",
	0,
	"0",
	"frequency error");
create_constant_form ("_nEDGE_x5fFreqErr_forigin_x5foffset_x5fsuppression", 
	"origin offset suppression",
	0,
	"1",
	"origin offset suppression");
create_form_set("_nEDGE_x5fFreqErr_fMeasureTypeSet",
	"_nEDGE_x5fFreqErr_ffrequency_x5ferror",
	"_nEDGE_x5fFreqErr_forigin_x5foffset_x5fsuppression",
	"StdForm");
create_item ("EDGE_FreqErr","Frequency error measurement",
	"E",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_EDGE_FreqErr",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nEDGE_x5fFreqErr_ledgehstars",
	SPComponentAnnotFmt,
	"SYM_EDGE_FreqErr",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("StartSym","start symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","142")),
	create_parm ("SymBurstLen","number of symbols within burst to be measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","142")),
	create_parm ("SampPerSym","number of samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")),
	create_parm ("SymDelayBound","upper bound of delay detection, in symbol, -1 for no detection",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")),
	create_parm ("NumBursts","number of bursts to be measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","5")),
	create_parm ("SymbolRate","symbol rate",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","(1625.0/6.0) kHz")),
	create_parm ("MeasureType","type of measurement",
		PARM_INT,
		"_nEDGE_x5fFreqErr_fMeasureTypeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fFreqErr_ffrequency_x5ferror","frequency_error")));
library_group("Testing (for development use only)","Testing (for development use only)","EDGE_FreqErr");
palette_group("Testing (for development use only)","Testing (for development use only)","EDGE_FreqErr");

create_constant_form ("_nEDGE_x5fEVM_x5fWithRefIn_fEVM_x5frms", 
	"EVM_rms",
	0,
	"0",
	"EVM_rms");
create_constant_form ("_nEDGE_x5fEVM_x5fWithRefIn_fEVM_x5fpeak", 
	"EVM_peak",
	0,
	"1",
	"EVM_peak");
create_constant_form ("_nEDGE_x5fEVM_x5fWithRefIn_fEVM_x5f95th_x5fpercentile", 
	"EVM_95th_percentile",
	0,
	"2",
	"EVM_95th_percentile");
create_form_set("_nEDGE_x5fEVM_x5fWithRefIn_fMeasTypeSet",
	"_nEDGE_x5fEVM_x5fWithRefIn_fEVM_x5frms",
	"_nEDGE_x5fEVM_x5fWithRefIn_fEVM_x5fpeak",
	"_nEDGE_x5fEVM_x5fWithRefIn_fEVM_x5f95th_x5fpercentile",
	"StdForm");
create_constant_form ("_nEDGE_x5fEVM_x5fWithRefIn_fEVM_x5fRatio", 
	"EVM_Ratio",
	0,
	"0",
	"EVM as ratio");
create_constant_form ("_nEDGE_x5fEVM_x5fWithRefIn_fEVM_x5fPercent", 
	"EVM_Percent",
	0,
	"1",
	"EVM as percent");
create_form_set("_nEDGE_x5fEVM_x5fWithRefIn_fEVMValueSet",
	"_nEDGE_x5fEVM_x5fWithRefIn_fEVM_x5fRatio",
	"_nEDGE_x5fEVM_x5fWithRefIn_fEVM_x5fPercent",
	"StdForm");
create_item ("EDGE_EVM_WithRefIn","EVM measurement with reference signal input",
	"E",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_EDGE_EVM_WithRefIn",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nEDGE_x5fEVM_x5fWithRefIn_ledgehstars",
	SPComponentAnnotFmt,
	"SYM_EDGE_EVM_WithRefIn",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("StartSym","start symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","142")),
	create_parm ("SymBurstLen","number of symbols within burst to be measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","142")),
	create_parm ("SampPerSym","number of samples per symbol",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")),
	create_parm ("SymDelayBound","upper bound of delay detection, in symbol, -1 for no detection",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")),
	create_parm ("NumBursts","number of bursts to be measured",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","5")),
	create_parm ("MeasType","type of measurement",
		PARM_INT,
		"_nEDGE_x5fEVM_x5fWithRefIn_fMeasTypeSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fEVM_x5fWithRefIn_fEVM_x5frms","EVM_rms")),
	create_parm ("SymbolRate","symbol rate",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","(1625.0/6.0) kHz")),
	create_parm ("EVMValue","EVM value expression options",
		PARM_INT,
		"_nEDGE_x5fEVM_x5fWithRefIn_fEVMValueSet",
		UNITLESS_UNIT,
		prm("_nEDGE_x5fEVM_x5fWithRefIn_fEVM_x5fRatio","EVM_Ratio")));
library_group("Testing (for development use only)","Testing (for development use only)","EDGE_EVM_WithRefIn");
palette_group("Testing (for development use only)","Testing (for development use only)","EDGE_EVM_WithRefIn");

create_item ("EDGE_DifferEncoder","Differential Encoder of Input Bits",
	"E",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_EDGE_DifferEncoder",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nEDGE_x5fDifferEncoder_ledgehstars",
	SPComponentAnnotFmt,
	"SYM_EDGE_DifferEncoder",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX 
);
library_group("Testing (for development use only)","Testing (for development use only)","EDGE_DifferEncoder");
palette_group("Testing (for development use only)","Testing (for development use only)","EDGE_DifferEncoder");

create_item ("EDGE_Carrier","Generation of modulated signal",
	"E",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_EDGE_Carrier",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nEDGE_x5fCarrier_ledgehstars",
	SPComponentAnnotFmt,
	"SYM_EDGE_Carrier",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("Fc","Carrier frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","45e6")),
	create_parm ("Pc","Power per modulating bit",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","1e-3")));
library_group("Testing (for development use only)","Testing (for development use only)","EDGE_Carrier");
palette_group("Testing (for development use only)","Testing (for development use only)","EDGE_Carrier");

create_item ("EDGE_AutoDetection","Automatic down-sampling and de-rotation",
	"E",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_EDGE_AutoDetection",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nEDGE_x5fAutoDetection_ledgehstars",
	SPComponentAnnotFmt,
	"SYM_EDGE_AutoDetection",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("DwnSmplFactor","down sample factor",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","16")),
	create_parm ("DerotateStep","phase de-rotation per symbol, in number of PI",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.375")));
library_group("Testing (for development use only)","Testing (for development use only)","EDGE_AutoDetection");
palette_group("Testing (for development use only)","Testing (for development use only)","EDGE_AutoDetection");

