set_design_type( sigproc_net );

create_constant_form ("_n_x5fStatEye_fNO", 
	"NO",
	0,
	"0",
	"NO");

create_constant_form ("_n_x5fStatEye_fYES", 
	"YES",
	0,
	"1",
	"YES");

create_form_set("_n_x5fStatEye_fCDREnabledSet",
	"_n_x5fStatEye_fNO",
	"_n_x5fStatEye_fYES",
	"StdForm");

create_constant_form ("_n_x5fStatEye_fNO", 
	"NO",
	0,
	"0",
	"NO");

create_constant_form ("_n_x5fStatEye_fYES", 
	"YES",
	0,
	"1",
	"YES");

create_form_set("_n_x5fStatEye_fDFEEnabledSet",
	"_n_x5fStatEye_fNO",
	"_n_x5fStatEye_fYES",
	"StdForm");

create_constant_form ("_n_x5fStatEye_fNO", 
	"NO",
	0,
	"0",
	"NO");

create_constant_form ("_n_x5fStatEye_fYES", 
	"YES",
	0,
	"1",
	"YES");

create_form_set("_n_x5fStatEye_fFFEEnabledSet",
	"_n_x5fStatEye_fNO",
	"_n_x5fStatEye_fYES",
	"StdForm");

create_constant_form ("_n_x5fStatEye_fNO", 
	"NO",
	0,
	"0",
	"NO");

create_constant_form ("_n_x5fStatEye_fYES", 
	"YES",
	0,
	"1",
	"YES");

create_form_set("_n_x5fStatEye_fFFEtapsOptSet",
	"_n_x5fStatEye_fNO",
	"_n_x5fStatEye_fYES",
	"StdForm");

create_item ("_StatEye","Statistical eye diagram",
	"S",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_StatEye",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dTSDF_n_x5fStatEye_lsdfstateyestars",
	SPComponentAnnotFmt,
	"SYM_StatEye",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("RIn","Input resistance",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","DefaultRIn")),
	create_parm ("RTemp","Temperature, in degrees C",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TEMPERATURE_UNIT,
		prm("StdForm","DefaultRTemp")),
	create_parm ("BaudRate","Baud rate in the unit of GBps (giga baud per second)",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("SampleNum","Number of input timed samples for calculating StatEye",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8192")),
	create_parm ("DJ","Deterministic jitter peak to peak value",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.1")),
	create_parm ("RJ","Random jitter rms value",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0063")),
	create_parm ("PreCursors","Number of precursors",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("PostCursors","Number of postcursors",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","90")),
	create_parm ("BinNum","Number of bins",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1000")),
	create_parm ("RequiredDJ","Required deterministic jitter for jitter compliance",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.45")),
	create_parm ("RequiredQ","Required Q factor for jitter compliance",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","15.88")),
	create_parm ("RequiredTJ","Required total jitter for jitter compliance",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.6")),
	create_parm ("RequiredEye","Required minimum vertical eye opening for standards compliance",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.4")),
	create_parm ("TargetBER","Target bit error rate with which the eye opening is calculated",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1e-12")),
	create_parm ("BERDisplay","BER (= 10^BERDisplay) to be displayed",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{-15, -6}")),
	create_parm ("CDREnabled","CDR enabled or not",
		PARM_INT,
		"_n_x5fStatEye_fCDREnabledSet",
		UNITLESS_UNIT,
		prm("_n_x5fStatEye_fNO","NO")),
	create_parm ("DFEEnabled","DFE enabled or not",
		PARM_INT,
		"_n_x5fStatEye_fDFEEnabledSet",
		UNITLESS_UNIT,
		prm("_n_x5fStatEye_fNO","NO")),
	create_parm ("DFEtaps","Number of DFE taps",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","5")),
	create_parm ("SaveDFETapsFile","Filename in which to save final DFE tap values",
		PARM_STRING,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("FFEEnabled","FFE enabled or not",
		PARM_INT,
		"_n_x5fStatEye_fFFEEnabledSet",
		UNITLESS_UNIT,
		prm("_n_x5fStatEye_fNO","NO")),
	create_parm ("FFEtaps","Number of FFE taps",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")),
	create_parm ("FFEtapsOpt","Number of FFE taps automatically optimized or not",
		PARM_INT,
		"_n_x5fStatEye_fFFEtapsOptSet",
		UNITLESS_UNIT,
		prm("_n_x5fStatEye_fNO","NO")),
	create_parm ("SaveFFETapsFile","Filename in which to save final FFE tap values",
		PARM_STRING,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")));


create_constant_form ("_nStatEye_fNO", 
	"NO",
	0,
	"0",
	"NO");

create_constant_form ("_nStatEye_fYES", 
	"YES",
	0,
	"1",
	"YES");

create_form_set("_nStatEye_fCDREnabledSet",
	"_nStatEye_fNO",
	"_nStatEye_fYES",
	"StdForm");

create_constant_form ("_nStatEye_fNO", 
	"NO",
	0,
	"0",
	"NO");

create_constant_form ("_nStatEye_fYES", 
	"YES",
	0,
	"1",
	"YES");

create_form_set("_nStatEye_fDFEEnabledSet",
	"_nStatEye_fNO",
	"_nStatEye_fYES",
	"StdForm");

create_constant_form ("_nStatEye_fNO", 
	"NO",
	0,
	"0",
	"NO");

create_constant_form ("_nStatEye_fYES", 
	"YES",
	0,
	"1",
	"YES");

create_form_set("_nStatEye_fFFEEnabledSet",
	"_nStatEye_fNO",
	"_nStatEye_fYES",
	"StdForm");

create_constant_form ("_nStatEye_fNO", 
	"NO",
	0,
	"0",
	"NO");

create_constant_form ("_nStatEye_fYES", 
	"YES",
	0,
	"1",
	"YES");

create_form_set("_nStatEye_fFFEtapsOptSet",
	"_nStatEye_fNO",
	"_nStatEye_fYES",
	"StdForm");

create_item ("StatEye","Statistical eye diagram",
	"S",
	ITEM_NOT_ALL_PARM | ITEM_DESIGN_INST,
	-1,
	"BMP_StatEye",
	"Component Parameters",
	NULL,
	SPDesignNetlistFmt,
	"StatEye",
	SPDesignAnnotFmt,
	"SYM_StatEye",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("RIn","Input resistance",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","DefaultRIn")),
	create_parm ("RTemp","Temperature, in degrees C",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TEMPERATURE_UNIT,
		prm("StdForm","DefaultRTemp")),
	create_parm ("BaudRate","Baud rate in the unit of GBps (giga baud per second)",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("SampleNum","Number of input timed samples for calculating StatEye",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","8192")),
	create_parm ("DJ","Deterministic jitter peak to peak value",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.1")),
	create_parm ("RJ","Random jitter rms value",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.0063")),
	create_parm ("PreCursors","Number of precursors",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","4")),
	create_parm ("PostCursors","Number of postcursors",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","90")),
	create_parm ("BinNum","Number of bins",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1000")),
	create_parm ("RequiredDJ","Required deterministic jitter for jitter compliance",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.45")),
	create_parm ("RequiredQ","Required Q factor for jitter compliance",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","15.88")),
	create_parm ("RequiredTJ","Required total jitter for jitter compliance",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.6")),
	create_parm ("RequiredEye","Required minimum vertical eye opening for standards compliance",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","0.4")),
	create_parm ("TargetBER","Target bit error rate with which the eye opening is calculated",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1e-12")),
	create_parm ("BERDisplay","BER (= 10^BERDisplay) to be displayed",
		PARM_REALARRAY,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","{-15, -6}")),
	create_parm ("CDREnabled","CDR enabled or not",
		PARM_INT,
		"_nStatEye_fCDREnabledSet",
		UNITLESS_UNIT,
		prm("_nStatEye_fNO","NO")),
	create_parm ("DFEEnabled","DFE enabled or not",
		PARM_INT,
		"_nStatEye_fDFEEnabledSet",
		UNITLESS_UNIT,
		prm("_nStatEye_fNO","NO")),
	create_parm ("DFEtaps","Number of DFE taps",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","5")),
	create_parm ("SaveDFETapsFile","Filename in which to save final DFE tap values",
		PARM_STRING,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("FFEEnabled","FFE enabled or not",
		PARM_INT,
		"_nStatEye_fFFEEnabledSet",
		UNITLESS_UNIT,
		prm("_nStatEye_fNO","NO")),
	create_parm ("FFEtaps","Number of FFE taps",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","3")),
	create_parm ("FFEtapsOpt","Number of FFE taps automatically optimized or not",
		PARM_INT,
		"_nStatEye_fFFEtapsOptSet",
		UNITLESS_UNIT,
		prm("_nStatEye_fNO","NO")),
	create_parm ("SaveFFETapsFile","Filename in which to save final FFE tap values",
		PARM_STRING,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")));
