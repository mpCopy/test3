de_define_library_palette( "HSDPA", SCHEM_WIN, "sigproc_net",
	"HSDPA Demultiplexers & Decoders", "HSDPA Demultiplexers & Decoders", -1,
	 list( "HSDPA", "HSDPA_CRCDecoder", NULL, "CRC decoder", "BMP_HSDPA_CRCDecoder" ),
	 list( "HSDPA", "HSDPA_ChDecoder", NULL, "Turbo decoder", "BMP_HSDPA_ChDecoder" ),
	 list( "HSDPA", "HSDPA_CodeBlkDeseg", NULL, "Code block desegmentation", "BMP_HSDPA_CodeBlkDeseg" ),
	 list( "HSDPA", "HSDPA_Deinterleaver", NULL, "Deinterleaver", "BMP_HSDPA_Deinterleaver" ),
	 list( "HSDPA", "HSDPA_PhCH_Demap", NULL, "Soft demapper", "BMP_HSDPA_PhCH_Demap" ),
	 list( "HSDPA", "HSDPA_RateDematch", NULL, "HS_DSCH Rate matching", "BMP_HSDPA_RateDematch" ),
	 list( "HSDPA", "HSDPA_SCCH_DeRM", NULL, "HS-SCCH de-rateMatching", "BMP_HSDPA_SCCH_DeRM" ),
	 list( "HSDPA", "HSDPA_STTD_Decoder", NULL, "STTD decoder", "BMP_HSDPA_STTD_Decoder" )
);

de_define_library_palette( "HSDPA", SCHEM_WIN, "sigproc_net",
	"HSDPA Measurement", "HSDPA Measurement", -1,
	 list( "HSDPA", "HSDPA_Throughput", NULL, "HSDPA throughput calculator", "BMP_HSDPA_Throughput" )
);

de_define_library_palette( "HSDPA", SCHEM_WIN, "sigproc_net",
	"HSDPA Multiplexers & Coders", "HSDPA Multiplexers & Coders", -1,
	 list( "HSDPA", "HSDPA_BitScrambling", NULL, "Bit scrambler", "BMP_HSDPA_BitScrambling" ),
	 list( "HSDPA", "HSDPA_CRCEncoder", NULL, "Add CRC to each Transport Block", "BMP_HSDPA_CRCEncoder" ),
	 list( "HSDPA", "HSDPA_ChEncoder", NULL, "Code block segmentation and turbo encoder", "BMP_HSDPA_ChEncoder" ),
	 list( "HSDPA", "HSDPA_Interleaver", NULL, "Interleaver", "BMP_HSDPA_Interleaver" ),
	 list( "HSDPA", "HSDPA_OCNS_Gain", NULL, "HSDPA OCNS gain calculator", "BMP_HSDPA_OCNS_Gain" ),
	 list( "HSDPA", "HSDPA_PhCH_Map", NULL, "Physical channel mapper", "BMP_HSDPA_PhCH_Map" ),
	 list( "HSDPA", "HSDPA_PowerAdjust", NULL, "Power adjust", "BMP_HSDPA_PowerAdjust" ),
	 list( "HSDPA", "HSDPA_RateMatch", NULL, "HS_DSCH Rate matching", "BMP_HSDPA_RateMatch" ),
	 list( "HSDPA", "HSDPA_SCCH_ParaCalc", NULL, "HS-SCCH CQI Mapping", "BMP_HSDPA_SCCH_ParaCalc" ),
	 list( "HSDPA", "HSDPA_SCCH_RM", NULL, "HS-SCCH Rate Matching", "BMP_HSDPA_SCCH_RM" ),
	 list( "HSDPA", "HSDPA_STTD_Encoder", NULL, "STTD encoder", "BMP_HSDPA_STTD_Encoder" ),
	 list( "HSDPA", "HSDPA_Spread", NULL, "Physical channnel spreader", "BMP_HSDPA_Spread" )
);

de_define_library_palette( "HSDPA", SCHEM_WIN, "sigproc_net",
	"HSDPA Receiver", "HSDPA Receiver", -1,
	 list( "HSDPA", "HSDPA_ChEstimate", NULL, "Path parameter estimate aided by pilot symbols", "BMP_HSDPA_ChEstimate" ),
	 list( "HSDPA", "HSDPA_DemuxHSPDSCH", NULL, "demux HSPDSCH code channels and power normalization", "BMP_HSDPA_DemuxHSPDSCH" ),
	 list( "HSDPA", "HSDPA_Despread", NULL, "De-spread chip sequence of code channels", "BMP_HSDPA_Despread" ),
	 list( "HSDPA", "HSDPA_DespreadHSCh", NULL, "De-spread chip sequence of code channels", "BMP_HSDPA_DespreadHSCh" ),
	 list( "HSDPA", "HSDPA_DespreadPilot", NULL, "De-spread chip sequence of code channels", "BMP_HSDPA_DespreadPilot" ),
	 list( "HSDPA", "HSDPA_DownSample", NULL, "Extract optimum samples according to path delay timing", "BMP_HSDPA_DownSample" ),
	 list( "HSDPA", "HSDPA_Equalizer", NULL, "MMSE equalizer for HSDPA", "BMP_HSDPA_Equalizer" ),
	 list( "HSDPA", "HSDPA_PathSearch", NULL, "Multiple path maximum power timing search", "BMP_HSDPA_PathSearch" ),
	 list( "HSDPA", "HSDPA_RakeCombine", NULL, "Combine signals of optimum paths according to path estimation", "BMP_HSDPA_RakeCombine" )
);

de_define_library_palette( "HSDPA", SCHEM_WIN, "sigproc_net",
	"HSDPA Signal Sources", "HSDPA Signal Sources", -1,
	 list( "HSDPA", "HSDPA_Bits", NULL, "HSDPA information bit generator", "BMP_HSDPA_Bits" ),
	 list( "HSDPA", "HSDPA_SCH", NULL, "Synchronization Channel", "BMP_HSDPA_SCH" )
);

