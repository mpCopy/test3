set_design_type( sigproc_net );
create_constant_form ("_nRF_x5fInterface_fNO", 
	"NO",
	0,
	"0",
	"no");
create_constant_form ("_nRF_x5fInterface_fYES", 
	"YES",
	0,
	"1",
	"yes");
create_form_set("_nRF_x5fInterface_fCktNoiseSet",
	"_nRF_x5fInterface_fNO",
	"_nRF_x5fInterface_fYES",
	"StdForm");
create_item ("RF_Interface","RF Export Settings",
	"R",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_RF_Interface",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dTSDF_nRF_x5fInterface_ldfapistars",
	SPComponentAnnotFmt,
	"SYM_RF_Interface",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("TStep","time step; TStep=0 results in use of externally set TStep",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","0.0")),
	create_parm ("CktNum","Port number for S-parameter and HB noise figure analysis",
		PARM_INT | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		UNITLESS_UNIT,
		prm("StdForm","1")),
	create_parm ("CktR","Source resistance",
		PARM_REAL,
		"StdFormSet",
		RESISTANCE_UNIT,
		prm("StdForm","50")),
	create_parm ("CktP","Power",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		POWER_UNIT,
		prm("StdForm","dbmtow(10)")),
	create_parm ("CktFreq","RF Carrier Frequency",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		FREQUENCY_UNIT,
		prm("StdForm","1G")),
	create_parm ("CktNoise","Enable thermal noise?",
		PARM_INT,
		"_nRF_x5fInterface_fCktNoiseSet",
		UNITLESS_UNIT,
		prm("_nRF_x5fInterface_fNO","NO")),
	create_parm ("CktTemp","Temperature",
		PARM_REAL,
		"StdFormSet",
		TEMPERATURE_UNIT,
		prm("StdForm","16.85")));
library_group("Testing (for development use only)","Testing (for development use only)","RF_Interface");
palette_group("Testing (for development use only)","Testing (for development use only)","RF_Interface");

create_constant_form ("_nAMS_x5fInterface_felectrical", 
	"electrical",
	0,
	"0",
	"electrical");
create_constant_form ("_nAMS_x5fInterface_fwreal", 
	"wreal",
	0,
	"1",
	"wreal");
create_form_set("_nAMS_x5fInterface_fPortTypeSet",
	"_nAMS_x5fInterface_felectrical",
	"_nAMS_x5fInterface_fwreal",
	"StdForm");
create_item ("AMS_Interface","AMS Export Settings",
	"A",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_AMS_Interface",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dTSDF_nAMS_x5fInterface_ldfapistars",
	SPComponentAnnotFmt,
	"SYM_AMS_Interface",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("PortType","AMS port interface type: electrical, wreal",
		PARM_INT,
		"_nAMS_x5fInterface_fPortTypeSet",
		UNITLESS_UNIT,
		prm("_nAMS_x5fInterface_felectrical","electrical")),
	create_parm ("TStep","time step; TStep=0 results in use of externally set TStep",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","0.0")));
library_group("Circuit Cosimulation","Circuit Cosimulation","AMS_Interface");
palette_group("Circuit Cosimulation","Circuit Cosimulation","AMS_Interface");

create_constant_form ("_nOutputArgumentTimed_fLinear", 
	"Linear",
	0,
	"0",
	"Linear");
create_constant_form ("_nOutputArgumentTimed_fLagrange", 
	"Lagrange",
	0,
	"1",
	"Lagrange");
create_form_set("_nOutputArgumentTimed_fInterpolationSet",
	"_nOutputArgumentTimed_fLinear",
	"_nOutputArgumentTimed_fLagrange",
	"StdForm");
create_item ("OutputArgumentTimed","An input argument for a Ptolemy function call",
	"O",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_OutputArgumentTimed",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dTSDF_nOutputArgumentTimed_ldfapistars",
	SPComponentAnnotFmt,
	"SYM_OutputArgumentTimed",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("ArgName","Name of argument, if blank will default to name of instance",
		PARM_STRING,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("Interpolation","Interpolation scheme to use",
		PARM_INT,
		"_nOutputArgumentTimed_fInterpolationSet",
		UNITLESS_UNIT,
		prm("_nOutputArgumentTimed_fLinear","Linear")));
library_group("Testing (for development use only)","Testing (for development use only)","OutputArgumentTimed");
palette_group("Testing (for development use only)","Testing (for development use only)","OutputArgumentTimed");

create_constant_form ("_nInputArgumentTimed_fLinear", 
	"Linear",
	0,
	"0",
	"Linear");
create_constant_form ("_nInputArgumentTimed_fLagrange", 
	"Lagrange",
	0,
	"1",
	"Lagrange");
create_form_set("_nInputArgumentTimed_fInterpolationSet",
	"_nInputArgumentTimed_fLinear",
	"_nInputArgumentTimed_fLagrange",
	"StdForm");
create_item ("InputArgumentTimed","An input argument for a Ptolemy function call",
	"I",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_InputArgumentTimed",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dTSDF_nInputArgumentTimed_ldfapistars",
	SPComponentAnnotFmt,
	"SYM_InputArgumentTimed",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("ArgName","Name of argument, if blank will default to name of instance",
		PARM_STRING,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("Interpolation","Interpolation scheme to use",
		PARM_INT,
		"_nInputArgumentTimed_fInterpolationSet",
		UNITLESS_UNIT,
		prm("_nInputArgumentTimed_fLinear","Linear")),
	create_parm ("TStep","TStep",
		PARM_REAL | PARM_OPTIMIZABLE | PARM_STATISTICAL,
		"StdFormSet",
		TIME_UNIT,
		prm("StdForm","0")));
library_group("Testing (for development use only)","Testing (for development use only)","InputArgumentTimed");
palette_group("Testing (for development use only)","Testing (for development use only)","InputArgumentTimed");

create_constant_form ("_nOutputArgumentFix_fWrap", 
	"Wrap",
	0,
	"0",
	"Wrap");
create_constant_form ("_nOutputArgumentFix_fHalt", 
	"Halt",
	0,
	"1",
	"Halt");
create_form_set("_nOutputArgumentFix_fBufferEndSet",
	"_nOutputArgumentFix_fWrap",
	"_nOutputArgumentFix_fHalt",
	"StdForm");
create_item ("OutputArgumentFix","An input argument for a Ptolemy function call",
	"O",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_OutputArgumentFix",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nOutputArgumentFix_ldfapistars",
	SPComponentAnnotFmt,
	"SYM_OutputArgumentFix",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("ArgName","Name of argument, if blank will default to name of instance",
		PARM_STRING,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("BufferEnd","'Action to take if end of buffer is reached.'",
		PARM_INT,
		"_nOutputArgumentFix_fBufferEndSet",
		UNITLESS_UNIT,
		prm("_nOutputArgumentFix_fHalt","Halt")));
library_group("Testing (for development use only)","Testing (for development use only)","OutputArgumentFix");
palette_group("Testing (for development use only)","Testing (for development use only)","OutputArgumentFix");

create_constant_form ("_nInputArgumentFix_fWrap", 
	"Wrap",
	0,
	"0",
	"Wrap");
create_constant_form ("_nInputArgumentFix_fHalt", 
	"Halt",
	0,
	"1",
	"Halt");
create_form_set("_nInputArgumentFix_fBufferEndSet",
	"_nInputArgumentFix_fWrap",
	"_nInputArgumentFix_fHalt",
	"StdForm");
create_item ("InputArgumentFix","An input argument for a Ptolemy function call",
	"I",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_InputArgumentFix",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nInputArgumentFix_ldfapistars",
	SPComponentAnnotFmt,
	"SYM_InputArgumentFix",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("ArgName","Name of argument, if blank will default to name of instance",
		PARM_STRING,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("BufferEnd","'Action to take if end of buffer is reached.'",
		PARM_INT,
		"_nInputArgumentFix_fBufferEndSet",
		UNITLESS_UNIT,
		prm("_nInputArgumentFix_fHalt","Halt")),
	create_parm ("Precision","Precision to be used for conversion of string data to Fix data",
		PARM_STRING,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")));
library_group("Testing (for development use only)","Testing (for development use only)","InputArgumentFix");
palette_group("Testing (for development use only)","Testing (for development use only)","InputArgumentFix");

create_constant_form ("_nOutputArgumentInt_fWrap", 
	"Wrap",
	0,
	"0",
	"Wrap");
create_constant_form ("_nOutputArgumentInt_fHalt", 
	"Halt",
	0,
	"1",
	"Halt");
create_form_set("_nOutputArgumentInt_fBufferEndSet",
	"_nOutputArgumentInt_fWrap",
	"_nOutputArgumentInt_fHalt",
	"StdForm");
create_item ("OutputArgumentInt","An input argument for a Ptolemy function call",
	"O",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_OutputArgumentInt",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nOutputArgumentInt_ldfapistars",
	SPComponentAnnotFmt,
	"SYM_OutputArgumentInt",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("ArgName","Name of argument, if blank will default to name of instance",
		PARM_STRING,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("BufferEnd","'Action to take if end of buffer is reached.'",
		PARM_INT,
		"_nOutputArgumentInt_fBufferEndSet",
		UNITLESS_UNIT,
		prm("_nOutputArgumentInt_fHalt","Halt")));
library_group("Testing (for development use only)","Testing (for development use only)","OutputArgumentInt");
palette_group("Testing (for development use only)","Testing (for development use only)","OutputArgumentInt");

create_constant_form ("_nInputArgumentInt_fWrap", 
	"Wrap",
	0,
	"0",
	"Wrap");
create_constant_form ("_nInputArgumentInt_fHalt", 
	"Halt",
	0,
	"1",
	"Halt");
create_form_set("_nInputArgumentInt_fBufferEndSet",
	"_nInputArgumentInt_fWrap",
	"_nInputArgumentInt_fHalt",
	"StdForm");
create_item ("InputArgumentInt","An input argument for a Ptolemy function call",
	"I",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_InputArgumentInt",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nInputArgumentInt_ldfapistars",
	SPComponentAnnotFmt,
	"SYM_InputArgumentInt",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("ArgName","Name of argument, if blank will default to name of instance",
		PARM_STRING,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("BufferEnd","'Action to take if end of buffer is reached.'",
		PARM_INT,
		"_nInputArgumentInt_fBufferEndSet",
		UNITLESS_UNIT,
		prm("_nInputArgumentInt_fHalt","Halt")));
library_group("Testing (for development use only)","Testing (for development use only)","InputArgumentInt");
palette_group("Testing (for development use only)","Testing (for development use only)","InputArgumentInt");

create_constant_form ("_nOutputArgument_fWrap", 
	"Wrap",
	0,
	"0",
	"Wrap");
create_constant_form ("_nOutputArgument_fHalt", 
	"Halt",
	0,
	"1",
	"Halt");
create_form_set("_nOutputArgument_fBufferEndSet",
	"_nOutputArgument_fWrap",
	"_nOutputArgument_fHalt",
	"StdForm");
create_item ("OutputArgument","An input argument for a Ptolemy function call",
	"O",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_OutputArgument",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nOutputArgument_ldfapistars",
	SPComponentAnnotFmt,
	"SYM_OutputArgument",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("ArgName","Name of argument, if blank will default to name of instance",
		PARM_STRING,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("BufferEnd","'Action to take if end of buffer is reached.'",
		PARM_INT,
		"_nOutputArgument_fBufferEndSet",
		UNITLESS_UNIT,
		prm("_nOutputArgument_fHalt","Halt")));
library_group("Testing (for development use only)","Testing (for development use only)","OutputArgument");
palette_group("Testing (for development use only)","Testing (for development use only)","OutputArgument");

create_constant_form ("_nInputArgument_fWrap", 
	"Wrap",
	0,
	"0",
	"Wrap");
create_constant_form ("_nInputArgument_fHalt", 
	"Halt",
	0,
	"1",
	"Halt");
create_form_set("_nInputArgument_fBufferEndSet",
	"_nInputArgument_fWrap",
	"_nInputArgument_fHalt",
	"StdForm");
create_item ("InputArgument","An input argument for a Ptolemy function call",
	"I",
	ITEM_NOT_ALL_PARM,
	-1,
	"BMP_InputArgument",
	standard_dialog,
	NULL,
	SPComponentNetlistFmt,
	"_vKeysightEEsof_dSDF_nInputArgument_ldfapistars",
	SPComponentAnnotFmt,
	"SYM_InputArgument",
	no_artwork,
	NULL,
	ITEM_PRIMITIVE_EX,
	create_parm ("ArgName","Name of argument, if blank will default to name of instance",
		PARM_STRING,
		"StringAndReferenceSet",
		UNITLESS_UNIT,
		prm("StringAndReference","\"\"")),
	create_parm ("BufferEnd","'Action to take if end of buffer is reached.'",
		PARM_INT,
		"_nInputArgument_fBufferEndSet",
		UNITLESS_UNIT,
		prm("_nInputArgument_fHalt","Halt")));
library_group("Testing (for development use only)","Testing (for development use only)","InputArgument");
palette_group("Testing (for development use only)","Testing (for development use only)","InputArgument");

