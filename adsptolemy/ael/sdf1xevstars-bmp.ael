de_define_library_palette( "1xEV", SCHEM_WIN, "sigproc_net",
	"1xEV Channel Coding", "1xEV Channel Coding", -1,
	 list( "1xEV", "1xEV_CRC_Decoder", NULL, "CRC bits eraser with packet quality check", "BMP_1xEV_CRC_Decoder" ),
	 list( "1xEV", "1xEV_CRC_Encoder", NULL, "CRC generator", "BMP_1xEV_CRC_Encoder" ),
	 list( "1xEV", "1xEV_FwdDeintlvr", NULL, "Forward channel deinterleaver", "BMP_1xEV_FwdDeintlvr" ),
	 list( "1xEV", "1xEV_FwdIntlvr", NULL, "Forward channel interleaver", "BMP_1xEV_FwdIntlvr" ),
	 list( "1xEV", "1xEV_MAPDecoder1", NULL, "MAP decoder 1 for turbo decoder", "BMP_1xEV_MAPDecoder1" ),
	 list( "1xEV", "1xEV_MAPDecoder2", NULL, "MAP decoder 2 for turbo decoder", "BMP_1xEV_MAPDecoder2" ),
	 list( "1xEV", "1xEV_RevDeintlvr", NULL, "Reverse channel deinterleaver", "BMP_1xEV_RevDeintlvr" ),
	 list( "1xEV", "1xEV_RevIntlvr", NULL, "Reverse channel interleaver", "BMP_1xEV_RevIntlvr" ),
	 list( "1xEV", "1xEV_Tail", NULL, "Tailing bits adder or remover", "BMP_1xEV_Tail" ),
	 list( "1xEV", "1xEV_TurboIntlvr", NULL, "Interleaver or De-interleaver for turbo code", "BMP_1xEV_TurboIntlvr" )
);

de_define_library_palette( "1xEV", SCHEM_WIN, "sigproc_net",
	"1xEV Modems", "1xEV Modems", -1,
	 list( "1xEV", "1xEV_BiWalshCode", NULL, "Bi-Walsh code generator", "BMP_1xEV_BiWalshCode" ),
	 list( "1xEV", "1xEV_Demodulator", NULL, "Demodulator for QPSK, 8PSK and 16QAM", "BMP_1xEV_Demodulator" ),
	 list( "1xEV", "1xEV_LgPNCode", NULL, "Long code generator", "BMP_1xEV_LgPNCode" ),
	 list( "1xEV", "1xEV_MAC_TDM", NULL, "Time-division-multiplexer for MAC Channel RPC bits and DRCLock symbols", "BMP_1xEV_MAC_TDM" ),
	 list( "1xEV", "1xEV_Modulator", NULL, "Modulator to generate QPSK, 8-PSK, 16-QAM modulation symbols depending on data rate", "BMP_1xEV_Modulator" ),
	 list( "1xEV", "1xEV_PNCode", NULL, "Short PN code generator", "BMP_1xEV_PNCode" ),
	 list( "1xEV", "1xEV_RateDematch", NULL, "Rate dematching for forward link", "BMP_1xEV_RateDematch" ),
	 list( "1xEV", "1xEV_RateMatch", NULL, "Sequence repetition and symbol puncturing for forward link", "BMP_1xEV_RateMatch" ),
	 list( "1xEV", "1xEV_RevPowerAdjust", NULL, "Power adjuster for access terminal channels", "BMP_1xEV_RevPowerAdjust" ),
	 list( "1xEV", "1xEV_ScrambleCode", NULL, "Scrambling sequence generator", "BMP_1xEV_ScrambleCode" ),
	 list( "1xEV", "1xEV_WalshCode", NULL, "Walsh code generator", "BMP_1xEV_WalshCode" ),
	 list( "1xEV", "1xEV_WalshCover", NULL, "FHT is performed to realize Walsh cover and chip level summer", "BMP_1xEV_WalshCover" )
);

de_define_library_palette( "1xEV", SCHEM_WIN, "sigproc_net",
	"1xEV Receivers", "1xEV Receivers", -1,
	 list( "1xEV", "1xEV_FwdChnlEstimate", NULL, "1xEV Forward channel estimator", "BMP_1xEV_FwdChnlEstimate" ),
	 list( "1xEV", "1xEV_FwdMRC", NULL, "Forward Maximal Ratio Combiner", "BMP_1xEV_FwdMRC" ),
	 list( "1xEV", "1xEV_RevChnlEstimate", NULL, "Reverse link channel estimator", "BMP_1xEV_RevChnlEstimate" ),
	 list( "1xEV", "1xEV_RevCohReceiver", NULL, "Reverse link Rake receiver", "BMP_1xEV_RevCohReceiver" )
);

de_define_library_palette( "1xEV", SCHEM_WIN, "sigproc_net",
	"1xEV Signal Sources", "1xEV Signal Sources", -1,
	 list( "1xEV", "1xEV_MAC_Src", NULL, "Signal source for MAC channel", "BMP_1xEV_MAC_Src" )
);

de_define_library_palette( "1xEV", SCHEM_WIN, "sigproc_net",
	"1xEV Test", "1xEV Test", -1,
	 list( "1xEV", "1xEV_BER", NULL, "BER and PER measurement", "BMP_1xEV_BER" )
);

